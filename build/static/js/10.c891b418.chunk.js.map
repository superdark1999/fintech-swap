{"version":3,"sources":["hooks/useTokenBalance.ts","utils/getTimePeriods.ts","views/Profile/components/ApproveConfirmButtons.tsx","hooks/useApproveConfirmTransaction.ts","hooks/useAllowance.ts","views/Ifos/components/IfoTabButtons/index.tsx","views/Ifos/components/Hero.tsx","hooks/useGetPublicIfoData.ts","views/Ifos/components/IfoCard/IfoCardHeader.tsx","views/Ifos/components/IfoCard/IfoCardDetails.tsx","hooks/useGetWalletIfoData.ts","components/BalanceInput/BalanceInput.tsx","views/Ifos/components/IfoCard/ContributeModal.tsx","views/Ifos/components/IfoCard/PercentageOfTotal.tsx","views/Ifos/components/IfoCard/Contribute.tsx","views/Ifos/components/IfoCard/MetaLabel.tsx","views/Ifos/components/IfoCard/BalanceInUsd.tsx","views/Ifos/components/IfoCard/Claim.tsx","views/Ifos/components/IfoCard/ActiveSkeleton.tsx","views/Ifos/components/IfoCard/InactiveSkeleton.tsx","views/Ifos/components/IfoCard/IfoCardActions.tsx","views/Ifos/components/IfoCard/IfoCardProgress.tsx","views/Ifos/components/IfoCard/IfoCardTime.tsx","views/Ifos/components/IfoCard/index.tsx","views/Ifos/components/IfoCards.tsx","views/Ifos/CurrentIfo.tsx","views/Ifos/PastIfo.tsx","views/Ifos/index.tsx"],"names":["useTotalSupply","slowRefresh","useRefresh","useState","totalSupply","setTotalSupply","useEffect","a","cakeContract","getCakeContract","methods","call","supply","BigNumber","fetchTotalSupply","useBurnedBalance","tokenAddress","balance","setBalance","web3","useWeb3","getBep20Contract","fetchBalance","useTokenBalance","account","useWeb3React","fastRefresh","HOUR_IN_SECONDS","DAY_IN_SECONDS","MONTH_IN_SECONDS","YEAR_IN_SECONDS","getTimePeriods","seconds","delta","timeLeft","years","months","days","hours","minutes","Math","floor","StyledApproveConfirmButtons","styled","div","theme","mediaQueries","md","Button","UIKitButton","iconAttrs","width","color","ChevronRight","ChevronRightIcon","attrs","ChevronBottom","ChevronDownIcon","spinnerIcon","spin","ApproveConfirmButtons","isApproveDisabled","isApproving","isConfirming","isConfirmDisabled","onApprove","onConfirm","TranslateString","useI18n","disabled","onClick","endIcon","undefined","isLoading","justifyContent","initialState","approvalState","approvalReceipt","approvalError","confirmState","confirmReceipt","confirmError","reducer","state","actions","type","payload","useApproveConfirmTransaction","onRequiresApproval","onSuccess","noop","useReducer","dispatch","handlePreApprove","useRef","toastError","useToast","current","then","result","isApproved","isConfirmed","handleApprove","on","error","console","handleConfirm","useLotteryAllowance","allowance","setAllowance","useCake","getLotteryAddress","res","fetchAllowance","useIfoAllowance","tokenContract","spenderAddress","dependency","fetch","Wrapper","IfoTabButtons","useRouteMatch","url","isExact","className","activeIndex","scale","variant","as","Link","to","Blurb","Heading","size","colors","secondary","Text","StyledHero","Titletop","h1","Hero","Container","getStatus","currentBlock","startBlock","endBlock","useGetPublicIfoData","ifo","address","releaseBlockNumber","status","blocksRemaining","secondsUntilStart","progress","secondsUntilEnd","raisingAmount","totalAmount","startBlockNum","endBlockNum","setState","useBlock","contract","useIfoContract","makeBatchRequest","parseInt","totalBlocks","BSC_BLOCK_TIME","fetchProgress","StyledIfoCardHeader","Flex","Name","Description","IfoCardHeader","ifoId","name","subTitle","mb","alignItems","src","alt","height","Item","Display","IfoCardDetails","publicIfoData","isOpen","setIsOpen","description","cakeToBurn","projectSiteUrl","launchDate","launchTime","saleAmount","raiseAmount","my","href","target","rel","ml","style","display","times","toFixed","margin","useGetWalletIfoData","isPendingTx","offeringTokenBalance","refundingAmount","userInfo","amount","claimed","currencyAddress","currencyContract","useERC20","getOfferingAmount","getRefundingAmount","offeringAmount","userInfoResponse","prevState","fetchIfoData","setPendingTx","addUserContributedAmount","plus","setIsClaimed","StyledBalanceInput","Box","input","radii","default","Input","UIKitInput","TokenSymbol","BalanceInput","title","max","symbol","onChange","onSelectMax","value","props","maxDisplay","fontSize","num","placeholder","mr","ContributeModal","currency","onDismiss","setValue","raisingTokenContract","getBalanceNumber","valueWithTokenDecimals","pow","options","response","currentAllowance","gt","approve","ethers","constants","MaxUint256","send","from","deposit","toString","maxWidth","e","currentTarget","isNaN","eq","PercentageOfTotal","userAmount","percentOfUserDisplay","toNumber","toLocaleString","maximumFractionDigits","Contribute","contributedBalance","toastSuccess","useModal","onPresentContributeModal","bold","textTransform","flex","pr","MetaLabel","children","minHeight","BalanceInUsd","token","priceInUsd","useGetApiPrice","hasBalance","total","minimumFractionDigits","AmountGrid","Claim","didContribute","canClaim","refundedBalance","tokenSymbol","tokenDecimals","rewardBalance","handleClaim","harvest","message","mt","ActiveSkeleton","InactiveSkeleton","IfoCardActions","isActive","UnlockButton","IfoCardProgress","primaryStep","Details","Countdown","IfoCardTime","block","countdownToUse","timeUntil","suffix","StyledIfoCard","Card","IfoCard","id","Ribbon","variantColor","text","getRibbonComponent","ribbon","IfoCardWrapper","isSingle","defaultProps","LaunchIfoCallout","BaseLayout","sm","List","ul","h2","SubTitle","h3","TextC","p","activeIfo","ifosConfig","find","Ifo","IfoCards","pt","responsive","external","inactiveIfo","filter","PastIfo","map","Ifos","path","exact","CurrentIfo"],"mappings":"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","file":"static/js/10.c891b418.chunk.js","sourcesContent":["import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { getBep20Contract, getCakeContract } from 'utils/contractHelpers'\nimport useWeb3 from './useWeb3'\nimport useRefresh from './useRefresh'\n\nconst useTokenBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { account } = useWeb3React()\n  const web3 = useWeb3()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress, web3)\n      const res =0 // = await contract.methods.balanceOf(account).call()\n      setBalance(new BigNumber(res))\n    }\n\n    if (account) {\n      fetchBalance()\n    }\n  }, [account, tokenAddress, web3, fastRefresh])\n\n  return balance\n}\n\nexport const useTotalSupply = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getCakeContract()\n      const supply = await cakeContract.methods.totalSupply().call()\n      setTotalSupply(new BigNumber(supply))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\n\nexport const useBurnedBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { slowRefresh } = useRefresh()\n  const web3 = useWeb3()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress, web3)\n      const res = 0 // await contract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call()\n      setBalance(new BigNumber(res))\n    }\n\n    fetchBalance()\n  }, [web3, tokenAddress, slowRefresh])\n\n  return balance\n}\n\nexport default useTokenBalance\n","const MINUTE_IN_SECONDS = 60\nconst HOUR_IN_SECONDS = 3600\nconst DAY_IN_SECONDS = 86400\nconst MONTH_IN_SECONDS = 2629800\nconst YEAR_IN_SECONDS = 31557600\n\n/**\n * Format number of seconds into year, month, day, hour, minute, seconds\n *\n * @param seconds\n */\nconst getTimePeriods = (seconds: number) => {\n  let delta = seconds\n  const timeLeft = {\n    years: 0,\n    months: 0,\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0,\n  }\n\n  if (delta >= YEAR_IN_SECONDS) {\n    timeLeft.years = Math.floor(delta / YEAR_IN_SECONDS)\n    delta -= timeLeft.years * YEAR_IN_SECONDS\n  }\n\n  if (delta >= MONTH_IN_SECONDS) {\n    timeLeft.months = Math.floor(delta / MONTH_IN_SECONDS)\n    delta -= timeLeft.months * MONTH_IN_SECONDS\n  }\n\n  if (delta >= DAY_IN_SECONDS) {\n    timeLeft.days = Math.floor(delta / DAY_IN_SECONDS)\n    delta -= timeLeft.days * DAY_IN_SECONDS\n  }\n\n  if (delta >= HOUR_IN_SECONDS) {\n    timeLeft.hours = Math.floor(delta / HOUR_IN_SECONDS)\n    delta -= timeLeft.hours * HOUR_IN_SECONDS\n  }\n\n  if (delta >= MINUTE_IN_SECONDS) {\n    timeLeft.minutes = Math.floor(delta / MINUTE_IN_SECONDS)\n    delta -= timeLeft.minutes * MINUTE_IN_SECONDS\n  }\n\n  timeLeft.seconds = delta\n\n  return timeLeft\n}\n\nexport default getTimePeriods\n","import React from 'react'\nimport styled from 'styled-components'\nimport {\n  ChevronRightIcon,\n  Button as UIKitButton,\n  AutoRenewIcon,\n  ChevronDownIcon,\n  Box,\n  Flex,\n} from '@beswap/uikit'\nimport useI18n from 'hooks/useI18n'\n\ninterface ApproveConfirmButtonsProps {\n  isApproveDisabled: boolean\n  isApproving: boolean\n  isConfirming: boolean\n  isConfirmDisabled: boolean\n  onApprove: () => void\n  onConfirm: () => void\n}\n\nconst StyledApproveConfirmButtons = styled.div`\n  align-items: center;\n  display: grid;\n  grid-template-columns: 1fr;\n  justify-content: center;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    grid-template-columns: 1fr 24px 1fr;\n  }\n`\n\nconst Button = styled(UIKitButton)`\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    min-width: 160px;\n  }\n`\n\nconst iconAttrs = { width: '24px', color: 'textDisabled' }\n\nconst ChevronRight = styled(ChevronRightIcon).attrs(iconAttrs)`\n  display: none;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: block;\n  }\n`\n\nconst ChevronBottom = styled(ChevronDownIcon).attrs(iconAttrs)`\n  display: block;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: none;\n  }\n`\n\nconst spinnerIcon = <AutoRenewIcon spin color=\"currentColor\" />\n\nconst ApproveConfirmButtons: React.FC<ApproveConfirmButtonsProps> = ({\n  isApproveDisabled,\n  isApproving,\n  isConfirming,\n  isConfirmDisabled,\n  onApprove,\n  onConfirm,\n}) => {\n  const TranslateString = useI18n()\n\n  return (\n    <StyledApproveConfirmButtons>\n      <Box>\n        <Button\n          disabled={isApproveDisabled}\n          onClick={onApprove}\n          endIcon={isApproving ? spinnerIcon : undefined}\n          isLoading={isApproving}\n        >\n          {isApproving ? TranslateString(800, 'Approving') : TranslateString(564, 'Approve')}\n        </Button>\n      </Box>\n      <Flex justifyContent=\"center\">\n        <ChevronRight />\n        <ChevronBottom />\n      </Flex>\n      <Box>\n        <Button\n          onClick={onConfirm}\n          disabled={isConfirmDisabled}\n          isLoading={isConfirming}\n          endIcon={isConfirming ? spinnerIcon : undefined}\n        >\n          {isConfirming ? TranslateString(802, 'Confirming') : TranslateString(464, 'Confirm')}\n        </Button>\n      </Box>\n    </StyledApproveConfirmButtons>\n  )\n}\n\nexport default ApproveConfirmButtons\n","import { useEffect, useReducer, useRef } from 'react'\nimport { noop } from 'lodash'\nimport { useWeb3React } from '@web3-react/core'\nimport { useToast } from 'state/hooks'\n\ntype Web3Payload = Record<string, unknown> | null\n\ntype LoadingState = 'idle' | 'loading' | 'success' | 'fail'\n\ntype Action =\n  | { type: 'requires_approval' }\n  | { type: 'approve_sending' }\n  | { type: 'approve_receipt'; payload: Web3Payload }\n  | { type: 'approve_error'; payload: Web3Payload }\n  | { type: 'confirm_sending' }\n  | { type: 'confirm_receipt'; payload: Web3Payload }\n  | { type: 'confirm_error'; payload: Web3Payload }\n\ninterface State {\n  approvalState: LoadingState\n  approvalReceipt: Web3Payload\n  approvalError: Web3Payload\n  confirmState: LoadingState\n  confirmReceipt: Web3Payload\n  confirmError: Web3Payload\n}\n\nconst initialState: State = {\n  approvalState: 'idle',\n  approvalReceipt: null,\n  approvalError: null,\n  confirmState: 'idle',\n  confirmReceipt: null,\n  confirmError: null,\n}\n\nconst reducer = (state: State, actions: Action): State => {\n  switch (actions.type) {\n    case 'requires_approval':\n      return {\n        ...state,\n        approvalState: 'success',\n      }\n    case 'approve_sending':\n      return {\n        ...state,\n        approvalState: 'loading',\n      }\n    case 'approve_receipt':\n      return {\n        ...state,\n        approvalState: 'success',\n        approvalReceipt: actions.payload,\n      }\n    case 'approve_error':\n      return {\n        ...state,\n        approvalState: 'fail',\n        approvalError: actions.payload,\n      }\n    case 'confirm_sending':\n      return {\n        ...state,\n        confirmState: 'loading',\n      }\n    case 'confirm_receipt':\n      return {\n        ...state,\n        confirmState: 'success',\n        confirmReceipt: actions.payload,\n      }\n    case 'confirm_error':\n      return {\n        ...state,\n        confirmState: 'fail',\n        confirmError: actions.payload,\n      }\n    default:\n      return state\n  }\n}\n\ntype ContractHandler = () => any\n\ninterface ApproveConfirmTransaction {\n  onApprove: ContractHandler\n  onConfirm: ContractHandler\n  onRequiresApproval?: () => Promise<boolean>\n  onSuccess: (state: State) => void\n}\n\nconst useApproveConfirmTransaction = ({\n  onApprove,\n  onConfirm,\n  onRequiresApproval,\n  onSuccess = noop,\n}: ApproveConfirmTransaction) => {\n  const { account } = useWeb3React()\n  const [state, dispatch] = useReducer(reducer, initialState)\n  const handlePreApprove = useRef(onRequiresApproval)\n  const { toastError } = useToast()\n\n  // Check if approval is necessary, re-check if account changes\n  useEffect(() => {\n    if (account && handlePreApprove.current) {\n      handlePreApprove.current().then((result) => {\n        if (result) {\n          dispatch({ type: 'requires_approval' })\n        }\n      })\n    }\n  }, [account, handlePreApprove, dispatch])\n\n  return {\n    isApproving: state.approvalState === 'loading',\n    isApproved: state.approvalState === 'success',\n    isConfirming: state.confirmState === 'loading',\n    isConfirmed: state.confirmState === 'success',\n    approvalReceipt: state.approvalReceipt,\n    approvalError: state.approvalError,\n    confirmReceipt: state.confirmReceipt,\n    confirmError: state.confirmError,\n    handleApprove: () => {\n      onApprove()\n        .on('sending', () => {\n          dispatch({ type: 'approve_sending' })\n        })\n        .on('receipt', (payload: Web3Payload) => {\n          dispatch({ type: 'approve_receipt', payload })\n        })\n        .on('error', (error: Web3Payload) => {\n          dispatch({ type: 'approve_error', payload: error })\n          console.error('An error occurred approving transaction:', error)\n          toastError('An error occurred approving transaction')\n        })\n    },\n    handleConfirm: () => {\n      onConfirm()\n        .on('sending', () => {\n          dispatch({ type: 'confirm_sending' })\n        })\n        .on('receipt', (payload: Web3Payload) => {\n          dispatch({ type: 'confirm_receipt', payload })\n          onSuccess(state)\n        })\n        .on('error', (error: Web3Payload) => {\n          dispatch({ type: 'confirm_error', payload: error })\n          console.error('An error occurred confirming transaction:', error)\n          toastError('An error occurred confirming transaction')\n        })\n    },\n  }\n}\n\nexport default useApproveConfirmTransaction\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { Contract } from 'web3-eth-contract'\nimport { getLotteryAddress } from 'utils/addressHelpers'\nimport { useCake } from './useContract'\nimport useRefresh from './useRefresh'\n\n// Retrieve lottery allowance\nexport const useLotteryAllowance = () => {\n  const [allowance, setAllowance] = useState(new BigNumber(0))\n  const { account } = useWeb3React()\n  const cakeContract = useCake()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchAllowance = async () => {\n      const res = await cakeContract.methods.allowance(account, getLotteryAddress()).call()\n      setAllowance(new BigNumber(res))\n    }\n\n    if (account) {\n      fetchAllowance()\n    }\n  }, [account, cakeContract, fastRefresh])\n\n  return allowance\n}\n\n// Retrieve IFO allowance\nexport const useIfoAllowance = (tokenContract: Contract, spenderAddress: string, dependency?: any): BigNumber => {\n  const { account } = useWeb3React()\n  const [allowance, setAllowance] = useState(new BigNumber(0))\n\n  useEffect(() => {\n    const fetch = async () => {\n      try {\n        const res = await tokenContract.methods.allowance(account, spenderAddress).call()\n        setAllowance(new BigNumber(res))\n      } catch (e) {\n        console.error(e)\n      }\n    }\n    fetch()\n  }, [account, spenderAddress, tokenContract, dependency])\n\n  return allowance\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem } from '@beswap/uikit'\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 39px;\n`\n\nconst IfoTabButtons = () => {\n  const { url, isExact } = useRouteMatch()\n\n  return (\n    <Wrapper>\n      <div className=\"custom-bt\">\n        <ButtonMenu activeIndex={!isExact ? 1 : 0} scale=\"sm\" variant=\"subtle\">\n          <ButtonMenuItem as={Link} to={`${url}`}>\n            Next IFO\n          </ButtonMenuItem>\n          <ButtonMenuItem as={Link} to={`${url}/history`}>\n            Past IFOs\n          </ButtonMenuItem>\n        </ButtonMenu>\n      </div>\n    </Wrapper>\n  )\n}\n\nexport default IfoTabButtons\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Text } from '@beswap/uikit'\nimport Container from 'components/layout/Container'\nimport useI18n from 'hooks/useI18n'\n\nconst Title = styled(Heading).attrs({ as: 'h1', size: 'xl' })`\n  color: ${({ theme }) => theme.colors.secondary};\n  margin-bottom: 24px;\n`\n\nconst Blurb = styled(Text)`\n  color: #ffffff;\n  font-size: 20px;\n  font-weight: 600;\n`\n\nconst StyledHero = styled.div`\n  background-image: linear-gradient(180deg,#f5bf7a 0%,#F88521 100%);\n  padding-bottom: 40px;\n  padding-top: 40px;\n  margin-bottom: 32px;\n`\n\nconst Titletop = styled.h1`\n  color: #fff;\n  font-weight: 600;\n  line-height: 1.1;\n  font-size: 40px;\n  margin-bottom: 24px;\n`\nconst Hero = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <StyledHero>\n      <Container>\n        <Titletop>IFO: Initial Farm Offerings</Titletop>\n        <Blurb>{TranslateString(502, 'Buy new tokens with a brand new token sale model.')}</Blurb>\n      </Container>\n    </StyledHero>\n  )\n}\n\nexport default Hero\n","import BigNumber from 'bignumber.js'\nimport { BSC_BLOCK_TIME } from 'config'\nimport { Ifo, IfoStatus } from 'config/constants/types'\nimport { useBlock } from 'state/hooks'\nimport { useIfoContract } from 'hooks/useContract'\nimport { useEffect, useState } from 'react'\nimport makeBatchRequest from 'utils/makeBatchRequest'\n\nexport interface PublicIfoState {\n  status: IfoStatus\n  blocksRemaining: number\n  secondsUntilStart: number\n  progress: number\n  secondsUntilEnd: number\n  raisingAmount: BigNumber\n  totalAmount: BigNumber\n  startBlockNum: number\n  endBlockNum: number\n}\n\nconst getStatus = (currentBlock: number, startBlock: number, endBlock: number): IfoStatus => {\n  // Add an extra check to currentBlock because it takes awhile to fetch so the initial value is 0\n  // making the UI change to an inaccurate status\n  if (currentBlock === 0) {\n    return 'idle'\n  }\n\n  if (currentBlock < startBlock) {\n    return 'coming_soon'\n  }\n\n  if (currentBlock >= startBlock && currentBlock <= endBlock) {\n    return 'live'\n  }\n\n  if (currentBlock > endBlock) {\n    return 'finished'\n  }\n\n  return 'idle'\n}\n\n/**\n * Gets all public data of an IFO\n */\nconst useGetPublicIfoData = (ifo: Ifo) => {\n  const { address, releaseBlockNumber } = ifo\n  const [state, setState] = useState<PublicIfoState>({\n    status: 'idle',\n    blocksRemaining: 0,\n    secondsUntilStart: 0,\n    progress: 5,\n    secondsUntilEnd: 0,\n    raisingAmount: new BigNumber(0),\n    totalAmount: new BigNumber(0),\n    startBlockNum: 0,\n    endBlockNum: 0,\n  })\n  const { currentBlock } = useBlock()\n  const contract = useIfoContract(address)\n\n  useEffect(() => {\n    const fetchProgress = async () => {\n      const [startBlock, endBlock, raisingAmount, totalAmount] = (await makeBatchRequest([\n        contract.methods.startBlock().call,\n        contract.methods.endBlock().call,\n        contract.methods.raisingAmount().call,\n        contract.methods.totalAmount().call,\n      ])) as [string, string, string, string]\n\n      const startBlockNum = parseInt(startBlock, 10)\n      const endBlockNum = parseInt(endBlock, 10)\n\n      const status = getStatus(currentBlock, startBlockNum, endBlockNum)\n      const totalBlocks = endBlockNum - startBlockNum\n      const blocksRemaining = endBlockNum - currentBlock\n\n      // Calculate the total progress until finished or until start\n      const progress =\n        currentBlock > startBlockNum\n          ? ((currentBlock - startBlockNum) / totalBlocks) * 100\n          : ((currentBlock - releaseBlockNumber) / (startBlockNum - releaseBlockNumber)) * 100\n\n      setState({\n        secondsUntilEnd: blocksRemaining * BSC_BLOCK_TIME,\n        secondsUntilStart: (startBlockNum - currentBlock) * BSC_BLOCK_TIME,\n        raisingAmount: new BigNumber(raisingAmount),\n        totalAmount: new BigNumber(totalAmount),\n        status,\n        progress,\n        blocksRemaining,\n        startBlockNum,\n        endBlockNum,\n      })\n    }\n\n    fetchProgress()\n  }, [address, currentBlock, contract, releaseBlockNumber, setState])\n\n  return state\n}\n\nexport default useGetPublicIfoData\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Text, Flex } from '@beswap/uikit'\n\ninterface IfoCardHeaderProps {\n  ifoId: string\n  name: string\n  subTitle: string\n}\n\nconst StyledIfoCardHeader = styled(Flex)`\n  & > div {\n    flex: 1;\n  }\n`\n\nconst Name = styled(Heading).attrs({ as: 'h3', size: 'lg' })`\n  margin-bottom: 4px;\n  text-align: right;\n  color: #f88520;\n`\n\nconst Description = styled(Text)`\n  color: #f88520;\n  font-size: 14px;\n  text-align: right;\n`\n\nconst IfoCardHeader: React.FC<IfoCardHeaderProps> = ({ ifoId, name, subTitle }) => {\n  return (\n    <StyledIfoCardHeader mb=\"24px\" alignItems=\"center\">\n      <img src={`/images/ifos/${ifoId}.svg`} alt={ifoId} width=\"64px\" height=\"64px\" />\n      <div>\n        <Name>{name}</Name>\n        <Description>{subTitle}</Description>\n      </div>\n    </StyledIfoCardHeader>\n  )\n}\n\nexport default IfoCardHeader\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport {\n  Text,\n  LinkExternal,\n  Link,\n  Box,\n  CardFooter,\n  Button,\n  ChevronDownIcon,\n  ChevronUpIcon,\n} from '@beswap/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { PublicIfoState } from 'hooks/useGetPublicIfoData'\nimport { Ifo } from 'config/constants/types'\n\nexport interface IfoCardDetailsProps {\n  ifo: Ifo\n  publicIfoData: PublicIfoState\n}\n\nconst Item = styled.div`\n  align-items: center;\n  color: ${({ theme }) => theme.colors.secondary};\n  display: flex;\n`\n\nconst Display = styled(Text)`\n  flex: 1;\n`\n\nconst IfoCardDetails: React.FC<IfoCardDetailsProps> = ({ ifo, publicIfoData }) => {\n  const [isOpen, setIsOpen] = useState(false)\n  const TranslateString = useI18n()\n  const { description, cakeToBurn, projectSiteUrl, launchDate, launchTime, saleAmount, raiseAmount } = ifo\n  const { raisingAmount, totalAmount } = publicIfoData\n  const handleToggle = () => setIsOpen(!isOpen)\n\n  return (\n    <CardFooter>\n      <div className=\"custom-cl\">\n        <Button\n          variant=\"text\"\n          onClick={handleToggle}\n          width=\"100%\"\n          endIcon={\n            isOpen ? <ChevronUpIcon color=\"primary\" width=\"24px\" /> : <ChevronDownIcon color=\"primary\" width=\"24px\" />\n          }\n        >\n          {isOpen ? TranslateString(1066, 'Hide') : TranslateString(658, 'Details')}\n        </Button>\n      </div>\n      {isOpen && (\n        <>\n          <Text as=\"p\" color=\"#f88520\" my=\"24px\">\n            {description}\n          </Text>\n          <Box mb=\"24px\">\n            <Item>\n              <Display color=\"#f88520\">{TranslateString(582, 'Launch Time')}</Display>\n              <Text color=\"#f88520\">\n                {launchDate},\n                <Link\n                  href=\"https://www.timeanddate.com/worldclock/singapore/singapore\"\n                  target=\"blank\"\n                  rel=\"noopener noreferrer\"\n                  ml=\"4px\"\n                  style={{ display: 'inline' }}\n                  color=\"#f88520\"\n                >\n                  {launchTime}\n                </Link>\n              </Text>\n            </Item>\n            <Item>\n              <Display color=\"#f88520\">{TranslateString(584, 'For Sale')}</Display>\n              <Text color=\"#f88520\">{saleAmount}</Text>\n            </Item>\n            <Item>\n              <Display color=\"#f88520\">{TranslateString(999, 'To raise (USD)')}</Display>\n              <Text color=\"#f88520\">{raiseAmount}</Text>\n            </Item>\n            <Item>\n              <Display color=\"#f88520\">{TranslateString(586, 'CAKE to burn (USD)')}</Display>\n              <Text color=\"#f88520\">{cakeToBurn}</Text>\n            </Item>\n            <Item>\n              <Display color=\"#f88520\">{TranslateString(999, 'Total raised (% of target)')}</Display>\n              <Text color=\"#f88520\">{`${totalAmount.div(raisingAmount).times(100).toFixed(2)}%`}</Text>\n            </Item>\n          </Box>\n          <LinkExternal href={projectSiteUrl} style={{ margin: 'auto' }}>\n            {TranslateString(412, 'View project site')}\n          </LinkExternal>\n        </>\n      )}\n    </CardFooter>\n  )\n}\n\nexport default IfoCardDetails\n","import { useEffect, useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { Ifo } from 'config/constants/types'\nimport { useERC20, useIfoContract } from 'hooks/useContract'\nimport { useIfoAllowance } from 'hooks/useAllowance'\nimport makeBatchRequest from 'utils/makeBatchRequest'\n\nexport interface UserInfo {\n  amount: BigNumber\n  claimed: boolean\n}\n\nexport interface WalletIfoState {\n  isPendingTx: boolean\n  offeringTokenBalance: BigNumber\n  refundingAmount: BigNumber\n  userInfo: UserInfo\n}\n\n/**\n * Gets all data from an IFO related to a wallet\n */\nconst useGetWalletIfoData = (ifo: Ifo) => {\n  const [state, setState] = useState<WalletIfoState>({\n    isPendingTx: false,\n    offeringTokenBalance: new BigNumber(0),\n    refundingAmount: new BigNumber(0),\n    userInfo: {\n      amount: new BigNumber(0),\n      claimed: false,\n    },\n  })\n\n  const { address, currencyAddress } = ifo\n  const { isPendingTx } = state\n\n  const { account } = useWeb3React()\n  const contract = useIfoContract(address)\n  const currencyContract = useERC20(currencyAddress)\n  const allowance = useIfoAllowance(currencyContract, address, isPendingTx)\n\n  const setPendingTx = (status: boolean) =>\n    setState((prevState) => ({\n      ...prevState,\n      isPendingTx: status,\n    }))\n\n  const addUserContributedAmount = (amount: BigNumber) => {\n    setState((prevState) => ({\n      ...prevState,\n      userInfo: {\n        ...prevState.userInfo,\n        amount: prevState.userInfo.amount.plus(amount),\n      },\n    }))\n  }\n\n  const setIsClaimed = () => {\n    setState((prevState) => ({\n      ...prevState,\n      userInfo: {\n        ...prevState.userInfo,\n        claimed: true,\n      },\n    }))\n  }\n\n  useEffect(() => {\n    const fetchIfoData = async () => {\n      const [offeringAmount, userInfoResponse, refundingAmount] = (await makeBatchRequest([\n        contract.methods.getOfferingAmount(account).call,\n        contract.methods.userInfo(account).call,\n        contract.methods.getRefundingAmount(account).call,\n      ])) as [string, UserInfo, string]\n\n      setState((prevState) => ({\n        ...prevState,\n        offeringTokenBalance: new BigNumber(offeringAmount),\n        refundingAmount: new BigNumber(refundingAmount),\n        userInfo: {\n          amount: new BigNumber(userInfoResponse.amount),\n          claimed: userInfoResponse.claimed,\n        },\n      }))\n    }\n\n    if (account) {\n      fetchIfoData()\n    }\n  }, [account, contract, setState])\n\n  return { ...state, allowance, contract, setPendingTx, addUserContributedAmount, setIsClaimed }\n}\n\nexport default useGetWalletIfoData\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button, Box, BoxProps, Flex, Input as UIKitInput, Text } from '@beswap/uikit'\nimport useI18n from 'hooks/useI18n'\n\nexport interface BalanceInputProps extends BoxProps {\n  title: string\n  max: number\n  symbol: string\n  onChange: (evt: React.FormEvent<HTMLInputElement>) => void\n  value: string\n  onSelectMax?: () => void\n}\n\nconst StyledBalanceInput = styled(Box)`\n  background: ${({ theme }) => theme.colors.input};\n  box-shadow: 0px 2px 2px -1px rgba(0, 0, 0, 0.2) inset;\n  border-radius: ${({ theme }) => theme.radii.default};\n  padding: 8px 16px;\n`\n\nconst Input = styled(UIKitInput)`\n  box-shadow: none;\n  flex: 1;\n`\n\nconst TokenSymbol = styled(Text)`\n  max-width: 120px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  flex: 1;\n`\n\nconst BalanceInput: React.FC<BalanceInputProps> = ({ title, max, symbol, onChange, onSelectMax, value, ...props }) => {\n  const TranslateString = useI18n()\n  const maxDisplay = max.toFixed(6)\n\n  return (\n    <StyledBalanceInput {...props}>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text fontSize=\"14px\">{title}</Text>\n        <Text fontSize=\"14px\">{TranslateString(999, `Balance: ${maxDisplay}`, { num: maxDisplay })}</Text>\n      </Flex>\n      <Flex alignItems=\"center\">\n        <Input onChange={onChange} placeholder=\"0\" value={value} />\n        {onSelectMax && (\n          <Button scale=\"sm\" onClick={onSelectMax} mr=\"8px\">\n            {TranslateString(452, 'Max')}\n          </Button>\n        )}\n        <TokenSymbol title={symbol}>{symbol}</TokenSymbol>\n      </Flex>\n    </StyledBalanceInput>\n  )\n}\n\nexport default BalanceInput\n","import React, { useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { Modal, LinkExternal, Box, Text } from '@beswap/uikit'\nimport BalanceInput from 'components/BalanceInput'\nimport useTokenBalance from 'hooks/useTokenBalance'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport useI18n from 'hooks/useI18n'\nimport ApproveConfirmButtons from 'views/Profile/components/ApproveConfirmButtons'\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\nimport { useERC20 } from 'hooks/useContract'\n\ninterface Props {\n  currency: string\n  contract: any\n  currencyAddress: string\n  onSuccess: (amount: BigNumber) => void\n  onDismiss?: () => void\n}\n\nconst ContributeModal: React.FC<Props> = ({ currency, contract, currencyAddress, onDismiss, onSuccess }) => {\n  const [value, setValue] = useState('')\n  const { account } = useWeb3React()\n  const raisingTokenContract = useERC20(currencyAddress)\n  const balance = getBalanceNumber(useTokenBalance(currencyAddress))\n  const TranslateString = useI18n()\n  const valueWithTokenDecimals = new BigNumber(value).times(new BigNumber(10).pow(18))\n  const {\n    isApproving,\n    isApproved,\n    isConfirmed,\n    isConfirming,\n    handleApprove,\n    handleConfirm,\n  } = useApproveConfirmTransaction({\n    onRequiresApproval: async () => {\n      try {\n        const response = await raisingTokenContract.methods.allowance(account, contract.options.address).call()\n        const currentAllowance = new BigNumber(response)\n        return currentAllowance.gt(0)\n      } catch (error) {\n        return false\n      }\n    },\n    onApprove: () => {\n      return raisingTokenContract.methods\n        .approve(contract.options.address, ethers.constants.MaxUint256)\n        .send({ from: account })\n    },\n    onConfirm: () => {\n      return contract.methods.deposit(valueWithTokenDecimals.toString()).send({ from: account })\n    },\n    onSuccess: async () => {\n      onDismiss()\n      onSuccess(valueWithTokenDecimals)\n    },\n  })\n\n  return (\n    <Modal title={`Contribute ${currency}`} onDismiss={onDismiss}>\n      <Box maxWidth=\"400px\">\n        <BalanceInput\n          title={TranslateString(999, 'Contribute')}\n          value={value}\n          onChange={(e) => setValue(e.currentTarget.value)}\n          symbol={currency}\n          max={balance}\n          onSelectMax={() => setValue(balance.toString())}\n          mb=\"24px\"\n        />\n        <Text as=\"p\" mb=\"24px\">\n          {TranslateString(\n            999,\n            \"If you don't contribute enough LP tokens, you may not receive any IFO tokens at all and will only receive a full refund of your LP tokens.\",\n          )}\n        </Text>\n        <ApproveConfirmButtons\n          isApproveDisabled={isConfirmed || isConfirming || isApproved}\n          isApproving={isApproving}\n          isConfirmDisabled={\n            !isApproved || isConfirmed || valueWithTokenDecimals.isNaN() || valueWithTokenDecimals.eq(0)\n          }\n          isConfirming={isConfirming}\n          onApprove={handleApprove}\n          onConfirm={handleConfirm}\n        />\n        <LinkExternal\n          href=\"https://exchange.pancakeswap.finance/#/add/BNB/0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82\"\n          style={{ margin: '16px auto 0' }}\n        >\n          {`Get ${currency}`}\n        </LinkExternal>\n      </Box>\n    </Modal>\n  )\n}\n\nexport default ContributeModal\n","import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport { Text } from '@beswap/uikit'\nimport { UserInfo } from 'hooks/useGetWalletIfoData'\nimport useI18n from 'hooks/useI18n'\n\ninterface PercentageOfTotalProps {\n  userAmount: UserInfo['amount']\n  totalAmount: BigNumber\n}\n\nconst PercentageOfTotal: React.FC<PercentageOfTotalProps> = ({ userAmount, totalAmount }) => {\n  const TranslateString = useI18n()\n  const percentOfUserContribution = userAmount.div(totalAmount).times(100).toNumber()\n  const percentOfUserDisplay = percentOfUserContribution.toLocaleString(undefined, { maximumFractionDigits: 5 })\n\n  return (\n    <Text fontSize=\"14px\" color=\"textSubtle\">\n      {TranslateString(999, `${percentOfUserDisplay}% of total`, { num: percentOfUserDisplay })}\n    </Text>\n  )\n}\n\nexport default PercentageOfTotal\n","import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport { Contract } from 'web3-eth-contract'\nimport { Box, Button, Flex, Text, useModal } from '@beswap/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { Ifo } from 'config/constants/types'\nimport useI18n from 'hooks/useI18n'\nimport { UserInfo } from 'hooks/useGetWalletIfoData'\nimport { PublicIfoState } from 'hooks/useGetPublicIfoData'\nimport { useToast } from 'state/hooks'\nimport ContributeModal from './ContributeModal'\nimport PercentageOfTotal from './PercentageOfTotal'\n\ninterface ContributeProps {\n  ifo: Ifo\n  contract: Contract\n  userInfo: UserInfo\n  isPendingTx: boolean\n  publicIfoData: PublicIfoState\n  addUserContributedAmount: (amount: BigNumber) => void\n}\nconst Contribute: React.FC<ContributeProps> = ({\n  ifo,\n  contract,\n  userInfo,\n  isPendingTx,\n  publicIfoData,\n  addUserContributedAmount,\n}) => {\n  const { currency, currencyAddress } = ifo\n  const { totalAmount } = publicIfoData\n  const TranslateString = useI18n()\n  const contributedBalance = getBalanceNumber(userInfo.amount)\n  const { toastSuccess } = useToast()\n\n  const handleContributeSuccess = (amount: BigNumber) => {\n    toastSuccess('Success!', `You have contributed ${getBalanceNumber(amount)} CAKE-BNB LP tokens to this IFO!`)\n    addUserContributedAmount(amount)\n  }\n\n  const [onPresentContributeModal] = useModal(\n    <ContributeModal\n      currency={currency}\n      contract={contract}\n      currencyAddress={currencyAddress}\n      onSuccess={handleContributeSuccess}\n    />,\n    false,\n  )\n\n  return (\n    <Box>\n      <Flex mb=\"4px\">\n        <Text as=\"span\" bold fontSize=\"12px\" mr=\"4px\" textTransform=\"uppercase\">\n          CAKE-BNB LP\n        </Text>\n        <Text as=\"span\" color=\"textSubtle\" fontSize=\"12px\" textTransform=\"uppercase\" bold>\n          Committed\n        </Text>\n      </Flex>\n      <Flex alignItems=\"center\">\n        <Box style={{ flex: 1 }} pr=\"8px\">\n          <Text bold fontSize=\"20px\">\n            {contributedBalance.toFixed(4)}\n          </Text>\n        </Box>\n        <Button onClick={onPresentContributeModal} disabled={isPendingTx}>\n          {TranslateString(999, 'Contribute')}\n        </Button>\n      </Flex>\n      <PercentageOfTotal userAmount={userInfo.amount} totalAmount={totalAmount} />\n    </Box>\n  )\n}\n\nexport default Contribute\n","import React from 'react'\nimport { Box, BoxProps, Text } from '@beswap/uikit'\n\nconst MetaLabel: React.FC<BoxProps> = ({ children, ...props }) => {\n  return (\n    <Box minHeight=\"18px\" {...props}>\n      <Text color=\"textSubtle\" fontSize=\"12px\">\n        {children}\n      </Text>\n    </Box>\n  )\n}\n\nexport default MetaLabel\n","import React from 'react'\nimport { useGetApiPrice } from 'state/hooks'\nimport MetaLabel from './MetaLabel'\n\ninterface BalanceInUsdProps {\n  token: string\n  balance: number\n}\n\nconst BalanceInUsd: React.FC<BalanceInUsdProps> = ({ token, balance }) => {\n  const priceInUsd = useGetApiPrice(token)\n  const hasBalance = !!priceInUsd && balance > 0\n  const total = priceInUsd * balance\n\n  return (\n    <MetaLabel>\n      {hasBalance && `~$${total.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 })}`}\n    </MetaLabel>\n  )\n}\n\nexport default BalanceInUsd\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useWeb3React } from '@web3-react/core'\nimport { Contract } from 'web3-eth-contract'\nimport { AutoRenewIcon, Box, Button, Flex, Text } from '@beswap/uikit'\nimport { useToast } from 'state/hooks'\nimport useI18n from 'hooks/useI18n'\nimport { UserInfo, WalletIfoState } from 'hooks/useGetWalletIfoData'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { Ifo } from 'config/constants/types'\nimport BalanceInUsd from './BalanceInUsd'\nimport MetaLabel from './MetaLabel'\n\ninterface ClaimProps {\n  ifo: Ifo\n  contract: Contract\n  userInfo: UserInfo\n  isPendingTx: WalletIfoState['isPendingTx']\n  setPendingTx: (status: boolean) => void\n  offeringTokenBalance: WalletIfoState['offeringTokenBalance']\n  refundingAmount: WalletIfoState['refundingAmount']\n  setIsClaimed: () => void\n}\n\nconst AmountGrid = styled.div`\n  display: grid;\n  grid-gap: 8px;\n  grid-template-columns: repeat(2, 1fr);\n  margin-bottom: 24px;\n`\n\nconst DISPLAY_DECIMALS = 4\n\nconst Claim: React.FC<ClaimProps> = ({\n  ifo,\n  contract,\n  userInfo,\n  isPendingTx,\n  setPendingTx,\n  offeringTokenBalance,\n  refundingAmount,\n  setIsClaimed,\n}) => {\n  const TranslateString = useI18n()\n  const { account } = useWeb3React()\n  const didContribute = userInfo.amount.gt(0)\n  const canClaim = !userInfo.claimed\n  const contributedBalance = getBalanceNumber(userInfo.amount)\n  const refundedBalance = getBalanceNumber(refundingAmount).toFixed(userInfo.amount.eq(0) ? 0 : DISPLAY_DECIMALS)\n  const { tokenSymbol, tokenDecimals } = ifo\n  const rewardBalance = getBalanceNumber(offeringTokenBalance, tokenDecimals)\n  const { toastError, toastSuccess } = useToast()\n\n  const handleClaim = async () => {\n    try {\n      setPendingTx(true)\n      await contract.methods.harvest().send({ from: account })\n      setIsClaimed()\n      toastSuccess('Success!', 'You have successfully claimed your rewards.')\n    } catch (error) {\n      toastError('Error', error?.message)\n      console.error(error)\n    } finally {\n      setPendingTx(false)\n    }\n  }\n\n  return (\n    <>\n      <AmountGrid>\n        <Box>\n          <Flex mb=\"4px\">\n            <Text as=\"span\" bold fontSize=\"12px\" mr=\"4px\" textTransform=\"uppercase\">\n              LP Tokens\n            </Text>\n            <Text as=\"span\" color=\"textSubtle\" fontSize=\"12px\" textTransform=\"uppercase\" bold>\n              Committed\n            </Text>\n          </Flex>\n          <Text fontSize=\"20px\" bold color={offeringTokenBalance.gt(0) ? 'text' : 'textDisabled'}>\n            {contributedBalance.toFixed(userInfo.amount.eq(0) ? 0 : DISPLAY_DECIMALS)}\n          </Text>\n          <MetaLabel>\n            {canClaim\n              ? TranslateString(999, `${refundedBalance} to reclaim`, { num: refundedBalance })\n              : TranslateString(999, `${refundedBalance} reclaimed`, { num: refundedBalance })}\n          </MetaLabel>\n        </Box>\n        <Box>\n          <Flex mb=\"4px\">\n            <Text as=\"span\" bold fontSize=\"12px\" mr=\"4px\" textTransform=\"uppercase\">\n              {tokenSymbol}\n            </Text>\n            {!canClaim ? (\n              <Text as=\"span\" color=\"textSubtle\" fontSize=\"12px\" textTransform=\"uppercase\" bold>\n                Claimed\n              </Text>\n            ) : (\n              <Text as=\"span\" color=\"textSubtle\" fontSize=\"12px\" textTransform=\"uppercase\" bold>\n                To Claim\n              </Text>\n            )}\n          </Flex>\n          <Text fontSize=\"20px\" bold color={offeringTokenBalance.gt(0) ? 'text' : 'textDisabled'}>\n            {rewardBalance.toFixed(offeringTokenBalance.eq(0) ? 0 : DISPLAY_DECIMALS)}\n          </Text>\n          {canClaim && <BalanceInUsd token={tokenSymbol} balance={rewardBalance} />}\n        </Box>\n      </AmountGrid>\n      {didContribute ? (\n        <Button\n          onClick={handleClaim}\n          disabled={isPendingTx || !canClaim}\n          width=\"100%\"\n          mb=\"24px\"\n          isLoading={isPendingTx}\n          endIcon={isPendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        >\n          {canClaim ? TranslateString(999, 'Claim') : TranslateString(999, 'Claimed')}\n        </Button>\n      ) : (\n        <Button disabled width=\"100%\" mb=\"24px\">\n          {TranslateString(999, 'Nothing to Claim')}\n        </Button>\n      )}\n      <Text mt=\"4px\">{TranslateString(999, \"You'll be refunded any excess tokens when you claim\")}</Text>\n    </>\n  )\n}\n\nexport default Claim\n","import React from 'react'\nimport { Box, Skeleton } from '@beswap/uikit'\n\nconst ActiveSkeleton = () => (\n  <Box>\n    <Skeleton height=\"18px\" mb=\"4px\" width=\"30%\" />\n    <Skeleton height=\"48px\" mb=\"2px\" />\n    <Skeleton height=\"19px\" width=\"15%\" />\n  </Box>\n)\n\nexport default ActiveSkeleton\n","import React from 'react'\nimport { Box, Flex, Skeleton } from '@beswap/uikit'\n\nconst InactiveSkeleton = () => (\n  <>\n    <Flex mb=\"24px\">\n      <Box width=\"50%\" height=\"52px\">\n        <Skeleton height=\"18px\" mb=\"4px\" width=\"70%\" />\n        <Skeleton height=\"30px\" width=\"20%\" />\n      </Box>\n      <Box width=\"50%\" height=\"52px\">\n        <Skeleton height=\"18px\" mb=\"4px\" width=\"70%\" />\n        <Skeleton height=\"30px\" width=\"20%\" />\n      </Box>\n    </Flex>\n    <Skeleton height=\"48px\" mb=\"24px\" />\n    <Skeleton height=\"48px\" mt=\"4px\" />\n  </>\n)\n\nexport default InactiveSkeleton\n","import React from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport useGetWalletIfoData from 'hooks/useGetWalletIfoData'\nimport { PublicIfoState } from 'hooks/useGetPublicIfoData'\nimport { Ifo } from 'config/constants/types'\nimport UnlockButton from 'components/UnlockButton'\nimport Contribute from './Contribute'\nimport Claim from './Claim'\nimport ActiveSkeleton from './ActiveSkeleton'\nimport InactiveSkeleton from './InactiveSkeleton'\n\nexport interface Props {\n  ifo: Ifo\n  publicIfoData: PublicIfoState\n}\n\nconst IfoCardActions: React.FC<Props> = ({ ifo, publicIfoData }) => {\n  const {\n    isPendingTx,\n    offeringTokenBalance,\n    refundingAmount,\n    userInfo,\n    contract,\n    setPendingTx,\n    addUserContributedAmount,\n    setIsClaimed,\n  } = useGetWalletIfoData(ifo)\n  const { account } = useWeb3React()\n\n  if (!account) {\n    return <UnlockButton />\n  }\n\n  return (\n    <>\n      {ifo.isActive && publicIfoData.status === 'idle' && <ActiveSkeleton />}\n      {!ifo.isActive && publicIfoData.status === 'idle' && <InactiveSkeleton />}\n      {publicIfoData.status === 'live' && (\n        <Contribute\n          ifo={ifo}\n          contract={contract}\n          userInfo={userInfo}\n          isPendingTx={isPendingTx}\n          publicIfoData={publicIfoData}\n          addUserContributedAmount={addUserContributedAmount}\n        />\n      )}\n      {publicIfoData.status === 'finished' && (\n        <Claim\n          ifo={ifo}\n          contract={contract}\n          userInfo={userInfo}\n          isPendingTx={isPendingTx}\n          setPendingTx={setPendingTx}\n          offeringTokenBalance={offeringTokenBalance}\n          refundingAmount={refundingAmount}\n          setIsClaimed={setIsClaimed}\n        />\n      )}\n    </>\n  )\n}\n\nexport default IfoCardActions\n","import React from 'react'\nimport { Box, Progress } from '@beswap/uikit'\n\ninterface IfoCardProgressProps {\n  progress: number\n}\n\nconst IfoCardProgress: React.FC<IfoCardProgressProps> = ({ progress }) => {\n  return (\n    <Box mb=\"16px\">\n      <Progress primaryStep={progress} />\n    </Box>\n  )\n}\n\nexport default IfoCardProgress\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Link } from '@beswap/uikit'\nimport { IfoStatus } from 'config/constants/types'\nimport getTimePeriods from 'utils/getTimePeriods'\nimport useI18n from 'hooks/useI18n'\n\nexport interface IfoCardTimeProps {\n  status: IfoStatus\n  secondsUntilStart: number\n  secondsUntilEnd: number\n  block: number\n}\n\nconst Details = styled.div`\n  align-items: center;\n  display: flex;\n  height: 24px;\n  justify-content: center;\n  margin-bottom: 24px;\n`\n\nconst Countdown = styled.div`\n  color: ${({ theme }) => theme.colors.secondary};\n  font-size: 20px;\n  font-weight: 600;\n  text-align: center;\n`\n\nconst IfoCardTime: React.FC<IfoCardTimeProps> = ({ status, secondsUntilStart, secondsUntilEnd, block }) => {\n  const TranslateString = useI18n()\n  const countdownToUse = status === 'coming_soon' ? secondsUntilStart : secondsUntilEnd\n  const timeUntil = getTimePeriods(countdownToUse)\n  const suffix = status === 'coming_soon' ? 'start' : 'finish'\n\n  if (status === 'idle') {\n    return (\n      <Flex alignItems=\"center\" justifyContent=\"center\" mb=\"24px\" height=\"24px\">\n        {TranslateString(656, 'Loading...')}\n      </Flex>\n    )\n  }\n\n  return (\n    <Details>\n      <Countdown>{`${timeUntil.days}d, ${timeUntil.hours}h, ${timeUntil.minutes}m until ${suffix}`}</Countdown>\n      <Link href={`https://testnet.bscscan.com/block/countdown/${block}`} target=\"blank\" rel=\"noopener noreferrer\" ml=\"8px\">\n        (blocks)\n      </Link>\n    </Details>\n  )\n}\n\nexport default IfoCardTime\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useWeb3React } from '@web3-react/core'\nimport { Card, CardBody, CardRibbon } from '@beswap/uikit'\nimport { Ifo, IfoStatus } from 'config/constants/types'\nimport useI18n from 'hooks/useI18n'\nimport useGetPublicIfoData from 'hooks/useGetPublicIfoData'\nimport UnlockButton from 'components/UnlockButton'\nimport IfoCardHeader from './IfoCardHeader'\nimport IfoCardDetails from './IfoCardDetails'\nimport IfoCardActions from './IfoCardActions'\nimport IfoCardProgress from './IfoCardProgress'\nimport IfoCardTime from './IfoCardTime'\n\nexport interface IfoCardProps {\n  ifo: Ifo\n}\n\nconst StyledIfoCard = styled(Card)<{ ifoId: string }>`\n  background-image: ${({ ifoId }) => `url('/images/ifos/${ifoId}-bg.svg')`};\n  background-repeat: no-repeat;\n  background-size: contain;\n  padding-top: 112px;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 437px;\n  width: 100%;\n`\nconst getRibbonComponent = (status: IfoStatus, TranslateString: (translationId: number, fallback: string) => any) => {\n  if (status === 'coming_soon') {\n    return <CardRibbon variantColor=\"textDisabled\" text={TranslateString(999, 'Coming Soon')} />\n  }\n\n  if (status === 'live') {\n    return <CardRibbon variantColor=\"primary\" text={TranslateString(999, 'LIVE NOW!')} />\n  }\n\n  return null\n}\n\nconst IfoCard: React.FC<IfoCardProps> = ({ ifo }) => {\n  const { id, name, subTitle } = ifo\n  const publicIfoData = useGetPublicIfoData(ifo)\n  const { account } = useWeb3React()\n  const TranslateString = useI18n()\n  const Ribbon = getRibbonComponent(publicIfoData.status, TranslateString)\n\n  return (\n    <StyledIfoCard ifoId={id} ribbon={Ribbon} isActive={publicIfoData.status === 'live'}>\n      <CardBody>\n        <IfoCardHeader ifoId={id} name={name} subTitle={subTitle} />\n        {publicIfoData.status !== 'finished' && ifo.isActive && (\n          <>\n            <IfoCardProgress progress={publicIfoData.progress} />\n            <IfoCardTime\n              status={publicIfoData.status}\n              secondsUntilStart={publicIfoData.secondsUntilStart}\n              secondsUntilEnd={publicIfoData.secondsUntilEnd}\n              block={publicIfoData.startBlockNum}\n            />\n          </>\n        )}\n        {account ? <IfoCardActions ifo={ifo} publicIfoData={publicIfoData} /> : <UnlockButton width=\"100%\" />}\n      </CardBody>\n      <IfoCardDetails ifo={ifo} publicIfoData={publicIfoData} />\n    </StyledIfoCard>\n  )\n}\n\nexport default IfoCard\n","import styled from 'styled-components'\n\ninterface IfoCardWrapperProps {\n  isSingle?: boolean\n}\n\nconst IfoCardWrapper = styled.div<IfoCardWrapperProps>`\n  align-items: start;\n  border-top: 2px solid #f88520;\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-gap: 32px;\n  padding-bottom: 40px;\n  padding-top: 40px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    grid-template-columns: ${({ isSingle }) => `repeat(${isSingle ? 1 : 2}, 1fr)`};\n  }\n`\n\nIfoCardWrapper.defaultProps = {\n  isSingle: false,\n}\n\nexport default IfoCardWrapper\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Heading, BaseLayout, Button, LinkExternal, Flex, Image } from '@beswap/uikit'\nimport { ifosConfig } from 'config/constants'\nimport useI18n from 'hooks/useI18n'\nimport IfoCard from './components/IfoCard'\nimport Title from './components/Title'\nimport IfoCards from './components/IfoCards'\n\nconst LaunchIfoCallout = styled(BaseLayout)`\n  border-top: 2px solid #f88520;\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-gap: 32px;\n  margin: 0 auto;\n  padding: 32px 0;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    grid-template-columns: 1fr 1fr;\n  }\n`\n\nconst List = styled.ul`\n  color: ${({ theme }) => theme.colors.text};\n  margin-bottom: 16px;\n\n  & > li {\n    line-height: 1.4;\n    margin-bottom: 8px;\n  }\n`\n\nconst Titletop = styled.h2`\n  font-size: 24px;\n  font-weight: 600;\n  line-height: 1.1;\n  margin-bottom: 16px;\n  color: #F88521;\n`\n\nconst SubTitle = styled.h3`\n  font-weight: 600;\n  line-height: 1.1;\n  margin-bottom: 16px;\n  font-size: 20px;\n  color: #ef994d;\n`\n\nconst TextC = styled.p`\n  font-size: 16px;\n  color: #ef994d;\n  margin-bottom: 16px;\n`\n\n/**\n * Note: currently there should be only 1 active IFO at a time\n */\nconst activeIfo = ifosConfig.find((ifo) => ifo.isActive)\n\nconst Ifo = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <div>\n      <IfoCards isSingle>\n        <IfoCard ifo={activeIfo} />\n      </IfoCards>\n      <LaunchIfoCallout>\n        <div>\n          <Titletop>How to take part</Titletop>\n          <SubTitle>Before Sale</SubTitle>\n          <List className=\"list\">\n            <li>{TranslateString(596, 'Buy BESWAP and BNB tokens')}</li>\n            <li>{TranslateString(598, 'Get BESWAP-BNB LP tokens by adding BESWAP and BNB liquidity')}</li>\n          </List>\n          <Flex mb=\"16px\">\n            <LinkExternal href=\"https://exchange.finance/#/swap\" mr=\"16px\" className=\"style-color\">\n              Buy BESWAP\n            </LinkExternal>\n            <LinkExternal href=\"https://exchange.finance/#/add/BNB/0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82\" className=\"style-color\">\n              Get LP tokens\n            </LinkExternal>\n          </Flex>\n          <SubTitle>During Sale</SubTitle>\n          <List className=\"list\">\n            <li>{TranslateString(602, 'While the sale is live, commit your BESWAP-LP tokens to buy the IFO tokens')}</li>\n          </List>\n          <SubTitle>After Sale</SubTitle>\n          <List className=\"list\">\n            <li>{TranslateString(606, 'Claim the tokens you bought, along with any unspent funds.')}</li>\n            <li>{TranslateString(608, 'Done!')}</li>\n          </List>\n          <Text as=\"div\" pt=\"16px\" className=\"custome-line\">\n            <Button\n              as=\"a\"\n              variant=\"secondary\"\n              href=\"https://docs.pancakeswap.finance/core-products/ifo-initial-farm-offering\"\n            >\n              {TranslateString(610, 'Read more')}\n            </Button>\n          </Text>\n        </div>\n        <div>\n          <Image src=\"/images/ifo-bunny.svg\" alt=\"ifo bunny\" width={436} height={406} responsive />\n          <div>\n            <Titletop>Want to launch your own IFO?</Titletop>\n            <TextC>\n              Launch your project with PancakeSwap, Binance Smart Chain’s most-used AMM project and liquidity provider, to bring your token directly to the most active and rapidly growing community on BSC.\n            </TextC>\n            <div className=\"custom-btn\">\n              <Button\n                as=\"a\"\n                href=\"#\"\n                external\n              >\n                {TranslateString(516, 'Apply to launch')}\n              </Button>\n            </div>\n          </div>\n        </div>\n      </LaunchIfoCallout>\n    </div>\n  )\n}\n\nexport default Ifo\n","import React from 'react'\nimport { ifosConfig } from 'config/constants'\nimport { Ifo } from 'config/constants/types'\nimport IfoCard from './components/IfoCard'\nimport IfoCards from './components/IfoCards'\n\nconst inactiveIfo: Ifo[] = ifosConfig.filter((ifo) => !ifo.isActive)\n\nconst PastIfo = () => {\n  return (\n    <IfoCards>\n      {inactiveIfo.map((ifo) => (\n        <IfoCard key={ifo.id} ifo={ifo} />\n      ))}\n    </IfoCards>\n  )\n}\n\nexport default PastIfo\n","import React from 'react'\nimport { Route, useRouteMatch } from 'react-router-dom'\nimport Container from 'components/layout/Container'\nimport IfoTabButtons from './components/IfoTabButtons'\nimport Hero from './components/Hero'\nimport CurrentIfo from './CurrentIfo'\nimport PastIfo from './PastIfo'\n\nconst Ifos = () => {\n  const { path } = useRouteMatch()\n\n  return (\n    <>\n      <Hero />\n      <Container>\n        <IfoTabButtons />\n        <Route exact path={`${path}`}>\n          <CurrentIfo />\n        </Route>\n        <Route path={`${path}/history`}>\n          <PastIfo />\n        </Route>\n      </Container>\n    </>\n  )\n}\n\nexport default Ifos\n"],"sourceRoot":""}
{"version":3,"sources":["config/index.ts","views/Ifos/components/IfoTabButtons/index.tsx","views/Ifos/components/Hero.tsx","hooks/useGetPublicIfoData.ts","views/Ifos/components/IfoCard/index.tsx","views/Ifos/components/IfoCards.tsx","views/Ifos/CurrentIfo.tsx","views/Ifos/index.tsx"],"names":["BigNumber","config","EXPONENTIAL_AT","DECIMAL_PLACES","BSC_BLOCK_TIME","CAKE_PER_BLOCK","BLOCKS_PER_YEAR","BASE_EXCHANGE_URL","BASE_ADD_LIQUIDITY_URL","LOTTERY_MAX_NUMBER_OF_TICKETS","LOTTERY_TICKET_PRICE","Wrapper","styled","div","Dflex","IfoTabButtons","useRouteMatch","url","isExact","className","type","placeholder","aria-label","value","src","alt","Blurb","Heading","attrs","as","size","theme","colors","secondary","Text","StyledHero","Titletop","h1","BoxTitle","Hero","TranslateString","useI18n","getStatus","currentBlock","startBlock","endBlock","useGetPublicIfoData","ifo","address","releaseBlockNumber","useState","status","blocksRemaining","secondsUntilStart","progress","secondsUntilEnd","raisingAmount","totalAmount","startBlockNum","endBlockNum","state","setState","useBlock","contract","useIfoContract","useEffect","a","makeBatchRequest","methods","call","parseInt","totalBlocks","fetchProgress","BoxProgress","Card","ifoId","TitleProgress","p","ProgressFooter","ProgressPercentage","FeaturedCardMinimum","FeaturedCardAmount","BoxProgressBar","ProgressBar","FeaturedCardFooter","CardColumn","Item","BoxHead","ItemHead","Total","ItemContent","BoxLink","IfoCard","publicIfoData","id","name","subTitle","useWeb3React","account","getRibbonComponent","to","IfoCardWrapper","defaultProps","isSingle","activeIfo","ifosConfig","find","isActive","BoxIDO","Ifo","IfoCards","href","Ifos","path","Container","exact","CurrentIfo"],"mappings":"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","file":"static/js/18.aa80cfde.chunk.js","sourcesContent":["import BigNumber from 'bignumber.js/bignumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const BSC_BLOCK_TIME = 3\n\n// CAKE_PER_BLOCK details\n// 40 CAKE is minted per block\n// 18 CAKE per block is sent to Burn pool (A farm just for burning cake)\n// 10 CAKE per block goes to Bestay syrup pool\n// 12 CAKE per block goes to Yield farms and lottery\n// CAKE_PER_BLOCK in config/index.ts = 40 as we only change the amount sent to the burn pool which is effectively a farm.\n// CAKE/Block in components/CakeStats.tsx = 22 (40 - Amount sent to burn pool)\n\nexport const CAKE_PER_BLOCK = new BigNumber(40)\nexport const BLOCKS_PER_YEAR = new BigNumber((60 / BSC_BLOCK_TIME) * 60 * 24 * 365) // 10512000\nexport const BASE_URL = 'https://pancakeswap.finance'\nexport const BASE_EXCHANGE_URL = 'https://exchange.finance'\nexport const BASE_ADD_LIQUIDITY_URL = `${BASE_EXCHANGE_URL}/#/add`\nexport const BASE_LIQUIDITY_POOL_URL = `${BASE_EXCHANGE_URL}/#/pool`\nexport const LOTTERY_MAX_NUMBER_OF_TICKETS = 50\nexport const LOTTERY_TICKET_PRICE = 1\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem } from '@luckyswap/uikit'\n\nconst Wrapper = styled.div`\n  /* display: flex;\n  justify-content: center;\n  align-items: center; */\n  margin-bottom: 39px;\n\n  .custom-bt {\n    display: flex;\n    align-items: center;\n    justify-content: flex-end;\n    flex-direction: row;\n\n    @media (max-width: 768px) {\n      flex-direction: column;\n    }\n\n    a {\n      padding: 25px;\n\n      svg {\n        width: 40px;\n        height: 40px;\n      }\n    }\n  }\n\n  select{\n    padding: 12px 56px 12px 14px;\n    margin: 0 7px;\n    background-color: #4a4873;\n    font-size: 21px;\n    color: #dcbd6b;\n    border-radius: .5rem;\n    cursor: pointer;\n    border: none;\n    appearance: none;\n    -webkit-appearance: none;\n    -moz-appearance: none;\n    background-image: url('../images/rocket.png');\n    background-repeat: no-repeat;\n    background-size: 1.5rem;\n    background-position: right 1.2rem top 50%;\n    width: 100%;\n    max-width: 215px;\n\n    @media (max-width: 768px) {\n      width: 100%;\n      max-width: 100%;\n      margin-bottom: 15px;\n    }\n\n    &.list-options {\n      background-image: url('../images/plannet.svg');\n    }\n  }\n\n  select:hover, \n  select:focus{\n    background-size: 2rem;\n    outline: none;\n  }\n\n\n  form{\n    box-sizing: border-box;\n    display: flex;\n    margin-left: 10px;\n    position: relative;\n\n    @media (max-width: 768px) {\n      margin-left: 0;\n      width: 100%;\n    }\n\n    input{\n      text-indent: 10px;\n      height: 40px;\n      width: 175px;\n      border: 1px transparent solid;\n      border-top-left-radius: 10px;\n      border-bottom-left-radius: 10px;\n      outline: none;\n\n      @media (max-width: 768px) {\n        width: 100%;\n      }\n    }\n\n    img {\n      width: 20px;\n      height: 20px;\n    }\n\n    button {\n      background-color:#f5c606;\n      height: 40px;\n      width: 40px;\n      border:1px transparent solid;\n      border-top-right-radius: 10px;\n      border-bottom-right-radius: 10px;\n\n      @media (max-width: 768px) {\n        width: 50px;\n        position: absolute;\n        top: 0;\n        right: 0;\n      }\n\n      &:hover {\n        background-color: #fbcf1a;\n        height:40px;\n        width:40px;\n        border:1px transparent solid;\n      }\n    }\n  }\n`\n\nconst Dflex = styled.div`\n  display: flex;\n  align-items: center;\n\n  @media (max-width: 768px) {\n    width: 100%;\n    flex-direction: column;\n  }\n`\n\nconst IfoTabButtons = () => {\n  const { url, isExact } = useRouteMatch()\n\n  return (\n    <Wrapper>\n      <div className=\"custom-bt\">\n        <Dflex>\n          <select>\n            <option>All</option>\n            <option>BEP-20</option>\n            <option>NFT</option>\n          </select>\n\n          <select className=\"list-options\">\n            <option>All</option>\n            <option>Open</option>\n            <option>Close</option>\n            <option>Coming Soon</option>\n          </select>\n\n          <form>\n            <input type=\"search\" placeholder=\"search\"/>\n            <button type=\"submit\" aria-label=\"Save\" value=\"search\">\n              <img src=\"../images/icon-search.svg\" alt=\"\"></img>\n            </button>\n          </form>\n        </Dflex>\n\n        {/* <ButtonMenu activeIndex={!isExact ? 1 : 0} scale=\"sm\" variant=\"subtle\">\n          <ButtonMenuItem as={Link} to={`${url}`}>\n            Launchpad BEP-20\n          </ButtonMenuItem>\n          <ButtonMenuItem as={Link} to={`${url}/history`}>\n            Launchpad NFT\n          </ButtonMenuItem>\n        </ButtonMenu> */}\n      </div>\n    </Wrapper>\n  )\n}\n\nexport default IfoTabButtons\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Text } from '@luckyswap/uikit'\nimport Container from 'components/layout/Container'\nimport useI18n from 'hooks/useI18n'\n\nconst Title = styled(Heading).attrs({ as: 'h1', size: 'xl' })`\n  color: ${({ theme }) => theme.colors.secondary};\n  margin-bottom: 24px;\n`\n\nconst Blurb = styled(Text)`\n  color: #ffffff;\n  font-size: 20px;\n  font-weight: 600;\n`\n\nconst StyledHero = styled.div`\n  display: flex;\n  align-items: center;\n  background: url('../images/banner-mobile.png');\n  background-repeat: no-repeat;\n  background-size: cover;\n  width: 100%;\n  height: 350px;\n  padding-bottom: 40px;\n  padding-top: 40px;\n  margin-bottom: 32px;\n\n  @media (min-width: 768px) {\n    background: url('../images/banner-tablet.png');\n    background-repeat: no-repeat;\n    background-size: cover;\n }\n\n @media (min-width: 991px) {\n    background: url('../images/large-pc.png');\n    background-repeat: no-repeat;\n    background-size: cover;\n  }\n`\n\nconst Titletop = styled.h1`\n  color: #fff;\n  font-weight: 600;\n  line-height: 1.1;\n  font-size: 40px;\n  margin-bottom: 24px;\n`\n\nconst BoxTitle = styled.div`\n  padding-left: 50px;\n\n  @media (min-width: 768px) {\n    padding-left: 100px;\n  }\n\n  @media (min-width: 991px) {\n    padding-left: 120px;\n  }\n`\n\nconst Hero = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <StyledHero>\n      <BoxTitle>\n        <Titletop>Luckyswap Launchpad</Titletop>\n        <Blurb>{TranslateString(502, 'Finding the best investment opportunities for you')}</Blurb>\n      </BoxTitle>\n  </StyledHero>\n  )\n}\n\nexport default Hero\n","import BigNumber from 'bignumber.js'\nimport { BSC_BLOCK_TIME } from 'config'\nimport { Ifo, IfoStatus } from 'config/constants/types'\nimport { useBlock } from 'state/hooks'\nimport { useIfoContract } from 'hooks/useContract'\nimport { useEffect, useState } from 'react'\nimport makeBatchRequest from 'utils/makeBatchRequest'\n\nexport interface PublicIfoState {\n  status: IfoStatus\n  blocksRemaining: number\n  secondsUntilStart: number\n  progress: number\n  secondsUntilEnd: number\n  raisingAmount: BigNumber\n  totalAmount: BigNumber\n  startBlockNum: number\n  endBlockNum: number\n}\n\nconst getStatus = (currentBlock: number, startBlock: number, endBlock: number): IfoStatus => {\n  // Add an extra check to currentBlock because it takes awhile to fetch so the initial value is 0\n  // making the UI change to an inaccurate status\n  if (currentBlock === 0) {\n    return 'idle'\n  }\n\n  if (currentBlock < startBlock) {\n    return 'coming_soon'\n  }\n\n  if (currentBlock >= startBlock && currentBlock <= endBlock) {\n    return 'live'\n  }\n\n  if (currentBlock > endBlock) {\n    return 'finished'\n  }\n\n  return 'idle'\n}\n\n/**\n * Gets all public data of an IFO\n */\nconst useGetPublicIfoData = (ifo: Ifo) => {\n  const { address, releaseBlockNumber } = ifo\n  const [state, setState] = useState<PublicIfoState>({\n    status: 'idle',\n    blocksRemaining: 0,\n    secondsUntilStart: 0,\n    progress: 5,\n    secondsUntilEnd: 0,\n    raisingAmount: new BigNumber(0),\n    totalAmount: new BigNumber(0),\n    startBlockNum: 0,\n    endBlockNum: 0,\n  })\n  const { currentBlock } = useBlock()\n  const contract = useIfoContract(address)\n\n  useEffect(() => {\n    const fetchProgress = async () => {\n      const [startBlock, endBlock, raisingAmount, totalAmount] = (await makeBatchRequest([\n        contract.methods.startBlock().call,\n        contract.methods.endBlock().call,\n        contract.methods.raisingAmount().call,\n        contract.methods.totalAmount().call,\n      ])) as [string, string, string, string]\n\n      const startBlockNum = parseInt(startBlock, 10)\n      const endBlockNum = parseInt(endBlock, 10)\n\n      const status = getStatus(currentBlock, startBlockNum, endBlockNum)\n      const totalBlocks = endBlockNum - startBlockNum\n      const blocksRemaining = endBlockNum - currentBlock\n\n      // Calculate the total progress until finished or until start\n      const progress =\n        currentBlock > startBlockNum\n          ? ((currentBlock - startBlockNum) / totalBlocks) * 100\n          : ((currentBlock - releaseBlockNumber) / (startBlockNum - releaseBlockNumber)) * 100\n\n      setState({\n        secondsUntilEnd: blocksRemaining * BSC_BLOCK_TIME,\n        secondsUntilStart: (startBlockNum - currentBlock) * BSC_BLOCK_TIME,\n        raisingAmount: new BigNumber(raisingAmount),\n        totalAmount: new BigNumber(totalAmount),\n        status,\n        progress,\n        blocksRemaining,\n        startBlockNum,\n        endBlockNum,\n      })\n    }\n\n    fetchProgress()\n  }, [address, currentBlock, contract, releaseBlockNumber, setState])\n\n  return state\n}\n\nexport default useGetPublicIfoData\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Link } from 'react-router-dom'\nimport { useWeb3React } from '@web3-react/core'\nimport { Card, CardBody, CardRibbon } from '@luckyswap/uikit'\nimport { Ifo, IfoStatus } from 'config/constants/types'\nimport useI18n from 'hooks/useI18n'\nimport useGetPublicIfoData from 'hooks/useGetPublicIfoData'\nimport UnlockButton from 'components/UnlockButton'\nimport IfoCardHeader from './IfoCardHeader'\nimport IfoCardDetails from './IfoCardDetails'\nimport IfoCardActions from './IfoCardActions'\nimport IfoCardProgress from './IfoCardProgress'\nimport IfoCardTime from './IfoCardTime'\n\nexport interface IfoCardProps {\n  ifo: Ifo\n}\n\nconst StyledIfoCard = styled(Card)<{ ifoId: string }>`\n  background-image: ${({ ifoId }) => `url('/images/ifos/${ifoId}-bg.svg')`};\n  background-repeat: no-repeat;\n  background-size: contain;\n  padding-top: 112px;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 437px;\n  width: 100%;\n`\nconst getRibbonComponent = (status: IfoStatus, TranslateString: (translationId: number, fallback: string) => any) => {\n  if (status === 'coming_soon') {\n    return <CardRibbon variantColor=\"textDisabled\" text={TranslateString(999, 'Coming Soon')} />\n  }\n\n  if (status === 'live') {\n    return <CardRibbon variantColor=\"primary\" text={TranslateString(999, 'LIVE NOW!')} />\n  }\n\n  return null\n}\n\nconst IfoCard: React.FC<IfoCardProps> = ({ ifo }) => {\n  const { id, name, subTitle } = ifo\n  const publicIfoData = useGetPublicIfoData(ifo)\n  const { account } = useWeb3React()\n  const TranslateString = useI18n()\n  const Ribbon = getRibbonComponent(publicIfoData.status, TranslateString)\n\n  return (\n    // <StyledIfoCard ifoId={id} ribbon={Ribbon} isActive={publicIfoData.status === 'live'}>\n    //   <IfoCardDetails ifo={ifo} publicIfoData={publicIfoData} />\n    // </StyledIfoCard>\n    <>\n      <Item>\n        <ItemHead>\n          <section>\n            <span>Coming soon</span>\n          </section>\n        </ItemHead>\n\n        <ItemContent>\n          <BoxHead>\n            <h2>HCATS - Guaranteed</h2>\n            <p>1 BNB = ? HCATS</p>\n          </BoxHead>\n\n          <Total>\n            <span>Total Raise:</span>\n            <h2>0 BNB</h2>\n          </Total>\n\n          <BoxProgress>\n            <TitleProgress>Progress</TitleProgress>\n            <BoxProgressBar>\n              <ProgressBar></ProgressBar>\n            </BoxProgressBar>\n            <ProgressFooter>\n              <ProgressPercentage>100%</ProgressPercentage>\n              <FeaturedCardMinimum>(Min.0%)</FeaturedCardMinimum>\n              <FeaturedCardAmount>0/100</FeaturedCardAmount>\n            </ProgressFooter>\n          </BoxProgress>\n\n          <FeaturedCardFooter>\n            <CardColumn>\n              <p>Participants</p>\n              <h3>0</h3>\n            </CardColumn>\n\n            <CardColumn>\n              <p>Max<span>BNB</span></p>\n              <h3>0.0</h3>\n            </CardColumn>\n\n            <CardColumn>\n              <p>Access</p>\n              <h3>Private</h3>\n            </CardColumn>\n          </FeaturedCardFooter>\n\n          <BoxLink>\n            <Link to=\"/IfoDetail\">Participate</Link>\n          </BoxLink>\n        </ItemContent>\n      </Item>\n\n      <Item>\n        <ItemHead>\n          <section>\n            <span>Coming soon</span>\n          </section>\n        </ItemHead>\n\n        <ItemContent>\n          <BoxHead>\n            <h2>HCATS - Community</h2>\n            <p>1 BNB = ? HCATS</p>\n          </BoxHead>\n\n          <Total>\n            <span>Total Raise:</span>\n            <h2>0 BNB</h2>\n          </Total>\n\n          <BoxProgress>\n            <TitleProgress>Progress</TitleProgress>\n            <BoxProgressBar>\n              <ProgressBar></ProgressBar>\n            </BoxProgressBar>\n            <ProgressFooter>\n              <ProgressPercentage>100%</ProgressPercentage>\n              <FeaturedCardMinimum>(Min.0%)</FeaturedCardMinimum>\n              <FeaturedCardAmount>0/100</FeaturedCardAmount>\n            </ProgressFooter>\n          </BoxProgress>\n\n          <FeaturedCardFooter>\n            <CardColumn>\n              <p>Participants</p>\n              <h3>0</h3>\n            </CardColumn>\n\n            <CardColumn>\n              <p>Max<span>BNB</span></p>\n              <h3>0.0</h3>\n            </CardColumn>\n\n            <CardColumn>\n              <p>Access</p>\n              <h3>Private</h3>\n            </CardColumn>\n          </FeaturedCardFooter>\n\n          <BoxLink>\n            <Link to=\"/IfoDetail\">Participate</Link>\n          </BoxLink>\n        </ItemContent>\n      </Item>\n\n      <Item className=\"item-coming\">\n        <div className=\"item-coming-title\">\n          Upcoming Project !\n        </div>\n\n        <div className=\"item-coming-content\">\n          <div>\n            <h2>Stay tuned !</h2>\n            <p>Something exciting is coming your way!</p>\n          </div>\n        </div>\n      </Item>\n    </>\n  )\n}\n\n\n\nconst BoxProgress = styled.div`\n  margin-bottom: 16px;\n`\n\nconst TitleProgress = styled.p`\n  font-size: 14px;\n  line-height: 20px;\n  font-weight: 600;\n  margin-bottom: 4px;\n`\n\nconst ProgressFooter = styled.p`\n  font-size: 12px;\n  line-height: 18px;\n  font-weight: 600;\n  display: grid;\n  grid-template-columns: 30px auto auto;\n`\n\nconst ProgressPercentage = styled.div`\n  color: #f90943;\n`\n\nconst FeaturedCardMinimum = styled.div``\n\nconst FeaturedCardAmount = styled.div`\n  margin-left: auto;\n`\n\nconst BoxProgressBar = styled.div`\n  display: flex;\n  overflow: hidden;\n  height: 8px;\n  border-radius: 8px;\n  margin-bottom: 8px;\n`\n\nconst ProgressBar = styled.div`\n  width: 100%;\n  flex-direction: column;\n  justify-content: center;\n  text-align: center;\n  white-space: nowrap;\n  background-color: #4ea7a5;\n  transition: width .6s ease;\n`\n\nconst FeaturedCardFooter = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3,1fr);\n  grid-gap: 16px;\n  margin-bottom: 16px;\n`\n\nconst CardColumn = styled.div`\n  p {\n    font-size: 12px;\n    line-height: 18px;\n    font-weight: 600;\n    margin-bottom: 4px;\n    color: #212121;\n  }\n\n  h3 {\n    font-size: 22px;\n    line-height: 28px;\n    font-weight: 600;\n    margin-bottom: 0;\n    color: #0c8fb6;\n  }\n`\n\nconst Item = styled.div`\n  box-sizing: border-box;\n  margin: 0px 0px 20px;\n  min-width: 0px;\n  padding: 0px;\n  width: 100%;\n  border-radius: 26px;\n  background: rgb(234 234 234);\n  overflow: hidden;\n  box-shadow: rgb(171 133 115 / 16%) 0px 2px 10px;\n  align-items: stretch;\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n\n  &:hover {\n    box-shadow: 1px 2px 20px #fff0c1;\n    transition: 0.5s;\n  }\n\n  @media (min-width: 768px) {\n    width: 100%;\n  }\n\n  &:not(:nth-child(3n)) {\n    margin-right: 0;\n\n    @media (min-width: 768px) {\n      margin-right: 17px;\n    }\n  }\n\n  &.item-coming {\n    .item-coming-title {\n      min-height: 106px;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      font-weight: 700;\n      font-size: 24px;\n      background: #8a8989;\n      color: #fff;\n    }\n\n    .item-coming-content {\n      margin: 0px;\n      width: 100%;\n      display: flex;\n      align-items: center;\n      height: 100%;\n      text-align: center;\n\n      div {\n        display: flex;\n        flex-direction: column;\n        width: 100%;\n      }\n\n      h2 {\n        font-size: 20px;\n        margin-bottom: 10px;\n      }\n    }\n  }\n`\n\nconst BoxHead = styled.div`\n  margin-bottom: 16px;\n\n  h2 {\n    font-size: 28px;\n    line-height: 34px;\n    font-weight: 600;\n    margin-bottom: 0;\n  }\n`\n\nconst ItemHead = styled.div`\nposition: relative;\nwidth: 100%;\nheight: 106px;\nbackground-image: url('../images/hyfi.png');\nbackground-size: cover;\ncolor: rgb(255, 255, 255);\n\n@media (min-width: 768px) {\n  width: 100%;\n}\n\nsection {\n  position: absolute;\n  top: 16px;\n  left: 0px;\n  background: rgb(165, 165, 165);\n  border-top-right-radius: 12px;\n  border-bottom-right-radius: 12px;\n  color: rgb(255, 253, 250);\n  font-family: \"Baloo Da\";\n  font-weight: 400;\n  padding: 6px 12px;\n\n  span {\n    box-sizing: border-box;\n    margin: 0px;\n    min-width: 0px;\n    font-size: 12px;\n    font-weight: 600;\n  }\n}\n`\n\nconst Total = styled.div`\n  span {\n    font-size: 14px;\n    line-height: 20px;\n    font-weight: 600;\n    margin-bottom: 4px;\n    display: block;\n  }\n\n  h2 {\n    font-size: 28px;\n    line-height: 34px;\n    font-weight: 500;\n    text-transform: uppercase;\n    margin-bottom: 16px;\n    color: #0c8fb6;\n  }\n`\n\nconst ItemContent = styled.div`\n  padding: 20px 24px 8px;\n\n  h4 {\n    box-sizing: border-box;\n    margin: 0px;\n    min-width: 0px;\n    font-weight: bold;\n    font-size: 24px;\n    color:  rgb(37 37 53);\n    line-height: 28px;\n  }\n`\n\nconst BoxLink = styled.div`\n  display: flex;\n  justify-content: center;\n  \n  a {\n    display: block;\n    width: 232px;\n    height: 40px;\n    line-height: 40px;\n    font-weight: bold;\n    font-size: 14px;\n    color: rgb(255, 253, 250);\n    text-align: center;\n    background: #f5c606;\n    border-radius: 10px;\n    text-decoration: none;\n\n    &:hover {\n      background-color: #e4bc17;\n      transition: 0.5s;\n      color: rgb(255, 253, 250);\n    }\n  }\n`\n\nexport default IfoCard\n\n","import styled from 'styled-components'\n\ninterface IfoCardWrapperProps {\n  isSingle?: boolean\n}\n\nconst IfoCardWrapper = styled.div<IfoCardWrapperProps>`\n  align-items: start;\n  border-top: 2px solid #2b2c3a;\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-gap: 20px;\n  padding-bottom: 40px;\n  padding-top: 40px;\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-gap: 20px;\n\n  @media (min-width: 768px) {\n    grid-template-columns: repeat(3,1fr);\n  }\n\n  @media (min-width: 991px) {\n    grid-template-columns: repeat(3,1fr);\n  }\n`\n\nIfoCardWrapper.defaultProps = {\n  isSingle: false,\n}\n\nexport default IfoCardWrapper\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Heading, BaseLayout, Button, LinkExternal, Flex, Image } from '@luckyswap/uikit'\nimport { ifosConfig } from 'config/constants'\nimport IfoCard from './components/IfoCard'\nimport IfoCards from './components/IfoCards'\n\n\n/**\n * Note: currently there should be only 1 active IFO at a time\n */\nconst activeIfo = ifosConfig.find((ifo) => ifo.isActive)\n\nconst Ifo = () => {\n\n  return (\n    <div>\n      <IfoCards isSingle>\n        <IfoCard ifo={activeIfo} />\n      </IfoCards>\n\n      <BoxIDO>\n        <div className=\"content\">\n          <h4>How to launch your own IDO ?</h4>\n          <p>Launch your project with LuckySwap, LuckySwap is a decentralized trading platform that uses the automatic market maker (AMM) model. At the same time LuckySwap is the 1st AMM+NFT exchange on Binance Smart Chain.Various data indicate the rapid growth of LuckySwap in the DEFI ecosystem</p>\n          <a href=\"/\">Apply Now</a>\n        </div>\n      </BoxIDO>\n    </div>\n  )\n}\n\nconst BoxIDO = styled.div`\n  background: url('../images/bg-ido.png');\n  background-size: cover;\n  background-position: right;\n  background-repeat: no-repeat;\n  height: 277px;\n  margin-bottom: 40px;\n  position: relative;\n  border-radius: 20px;\n\n  @media (max-width: 768px) {\n    height: auto;\n    background: unset;\n    padding: 20px;\n  }\n\n  .content {\n    position: relative;\n    padding: 20px 200px 10px 211px;\n    color: #fff;\n\n    @media (max-width: 768px) {\n      padding: 0;\n    }\n  }\n\n  h4 {\n    box-sizing: border-box;\n    margin: 0px;\n    min-width: 0px;\n    font-size: 28px;\n    font-weight: 700;\n    padding-bottom: 10px;\n    color: #fff;\n  }\n\n  p {\n    font-size: 16px;\n    margin-bottom: 16px;\n    line-height: 22px;\n    font-weight: 500;\n  }\n\n  a {\n    display: inline-block;\n    width: 152px;\n    height: 40px;\n    line-height: 40px;\n    background: linear-gradient(180.24deg,rgb(114 186 255) 0.21%,rgb(28 144 255) 63.19%);\n    border-radius: 8px;\n    color: #fff;\n    text-align: center;\n    font-weight: 500;\n    margin-top: 18px;\n\n    &:hover {\n      opacity: 0.7;\n      transition: 0.5s;\n    }\n  }\n`\n\nexport default Ifo\n","import React from 'react'\nimport { Route, useRouteMatch } from 'react-router-dom'\nimport Container from 'components/layout/Container'\nimport IfoTabButtons from './components/IfoTabButtons'\nimport Hero from './components/Hero'\nimport CurrentIfo from './CurrentIfo'\nimport PastIfo from './PastIfo'\n\nconst Ifos = () => {\n  const { path } = useRouteMatch()\n\n  return (\n    <>\n      <Hero />\n      <Container>\n        <IfoTabButtons />\n        <Route exact path={`${path}`}>\n          <CurrentIfo />\n        </Route>\n        <Route path={`${path}/history`}>\n        <CurrentIfo />\n        </Route>\n      </Container>\n    </>\n  )\n}\n\nexport default Ifos\n"],"sourceRoot":""}
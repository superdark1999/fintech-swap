{"version":3,"sources":["views/Lottery-v2/helpers/CountdownHelpers.ts","views/Lottery-v2/components/LotteryProgress.tsx","views/Lottery-v2/components/Hero.tsx","views/Lottery-v2/components/WinningNumbers.tsx","views/Lottery-v2/components/PrizeGrid.tsx","views/Lottery-v2/components/TotalPrizesCard/index.tsx","views/Lottery-v2/components/Loading.tsx","views/Lottery-v2/components/TicketCard/UserTicketsModal.tsx","views/Lottery-v2/components/YourPrizesCard/PrizesWonContent.tsx","views/Lottery-v2/components/YourPrizesCard/NoPrizesContent.tsx","views/Lottery-v2/components/YourPrizesCard/index.tsx","views/Lottery-v2/components/UnlockWalletCard.tsx","views/Lottery-v2/components/TicketCard/BuyTicketModal.tsx","views/Lottery-v2/components/TicketCard/PurchaseWarningModal.tsx","views/Lottery-v2/components/TicketCard/TicketActions.tsx","views/Lottery-v2/components/TicketCard/index.tsx","views/Lottery-v2/components/HowItWorks.tsx","views/Lottery-v2/components/PastLotteryRoundViewer/PastLotterySearcher.tsx","views/Lottery-v2/components/PastLotteryRoundViewer/PastRoundCardError.tsx","views/Lottery-v2/components/LotteryCardHeading.tsx","views/Lottery-v2/components/PastLotteryRoundViewer/PastLotteryActions.tsx","views/Lottery-v2/helpers/formatLotteryDate.ts","views/Lottery-v2/components/Timestamp.tsx","views/Lottery-v2/components/PastLotteryRoundViewer/PastRoundCardDetails.tsx","views/Lottery-v2/components/PastLotteryRoundViewer/PastRoundCard.tsx","views/Lottery-v2/components/PastLotteryRoundViewer/index.tsx","views/Lottery-v2/components/PastDrawsHistory/HistoryChart.tsx","views/Lottery-v2/components/PastDrawsHistory/Legend.tsx","views/Lottery-v2/components/PastDrawsHistory/PastDrawsHistoryCard.tsx","views/Lottery-v2/Lottery.tsx"],"names":["lotteryDrawHoursUtc","getNextLotteryDrawTime","currentMillis","millisTimeOfNextDraw","date","Date","currentHour","getUTCHours","nextLotteryHour","getClosestLotteryHour","tomorrow","nextDay","getUTCDate","setUTCDate","setUTCHours","hoursAndMinutesString","hours","minutes","parseInt","getTicketSaleTime","msUntilNextTicketSale","getNextTicketSaleTime","getTimePeriods","getLotteryDrawStep","ProgressWrapper","styled","div","TopTextWrapper","BottomTextWrapper","StyledPrimaryText","Text","LotteryProgress","TranslateString","useI18n","lotteryHasDrawn","useGetLotteryHasDrawn","useCurrentTime","timeUntilTicketSale","timeUntilLotteryDraw","msUntilLotteryDraw","getLotteryDrawTime","primaryStep","secondaryStep","showProgressBunny","fontSize","bold","color","Title","Heading","attrs","as","size","Blurb","StyledHero","StyledContainer","Container","theme","mediaQueries","sm","LeftWrapper","lg","RightWrapper","ContentDes","Hero","src","alt","CardBodyNew","Link","a","Row","RowNoPadding","Column","CenteredText","CenteredTextWithPadding","TicketNumberBox","StyledCardHeader","CardWrapper","props","colors","secondary","StyledCardContentInner","WinningNumbers","account","useWeb3React","winNumbers","useWinningNumbers","MatchedNumber4","useMatchingRewardLength","MatchedNumber3","MatchedNumber2","style","map","number","index","href","target","Grid","pastDraw","RightAlignedText","RightAlignedHeading","GridItem","marginBottom","PastDrawGridItem","PrizeGrid","lotteryPrizeAmount","jackpotMatches","twoTicketMatches","threeTicketMatches","fourMatchesAmount","toFixed","threeMatchesAmount","twoMatchesAmount","burnAmount","cakeBusdPrice","usePriceLuckyBusd","getCakeBusdValue","amount","BigNumber","multipliedBy","toNumber","textShadow","toLocaleString","eq","CardBusdValue","value","BoxTotal","CardHeading","Right","Left","IconWrapper","PrizeCountWrapper","ExpandingWrapper","showFooter","BoxLucky","Dollar","TotalPrizesCard","useState","setShowFooter","getBalanceNumber","useTotalRewards","lotteryPrizeAmountBusd","lotteryPrizeWithCommaSeparators","currentLotteryNumber","useContext","PastLotteryDataContext","mb","alignItems","justifyContent","height","width","fontWeight","num","ExpandableSectionButton","onClick","expanded","className","StyledLoading","Loading","RewardP","TicketsList","primary","StyledButton","Button","spacing","UserTicketsModal","myTicketNumbers","onDismiss","from","rewardMatch","useCallback","n","i","length","listItems","emoji","Array","join","toString","title","TICKETS","variant","WinningsWrapper","StyledCardActions","PrizesWonContent","requestedClaim","setRequestedClaim","useTotalClaim","claimLoading","claimAmount","onMultiClaim","useMultiClaimLottery","tickets","useTickets","useModal","onPresentMyTickets","addTransaction","useTransactionAdder","handleClaim","txHash","summary","console","error","winnings","marginRight","disabled","Wrapper","TextWrapper","StyledText","Image","img","md","NoPrizesContent","StyledCard","Card","isDisabled","textDisabled","YourPrizesCard","isAWin","isActive","StyledCardBody","CardBody","StyledHeading","UnlockWalletCard","UnlockButton","BuyTicketModal","max","val","setVal","pendingTx","setPendingTx","setRequestedBuy","fullBalance","useMemo","getFullDisplayBalance","maxTickets","LOTTERY_TICKET_PRICE","onMultiBuy","useMultiBuyLottery","maxNumber","useMaxNumber","lotteryContract","useContract","getLotteryAddress","lotteryAbi","useLotteryV2Contract","handleBuy","numbers","apply","Math","floor","random","multiBuy","times","pow","then","response","handleSelectMax","Number","LOTTERY_MAX_NUMBER_OF_TICKETS","TicketInput","onSelectMax","onChange","e","currentTarget","symbol","availableSymbol","Tips","Announce","Final","ModalActions","id","WarningModal","newTransactionsFirst","b","addedTime","spinnerIcon","spin","CardActions","Dflex","TicketCard","balanceToken","setBalanceToken","setTickets","allowance","setAllowance","chainId","contractBEP20","XLUCKY_TESTNET_ADDRESSES","bep20Abi","useContractTemp","ticketsContract","getLotteryTicketAddress","lotteryTicketAbi","fastRefresh","useRefresh","ticketsLength","PurchaseWarningModal","tokenName","onPresentBuy","useEffect","getTickets","res","fetchBalance","balanceOf","data","catch","log","fetchApprovalData","requestedApproval","setRequestedApproval","useApproveCallbackCustom","approval","onAttemptToApprove","handleApprove","allTransactions","useAllTransactions","sortedRecentTransactions","Object","values","filter","isTransactionRecent","sort","getStatus","tx","receipt","hash","isSecondCard","CardHeader","TicketCountWrapper","TicketActions","LayoutWrapper","StyledLink","HowItWorks","SearchWrapper","InputWrapper","ButtonWrapper","PastLotterySearcher","initialLotteryNumber","onSubmit","lotteryNumber","setLotteryNumber","isError","setIsError","evt","preventDefault","type","isWarning","scale","PastRoundCardError","p","message","LotteryCardHeading","valueToDisplay","children","Icon","flexDirection","defaultProps","ExternalLinkWrap","LinkExternal","contractLink","SCAN_SITES","formatLotteryDate","lotteryDate","dateString","toDateString","monthAndDay","split","splice","Timestamp","timeValue","TopLotteryCardHeading","BoxCard","PastRoundCardDetails","jackpotTicket","lotteryNumbers","match1Ticket","match2Ticket","match3Ticket","poolSize","oneTicketMatches","PastLotteryActions","FullWidth","PastRoundCard","PastLotteryRoundViewer","roundData","isInitialized","isLoading","state","setState","useGetRecentLotteryRoundData","initialLotteryData","mostRecentLotteryNumber","prevState","handleSubmit","getLotteryRoundData","Line","lazy","InnerWrapper","HistoryChart","historyData","historyError","getDataArray","kind","dataPoint","reverse","lineStyles","borderColor","fill","borderWidth","pointRadius","pointHitRadius","chartData","labels","datasets","label","yAxisID","axesStyles","borderCapStyle","gridLines","display","ticks","fontFamily","fontColor","lineHeight","maxRotation","beginAtZero","autoSkipPadding","userCallback","options","legend","scales","yAxes","position","xAxes","fallback","LegendItem","Circle","isPoolSize","Legend","PastDrawsHistoryCard","SecondCardColumnWrapper","Lottery","setHistoryData","setHistoryError","setCurrentLotteryNumber","setMostRecentLotteryNumber","fetch","json","getLotteryIssueIndex","previousLotteryNumber","getInitialLotteryIndex","Page"],"mappings":"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","file":"static/js/21.afd59776.chunk.js","sourcesContent":["import getTimePeriods from 'utils/getTimePeriods'\n\n// lottery draws UTC: 02:00 (10:00 SGT), 14:00 (22:00 SGT)\nconst lotteryDrawHoursUtc = [2, 14]\n\nconst getClosestLotteryHour = (currentHour) => {\n  switch (true) {\n    case currentHour < lotteryDrawHoursUtc[0] || currentHour >= lotteryDrawHoursUtc[1]:\n      return lotteryDrawHoursUtc[0]\n    case currentHour < lotteryDrawHoursUtc[1]:\n      return lotteryDrawHoursUtc[1]\n    default:\n      return 0\n  }\n}\n\nconst getNextLotteryDrawTime = (currentMillis) => {\n  const date = new Date(currentMillis)\n  const currentHour = date.getUTCHours()\n  const nextLotteryHour = getClosestLotteryHour(currentHour)\n  // next lottery is tomorrow if the next lottery is at 2am UTC...\n  // ...and current time is between 02:00am & 23:59pm UTC\n  const nextLotteryIsTomorrow = nextLotteryHour === 2 && currentHour >= 2 && currentHour <= 23\n  let millisTimeOfNextDraw\n\n  if (nextLotteryIsTomorrow) {\n    const tomorrow = new Date(currentMillis)\n    const nextDay = tomorrow.getUTCDate() + 1\n    tomorrow.setUTCDate(nextDay)\n    millisTimeOfNextDraw = tomorrow.setUTCHours(nextLotteryHour, 0, 0, 0)\n  } else {\n    millisTimeOfNextDraw = date.setUTCHours(nextLotteryHour, 0, 0, 0)\n  }\n\n  return millisTimeOfNextDraw\n}\n\n// @ts-ignore\nconst getNextTicketSaleTime = (currentMillis) => (parseInt(currentMillis / 3600000) + 1) * 3600000\nconst hoursAndMinutesString = (hours, minutes) => `${parseInt(hours)}h, ${parseInt(minutes)}m`\n\nexport const getTicketSaleTime = (currentMillis): string => {\n  const nextTicketSaleTime = getNextTicketSaleTime(currentMillis)\n  const msUntilNextTicketSale = nextTicketSaleTime - currentMillis\n  const { minutes } = getTimePeriods(msUntilNextTicketSale / 1000)\n  const { hours } = getTimePeriods(msUntilNextTicketSale / 1000)\n  return hoursAndMinutesString(hours, minutes)\n}\n\nexport const getLotteryDrawTime = (currentMillis): string => {\n  const nextLotteryDrawTime = getNextLotteryDrawTime(currentMillis)\n  const msUntilLotteryDraw = nextLotteryDrawTime - currentMillis\n  const { minutes } = getTimePeriods(msUntilLotteryDraw / 1000)\n  const { hours } = getTimePeriods(msUntilLotteryDraw / 1000)\n  return hoursAndMinutesString(hours, minutes)\n}\n\nexport const getTicketSaleStep = () => (1 / 12) * 100\n\nexport const getLotteryDrawStep = (currentMillis) => {\n  const msBetweenLotteries = 43200000\n  const endTime = getNextLotteryDrawTime(currentMillis)\n  const msUntilLotteryDraw = endTime - currentMillis\n  const percentageRemaining = (msUntilLotteryDraw / msBetweenLotteries) * 100\n  return 100 - percentageRemaining\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Progress } from '@luckyswap/uikit'\nimport useI18n from 'hooks/useI18n'\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\nimport { useCurrentTime } from 'hooks/useTimer'\nimport {\n  getLotteryDrawTime,\n  getLotteryDrawStep,\n  getTicketSaleTime,\n  getTicketSaleStep,\n} from '../helpers/CountdownHelpers'\n\nconst ProgressWrapper = styled.div`\n  display: block;\n  width: 100%;\n`\n\nconst TopTextWrapper = styled.div`\n  margin-top: 16px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n`\n\nconst BottomTextWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n`\n\nconst StyledPrimaryText = styled(Text)`\n  margin-right: 16px;\n`\nconst LotteryProgress = () => {\n  const TranslateString = useI18n()\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\n  const currentMillis = useCurrentTime()\n  const timeUntilTicketSale = getTicketSaleTime(currentMillis)\n  const timeUntilLotteryDraw = getLotteryDrawTime(currentMillis)\n\n  return (\n    <ProgressWrapper>\n      <Progress primaryStep={getLotteryDrawStep(currentMillis)} secondaryStep={getTicketSaleStep()} showProgressBunny />\n      <TopTextWrapper>\n        <StyledPrimaryText fontSize=\"20px\" bold color=\"yellow\">\n          {lotteryHasDrawn ? timeUntilTicketSale : timeUntilLotteryDraw}\n        </StyledPrimaryText>\n        <Text fontSize=\"20px\" bold color=\"invertedContrast\">\n          {lotteryHasDrawn ? TranslateString(434, 'Until ticket sale') : TranslateString(492, 'Until lottery draw')}\n        </Text>\n      </TopTextWrapper>\n      {lotteryHasDrawn && (\n        <BottomTextWrapper>\n          <Text color=\"invertedContrast\">\n            {timeUntilLotteryDraw} {TranslateString(492, 'Until lottery draw')}\n          </Text>\n        </BottomTextWrapper>\n      )}\n    </ProgressWrapper>\n  )\n}\n\nexport default LotteryProgress\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Text } from '@luckyswap/uikit'\nimport useI18n from 'hooks/useI18n'\nimport Container from 'components/layout/Container'\nimport LotteryProgress from './LotteryProgress'\n\nconst Title = styled(Heading).attrs({ as: 'h1', size: 'xl' })`\n  color: rgb(243, 193, 17);\n  margin-bottom: 5px;\n`\n\nconst Blurb = styled(Text)`\n  color: #ffffff;\n  font-size: 20px;\n  font-weight: 600;\n`\n\nconst StyledHero = styled.div`\n  // background: url('../images/large-pc.png');\n  background-repeat: no-repeat;\n  background-size: cover;\n  padding-bottom: 60px;\n  padding-top: 60px;\n  background-color: #0000001a;\n`\n\nconst StyledContainer = styled(Container)`\n  display: grid;\n  grid-template-columns: 1fr;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    grid-template-columns: 1fr 400px;\n  }\n`\n\nconst LeftWrapper = styled.div`\n  flex: 1;\n  padding-right: 0;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-right: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-right: 32px;\n  }\n`\n\nconst RightWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  flex: 1;\n  padding-left: 0;\n  margin-top: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-top: 0;\n    padding-left: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-left: 32px;\n  }\n`\n\nconst ContentDes = styled.div`\n  margin-bottom: 20px;\n`\n\nconst Hero = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <StyledHero>\n      <StyledContainer>\n        <LeftWrapper>\n          <img src=\"images/banner-jackpot.png\" alt=\"\" />\n        </LeftWrapper>\n\n        <RightWrapper>\n          <ContentDes>\n            <Title>{TranslateString(708, 'The LUCKY Lottery')}</Title>\n            <Blurb>{TranslateString(710, 'Buy tickets with LUCKY for collect more NFTs')}</Blurb>\n            <Blurb>{TranslateString(712, 'Win if 1, 2, 3, 4, 5 or 6 of your ticket numbers match!')}</Blurb>\n          </ContentDes>\n          <LotteryProgress />\n        </RightWrapper>\n      </StyledContainer>\n    </StyledHero>\n  )\n}\n\nexport default Hero\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useWeb3React } from '@web3-react/core'\nimport { Image, Card, CardBody } from '@luckyswap/uikit'\nimport { useWinningNumbers, useMatchingRewardLength } from 'hooks/useTickets'\nimport useI18n from 'hooks/useI18n'\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\n\nconst WinningNumbers: React.FC = () => {\n  const { account } = useWeb3React()\n  const winNumbers = useWinningNumbers()\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\n  const MatchedNumber4 = useMatchingRewardLength(4)\n  const MatchedNumber3 = useMatchingRewardLength(3)\n  const MatchedNumber2 = useMatchingRewardLength(2)\n  const TranslateString = useI18n()\n\n  // long dep trai winning number\n\n  return (\n    <CardWrapper>\n      <CardBodyNew>\n        <StyledCardContentInner>\n          <StyledCardHeader>\n            <Title style={{ color: 'rgb(243, 193, 17)' }}>\n              {account && lotteryHasDrawn\n                ? `${TranslateString(570, 'Latest Winning Numbers')}`\n                : TranslateString(440, 'Latest Winning Numbers')}\n            </Title>\n          </StyledCardHeader>\n          <Row>\n            {/* <img\n              alt=\"\"\n              src=\"https://merlinlab.com/static/media/leftGoldenCoin.6aef3b76.svg\"\n              className=\"sc-iCfLBT sc-ezbkgU gvyEtt jElfkq\"\n            />\n            <img\n              alt=\"\"\n              src=\"https://merlinlab.com/static/media/rightGoldenCoin.e795d41c.svg\"\n              className=\"sc-iCfLBT sc-ezbkgU KkWOV jElfkq\"\n            /> */}\n            {winNumbers.map((number, index) => (\n              // eslint-disable-next-line react/no-array-index-key\n              <TicketNumberBox key={index}>\n                <CenteredText>{number}</CenteredText>\n              </TicketNumberBox>\n            ))}\n               <TicketNumberBox>\n                <CenteredText>5</CenteredText>\n              </TicketNumberBox>\n              <TicketNumberBox>\n                <CenteredText>8</CenteredText>\n              </TicketNumberBox>\n\n          </Row>\n          <Column>\n          <RowNoPadding>\n              <CenteredTextWithPadding style={{ color: '#fff' }}>\n                {TranslateString(442, 'Tickets matching 6 numbers:')}\n              </CenteredTextWithPadding>\n              <CenteredTextWithPadding>\n                <strong style={{ color: '#F3C111' }}>{MatchedNumber4}</strong>\n              </CenteredTextWithPadding>\n            </RowNoPadding>\n            <RowNoPadding>\n              <CenteredTextWithPadding style={{ color: '#fff' }}>\n                {TranslateString(442, 'Tickets matching 5 numbers:')}\n              </CenteredTextWithPadding>\n              <CenteredTextWithPadding>\n                <strong style={{ color: '#F3C111' }}>{MatchedNumber4}</strong>\n              </CenteredTextWithPadding>\n            </RowNoPadding>\n            <RowNoPadding>\n              <CenteredTextWithPadding style={{ color: '#fff' }}>\n                {TranslateString(444, 'Tickets matching 4 numbers:')}\n              </CenteredTextWithPadding>\n              <CenteredTextWithPadding>\n                <strong style={{ color: '#F3C111' }}>{MatchedNumber3}</strong>\n              </CenteredTextWithPadding>\n            </RowNoPadding>\n            <RowNoPadding>\n              <CenteredTextWithPadding style={{ color: '#fff' }}>\n                {TranslateString(446, 'Tickets matching 3 numbers:')}\n              </CenteredTextWithPadding>\n              <CenteredTextWithPadding>\n                <strong style={{ color: '#F3C111' }}>{MatchedNumber2}</strong>\n              </CenteredTextWithPadding>\n            </RowNoPadding>\n            <RowNoPadding>\n              <CenteredTextWithPadding style={{ color: '#fff' }}>\n                {TranslateString(446, 'Tickets matching 2 numbers:')}\n              </CenteredTextWithPadding>\n              <CenteredTextWithPadding>\n                <strong style={{ color: '#F3C111' }}>{MatchedNumber2}</strong>\n              </CenteredTextWithPadding>\n            </RowNoPadding>\n            <RowNoPadding>\n              <CenteredTextWithPadding style={{ color: '#fff' }}>\n                {TranslateString(446, 'Tickets matching 1 numbers:')}\n              </CenteredTextWithPadding>\n              <CenteredTextWithPadding>\n                <strong style={{ color: '#F3C111' }}>{MatchedNumber2}</strong>\n              </CenteredTextWithPadding>\n            </RowNoPadding>\n          </Column>\n\n          <Link href=\"/\" target=\"_blank\">\n            {TranslateString(448, 'Export recent winning numbers')}\n          </Link>\n        </StyledCardContentInner>\n      </CardBodyNew>\n    </CardWrapper>\n  )\n}\n\nconst CardBodyNew = styled.div`\n  position: relative;\n  background-color: rgb(43 41 41);\n  border: 0.0625rem solid rgba(255, 255, 255, 0.2);\n  border-radius: 1.25rem;\n  padding: 24px;\n  min-height: 496px;\n`\n\nconst Link = styled.a`\n  margin-top: 1em;\n  text-decoration: none;\n  color: #101010;\n  background-color: #f3c111;\n  border-radius: 12px;\n  padding: 17px 25px;\n  font-weight: 500;\n  white-space: nowrap;\n\n  @media (min-width) {\n    padding: 10px 25px;\n  }\n\n  &:hover {\n    background-color: #ffda3b;\n    color: #101010;\n    transition: 0.5s;\n  }\n`\n\nconst Row = styled.div`\n  margin-top: 1em;\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n  border: 1px solid #f3c111;\n  border-radius: 14px;\n`\n\nconst RabbitRow = styled.div`\n  margin-top: -2.3em;\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n\n  @media (max-width: 768px) {\n    display: none;\n  }\n`\n\nconst RabbitRowSmall = styled.div`\n  margin-top: -2.3em;\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n\n  @media (min-width: 768px) {\n    display: none;\n  }\n`\n\nconst CardImage = styled.div`\n  text-align: center;\n`\n\nconst CardImageFirst = styled.div`\n  text-align: center;\n  margin-left: -1.2em;\n\n  @media (max-width: 600) {\n    margin-left: -0.2em;\n  }\n`\n\nconst RowNoPadding = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n  margin-bottom: 10px;\n`\n\nconst Column = styled.div`\n  margin-top: 1em;\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n`\n\nconst CenteredText = styled.div`\n  text-align: center;\n  align-items: center;\n`\n\nconst CenteredTextWithPadding = styled.div`\n  text-align: center;\n  align-items: center;\n  padding-left: 2px;\n  padding-right: 2px;\n  font-weight: 600;\n`\n\nconst TicketNumberBox = styled.div`\n  padding: 10px;\n  border-radius: 12px;\n  text-shadow: rgb(255 214 0) 0px 0px 12px;\n  // background: linear-gradient(180deg, #54dade 0%, #24c7d6 76.22%);\n  color: white;\n  font-size: 20px;\n  font-weight: 900;\n  margin: 10px;\n  margin-bottom: 7px;\n  width: 20px;\n\n  @media (min-width: 768px) {\n    font-size: 40px;\n    margin: 20px;\n    background: url('../images/bg-number.svg');\n    background-repeat: no-repeat;\n    width: 69px;\n    min-height: 100px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n`\n\nconst RabbitBox = styled.div`\n  /* padding: 10px; */\n  border-radius: 12px;\n  margin: 16px 20px;\n  width: 60px;\n`\n\nconst RabbitBoxSmall = styled.div`\n  padding-top: 10px;\n  padding-left: 10px;\n  border-radius: 12px;\n  margin: 20px;\n  width: 20px;\n`\n\nconst StyledCardHeader = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n`\n\nconst CardWrapper = styled.div`\n  margin-bottom: 30px;\n`\n\nconst Title = styled.div`\n  color: ${(props) => props.theme.colors.secondary};\n  font-size: 24px;\n  width: 50vw;\n  text-align: center;\n  font-weight: 1000;\n`\n\nconst StyledCardContentInner = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: space-between;\n\n  &:before {\n    position: absolute;\n    top: 0;\n    left: 0;\n    content: '';\n    background: url('../images/jackpot-l.png');\n    width: 220px;\n    height: 496px;\n\n    @media (max-width: 991px) {\n      opacity: 0.2;\n    }\n  }\n\n  &:after {\n    position: absolute;\n    top: 0;\n    right: 0;\n    content: '';\n    background: url('../images/jackpot-r.png');\n    width: 220px;\n    height: 496px;\n\n    @media (max-width: 991px) {\n      opacity: 0.2;\n    }\n  }\n`\n\nexport default WinningNumbers\n","import React from 'react'\nimport styled from 'styled-components'\nimport useI18n from 'hooks/useI18n'\nimport { Heading, Text } from '@luckyswap/uikit'\nimport { BigNumber } from 'bignumber.js'\nimport { usePriceLuckyBusd } from 'state/hooks'\nimport CardBusdValue from '../../Home/components/CardBusdValue'\n\nexport interface PrizeGridProps {\n  lotteryPrizeAmount?: number\n  pastDraw?: boolean\n  jackpotMatches?: number\n  oneTicketMatches?: number\n  twoTicketMatches?: number\n  threeTicketMatches?: number\n}\n\nconst Grid = styled.div<{ pastDraw?: boolean }>`\n  display: grid;\n  grid-template-columns: repeat(${(props) => (props.pastDraw ? 3 : 2)}, 1fr);\n  grid-template-rows: repeat(4, auto);\n`\n\nconst RightAlignedText = styled(Text)`\n  text-align: right;\n`\n\nconst RightAlignedHeading = styled(Heading)`\n  text-align: right;\n`\n\nconst GridItem = styled.div<{ marginBottom?: string }>`\n  margin-bottom: ${(props) => (props.marginBottom ? props.marginBottom : '10px')};\n`\n\nconst PastDrawGridItem = styled(GridItem)`\n  transform: translate(-40%, 0%);\n`\n\nconst PrizeGrid: React.FC<PrizeGridProps> = ({\n  lotteryPrizeAmount = 0,\n  pastDraw = false,\n  jackpotMatches,\n  twoTicketMatches,\n  threeTicketMatches,\n}) => {\n  const fourMatchesAmount = +((lotteryPrizeAmount / 100) * 50).toFixed(0)\n  const threeMatchesAmount = +((lotteryPrizeAmount / 100) * 20).toFixed(0)\n  const twoMatchesAmount = +((lotteryPrizeAmount / 100) * 10).toFixed(0)\n  const burnAmount = +((lotteryPrizeAmount / 100) * 20).toFixed(0)\n  const TranslateString = useI18n()\n  const cakeBusdPrice = usePriceLuckyBusd()\n\n  const getCakeBusdValue = (amount: number) => {\n    return new BigNumber(amount).multipliedBy(cakeBusdPrice).toNumber()\n  }\n\n  return (\n    <Grid pastDraw={pastDraw}>\n      <GridItem>\n        <Text fontSize=\"24px\" color=\"#F3C111\">\n          {TranslateString(756, 'No. Matched')}\n        </Text>\n      </GridItem>\n      {pastDraw && (\n        <PastDrawGridItem>\n          <RightAlignedText fontSize=\"14px\" color=\"textSubtle\">\n            {TranslateString(754, 'Winners')}\n          </RightAlignedText>\n        </PastDrawGridItem>\n      )}\n      <GridItem>\n        <RightAlignedText fontSize=\"24px\" color=\"#F3C111\">\n          {TranslateString(752, 'Prize Pot')}\n        </RightAlignedText>\n      </GridItem>\n      {/* 4 matches row */}\n      <GridItem>\n        <Heading style={{ textShadow: 'rgb(255 214 0) 0px 0px 25px' }} size=\"md\">\n          6\n        </Heading>\n      </GridItem>\n      {pastDraw && (\n        <PastDrawGridItem>\n          <RightAlignedHeading size=\"md\">{jackpotMatches}</RightAlignedHeading>\n        </PastDrawGridItem>\n      )}\n      <GridItem>\n        <RightAlignedHeading size=\"md\">\n          {fourMatchesAmount.toLocaleString()}\n          {!pastDraw && !cakeBusdPrice.eq(0) && <CardBusdValue value={getCakeBusdValue(fourMatchesAmount)} />}\n        </RightAlignedHeading>\n      </GridItem>\n      {/* 5 matches row */}\n      <GridItem style={{ textShadow: 'rgb(255 214 0) 0px 0px 25px' }}>\n        <Text bold>5</Text>\n      </GridItem>\n      {pastDraw && (\n        <PastDrawGridItem>\n          <RightAlignedText bold>{threeTicketMatches}</RightAlignedText>\n        </PastDrawGridItem>\n      )}\n      <GridItem>\n        <RightAlignedText>\n          {threeMatchesAmount.toLocaleString()}\n          {!pastDraw && !cakeBusdPrice.eq(0) && <CardBusdValue value={getCakeBusdValue(threeMatchesAmount)} />}\n        </RightAlignedText>\n      </GridItem>\n       {/* 4matches row */}\n       <GridItem style={{ textShadow: 'rgb(255 214 0) 0px 0px 25px' }}>\n        <Text bold>4</Text>\n      </GridItem>\n      {pastDraw && (\n        <PastDrawGridItem>\n          <RightAlignedText bold>{threeTicketMatches}</RightAlignedText>\n        </PastDrawGridItem>\n      )}\n      <GridItem>\n        <RightAlignedText>\n          {threeMatchesAmount.toLocaleString()}\n          {!pastDraw && !cakeBusdPrice.eq(0) && <CardBusdValue value={getCakeBusdValue(threeMatchesAmount)} />}\n        </RightAlignedText>\n      </GridItem>\n       {/* 3 matches row */}\n       <GridItem style={{ textShadow: 'rgb(255 214 0) 0px 0px 25px' }}>\n        <Text bold>3</Text>\n      </GridItem>\n      {pastDraw && (\n        <PastDrawGridItem>\n          <RightAlignedText bold>{threeTicketMatches}</RightAlignedText>\n        </PastDrawGridItem>\n      )}\n      <GridItem>\n        <RightAlignedText>\n          {threeMatchesAmount.toLocaleString()}\n          {!pastDraw && !cakeBusdPrice.eq(0) && <CardBusdValue value={getCakeBusdValue(threeMatchesAmount)} />}\n        </RightAlignedText>\n      </GridItem>\n      {/* 2 matches row */}\n      <GridItem style={{ textShadow: 'rgb(255 214 0) 0px 0px 25px' }}>\n        <Text>2</Text>\n      </GridItem>\n      {pastDraw && (\n        <PastDrawGridItem>\n          <RightAlignedText>{twoTicketMatches}</RightAlignedText>\n        </PastDrawGridItem>\n      )}\n      <GridItem>\n        <RightAlignedText>\n          {twoMatchesAmount.toLocaleString()}\n          {!pastDraw && !cakeBusdPrice.eq(0) && <CardBusdValue value={getCakeBusdValue(twoMatchesAmount)} />}\n        </RightAlignedText>\n      </GridItem>\n      {/* 2 matches row */}\n      <GridItem style={{ textShadow: 'rgb(255 214 0) 0px 0px 25px' }}>\n        <Text>1</Text>\n      </GridItem>\n      {pastDraw && (\n        <PastDrawGridItem>\n          <RightAlignedText>{twoTicketMatches}</RightAlignedText>\n        </PastDrawGridItem>\n      )}\n      <GridItem>\n        <RightAlignedText>\n          {twoMatchesAmount.toLocaleString()}\n          {!pastDraw && !cakeBusdPrice.eq(0) && <CardBusdValue value={getCakeBusdValue(twoMatchesAmount)} />}\n        </RightAlignedText>\n      </GridItem>\n      {/* Burn row */}\n      <GridItem marginBottom=\"0\">\n        <Text>{TranslateString(999, `${pastDraw ? 'Burned' : 'To burn'}`)}:</Text>\n      </GridItem>\n      {pastDraw ? (\n        <>\n          <GridItem marginBottom=\"0\" />\n          <GridItem marginBottom=\"0\">\n            <RightAlignedText>{burnAmount.toLocaleString()}</RightAlignedText>\n          </GridItem>\n        </>\n      ) : (\n        <GridItem marginBottom=\"0\">\n          <RightAlignedText>{burnAmount.toLocaleString()}</RightAlignedText>\n        </GridItem>\n      )}\n    </Grid>\n  )\n}\n\nexport default PrizeGrid\n","import React, { useContext, useState } from 'react'\nimport styled from 'styled-components'\nimport { useWeb3React } from '@web3-react/core'\nimport { Heading, Card, CardBody, CardFooter, Text, PancakeRoundIcon, Flex, Skeleton } from '@luckyswap/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport useI18n from 'hooks/useI18n'\nimport { useTotalRewards } from 'hooks/useTickets'\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\nimport ExpandableSectionButton from 'components/ExpandableSectionButton/ExpandableSectionButton'\nimport { BigNumber } from 'bignumber.js'\nimport { usePriceLuckyBusd } from 'state/hooks'\nimport PrizeGrid from '../PrizeGrid'\nimport CardBusdValue from '../../../Home/components/CardBusdValue'\n\n// const Container = styled.div`\n//   margin-left: auto;\n//   margin-right: auto;\n//   max-width: 1200px;\n//   margin-bottom: 30px;\n// `\n\nconst BoxTotal = styled.div`\n  background: linear-gradient(45deg, rgb(35 35 35) 30%, rgb(45 45 45) 100%);\n  box-shadow: 0px 0px 11px 0px rgb(16 16 16 / 57%);\n  color: #ffffff;\n  overflow: hidden;\n  position: relative;\n  width: 100%;\n  margin-bottom: 20px;\n  display: grid;\n  grid-template-columns: 1fr;\n\n  @media (min-width: 991px) {\n    grid-template-columns: 1fr 1fr;\n    margin: 0 auto 60px;\n  }\n`\n\nconst CardHeading = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n`\n\nconst Right = styled.div`\n  display: flex;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    display: none;\n  }\n`\n\nconst Left = styled.div`\n  display: flex;\n`\n\nconst IconWrapper = styled.div`\n  margin-right: 16px;\n  svg {\n    width: 48px;\n    height: 48px;\n  }\n`\n\nconst PrizeCountWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst ExpandingWrapper = styled.div<{ showFooter: boolean }>`\n  height: ${(props) => (props.showFooter ? '100%' : '0px')};\n  padding: 15px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    height: 100%;\n  }\n`\nconst CardBodyNew = styled.div`\n  background-color: rgba(255, 255, 255, 0.1);\n  border: 0.0625rem solid rgba(255, 255, 255, 0.2);\n  border-radius: 1.25rem;\n  padding: 24px;\n`\n\nconst BoxLucky = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  align-items: center;\n  padding: 15px 0 5px;\n\n  h2 {\n    font-size: 44px;\n    position: relative;\n    color: #f3c111;\n    font-weight: 700;\n  }\n\n  span {\n    font-size: 16px;\n    position: absolute;\n    top: 0;\n  }\n`\n\nconst Dollar = styled.div`\n  padding-left: 60px;\n`\n\nconst TotalPrizesCard = () => {\n  const TranslateString = useI18n()\n  const { account } = useWeb3React()\n  const [showFooter, setShowFooter] = useState(false)\n  const lotteryPrizeAmount = +getBalanceNumber(useTotalRewards()).toFixed(0)\n  const lotteryPrizeAmountBusd = new BigNumber(lotteryPrizeAmount).multipliedBy(usePriceLuckyBusd()).toNumber()\n  const lotteryPrizeWithCommaSeparators = lotteryPrizeAmount.toLocaleString()\n  const { currentLotteryNumber } = useContext(PastLotteryDataContext)\n\n  return (\n    <BoxTotal>\n      <CardBody>\n        {account && (\n          <Flex mb=\"16px\" alignItems=\"center\" justifyContent=\"space-between\" style={{ height: '20px' }}>\n            {currentLotteryNumber === 0 && <Skeleton height={20} width={56} />}\n            <>\n              <Text fontSize=\"12px\" style={{ fontWeight: 600 }}>\n                {TranslateString(720, `Round #${currentLotteryNumber}`, { num: currentLotteryNumber })}\n              </Text>\n            </>\n            {/* {currentLotteryNumber > 0 && (\n                <>\n                  <Text fontSize=\"12px\" style={{ fontWeight: 600 }}>\n                    {TranslateString(720, `Round #${currentLotteryNumber}`, { num: currentLotteryNumber })}\n                  </Text>\n                </>\n              )} */}\n          </Flex>\n        )}\n\n        <CardHeading>\n          <Left>\n            <PrizeCountWrapper>\n              <Text fontSize=\"24px\" fontWeight=\"500\" color=\"textSubtle\">\n                {TranslateString(722, 'Total Pot:')}\n              </Text>\n              <BoxLucky>\n                <IconWrapper>\n                  <img width=\"55px\" alt=\"\" src=\"/images/icon-logo-y.png\" />\n                </IconWrapper>\n                <Heading style={{ textShadow: 'rgb(255 214 0) 0px 0px 25px', fontSize: '44' }} size=\"lg\">\n                  {lotteryPrizeWithCommaSeparators} <span>LUCKY</span>\n                </Heading>\n              </BoxLucky>\n              <Dollar>{lotteryPrizeAmountBusd !== 0 && <CardBusdValue value={lotteryPrizeAmountBusd} />}</Dollar>\n            </PrizeCountWrapper>\n          </Left>\n          <Right>\n            <ExpandableSectionButton onClick={() => setShowFooter(!showFooter)} expanded={showFooter} />\n          </Right>\n        </CardHeading>\n      </CardBody>\n      <ExpandingWrapper showFooter={showFooter}>\n        <CardFooter className=\"no-border\">\n          <PrizeGrid lotteryPrizeAmount={lotteryPrizeAmount} />\n        </CardFooter>\n      </ExpandingWrapper>\n    </BoxTotal>\n  )\n}\n\nexport default TotalPrizesCard\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Loading: React.FC = () => <StyledLoading />\n\nconst StyledLoading = styled.div`\n  border: 8px solid #f3f3f3;\n  border-radius: 50%;\n  border-top: 8px solid #ddd;\n  border-bottom: 8px solid #ddd;\n  width: 20px;\n  height: 20px;\n  -webkit-animation: spin 2s linear infinite;\n  animation: spin 2s linear infinite;\n  @-webkit-keyframes spin {\n    0% {\n      -webkit-transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`\n\nexport default Loading\n","import React, { useCallback } from 'react'\nimport { Button, Modal } from '@luckyswap/uikit'\nimport styled from 'styled-components'\nimport { useWinningNumbers } from 'hooks/useTickets'\nimport useI18n from 'hooks/useI18n'\n\ninterface UserTicketsModalProps {\n  myTicketNumbers: Array<any>\n  from?: string\n  onDismiss?: () => void\n}\n\nconst UserTicketsModal: React.FC<UserTicketsModalProps> = ({ myTicketNumbers, onDismiss, from }) => {\n  const winNumbers = useWinningNumbers()\n  const TranslateString = useI18n()\n  const rewardMatch = useCallback(\n    (number) => {\n      let n = 0\n      for (let i = winNumbers.length - 1; i >= 0; i--) {\n        // eslint-disable-next-line eqeqeq\n        if (winNumbers[i] == number[i]) n++\n      }\n      return n\n    },\n    [winNumbers],\n  )\n\n  const listItems = myTicketNumbers.map((number, index) => {\n    if (rewardMatch(number[0]) > 1 && from !== 'buy') {\n      const emoji = new Array(rewardMatch(number[0]) + 1).join('🤑')\n      return (\n        // eslint-disable-next-line react/no-array-index-key\n        <RewardP key={index}>\n          {emoji}\n          {number.toString()}\n          {emoji}\n        </RewardP>\n      )\n    }\n    // eslint-disable-next-line react/no-array-index-key\n    return (\n      <p style={{ color: 'yellow' }} key={index}>\n        {number.toString()}\n      </p>\n    )\n  })\n\n  return (\n    <Modal\n      title={TranslateString(490, `My Tickets (Total: ${myTicketNumbers.length})`, { TICKETS: myTicketNumbers.length })}\n      onDismiss={onDismiss}\n    >\n      <TicketsList>\n        <h2>{listItems}</h2>\n      </TicketsList>\n      <StyledButton variant=\"secondary\" onClick={onDismiss}>\n        {TranslateString(438, 'Close')}\n      </StyledButton>\n    </Modal>\n  )\n}\n\nconst RewardP = styled.div`\n  color: #ff8c28;\n`\n\nconst TicketsList = styled.div`\n  text-align: center;\n  overflow-y: auto;\n  max-height: 400px;\n  color: ${(props) => props.theme.colors.primary};\n`\n\nconst StyledButton = styled(Button)`\n  margin-top: ${(props) => props.theme.spacing[2]}px;\n`\n\nexport default UserTicketsModal\n","import React, { useCallback, useState } from 'react'\nimport styled from 'styled-components'\nimport { Button, Heading, Won, useModal } from '@luckyswap/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useMultiClaimLottery } from 'hooks/useBuyLottery'\nimport useTickets, { useTotalClaim } from 'hooks/useTickets'\nimport { useTransactionAdder } from 'state/transactions/hooks'\nimport Loading from '../Loading'\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\n\nconst WinningsWrapper = styled.div`\n  display: flex;\n  align-items: baseline;\n`\n\nconst IconWrapper = styled.div`\n  margin-bottom: 16px;\n\n  svg {\n    width: 80px;\n    height: 80px;\n  }\n`\n\nconst StyledCardActions = styled.div`\n  margin-top: ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledCardContentInner = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: space-between;\n`\n\nconst StyledButton = styled(Button)`\n  margin-top: ${(props) => props.theme.spacing[1]}px;\n`\n\nconst PrizesWonContent: React.FC = () => {\n  const [requestedClaim, setRequestedClaim] = useState(false)\n  const TranslateString = useI18n()\n  const { claimLoading, claimAmount } = useTotalClaim()\n  const { onMultiClaim } = useMultiClaimLottery()\n  const tickets = useTickets()\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\n  const addTransaction = useTransactionAdder()\n\n  const handleClaim = useCallback(async () => {\n    try {\n      setRequestedClaim(true)\n      const txHash = await onMultiClaim()\n      addTransaction(txHash, {\n        summary: 'Claim successfully!',\n      })\n      // user rejected tx or didn't go thru\n      if (txHash) {\n        setRequestedClaim(false)\n      }\n    } catch (e) {\n      console.error(e)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [onMultiClaim, setRequestedClaim])\n\n  const winnings = getBalanceNumber(claimAmount).toFixed(2)\n\n  return (\n    <StyledCardContentInner>\n      <IconWrapper>\n        <img src=\"images/icon-gif.svg\" alt=\"gif\" />\n      </IconWrapper>\n      <Heading as=\"h3\" size=\"lg\" color=\"#1CFFBB\">\n        {TranslateString(660, 'You won!')}\n      </Heading>\n      {claimLoading && <Loading />}\n      {!claimLoading && (\n        <>\n          <WinningsWrapper>\n            <Heading as=\"h4\" size=\"xl\" style={{ marginRight: '6px' }}>\n              {winnings}\n            </Heading>\n            <Heading as=\"h4\" size=\"lg\">\n              LUCKY\n            </Heading>\n          </WinningsWrapper>\n        </>\n      )}\n      <StyledCardActions>\n        <Button\n          className=\"border-yellow\"\n          variant=\"secondary\"\n          width=\"100%\"\n          disabled={requestedClaim}\n          onClick={handleClaim}\n        >\n          {TranslateString(1056, 'Collect')}\n        </Button>\n      </StyledCardActions>\n      <StyledButton variant=\"text\" onClick={onPresentMyTickets}>\n        {TranslateString(432, 'View your tickets')}\n      </StyledButton>\n    </StyledCardContentInner>\n  )\n}\n\nexport default PrizesWonContent\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Button, useModal } from '@luckyswap/uikit'\nimport useI18n from 'hooks/useI18n'\nimport useTickets from 'hooks/useTickets'\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\n\nconst Wrapper = styled.div`\n  display: flex;\n`\n\nconst TextWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst StyledText = styled(Text)`\n  padding-left: 12px;\n`\n\nconst Image = styled.img`\n  margin-right: 6px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    margin-right: 20px;\n  }\n`\nconst StyledButton = styled(Button)`\n  padding: 0 12px;\n  height: unset;\n`\n\nconst NoPrizesContent: React.FC = () => {\n  const TranslateString = useI18n()\n  const tickets = useTickets()\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\n\n  return (\n    <Wrapper>\n      <Image src=\"/images/no-prize.svg\" alt=\"no prizes won\" />\n      <TextWrapper>\n        <StyledText>{TranslateString(726, 'Sorry, no prizes to collect')}</StyledText>\n        <StyledButton variant=\"text\" onClick={onPresentMyTickets}>\n          {TranslateString(432, 'View your tickets and NFTs')}\n        </StyledButton>\n      </TextWrapper>\n    </Wrapper>\n  )\n}\n\nexport default NoPrizesContent\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card, CardBody } from '@luckyswap/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useTotalClaim } from 'hooks/useTickets'\nimport PrizesWonContent from './PrizesWonContent'\nimport NoPrizesContent from './NoPrizesContent'\n\nconst StyledCard = styled(Card)`\n  margin: 0 !important;\n  max-width: 100% !important;\n  border-radius: 14px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  ${(props) =>\n    props.isDisabled\n      ? `  \n        margin-top: 0;\n        background-color: unset;\n        box-shadow: unset;\n        border: 1px solid ${props.theme.colors.textDisabled};\n\n        ${props.theme.mediaQueries.sm} {\n          margin-top: 0;\n        }\n\n        ${props.theme.mediaQueries.lg} {\n          margin-top: 0;\n        }\n        `\n      : ``}\n`\n\nconst YourPrizesCard: React.FC = () => {\n  const { claimAmount } = useTotalClaim()\n\n  const winnings = getBalanceNumber(claimAmount)\n  const isAWin = winnings > 0\n\n  return (\n    <StyledCard isDisabled={!isAWin} isActive={isAWin}>\n      <CardBody>{isAWin ? <PrizesWonContent /> : <NoPrizesContent />}</CardBody>\n    </StyledCard>\n  )\n}\n\nexport default YourPrizesCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Card, CardBody, Ticket } from '@luckyswap/uikit'\nimport useI18n from 'hooks/useI18n'\nimport UnlockButton from 'components/UnlockButton'\n\nconst StyledCardBody = styled(CardBody)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`\n\nconst StyledHeading = styled(Heading)`\n  margin: 16px 0;\n`\n\nconst IconWrapper = styled.div`\n  svg {\n    width: 80px;\n    height: 80px;\n  }\n`\n\nconst UnlockWalletCard = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <Card isActive>\n      <StyledCardBody>\n        <IconWrapper>\n          <img src=\"https://merlinlab.com/assets/lottery/lottery.svg\" alt=\"\" />\n        </IconWrapper>\n        <StyledHeading size=\"md\">{TranslateString(1080, 'Unlock wallet to access lottery')}</StyledHeading>\n        <UnlockButton />\n      </StyledCardBody>\n    </Card>\n  )\n}\n\nexport default UnlockWalletCard\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { Button, Modal } from '@luckyswap/uikit'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport TicketInput from 'components/TicketInput'\nimport ModalActions from 'components/ModalActions'\nimport { useMultiBuyLottery, useMaxNumber } from 'hooks/useBuyLottery'\nimport useI18n from 'hooks/useI18n'\nimport { LOTTERY_MAX_NUMBER_OF_TICKETS, LOTTERY_TICKET_PRICE } from 'config'\nimport { useWeb3React } from '@web3-react/core'\nimport { useContract, useLotteryV2Contract } from 'hooks/useContract'\nimport { getLotteryAddress } from 'utils/addressHelpers'\nimport lotteryAbi from 'config/abi/lottery.json'\nimport { useTransactionAdder } from 'state/transactions/hooks'\n\ninterface BuyTicketModalProps {\n  max: BigNumber\n  onConfirm?: (amount: string, numbers: Array<number>) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst BuyTicketModal: React.FC<BuyTicketModalProps> = ({ max, onDismiss }) => {\n  const [val, setVal] = useState('1')\n  const [pendingTx, setPendingTx] = useState(false)\n  const [, setRequestedBuy] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max, 18)\n  }, [max])\n  const maxTickets = useMemo(() => {\n    return parseInt(getFullDisplayBalance(max.div(LOTTERY_TICKET_PRICE)), 10)\n  }, [max])\n\n  // const {\n  //   maxNumberTicketsPerBuyOrClaim,\n  //   currentLotteryId,\n  //   currentRound: {\n  //     priceTicketInCake,\n  //     discountDivisor,\n  //     userTickets: { tickets: userCurrentTickets },\n  //   },\n  // } = useLottery()\n\n  const handleChange = (e: React.FormEvent<HTMLInputElement>) => setVal(e.currentTarget.value)\n\n  const { onMultiBuy } = useMultiBuyLottery()\n  const maxNumber = useMaxNumber()\n  const lotteryContract = useContract(getLotteryAddress(), lotteryAbi)\n  const lotteryV2Contract = useLotteryV2Contract()\n\n  const addTransaction = useTransactionAdder()\n\n  const handleBuy = useCallback(async () => {\n    try {\n      setRequestedBuy(true)\n      const length = parseInt(val)\n      // @ts-ignore\n      // eslint-disable-next-line prefer-spread\n      const numbers = Array.apply(null, { length }).map(() => [\n        Math.floor(Math.random() * maxNumber) + 1,\n        Math.floor(Math.random() * maxNumber) + 1,\n        Math.floor(Math.random() * maxNumber) + 1,\n        Math.floor(Math.random() * maxNumber) + 1,\n      ])\n      // await onMultiBuy(LOTTERY_TICKET_PRICE.toString(), numbers)\n      const txHash = await lotteryContract\n        .multiBuy(new BigNumber(LOTTERY_TICKET_PRICE.toString()).times(new BigNumber(10).pow(18)).toString(), numbers)\n        .then((response) => {\n          addTransaction(response, {\n            summary: 'Buy ticket successfully!',\n          })\n        })\n      // user rejected tx or didn't go thru\n      if (txHash) {\n        setRequestedBuy(false)\n      }\n    } catch (e) {\n      console.error(e)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [onMultiBuy, setRequestedBuy, maxNumber, val])\n\n  // const handleBuy = useCallback(async () => {\n  //   const ticketsForPurchase = getTicketsForPurchase()\n  //   return lotteryContract.buyTickets(currentLotteryId, ticketsForPurchase)\n  // }, [lotteryContract])\n\n  const handleSelectMax = useCallback(() => {\n    if (Number(maxTickets) > LOTTERY_MAX_NUMBER_OF_TICKETS) {\n      setVal(LOTTERY_MAX_NUMBER_OF_TICKETS.toString())\n    } else {\n      setVal(maxTickets.toString())\n    }\n  }, [maxTickets])\n\n  const cakeCosts = (amount: string): number => {\n    return +amount * LOTTERY_TICKET_PRICE\n  }\n  return (\n    <Modal title={TranslateString(450, 'Enter amount of tickets to buy')} onDismiss={onDismiss}>\n      <TicketInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol=\"TICKET\"\n        availableSymbol=\"LUCKY\"\n      />\n      <div>\n        <Tips>{TranslateString(999, `1 Ticket = ${LOTTERY_TICKET_PRICE} LUCKY`, { num: LOTTERY_TICKET_PRICE })}</Tips>\n      </div>\n      <div>\n        <Announce>\n          {TranslateString(\n            478,\n            'Ticket purchases are final. Your LUCKY cannot be returned to you after buying tickets.',\n          )}\n        </Announce>\n        <Final>{TranslateString(460, `You will spend: ${cakeCosts(val)} LUCKY`)}</Final>\n      </div>\n      <ModalActions>\n        <Button width=\"100%\" variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          id=\"lottery-buy-complete\"\n          width=\"100%\"\n          variant=\"secondary\"\n          disabled={\n            pendingTx ||\n            parseInt(val) > Number(maxTickets) ||\n            parseInt(val) > LOTTERY_MAX_NUMBER_OF_TICKETS ||\n            parseInt(val) < 1\n          }\n          onClick={async () => {\n            setPendingTx(true)\n            await handleBuy()\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default BuyTicketModal\n\nconst Tips = styled.div`\n  margin-left: 0.4em;\n  font-size: 14px;\n  font-weight: 600;\n  color: ${(props) => props.theme.colors.primary};\n`\n\nconst Final = styled.div`\n  margin-top: 1em;\n  text-align: center;\n  font-size: 20px;\n  font-weight: 600;\n  color: ${(props) => props.theme.colors.primary};\n`\nconst Announce = styled.div`\n  margin-top: 1em;\n  margin-left: 0.4em;\n  color: #fff;\n`\n","import React from 'react'\nimport { Button, Modal } from '@luckyswap/uikit'\nimport ModalActions from 'components/ModalActions'\nimport styled from 'styled-components'\nimport useI18n from 'hooks/useI18n'\n\nconst WarningModal: React.FC<{ onDismiss?: () => void }> = ({ onDismiss }) => {\n  const TranslateString = useI18n()\n\n  return (\n    <Modal title={TranslateString(466, 'Warning')} onDismiss={onDismiss}>\n      <TicketsList>\n        {TranslateString(468, 'Lottery ticket purchases are final.')}\n        <br />\n        {TranslateString(470, 'Your CAKE will not be returned to you after you spend it to buy tickets.')}\n        <br />\n        {TranslateString(472, 'Tickets are only valid for one lottery draw, and will be burned after the draw.')}\n        <br />\n        {TranslateString(\n          474,\n          'Buying tickets does not guarantee you will win anything. Please only participate once you understand the risks.',\n        )}\n      </TicketsList>\n      <ModalActions>\n        <Button width=\"100%\" onClick={onDismiss}>\n          {TranslateString(476, 'I understand')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nconst TicketsList = styled.div`\n  text-align: left;\n  overflow-y: auto;\n  max-height: 400px;\n  color: ${(props) => props.theme.colors.primary};\n`\n\nexport default WarningModal\n","import React, { useMemo, useCallback, useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { AutoRenewIcon, Button, useModal } from '@luckyswap/uikit'\nimport useI18n from 'hooks/useI18n'\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { useContract, useLotteryV2Contract } from 'hooks/useContract'\nimport { useApproveCallbackCustom } from 'hooks/useApproveCallback'\nimport { XLUCKY_TESTNET_ADDRESSES } from 'config'\nimport bep20Abi from 'config/abi/erc20.json'\nimport lotteryAbi from 'config/abi/lottery.json'\nimport useRefresh from 'hooks/useRefresh'\nimport { getLotteryAddress, getLotteryTicketAddress } from 'utils/addressHelpers'\nimport lotteryTicketAbi from 'config/abi/lotteryNft.json'\nimport { isTransactionRecent, useAllTransactions } from 'state/transactions/hooks'\nimport { TransactionDetails } from 'state/transactions/reducer'\nimport { getTickets } from 'utils/lotteryUtils'\nimport BuyTicketModal from './BuyTicketModal'\nimport MyTicketsModal from './UserTicketsModal'\nimport PurchaseWarningModal from './PurchaseWarningModal'\n\n// we want the latest one to come first, so return negative if a is after b\nfunction newTransactionsFirst(a: TransactionDetails, b: TransactionDetails) {\n  return b.addedTime - a.addedTime\n}\n\nconst spinnerIcon = <AutoRenewIcon spin color=\"currentColor\" />\n\nconst CardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: ${(props) => props.theme.spacing[3]}px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    justify-content: space-between;\n  }\n`\n\n// long dep trai view tickets\nconst TicketCard: React.FC = () => {\n  const TranslateString = useI18n()\n  const [balanceToken, setBalanceToken] = useState(0)\n  const [tickets, setTickets] = useState([])\n  const [allowance, setAllowance] = useState(0)\n  // const allowance = useLotteryAllowance()\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\n\n  const { account, chainId } = useWeb3React()\n  const contractBEP20 = useContract(XLUCKY_TESTNET_ADDRESSES[chainId], bep20Abi)\n\n  const useContractTemp = useContract(XLUCKY_TESTNET_ADDRESSES[chainId], bep20Abi)\n\n  const lotteryV2Contract = useLotteryV2Contract()\n\n  const ticketsContract = useContract(getLotteryTicketAddress(), lotteryTicketAbi)\n  const lotteryContract = useContract(getLotteryAddress(), lotteryAbi)\n  const { fastRefresh } = useRefresh()\n\n  const ticketsLength = tickets.length\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\n  const [onPresentApprove] = useModal(<PurchaseWarningModal />)\n  const [onPresentBuy] = useModal(<BuyTicketModal max={new BigNumber(balanceToken)} tokenName=\"CAKE\" />)\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await getTickets(lotteryContract, ticketsContract, account, null)\n      setTickets(res)\n    }\n\n    if (account && lotteryContract && ticketsContract) {\n      fetchBalance()\n    }\n  }, [account, lotteryContract, fastRefresh, ticketsContract])\n\n  useEffect(() => {\n    if (useContractTemp) {\n      useContractTemp\n        .balanceOf(account)\n        .then((data) => {\n          setBalanceToken(data.toString())\n        })\n        .catch((error) => console.log('lottery : ', error))\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [account])\n\n  useEffect(() => {\n    if (useContractTemp) {\n      useContractTemp\n        .balanceOf(account)\n        .then((data) => {\n          setBalanceToken(data.toString())\n        })\n        .catch((error) => console.log('lottery : ', error))\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [account, fastRefresh])\n\n  useEffect(() => {\n    const fetchApprovalData = async () => {\n      if (account && contractBEP20) {\n        try {\n          const response = await contractBEP20?.allowance?.(account, getLotteryAddress())\n          setAllowance(response.toString())\n        } catch (error) {\n          console.log(' error fetch approval data')\n        }\n      }\n    }\n\n    fetchApprovalData()\n  }, [account, contractBEP20])\n  const [requestedApproval, setRequestedApproval] = useState(false)\n\n  const [approval] = useApproveCallbackCustom(XLUCKY_TESTNET_ADDRESSES[chainId], getLotteryAddress())\n\n  async function onAttemptToApprove() {\n    return approval()\n  }\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      await onAttemptToApprove()\n    } catch (e) {\n      console.error(e)\n    }\n    /* eslint-disable react-hooks/exhaustive-deps */\n  }, [approval, setRequestedApproval])\n\n  const allTransactions = useAllTransactions()\n\n  const sortedRecentTransactions = useMemo(() => {\n    const txs = Object.values(allTransactions)\n    return txs.filter(isTransactionRecent).sort(newTransactionsFirst)\n  }, [allTransactions])\n\n  const getStatus = () => {\n    const pending = sortedRecentTransactions.filter((tx) => !tx.receipt).map((tx) => tx.hash)\n    return !!pending.length\n  }\n\n  const renderLotteryTicketButtons = () => {\n    if (allowance.toString() === '0') {\n      return (\n        <Dflex>\n          <Button className=\"bg-yellow\" width=\"100%\">\n            {TranslateString(432, 'Connect Wallet')}\n          </Button>\n          <Button\n            className=\"border-yellow\"\n            width=\"100%\"\n            disabled={requestedApproval || getStatus()}\n            onClick={handleApprove}\n          >\n            {getStatus() ? spinnerIcon : ''}\n            {TranslateString(494, 'View your tickets')}\n          </Button>\n        </Dflex>\n      )\n    }\n    return (\n      <>\n        <Button\n          style={{ marginRight: '8px' }}\n          width=\"100%\"\n          disabled={ticketsLength === 0}\n          variant=\"secondary\"\n          onClick={onPresentMyTickets}\n        >\n          {TranslateString(432, 'View your tickets')}\n        </Button>\n        <Button variant=\"secondary\" id=\"lottery-buy-start\" width=\"100%\" onClick={onPresentBuy}>\n          {getStatus() ? spinnerIcon : ''}\n          {TranslateString(430, 'Buy ticket')}\n        </Button>\n      </>\n    )\n  }\n\n  return (\n    <CardActions>\n      {!lotteryHasDrawn ? (\n        <Button disabled> {TranslateString(874, 'On sale soon')}</Button>\n      ) : (\n        renderLotteryTicketButtons()\n      )}\n    </CardActions>\n  )\n}\n\nconst Dflex = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-gap: 20px;\n  width: 100%;\n`\n\nexport default TicketCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card, CardBody, TicketRound, Text, Heading } from '@luckyswap/uikit'\nimport useI18n from 'hooks/useI18n'\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\nimport useTickets from 'hooks/useTickets'\nimport { useCurrentTime } from 'hooks/useTimer'\nimport TicketActions from './TicketActions'\nimport { getTicketSaleTime } from '../../helpers/CountdownHelpers'\n\ninterface CardProps {\n  isSecondCard?: boolean\n}\n\nconst StyledCard = styled(Card)<CardProps>`\n  margin: 0 !important;\n  max-width: 100% !important;\n  border-radius: 14px;\n\n  ${(props) =>\n    props.isSecondCard\n      ? `  \n        margin-top: 0;\n\n        ${props.theme.mediaQueries.sm} {\n          margin-top: 0;\n        }\n\n        ${props.theme.mediaQueries.lg} {\n          margin-top: 0;\n        }\n        `\n      : ``}\n`\n\nconst CardHeader = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n`\n\nconst IconWrapper = styled.div`\n  margin-bottom: 16px;\n  svg {\n    width: 48px;\n    height: 48px;\n  }\n`\n\nconst TicketCountWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 10px;\n`\n\nconst TicketCard: React.FC<CardProps> = ({ isSecondCard = false }) => {\n  const TranslateString = useI18n()\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\n\n  const tickets = useTickets()\n  const ticketsLength = tickets.length\n\n  const currentMillis = useCurrentTime()\n  const timeUntilTicketSale = lotteryHasDrawn && getTicketSaleTime(currentMillis)\n  // 12\n  return (\n    <StyledCard isSecondCard={isSecondCard}>\n      <CardBody>\n        <CardHeader>\n          <IconWrapper>\n            <img alt=\"\" src=\"../images/icon-lottery.svg\" />\n          </IconWrapper>\n          {lotteryHasDrawn ? (\n            <TicketCountWrapper>\n              <Text fontSize=\"20px\" color=\"textSubtle\">\n                {TranslateString(870, 'Your tickets for this round')}\n              </Text>\n              <Heading size=\"lg\" style={{ color: '#F3C111', fontSize: '30px' }}>\n                {timeUntilTicketSale}\n              </Heading>\n            </TicketCountWrapper>\n          ) : (\n            <TicketCountWrapper>\n              <Text fontSize=\"14px\" color=\"textSubtle\">\n                {TranslateString(724, 'Your tickets for this round')}\n              </Text>\n              <Heading size=\"lg\">{ticketsLength}</Heading>\n            </TicketCountWrapper>\n          )}\n        </CardHeader>\n        <TicketActions />\n      </CardBody>\n    </StyledCard>\n  )\n}\n\nexport default TicketCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Heading, Link, Image } from '@luckyswap/uikit'\nimport useI18n from 'hooks/useI18n'\n\nconst LayoutWrapper = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 1200px;\n  margin-bottom: 30px;\n  margin: 0 auto 40px;\n  display: flex;\n  flex-direction: column;\n  border-radius: 14px;\n  padding: 20px;\n  background-color: #2b2a2a;\n  text-align: center;\n`\n\nconst StyledHeading = styled(Heading)`\n  margin: 16px 0;\n`\n\nconst StyledImage = styled(Image)`\n  align-self: center;\n`\n\nconst StyledLink = styled(Link)`\n  align-self: center;\n  margin-top: 16px;\n  border: 1px solid #f3c111;\n  background-color: transparent;\n  color: #f3c111;\n  padding: 10px 20px;\n  border-radius: 14px;\n\n  &:hover {\n    color: #ecf023;\n  }\n`\n\nconst HowItWorks = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <LayoutWrapper>\n      <StyledHeading size=\"lg\" as=\"h3\" color=\"rgb(243, 193, 17)\">\n        {TranslateString(632, 'How it works')}\n      </StyledHeading>\n      <Text fontSize=\"16px\">\n        Spend LUCKY to buy tickets, contributing to the lottery pot.\n        <br /> Win prizes if 1, 2, 3, 4, 5 or 6 of your ticket numbers match the winning numbers and their exact order!\n      </Text>\n      <StyledLink href=\"https://docs.luckyswap.io\">{TranslateString(610, 'Read more')}</StyledLink>\n    </LayoutWrapper>\n  )\n}\nexport default HowItWorks\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Text, Input, Button } from '@luckyswap/uikit'\nimport useI18n from 'hooks/useI18n'\n\ninterface PastLotterySearcherProps {\n  initialLotteryNumber: number\n  onSubmit: (num: number) => void\n}\n\nconst Wrapper = styled.div`\n  margin-bottom: 24px;\n`\n\nconst SearchWrapper = styled.div`\n  position: relative;\n`\nconst InputWrapper = styled.div`\n  input::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n\n  /* Firefox */\n  input[type='number'] {\n    -moz-appearance: textfield;\n  }\n`\n\nconst ButtonWrapper = styled.div`\n  position: absolute;\n  right: 8px;\n  top: 50%;\n  transform: translate(0%, -50%);\n  width: auto;\n`\n\nconst PastLotterySearcher: React.FC<PastLotterySearcherProps> = ({ initialLotteryNumber, onSubmit }) => {\n  const [lotteryNumber, setLotteryNumber] = useState(initialLotteryNumber)\n  const [isError, setIsError] = useState(false)\n  const TranslateString = useI18n()\n\n  const handleSubmit = (evt: React.FormEvent<HTMLFormElement>) => {\n    evt.preventDefault()\n    onSubmit(0)\n  }\n\n  const handleChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\n    const value = parseInt(evt.currentTarget.value, 10)\n\n    // The max value will always be the initialLotteryNumber which equals\n    // the latest lottery round\n    setIsError(value > initialLotteryNumber)\n    setLotteryNumber(value)\n  }\n\n  return (\n    <Wrapper>\n      <Text>{TranslateString(742, 'Select lottery number:')}</Text>\n      <form onSubmit={handleSubmit}>\n        <SearchWrapper>\n          <InputWrapper>\n            <Input\n              value={lotteryNumber}\n              type=\"number\"\n              isWarning={isError}\n              max={initialLotteryNumber}\n              onChange={handleChange}\n            />\n          </InputWrapper>\n          <ButtonWrapper>\n            <Button variant=\"secondary\" type=\"submit\" scale=\"sm\" disabled={isError}>\n              {TranslateString(744, 'Search')}\n            </Button>\n          </ButtonWrapper>\n        </SearchWrapper>\n      </form>\n    </Wrapper>\n  )\n}\n\nexport default PastLotterySearcher\n","import React from 'react'\nimport { Text } from '@luckyswap/uikit'\n\ninterface PastRoundCardErrorProps {\n  error: {\n    message: string\n  }\n}\n\nconst PastRoundCardError: React.FC<PastRoundCardErrorProps> = ({ error }) => {\n  return <Text p=\"24px\">{error.message}</Text>\n}\n\nexport default PastRoundCardError\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Heading, Text } from '@luckyswap/uikit'\n\ninterface HeadingProps {\n  valueToDisplay?: string\n  children?: string\n  Icon?: React.ComponentType\n}\n\nconst IconWrapper = styled.div`\n  margin-right: 16px;\n\n  svg {\n    width: 48px;\n    height: 48px;\n  }\n`\n\nconst LotteryCardHeading: React.FC<HeadingProps> = ({ valueToDisplay, children, Icon, ...props }) => {\n  return (\n    <Flex {...props}>\n      {Icon && (\n        <IconWrapper>\n          <Icon />\n        </IconWrapper>\n      )}\n      <Flex className=\"box-lucky\" flexDirection=\"column\">\n        <Text fontSize=\"16px\" color=\"textSubtle\">\n          {children}\n        </Text>\n        <Heading size=\"lg\">{valueToDisplay}</Heading>\n      </Flex>\n    </Flex>\n  )\n}\n\nLotteryCardHeading.defaultProps = {\n  valueToDisplay: '',\n  Icon: () => <div />,\n  children: '',\n}\n\nexport default LotteryCardHeading\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button, LinkExternal, useModal } from '@luckyswap/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { useWeb3React } from '@web3-react/core'\nimport useTickets from 'hooks/useTickets'\nimport UnlockButton from 'components/UnlockButton'\nimport { SCAN_SITES } from '../../../../constants'\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\n\nconst Wrapper = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  padding-top: 24px;\n\n  & > div {\n    flex: 1;\n    width: 100%;\n  }\n`\n\nconst ExternalLinkWrap = styled(LinkExternal)`\n  align-items: center;\n  display: flex;\n  height: 48px;\n  justify-content: center;\n  text-decoration: none;\n  width: 100%;\n`\n\nconst TicketCard: React.FC<{ contractLink?: string; lotteryNumber?: number }> = ({ contractLink, lotteryNumber }) => {\n  const TranslateString = useI18n()\n  const tickets = useTickets(lotteryNumber)\n  const ticketsLength = tickets.length\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\n  const { account, chainId } = useWeb3React()\n\n  if (!account) {\n    return (\n      <Wrapper>\n        <UnlockButton />\n      </Wrapper>\n    )\n  }\n\n  return (\n    <Wrapper>\n      <div>\n        <Button   disabled={ticketsLength === 0} onClick={onPresentMyTickets} width=\"100%\">\n          {TranslateString(432, 'View your tickets')}\n        </Button>\n      </div>\n      <div>\n        <ExternalLinkWrap href={contractLink}>\n          {TranslateString(356, `View on ${SCAN_SITES[chainId]}`)}\n        </ExternalLinkWrap>\n      </div>\n    </Wrapper>\n  )\n}\n\nexport default TicketCard\n","const formatLotteryDate = (lotteryDate: string) => {\n  if (!lotteryDate) {\n    return {}\n  }\n\n  const date = new Date(lotteryDate)\n\n  const dateString = date.toDateString()\n  const hours = date.getUTCHours()\n  const monthAndDay = dateString.split(' ').splice(1, 2).join(' ')\n\n  return { hours, monthAndDay }\n}\n\nexport default formatLotteryDate\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text } from '@luckyswap/uikit'\nimport formatLotteryDate from '../helpers/formatLotteryDate'\n\nconst Wrapper = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n`\n\nconst Timestamp = ({ timeValue }) => {\n  const { monthAndDay, hours } = formatLotteryDate(timeValue)\n\n  return (\n    <Wrapper>\n      <Text fontSize=\"14px\">\n        {monthAndDay}, {hours}:00 UTC\n      </Text>\n    </Wrapper>\n  )\n}\n\nexport default Timestamp\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, CardBody, CardFooter, PancakeRoundIcon, TicketRound } from '@luckyswap/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { DataResponse } from 'utils/getLotteryRoundData'\nimport LotteryCardHeading from '../LotteryCardHeading'\nimport PastLotteryActions from './PastLotteryActions'\nimport PrizeGrid from '../PrizeGrid'\nimport Timestamp from '../Timestamp'\n\ninterface PastRoundCardDetailsProps {\n  data: DataResponse\n}\n\nconst CardHeading = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`\n\nconst TopLotteryCardHeading = styled(LotteryCardHeading)`\n  margin-bottom: ${(props) => props.theme.spacing[4]}px;\n`\n\nconst BoxCard = styled.div`\n  padding: 10px;\n`\n\nconst Dflex = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  align-items: center;\n`\n\nconst PastRoundCardDetails: React.FC<PastRoundCardDetailsProps> = ({ data }) => {\n  const TranslateString = useI18n()\n\n  const {\n    contractLink,\n    jackpotTicket,\n    lotteryDate,\n    lotteryNumber,\n    lotteryNumbers,\n    match1Ticket,\n    match2Ticket,\n    match3Ticket,\n    poolSize,\n  } = data\n\n  return (\n    !data.error &&\n    data && (\n      <>\n        <CardBody>\n          <CardHeading>\n            <Timestamp timeValue={lotteryDate} />\n            <Heading size=\"md\" mb=\"24px\">\n              Round #{lotteryNumber}\n            </Heading>\n            <TopLotteryCardHeading\n              valueToDisplay={`${lotteryNumbers[0]}, ${lotteryNumbers[1]}, ${lotteryNumbers[2]}, ${lotteryNumbers[3]}, 5, 8`}\n              // Icon={TicketRound}\n            >\n              {TranslateString(999, 'Winning numbers')}\n            </TopLotteryCardHeading>\n            <Dflex>\n              <img src=\"../images/icon-logo-y.png\" alt=\"\" />\n              <LotteryCardHeading valueToDisplay={TranslateString(999, `${poolSize.toLocaleString()}`)}>\n                {TranslateString(999, 'Total prizes')}\n              </LotteryCardHeading>\n            </Dflex>\n          </CardHeading>\n        </CardBody>\n        <BoxCard>\n          <CardFooter className=\"no-border\">\n            <PrizeGrid\n              lotteryPrizeAmount={poolSize}\n              jackpotMatches={jackpotTicket}\n              oneTicketMatches={match1Ticket}\n              twoTicketMatches={match2Ticket}\n              threeTicketMatches={match3Ticket}\n              pastDraw\n            />\n            <PastLotteryActions contractLink={contractLink} lotteryNumber={lotteryNumber} />\n          </CardFooter>\n        </BoxCard>\n      </>\n    )\n  )\n}\n\nexport default PastRoundCardDetails\n","import React from 'react'\nimport styled from 'styled-components'\n// import { Card } from '@luckyswap/uikit'\nimport { DataResponse } from 'utils/getLotteryRoundData'\nimport PastRoundCardError from './PastRoundCardError'\nimport PastRoundCardDetails from './PastRoundCardDetails'\n\ninterface PastRoundCardProps {\n  error: {\n    message: string\n  }\n  data: DataResponse\n}\n\nconst PastRoundCard: React.FC<PastRoundCardProps> = ({ error, data }) => {\n  return (\n    <FullWidth>{error.message ? <PastRoundCardError error={error} /> : <PastRoundCardDetails data={data} />}</FullWidth>\n  )\n}\n\nconst FullWidth = styled.div`\n  width: 100%;\n  background: linear-gradient(45deg, rgb(35 35 35) 30%, rgb(45 45 45) 100%);\n  box-shadow: none;\n  display: grid;\n  grid-template-columns: 1fr;\n  margin-bottom: 20px;\n  border-radius: 14px;\n\n  @media (min-width: 991px) {\n    grid-template-columns: 1fr 1fr;\n    margin-bottom: 30px;\n  }\n`\n\nexport default PastRoundCard\n","import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { Card, CardBody } from '@luckyswap/uikit'\nimport getLotteryRoundData from 'utils/getLotteryRoundData'\nimport useI18n from 'hooks/useI18n'\nimport useGetRecentLotteryRoundData from 'hooks/useGetRecentLotteryRoundData'\nimport PastLotterySearcher from './PastLotterySearcher'\nimport PastRoundCard from './PastRoundCard'\nimport Loading from '../Loading'\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst StyledCardBody = styled(CardBody)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 552px; // height of final card\n`\n\nconst PastLotteryRoundViewer = () => {\n  const [state, setState] = useState({\n    roundData: null,\n    error: { message: null, type: null },\n    isInitialized: false,\n    isLoading: true,\n  })\n  const { data: initialLotteryData, mostRecentLotteryNumber } = useGetRecentLotteryRoundData()\n  const TranslateString = useI18n()\n  const { roundData, error, isInitialized, isLoading } = state\n\n  useEffect(() => {\n    if (initialLotteryData) {\n      setState((prevState) => ({ ...prevState, isLoading: false, isInitialized: true, roundData: initialLotteryData }))\n    }\n  }, [initialLotteryData, setState])\n\n  const handleSubmit = async (lotteryNumber: number) => {\n    setState((prevState) => ({\n      ...prevState,\n      isLoading: true,\n    }))\n\n    getLotteryRoundData(lotteryNumber)\n      .then((data) => {\n        if (data.error) {\n          setState((prevState) => ({\n            ...prevState,\n            error: {\n              message: TranslateString(1076, 'The lottery number you provided does not exist'),\n              type: 'out of range',\n            },\n            isLoading: false,\n            isInitialized: true,\n          }))\n        } else {\n          setState((prevState) => ({\n            ...prevState,\n            error: { message: null, type: null },\n            roundData: data,\n            isLoading: false,\n            isInitialized: true,\n          }))\n        }\n      })\n      .catch(() => {\n        setState((prevState) => ({\n          ...prevState,\n          error: { message: TranslateString(1078, 'Error fetching data'), type: 'api' },\n          isLoading: false,\n          isInitialized: true,\n        }))\n      })\n  }\n\n  return (\n    <Wrapper>\n      <PastLotterySearcher initialLotteryNumber={mostRecentLotteryNumber} onSubmit={handleSubmit} />\n      {!isInitialized || isLoading ? (\n        <Card>\n          <StyledCardBody>\n            <Loading />\n          </StyledCardBody>\n        </Card>\n      ) : (\n        <PastRoundCard error={error} data={roundData} />\n      )}\n    </Wrapper>\n  )\n}\n\nexport default PastLotteryRoundViewer\n","import React, { lazy, Suspense, useContext } from 'react'\nimport styled from 'styled-components'\nimport { Text } from '@luckyswap/uikit'\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\nimport Loading from '../Loading'\n\nconst Line = lazy(() => import('./LineChartWrapper'))\n\nconst InnerWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n\nconst HistoryChart: React.FC = () => {\n  const { historyData, historyError } = useContext(PastLotteryDataContext)\n  const getDataArray = (kind) => {\n    return historyData\n      .map((dataPoint) => {\n        return dataPoint[kind]\n      })\n      .reverse()\n  }\n\n  const lineStyles = ({ color }) => {\n    return {\n      borderColor: color,\n      fill: false,\n      borderWidth: 2,\n      pointRadius: 0,\n      pointHitRadius: 10,\n    }\n  }\n\n  const chartData = {\n    labels: getDataArray('lotteryNumber'),\n    datasets: [\n      {\n        label: 'Pool Size',\n        data: getDataArray('poolSize'),\n        yAxisID: 'y-axis-pool',\n        ...lineStyles({ color: '#8F80BA' }),\n      },\n      {\n        label: 'Burned',\n        data: getDataArray('burned'),\n        yAxisID: 'y-axis-burned',\n        ...lineStyles({ color: '#2b2c3a' }),\n      },\n    ],\n  }\n\n  const axesStyles = ({ color, lineHeight }) => {\n    return {\n      borderCapStyle: 'round',\n      gridLines: { display: false },\n      ticks: {\n        fontFamily: 'Kanit, sans-serif',\n        fontColor: color,\n        fontSize: 14,\n        lineHeight,\n        maxRotation: 0,\n        beginAtZero: true,\n        autoSkipPadding: 15,\n        userCallback: (value) => {\n          return value.toLocaleString()\n        },\n      },\n    }\n  }\n\n  const options = {\n    legend: { display: false },\n    scales: {\n      yAxes: [\n        {\n          type: 'linear',\n          display: true,\n          position: 'left',\n          id: 'y-axis-pool',\n          ...axesStyles({ color: '#8f80ba', lineHeight: 1.6 }),\n        },\n        {\n          type: 'linear',\n          display: true,\n          position: 'right',\n          id: 'y-axis-burned',\n          ...axesStyles({ color: '#2b2c3a', lineHeight: 1.5 }),\n        },\n      ],\n      xAxes: [\n        {\n          ...axesStyles({ color: '#2b2c3a', lineHeight: 1 }),\n        },\n      ],\n    },\n  }\n\n  return (\n    <>\n      {historyError && (\n        <InnerWrapper>\n          <Text>Error fetching data</Text>\n        </InnerWrapper>\n      )}\n      {!historyError && historyData.length > 0 ? (\n        <Suspense fallback={<div>Loading...</div>}>\n          <Line data={chartData} options={options} type=\"line\" />\n        </Suspense>\n      ) : (\n        <InnerWrapper>\n          <Loading />\n        </InnerWrapper>\n      )}\n    </>\n  )\n}\n\nexport default HistoryChart\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text } from '@luckyswap/uikit'\nimport useI18n from 'hooks/useI18n'\n\nconst Wrapper = styled.div`\n  display: flex;\n  margin: 36px 0 28px;\n`\n\nconst LegendItem = styled.div`\n  display: flex;\n  margin-right: 18px;\n  align-items: center;\n`\n\nconst Circle = styled.div<{ isPoolSize?: boolean }>`\n  width: 20px;\n  height: 20px;\n  border-radius: 10px;\n  background-color: ${({ isPoolSize, theme }) => theme.colors[isPoolSize ? 'textSubtle' : 'primary']};\n  margin-right: 6px;\n`\n\nconst Legend = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <Wrapper>\n      <LegendItem>\n        <Circle isPoolSize />\n        <Text>{TranslateString(748, 'Pool Size')}</Text>\n      </LegendItem>\n      <LegendItem>\n        <Circle />\n        <Text>{TranslateString(750, 'Burned')}</Text>\n      </LegendItem>\n    </Wrapper>\n  )\n}\n\nexport default Legend\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Card, CardBody } from '@luckyswap/uikit'\nimport useI18n from 'hooks/useI18n'\nimport HistoryChart from './HistoryChart'\nimport Legend from './Legend'\n\nconst PastDrawsHistoryCard: React.FC = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <FullWidth>\n      <CardBody>\n        <Heading size=\"md\">{TranslateString(746, 'History')}</Heading>\n        <Legend />\n        <HistoryChart />\n      </CardBody>\n    </FullWidth>\n  )\n}\n\nconst FullWidth = styled(Card)`\n  max-width: 100%;\n  background: linear-gradient(45deg, rgb(35 35 35) 30%, rgb(45 45 45) 100%);\n  box-shadow: none;\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  margin-bottom: 60px;\n  border-radius: 14px;\n`\n\nexport default PastDrawsHistoryCard\n","import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { ButtonMenu, ButtonMenuItem } from '@luckyswap/uikit'\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\nimport { getLotteryIssueIndex } from 'utils/lotteryUtils'\nimport useI18n from 'hooks/useI18n'\nimport Page from 'components/layout/Page'\nimport { useLottery, useContract } from 'hooks/useContract'\nimport { getLotteryAddress } from 'utils/addressHelpers'\nimport lotteryAbi from 'config/abi/lottery.json'\n\nimport { useWeb3React } from '@web3-react/core'\nimport { useTotalClaim } from 'hooks/useTickets'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport Hero from './components/Hero'\nimport WinningNumbers from './components/WinningNumbers'\nimport TotalPrizesCard from './components/TotalPrizesCard'\nimport YourPrizesCard from './components/YourPrizesCard'\nimport UnlockWalletCard from './components/UnlockWalletCard'\nimport TicketCard from './components/TicketCard'\nimport HowItWorks from './components/HowItWorks'\nimport PastLotteryRoundViewer from './components/PastLotteryRoundViewer'\n// import { BaseLayout } from '@luckyswap/uikit'\nimport PastDrawsHistoryCard from './components/PastDrawsHistory/PastDrawsHistoryCard'\nimport Divider from './components/Divider'\nimport NextDrawPage from './NextDrawPage'\nimport PastDrawsPage from './PastDrawsPage'\n\nconst Wrapper = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 32px;\n`\n\nconst SecondCardColumnWrapper = styled.div<{ isAWin?: boolean }>`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-gap: 40px;\n  margin-bottom: 30px;\n\n  @media (min-width: 991px) {\n    grid-template-columns: 1fr 1fr;\n  }\n`\n\nconst Dflex = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-gap: 40px;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 1200px;\n  margin-bottom: 30px;\n`\n\nconst BoxImg = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  img {\n    width: 100%;\n    max-width: 750px;\n  }\n`\n\nconst Lottery: React.FC = () => {\n  const lotteryContract = useContract(getLotteryAddress(), lotteryAbi)\n\n  const TranslateString = useI18n()\n  const [activeIndex, setActiveIndex] = useState(0)\n  const [historyData, setHistoryData] = useState([])\n  const [historyError, setHistoryError] = useState(false)\n  const [currentLotteryNumber, setCurrentLotteryNumber] = useState(0)\n  const [mostRecentLotteryNumber, setMostRecentLotteryNumber] = useState(1)\n\n  const { account } = useWeb3React()\n  const { claimAmount } = useTotalClaim()\n  const winnings = getBalanceNumber(claimAmount)\n  const isAWin = winnings > 0\n\n  useEffect(() => {\n    fetch(`https://api.pancakeswap.com/api/lotteryHistory`)\n      .then((response) => response.json())\n      .then((data) => setHistoryData(data))\n      .catch(() => {\n        setHistoryError(true)\n      })\n  }, [])\n\n  useEffect(() => {\n    const getInitialLotteryIndex = async () => {\n      const index = await getLotteryIssueIndex(lotteryContract)\n      const previousLotteryNumber = index - 1\n\n      setCurrentLotteryNumber(index)\n      setMostRecentLotteryNumber(previousLotteryNumber)\n    }\n\n    if (lotteryContract) {\n      getInitialLotteryIndex()\n    }\n  }, [lotteryContract])\n\n  const handleClick = (index) => {\n    setActiveIndex(index)\n  }\n\n  return (\n    <>\n      <Page>\n        {/* <BoxImg>\n          <img src=\"../images/coming-soon-lot.png\" alt=\"\"/>\n        </BoxImg> */}\n         <Hero />\n        <TotalPrizesCard />\n        <SecondCardColumnWrapper isAWin={isAWin}>\n          {!account ? (\n            <UnlockWalletCard />\n          ) : (\n            <>\n              <TicketCard isSecondCard={isAWin} />\n              <YourPrizesCard />\n            </>\n          )}\n        </SecondCardColumnWrapper>\n        <WinningNumbers />\n        <HowItWorks />\n        <PastLotteryRoundViewer />\n        <PastDrawsHistoryCard /> \n\n        {/* <Wrapper>\n          <ButtonMenu activeIndex={activeIndex} onItemClick={handleClick} scale=\"sm\" variant=\"subtle\">\n            <ButtonMenuItem>{TranslateString(716, 'Next draw')}</ButtonMenuItem>\n            <ButtonMenuItem>{TranslateString(718, 'Past draws')}</ButtonMenuItem>\n          </ButtonMenu>\n        </Wrapper>\n        <Divider />\n        <PastLotteryDataContext.Provider\n          value={{ historyError, historyData, mostRecentLotteryNumber, currentLotteryNumber }}\n        >\n          {activeIndex === 0 ? <NextDrawPage /> : <PastDrawsPage />}\n        </PastLotteryDataContext.Provider> */}\n      </Page>\n    </>\n  )\n}\n\nexport default Lottery\n"],"sourceRoot":""}
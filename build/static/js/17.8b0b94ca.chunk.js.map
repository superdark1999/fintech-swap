{"version":3,"sources":["views/Staking/Components/Alert.tsx","components/UnlockButton.tsx","state/poolsNft/fetchPoolInfo.ts","components/Spacer/Spacer.tsx","components/ModalActions/ModalActions.tsx","components/ExpandableSectionButton/ExpandableSectionButton.tsx","hooks/useCollection.ts","utils/getLiquidityUrlPathParts.ts","views/Farms/components/FarmCard/DetailsSection.tsx","components/Tags.tsx","views/Farms/components/FarmCard/CardHeading.tsx","utils/callHelpers.ts","hooks/useStake.ts","hooks/useUnstake.ts","components/ModalInput/ModalInput.tsx","views/Farms/components/DepositModal.tsx","views/Farms/components/WithdrawModal.tsx","views/Farms/components/FarmCard/StakeAction.tsx","hooks/useHarvest.ts","views/Farms/components/FarmCard/HarvestAction.tsx","views/Farms/components/FarmCard/CardActionsContainer.tsx","hooks/useApprove.ts","views/Farms/components/FarmCard/ApyCalculatorModal.tsx","views/Farms/components/FarmCard/ApyButton.tsx","views/Farms/components/FarmCard/FarmCard.tsx","views/Farms/components/FarmTable/Apr.tsx","views/Farms/components/FarmTable/Farm.tsx","views/Farms/components/FarmTable/Earned.tsx","views/Farms/components/FarmTable/Details.tsx","views/Farms/components/FarmTable/Multiplier.tsx","views/Farms/components/FarmTable/Liquidity.tsx","views/Farms/components/FarmTable/Platform.tsx","views/Farms/components/FarmTable/Actions/styles.ts","views/Farms/components/FarmTable/Actions/HarvestAction.tsx","components/UnlockButtonFarm.tsx","views/Farms/components/FarmTable/Actions/StakedAction.tsx","hooks/useSpaceHunterBoosted.ts","views/Farms/components/StakeNFTModal.tsx","views/Farms/components/types.ts","views/Farms/components/FarmTable/Actions/StakedNFTAction.tsx","hooks/useStakeNFTsFarm.ts","views/Farms/components/FarmTable/Actions/ActionPanel.tsx","views/Farms/components/FarmTable/CellLayout.tsx","views/Farms/components/FarmTable/Row.tsx","views/Farms/components/FarmTable/FarmTable.tsx","views/Farms/components/SearchInput.tsx","views/Farms/components/Select/Select.tsx","views/Farms/Farms.tsx"],"names":["getNotificationStyle","type","success","color","border","backgroundColor","warning","error","info","open","message","description","duration","notification","style","CustomBtn","styled","Button","UnlockButton","props","TranslateString","useI18n","useAuth","login","logout","onPresentConnectModal","useWalletModal","className","variant","onClick","abi","inputs","internalType","name","outputs","stateMutability","fetchNftUser","account","a","fetch","then","response","json","data","result","map","item","tokenID","parseInt","contractAddress","getAddress","catch","Promise","resolve","NFT_SITES","LUCKY_MARKETPLACE","AIRNFTS","BRNFT","getInfoFromLucky","uri","image","getInfoFromAirNFT","axios","get","nft","urlCompressed","console","log","getInfoFromBRNFT","getInfoFromBakery","getInfoFromURI","tokensInfo","all","token","includes","getTokensURI","tokens","calls","t","address","params","multicallv2","requireSuccess","uris","flat","getBoostedPercent","spaceHunterAbi","boostedPercents","index","boostedPercent","toString","getAdditionalInfoNFTs","excludeExistedTokens","userTokens","existedTokens","i","length","existed","j","push","getKey","ethers","utils","excludeSoldTokens","Map","key","to","set","excludeTokensNotTransferToFarm","chainId","addresses","farms","addAdditionalInfoNFTs","additionalInfoNFTs","Object","assign","StyledSpacer","div","size","Spacer","s","spacing","useContext","ThemeContext","StyledModalActions","theme","colors","primaryDark","StyledModalAction","ModalActions","children","l","React","Children","toArray","child","Wrapper","primary","ExpandableSectionButton","expanded","aria-label","role","bold","defaultProps","EtherscanPostfix","1","4","5","BscscanPostfix","56","97","useEthCollectionFullInfo","useActiveWeb3React","useState","myCollection","setMyCollection","useEffect","url","fullInfoTokens","fetchEthCollection","useSpaceHunterCollection","spaceHunter","isUsingToBoost","fetchSpaceHunterCollection","getLiquidityUrlPathParts","quoteTokenAddress","tokenAddress","wBNBAddressString","getWbnbAddress","quoteTokenAddressString","process","tokenAddressString","secondPart","StyledLinkExternal","LinkExternal","DetailsSection","bscScanAddress","infoAddress","removed","totalValueFormatted","lpLabel","addLiquidityUrl","justifyContent","href","CoreTag","outline","startIcon","CommunityTag","DualTag","Flex","MultiplierTag","Tag","CardHeading","multiplier","isCommunityFarm","farmImage","tokenSymbol","alignItems","mb","src","alt","width","height","flexDirection","split","approve","lpContract","masterChefContract","methods","options","constants","MaxUint256","send","from","stake","pid","amount","enterStaking","BigNumber","times","pow","gas","on","tx","transactionHash","deposit","unstake","leaveStaking","withdraw","harvest","useStake","dispatch","useAppDispatch","useWeb3React","useMasterchef","onStake","useCallback","txHash","fetchFarmUserDataAsync","useUnstake","onUnstake","StyledTokenInput","input","text","StyledInput","Input","mediaQueries","xs","sm","StyledErrorMessage","Text","ModalInput","max","symbol","onChange","onSelectMax","value","inputTitle","isBalanceZero","displayBalance","parseFloat","toFixed","position","isWarning","pl","fontSize","toLocaleString","placeholder","scale","mr","external","DepositModal","onConfirm","onDismiss","tokenName","val","setVal","pendingTx","setPendingTx","fullBalance","useMemo","getFullDisplayBalance","handleChange","e","currentTarget","handleSelectMax","title","disabled","alignSelf","WithdrawModal","IconButtonWrapper","StakeAction","stakedBalance","tokenBalance","rawStakedBalance","getBalanceNumber","useModal","onPresentDeposit","onPresentWithdraw","useHarvest","farmPid","onReward","HarvestAction","earnings","rawEarningsBalance","Action","CardActions","farm","requestedApproval","setRequestedApproval","useFarmFromSymbol","lpSymbol","lpAddresses","useFarmUser","allowance","lpAddress","lpName","toUpperCase","isApproved","isGreaterThan","web3","useWeb3","onApprove","useApprove","getBep20Contract","handleApprove","textTransform","pr","mt","Grid","GridItem","Description","ApyCalculatorModal","cakePrice","apy","oneThousandDollarsWorthOfCake","toNumber","cakeEarnedPerThousand1D","calculateCakeEarnedPerThousandDollars","numberOfDays","farmApy","cakeEarnedPerThousand7D","cakeEarnedPerThousand30D","cakeEarnedPerThousand365D","apyModalRoi","amountEarned","amountInvested","ApyButton","onPresentApyModal","event","stopPropagation","ml","RainbowLight","keyframes","StyledCardAccent","FCard","card","background","Divider","borderColor","ExpandingWrapper","FarmCard","showExpandableSection","setShowExpandableSection","communityFarms","toLocaleLowerCase","liquidity","undefined","maximumFractionDigits","replace","earnLabel","dual","farmAPY","liquidityUrlPathParts","quoteToken","BASE_ADD_LIQUIDITY_URL","display","CardActionsContainer","Container","textSubtle","AprWrapper","Apr","originalValue","hideButton","IconImage","Image","Farm","label","Amount","span","earned","textDisabled","Earned","ArrowIcon","ChevronDownIcon","toggled","Details","actionPanelToggled","isMobile","useMatchBreakpoints","isXl","MultiplierWrapper","Multiplier","displayMultiplier","toLowerCase","LiquidityWrapper","Liquidity","displayLiquidity","Number","Platform","ActionContainer","xl","ActionTitles","Title","secondary","Subtle","ActionContent","Staked","userData","farmContract","earningsBigNumber","usePriceLuckyBusd","earningsBusd","multipliedBy","useCountUp","start","end","separator","decimals","countUp","update","updateValue","useRef","_onReward","args","gasLimit","current","WrapAction","newFarmContract","useFarmNFTContract","useFarmsContract","FarmType","LUCKYSWAP","SPACEHUNTER","render","_onStake","_onUnstake","useApproveCallbackCustom","approval","onAttemptToApprove","parseUnits","useNFTsBoosted","mySpaceHunterCollection","totalBonus","setTotalBonus","getUserNftsBoosted","nfts","formattedTokenId","tokenId","setSpaceHunterCollection","foundNFT","fetchNftsUseToBoost","totalBoostedPercent","BoxAction","NFTChosen","Name","BonusAndAction","Bonus","ImgNFT","img","CardItem","ModalSelectSwap","visible","setVisible","stakeNFTsToBoost","unstakeNFTsBoosting","isPendingStake","isPendingUnstake","selectedItems","setSelectedMyItem","isSelected","findNFTIndex","ModalStyled","centered","onCancel","footer","justify","ButtonTrade","WrapperModalBody","prevState","filter","handleCheck","ViewMode","button","Modal","StakeNFT","TitleNFT","isVisibleStakingModal","setIsVisibleStakingModal","isVisibleCanStakeModal","setIsVisibleCanStakeModal","useMySpaceHunterCollection","useTransactionAdder","farmNFTContract","addTransaction","isPending","setIsPending","isConfirmed","setIsConfirmed","nftsBoosted","addNftsBoosted","summary","wait","status","stakeNFTsFarm","useStakeNFTsFarm","stakeNFTsFarmCallback","unsetNftBoosted","unstakeNFTsFarm","useUnstakeNFTsFarm","unstakeNFTsFarmCallback","isApprovalForAllNfts","setIsApprovalForAllNfts","addressesNeedApprove","setAddressesNeedApprove","setIsPendingApprove","interval","setInterval","nftsCanStake","contractAddresses","forEach","isApproveForAllNFTs","clearInterval","approveForAllNFTs","err","Row","lg","StakeContainer","TagsContainer","InfoContainer","ValueContainer","ValueWrapper","BoxHead","Item","ColContent","Col","ActionPanel","details","apr","isActive","bsc","md","StakedAction","StakedNFTAction","Label","ContentContainer","CellLayout","MobileColumnSchema","id","translationId","sortable","DesktopColumnSchema","cells","platform","CellInner","StyledTr","tr","EarnedMobileCell","td","AprMobileCell","FarmMobileCell","BlockActionPanel","setActionPanelToggled","toggleActionPanel","isXs","tableSchema","columnNames","column","keys","columnIndex","indexOf","createElement","colSpan","dropShadow","TableWrapper","StyledTable","table","TableBody","tbody","TableContainer","ScrollButtonContainer","Tab","Arrow","ArrowUp","ArrowDown","TableHeader","FarmTable","tableWrapperEl","columns","rows","useTable","sortColumn","ref","row","original","scrollIntoView","behavior","InputWrapper","SearchInput","setToggled","inputEl","onBlur","DropDownHeader","shadows","inset","inputSecondary","DropDownListContainer","zIndices","dropdown","DropDownContainer","isOpen","css","tooltip","boxShadow","DropDownList","ul","ListItem","li","Select","containerRef","dropdownRef","setIsOpen","selectedOption","setSelectedOption","containerSize","setContainerSize","toggling","onOptionClicked","option","offsetWidth","offsetHeight","ControlContainer","LabelWrapper","FilterContainer","Header","Farms","path","useRouteMatch","pathname","useLocation","farmsLP","useFarms","luckyPrice","query","setQuery","TABLE","viewMode","sortOption","setSortOption","prices","useGetApiPrices","fastRefresh","useRefresh","stakedOnly","activeTab","setActiveTab","toggle","tab","activeFarms","inactiveFarms","stakedOnlyFarms","stakedInactiveFarms","farmsList","farmsToDisplay","farmsToDisplayWithAPY","lpTotalInQuoteToken","totalLiquidity","getFarmApr","poolWeight","lowercaseQuery","ChainId","BSCTESTNET","MAINNET","farmsStaked","rowData","orderBy","slice","sortFarms","renderContent","columnSchema","sort","b","exact","as","Page","Nav","tabs","NavItem","NavLink","classnames","active","TabContent","fontWeight","marginLeft","target","TabPane","tabId"],"mappings":"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","file":"static/js/17.8b0b94ca.chunk.js","sourcesContent":["import React from 'react'\nimport {notification } from 'antd'\n\nconst getNotificationStyle = (type) => {\n  return {\n    success: {\n      color: 'rgba(0, 0, 0, 0.65)',\n      border: '1px solid #b7eb8f',\n      backgroundColor: '#f6ffed',\n    },\n    warning: {\n      color: 'rgba(0, 0, 0, 0.65)',\n      border: '1px solid #ffe58f',\n      backgroundColor: '#fffbe6',\n    },\n    error: {\n      color: 'rgba(0, 0, 0, 0.65)',\n      border: '1px solid #ffa39e',\n      backgroundColor: '#fff1f0',\n    },\n    info: {\n      color: 'rgba(0, 0, 0, 0.65)',\n      border: '1px solid #91d5ff',\n      backgroundColor: '#e6f7ff',\n    },\n    open: {\n      color: 'rgba(0, 0, 0, 0.65)',\n      border: '1px solid #91d5ff',\n      backgroundColor: '#e6f7ff',\n    },\n  }[type]\n}\n\nexport default (\n  type,\n  { message, description, duration = 3 },\n  \n) => {\n  notification[type]({\n    message,\n    description,\n    style: getNotificationStyle(type),\n    duration,\n  })\n}\n","import React from 'react'\nimport { Button, useWalletModal } from '@luckyswap/uikit'\nimport useAuth from 'hooks/useAuth'\nimport useI18n from 'hooks/useI18n'\nimport styled from 'styled-components'\n\nconst CustomBtn = styled(Button)`\n  border-radius: 100px;\n`\n\nconst UnlockButton = (props) => {\n  const TranslateString = useI18n()\n  const { login, logout } = useAuth()\n  const { onPresentConnectModal } = useWalletModal(login, logout)\n\n  return (\n    <div className=\"custom-btn\">\n      <CustomBtn variant=\"secondary\" onClick={onPresentConnectModal} {...props}>\n        {TranslateString(292, 'Unlock Wallet')}\n      </CustomBtn>\n    </div>\n  )\n}\n\nexport default UnlockButton\n","import { ChainId } from '@luckyswap/v2-sdk'\nimport axios from 'axios'\nimport nftAbi from 'config/abi/nft.json'\nimport stakingNftAbi from 'config/abi/StakingNft.json'\nimport spaceHunterAbi from 'config/abi/SpaceHunterNFT.json'\nimport addresses from 'config/constants/contracts'\nimport { getAddress } from 'ethers/lib/utils'\nimport { ethers } from 'ethers'\nimport multicall from 'utils/multicall'\nimport Web3 from 'web3'\nimport { AdditionalInfoNFT, BaseNFT, NFT } from '../../config/constants/types'\nimport { RPC_URLS } from '../../constants/index'\nimport { multicallv2 } from '../../utils/multicall'\n\nconst abi = [\n  {\n    inputs: [{ internalType: 'uint256', name: 'tokenId', type: 'uint256' }],\n    name: 'tokenURI',\n    outputs: [{ internalType: 'string', name: '', type: 'string' }],\n    stateMutability: 'view',\n    type: 'function',\n  },\n]\n\nexport const fetchUserPendingRewards = async (pools, chainId) => {\n  const calls = pools.map((p) => ({\n    address: addresses.stakingNft[chainId],\n    name: 'pendingReward',\n    params: [p.nftContract, p.tokenId],\n  }))\n\n  let pendingRewards = await multicall(stakingNftAbi, calls)\n\n  pendingRewards = pendingRewards.flat()\n\n  return pendingRewards\n}\n\nexport const fetchURIPool = async (pools, chainId) => {\n  const calls = pools.map((p) => ({\n    address: addresses.nft[chainId],\n    name: 'tokenURI',\n    params: [p.tokenId],\n  }))\n\n  let images = await multicall(nftAbi, calls)\n\n  images = images.flat()\n\n  return images\n}\n\nexport const fetchNftUser = async (account): Promise<BaseNFT[]> => {\n  if (account) {\n    return fetch(\n      `https://api-testnet.bscscan.com/api?module=account&action=tokennfttx&address=${account}&startblock=0&endblock=999999999999&sort=asc`,\n    )\n      .then((response) => response.json())\n      .then((data) =>\n        data.result.map((item) => ({\n          ...item,\n          tokenID: parseInt(item.tokenID),\n          contractAddress: getAddress(item.contractAddress),\n        })),\n      )\n      .catch((error) => {\n        return new Promise((resolve) => resolve([]))\n      })\n  }\n  return new Promise((resolve) => resolve([]))\n}\n\nexport const getImplementationFromProxy = async (contractAddress: string, chainId: ChainId) => {\n  const web3 = new Web3(RPC_URLS[chainId][0])\n  return (web3 as any).eth.getStorageAt(\n    contractAddress,\n    '0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc',\n  )\n}\n\nconst NFT_SITES = {\n  LUCKY_MARKETPLACE: [\n    getAddress('0x969a82989d9e410ed0ae36c12479552421c93eb2'),\n    getAddress('0xb3597830f51a9d57623318D389B38C70c94ADfa8'),\n    getAddress('0x5b89960e8cb3e42e7b96efbcb1f82029f08f910c'),\n  ],\n  AIRNFTS: [getAddress('0xF5db804101d8600c26598A1Ba465166c33CdAA4b')],\n  BRNFT: [getAddress('0x1dDB2C0897daF18632662E71fdD2dbDC0eB3a9Ec')],\n}\n\nconst getInfoFromLucky = async (uri): Promise<AdditionalInfoNFT> => {\n  return { image: uri }\n}\n\nconst getInfoFromAirNFT = async (uri): Promise<AdditionalInfoNFT> => {\n  try {\n    const { data } = await axios.get(uri)\n    const { urlCompressed, name, description } = (data as any)?.nft\n    return {\n      image: urlCompressed,\n      name,\n      description,\n    }\n  } catch (error) {\n    console.log('get info airnft error : ', error)\n    return null\n  }\n}\n\nconst getInfoFromBRNFT = async (uri): Promise<AdditionalInfoNFT> => {\n  try {\n    const { data } = await axios.get(uri)\n    const { name, description, image } = data\n\n    return { name, description, image }\n  } catch (error) {\n    console.log('get image brnft error : ', error)\n    return null\n  }\n}\n\nconst getInfoFromBakery = async (uri): Promise<AdditionalInfoNFT> => {\n  try {\n    const { data } = await axios.get(uri)\n    const { name, description, image } = data\n\n    return { name, description, image }\n  } catch (error) {\n    console.log('get image bakery error : ', error)\n    return null\n  }\n}\n\nexport const getInfoFromURI = async (tokensInfo: BaseNFT[]): Promise<AdditionalInfoNFT[]> => {\n  const result = await Promise.all(\n    tokensInfo.map(async (token) => {\n      token.contractAddress = getAddress(token.contractAddress)\n      if (NFT_SITES.LUCKY_MARKETPLACE.includes(token.contractAddress)) {\n        return getInfoFromLucky(token.uri)\n      }\n      if (NFT_SITES.AIRNFTS.includes(token.contractAddress)) {\n        return getInfoFromAirNFT(token.uri)\n      }\n      if (NFT_SITES.BRNFT.includes(token.contractAddress)) {\n        return getInfoFromBRNFT(token.uri)\n      }\n\n      return getInfoFromBakery(token.uri)\n    }),\n  )\n\n  return result\n}\n\nexport const getTokensURI = async (tokens: BaseNFT[]) => {\n  try {\n    const calls = tokens.map((t) => ({\n      address: t.contractAddress,\n      name: 'tokenURI',\n      params: [t.tokenID],\n    }))\n\n    let uris = await multicallv2(abi, calls, { requireSuccess: false })\n\n    uris = uris.flat()\n\n    return uris\n  } catch (error) {\n    return []\n  }\n}\n\nexport const getBoostedPercent = async (tokens: BaseNFT[]) => {\n  try {\n    const calls = tokens.map((t) => ({\n      address: t.contractAddress,\n      name: 'boostedPercent',\n      params: [t.tokenID],\n    }))\n\n    let boostedPercents = await multicallv2(spaceHunterAbi, calls, { requireSuccess: false })\n\n    boostedPercents = boostedPercents.flat()\n\n    return tokens.map((token, index) => ({\n      ...token,\n      boostedPercent: boostedPercents[index].toString(),\n    }))\n  } catch (error) {\n    console.log('error : ', error)\n    return []\n  }\n}\n\nexport const getAdditionalInfoNFTs = async <T extends BaseNFT>(tokens: T[]): Promise<AdditionalInfoNFT[]> => {\n  const uris = await getTokensURI(tokens)\n\n  const tokensInfo = uris.map((uri, index) => ({\n    uri,\n    contractAddress: tokens[index].contractAddress,\n  }))\n\n  const info = await getInfoFromURI(tokensInfo)\n\n  return info\n}\n\nexport const excludeExistedTokens = (userTokens: BaseNFT[], existedTokens: BaseNFT[]): Array<any> => {\n  const result: BaseNFT[] = []\n  for (let i = 0; i < userTokens.length; i++) {\n    const token = userTokens[i]\n    let existed = false\n    for (let j = 0; j < existedTokens.length; j++) {\n      if (\n        getAddress(existedTokens[j].contractAddress) === token.contractAddress &&\n        (existedTokens[j].tokenID as any) === token.tokenID\n      ) {\n        existed = true\n        break\n      }\n    }\n\n    if (!existed) {\n      result.push(token)\n    }\n  }\n\n  return result\n}\n\nexport const getKey = (token) => {\n  return `${token.tokenID}-${ethers.utils.getAddress(token.contractAddress)}`\n}\n\nexport const excludeSoldTokens = <T extends BaseNFT>(userTokens: T[], account: string): Array<T> => {\n  const map = new Map()\n  const result: T[] = []\n\n  for (let i = (userTokens as any).length - 1; i >= 0; i--) {\n    const key = getKey(userTokens[i])\n\n    if (!map.get(key) && getAddress(userTokens[i].to) === account) {\n      result.push(userTokens[i])\n    }\n    map.set(key, 1)\n  }\n\n  return result\n}\n\nexport const excludeTokensNotTransferToFarm = <T extends BaseNFT>({ tokens, account, chainId }): Array<T> => {\n  const map = new Map()\n  const result: T[] = []\n\n  for (let i = (tokens as any).length - 1; i >= 0; i--) {\n    const key = getKey(tokens[i])\n\n    if (\n      !map.get(key) &&\n      (getAddress(tokens[i].to) === account || getAddress(tokens[i].to) === getAddress(addresses.farms[chainId]))\n    ) {\n      console.log('key : ', key)\n      result.push(tokens[i])\n    }\n    map.set(key, 1)\n  }\n\n  return result\n}\n\nexport const addAdditionalInfoNFTs = async <T extends BaseNFT>(userTokens: T[]): Promise<T[]> => {\n  const additionalInfoNFTs = await getAdditionalInfoNFTs(userTokens)\n\n  for (let i = 0; i < (userTokens as any).length; i++) {\n    Object.assign(userTokens[i], additionalInfoNFTs[i])\n  }\n\n  return userTokens\n}\n","import React, { useContext } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\ninterface SpacerProps {\n  size?: 'sm' | 'md' | 'lg'\n}\n\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\n  const { spacing } = useContext(ThemeContext)\n\n  let s: number\n  switch (size) {\n    case 'lg':\n      s = spacing[6]\n      break\n    case 'sm':\n      s = spacing[2]\n      break\n    case 'md':\n    default:\n      s = spacing[4]\n  }\n\n  return <StyledSpacer size={s} />\n}\n\ninterface StyledSpacerProps {\n  size: number\n}\n\nconst StyledSpacer = styled.div<StyledSpacerProps>`\n  height: ${(props) => props.size}px;\n  width: ${(props) => props.size}px;\n`\n\nexport default Spacer\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport Spacer from '../Spacer'\n\nconst ModalActions: React.FC = ({ children }) => {\n  const l = React.Children.toArray(children).length\n  return (\n    <StyledModalActions>\n      {React.Children.map(children, (child, i) => (\n        <>\n          <StyledModalAction>{child}</StyledModalAction>\n          {i < l - 1 && <Spacer />}\n        </>\n      ))}\n    </StyledModalActions>\n  )\n}\n\nconst StyledModalActions = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.primaryDark}00;\n  display: flex;\n  margin: 0;\n  padding: ${(props) => props.theme.spacing[4]}px 0;\n`\n\nconst StyledModalAction = styled.div`\n  flex: 1;\n`\n\nexport default ModalActions\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ChevronDownIcon, ChevronUpIcon, Text } from '@luckyswap/uikit'\nimport useI18n from 'hooks/useI18n'\n\nexport interface ExpandableSectionButtonProps {\n  onClick?: () => void\n  expanded?: boolean\n}\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n\n  svg {\n    fill: ${({ theme }) => theme.colors.primary};\n  }\n`\n\nconst ExpandableSectionButton: React.FC<ExpandableSectionButtonProps> = ({ onClick, expanded }) => {\n  const TranslateString = useI18n()\n\n  return (\n    <Wrapper aria-label=\"Hide or show expandable content\" role=\"button\" onClick={() => onClick()}>\n      <Text color=\"primary\" bold>\n        {expanded ? TranslateString(1066, 'Hide') : TranslateString(658, 'Details')}\n      </Text>\n      {expanded ? <ChevronUpIcon /> : <ChevronDownIcon />}\n    </Wrapper>\n  )\n}\n\nExpandableSectionButton.defaultProps = {\n  expanded: false,\n}\n\nexport default ExpandableSectionButton\n","import addresses from 'config/constants/contracts'\nimport { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { addAdditionalInfoNFTs } from 'state/poolsNft/fetchPoolInfo'\nimport { getAddress } from 'utils/addressHelpers'\nimport { ethers } from 'ethers'\nimport { useActiveWeb3React } from './index'\nimport { NFT } from '../config/constants/types'\nimport { getBoostedPercent, excludeSoldTokens, excludeTokensNotTransferToFarm } from '../state/poolsNft/fetchPoolInfo'\n\nconst EtherscanPostfix = {\n  1: '',\n  4: '-rinkeby',\n  5: '-goerli',\n}\n\nconst BscscanPostfix = {\n  56: '',\n  97: '-testnet',\n}\n\nexport const useEthereumCollection = () => {\n  const { chainId, account } = useActiveWeb3React()\n  const [myCollection, setMyCollection] = useState<NFT[]>([])\n\n  useEffect(() => {\n    if (account && chainId) {\n      const url = `https://api${\n        EtherscanPostfix[chainId] ?? '-goerli'\n      }.etherscan.io/api?module=account&action=tokennfttx&address=${account}&sort=asc&apikey=H73WJKKZ7PP5WGF9C11EAPU8MJKY9BNHIJ`\n      axios\n        .get(url)\n        .then((response) => {\n          setMyCollection(\n            response.data.result.map((item) => ({\n              ...item,\n              tokenID: parseInt(item.tokenID),\n              contractAddress: getAddress(item.contractAddress),\n            })),\n          )\n        })\n        .catch((error) => {\n          console.log('error get collection : ', error)\n        })\n    }\n  }, [chainId, account])\n\n  return myCollection\n}\n\nexport const useEthCollectionFullInfo = () => {\n  const { chainId, account } = useActiveWeb3React()\n  const [myCollection, setMyCollection] = useState<NFT[]>([])\n\n  useEffect(() => {\n    const fetchEthCollection = async () => {\n      try {\n        const url = `https://api${\n          EtherscanPostfix[chainId] ?? '-goerli'\n        }.etherscan.io/api?module=account&action=tokennfttx&address=${account}&sort=asc&apikey=H73WJKKZ7PP5WGF9C11EAPU8MJKY9BNHIJ`\n        const tokens = (await axios.get(url))?.data?.result\n\n        const fullInfoTokens = await addAdditionalInfoNFTs(tokens)\n        setMyCollection(fullInfoTokens)\n      } catch (error) {\n        console.log('get eth collection error : ', error)\n      }\n    }\n    if (account && chainId) {\n      fetchEthCollection()\n    }\n  }, [chainId, account])\n\n  return myCollection\n}\n\nexport const useSpaceHunterCollection = () => {\n  const { chainId, account } = useActiveWeb3React()\n  const [myCollection, setMyCollection] = useState<NFT[]>([])\n\n  useEffect(() => {\n    const fetchSpaceHunterCollection = async () => {\n      try {\n        const url = `https://api${\n          BscscanPostfix[chainId] ?? '-testnet'\n        }.bscscan.com/api?module=account&action=tokennfttx&address=${account}&contractaddress=${getAddress(\n          addresses.spaceHunter,\n        )}&sort=asc&apikey=8KFSH17E4S26HYAFBGTPCA29NMNCRY4W3K`\n        let tokens = (await axios.get(url))?.data?.result\n        tokens = tokens.map((item) => ({\n          ...item,\n          tokenID: parseInt(item.tokenID as any),\n          contractAddress: ethers.utils.getAddress(item.contractAddress),\n          isUsingToBoost: false,\n        }))\n\n        tokens = excludeTokensNotTransferToFarm({ tokens, account, chainId })\n\n        tokens = await addAdditionalInfoNFTs(tokens)\n        tokens = await getBoostedPercent(tokens)\n        setMyCollection(tokens)\n      } catch (error) {\n        console.log('get space hunter collection error : ', error)\n      }\n    }\n    if (account && chainId) {\n      fetchSpaceHunterCollection()\n    }\n  }, [chainId, account])\n\n  return myCollection\n}\n","// Constructing the two forward-slash-separated parts of the 'Add Liquidity' URL\n// Each part of the url represents a different side of the LP pair.\nimport { getWbnbAddress } from './addressHelpers'\n\nconst getLiquidityUrlPathParts = ({ quoteTokenAddress, tokenAddress }) => {\n  // TODO : Improve chain id\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  const wBNBAddressString = getWbnbAddress()\n  const quoteTokenAddressString: string = quoteTokenAddress ? quoteTokenAddress[chainId] : null\n  const tokenAddressString: string = tokenAddress ? tokenAddress[chainId] : null\n  const firstPart =\n    !quoteTokenAddressString || quoteTokenAddressString === wBNBAddressString ? 'BNB' : quoteTokenAddressString\n  const secondPart = !tokenAddressString || tokenAddressString === wBNBAddressString ? 'BNB' : tokenAddressString\n  return `${firstPart}/${secondPart}`\n}\n\nexport default getLiquidityUrlPathParts\n","import React from 'react'\nimport useI18n from 'hooks/useI18n'\nimport styled from 'styled-components'\nimport { Text, Flex, LinkExternal } from '@luckyswap/uikit'\n\nexport interface ExpandableSectionProps {\n  bscScanAddress?: string\n  infoAddress?: string\n  removed?: boolean\n  totalValueFormatted?: string\n  lpLabel?: string\n  addLiquidityUrl?: string\n}\n\nconst Wrapper = styled.div`\n  margin-top: 24px;\n`\n\nconst StyledLinkExternal = styled(LinkExternal)`\n  font-weight: 400;\n`\n\nconst DetailsSection: React.FC<ExpandableSectionProps> = ({\n  bscScanAddress,\n  infoAddress,\n  removed,\n  totalValueFormatted,\n  lpLabel,\n  addLiquidityUrl,\n}) => {\n  const TranslateString = useI18n()\n\n  return (\n    <Wrapper>\n      <Flex justifyContent=\"space-between\">\n        <Text>{TranslateString(354, 'Total Liquidity')}:</Text>\n        <Text>{totalValueFormatted}</Text>\n      </Flex>\n      {!removed && (\n        <StyledLinkExternal href={addLiquidityUrl}>\n          {TranslateString(999, `Get ${lpLabel}`, { name: lpLabel })}\n        </StyledLinkExternal>\n      )}\n      <StyledLinkExternal href={bscScanAddress}>{TranslateString(999, 'View Contract')}</StyledLinkExternal>\n      <StyledLinkExternal href={infoAddress}>{TranslateString(999, 'See Pair Info')}</StyledLinkExternal>\n    </Wrapper>\n  )\n}\n\nexport default DetailsSection\n","import React from 'react'\nimport { Tag, VerifiedIcon, CommunityIcon, BinanceIcon } from '@luckyswap/uikit'\n\nconst CoreTag = (props) => (\n  <Tag className=\"line\" variant=\"secondary\" outline startIcon={<VerifiedIcon color=\"secondary\" />} {...props}>\n    Core\n  </Tag>\n)\n\nconst CommunityTag = (props) => (\n  <Tag variant=\"textSubtle\" outline startIcon={<CommunityIcon color=\"secondary\" />} {...props}>\n    Community\n  </Tag>\n)\n\nconst BinanceTag = (props) => (\n  <Tag variant=\"binance\" outline startIcon={<BinanceIcon color=\"secondary\" />} {...props}>\n    Binance\n  </Tag>\n)\n\nconst DualTag = (props) => (\n  <Tag variant=\"textSubtle\" outline {...props}>\n    Dual\n  </Tag>\n)\n\nexport { CoreTag, CommunityTag, BinanceTag, DualTag }\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Tag, Flex, Heading, Image } from '@luckyswap/uikit'\nimport { CommunityTag, CoreTag } from 'components/Tags'\n\nexport interface ExpandableSectionProps {\n  lpLabel?: string\n  multiplier?: string\n  isCommunityFarm?: boolean\n  farmImage?: string\n  tokenSymbol?: string\n}\n\nconst Wrapper = styled(Flex)`\n  svg {\n    margin-right: 4px;\n  }\n`\n\nconst MultiplierTag = styled(Tag)`\n  margin-left: 4px;\n`\n\nconst CardHeading: React.FC<ExpandableSectionProps> = ({\n  lpLabel,\n  multiplier,\n  isCommunityFarm,\n  farmImage,\n  tokenSymbol,\n}) => {\n  return (\n    <Wrapper justifyContent=\"space-between\" alignItems=\"center\" mb=\"12px\">\n      <Image src={`/images/farms/${farmImage}.svg`} alt={tokenSymbol} width={64} height={64} />\n      <Flex flexDirection=\"column\" alignItems=\"flex-end\">\n        <Heading mb=\"4px\">{lpLabel.split(' ')[0]}</Heading>\n        <Flex justifyContent=\"center\">\n          {isCommunityFarm ? <CommunityTag /> : <CoreTag />}\n          <MultiplierTag variant=\"secondary\">{multiplier}</MultiplierTag>\n        </Flex>\n      </Flex>\n    </Wrapper>\n  )\n}\n\nexport default CardHeading\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\n\nexport const approve = async (lpContract, masterChefContract, account) => {\n  return lpContract.methods\n    .approve(masterChefContract.options.address, ethers.constants.MaxUint256)\n    .send({ from: account })\n}\n\nexport const stake = async (masterChefContract, pid, amount, account) => {\n  if (pid === 0) {\n    console.log('stake ne : ', { masterChefContract, pid, amount, account })\n    return masterChefContract.methods\n      .enterStaking(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n      .send({ from: account, gas: 200000 })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n\n  return masterChefContract.methods\n    .deposit(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account, gas: 200000 })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousStake = async (sousChefContract, amount, decimals = 18, account) => {\n  return sousChefContract.methods\n    .deposit(new BigNumber(amount).times(new BigNumber(10).pow(decimals)).toString())\n    .send({ from: account, gas: 200000 })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousStakeBnb = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods\n    .deposit()\n    .send({ from: account, gas: 200000, value: new BigNumber(amount).times(new BigNumber(10).pow(18)).toString() })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const unstake = async (masterChefContract, pid, amount, account) => {\n  if (pid === 0) {\n    return masterChefContract.methods\n      .leaveStaking(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n      .send({ from: account, gas: 200000 })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n\n  return masterChefContract.methods\n    .withdraw(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account, gas: 200000 })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousUnstake = async (sousChefContract, amount, decimals = 18, account) => {\n  // shit code: hard fix for old CTK and BLK\n  if (sousChefContract.options.address === '0x3B9B74f48E89Ebd8b45a53444327013a2308A9BC') {\n    return sousChefContract.methods\n      .emergencyWithdraw()\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n  if (sousChefContract.options.address === '0xBb2B66a2c7C2fFFB06EA60BeaD69741b3f5BF831') {\n    return sousChefContract.methods\n      .emergencyWithdraw()\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n  if (sousChefContract.options.address === '0x453a75908fb5a36d482d5f8fe88eca836f32ead5') {\n    return sousChefContract.methods\n      .emergencyWithdraw()\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n\n  return sousChefContract.methods\n    .withdraw(new BigNumber(amount).times(new BigNumber(10).pow(decimals)).toString())\n    .send({ from: account, gas: 200000 })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousEmergencyUnstake = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods\n    .emergencyWithdraw()\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const harvest = async (masterChefContract, pid, account) => {\n  if (pid === 0) {\n    return masterChefContract.methods\n      .leaveStaking('0')\n      .send({ from: account, gas: 200000 })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n\n  return masterChefContract.methods\n    .deposit(pid, '0')\n    .send({ from: account, gas: 200000 })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const soushHarvest = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .deposit('0')\n    .send({ from: account, gas: 200000 })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const soushHarvestBnb = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .deposit()\n    .send({ from: account, gas: 200000, value: new BigNumber(0) })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { fetchFarmUserDataAsync, updateUserStakedBalance, updateUserBalance } from 'state/actions'\nimport { stake, sousStake, sousStakeBnb } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nconst useStake = (pid: number) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n\n  const handleStake = useCallback(\n    async (amount: string) => {\n      console.log('handle stake ne')\n      const txHash = await stake(masterChefContract, pid, amount, account)\n      dispatch(fetchFarmUserDataAsync(account) as any)\n      console.info(txHash)\n    },\n    [account, dispatch, masterChefContract, pid],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport const useSousStake = (sousId, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleStake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 0) {\n        await stake(masterChefContract, 0, amount, account)\n      } else if (isUsingBnb) {\n        await sousStakeBnb(sousChefContract, amount, account)\n      } else {\n        await sousStake(sousChefContract, amount, decimals, account)\n      }\n      dispatch(updateUserStakedBalance(sousId, account) as any)\n      dispatch(updateUserBalance(sousId, account) as any)\n    },\n    [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport default useStake\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport {\n  fetchFarmUserDataAsync,\n  updateUserStakedBalance,\n  updateUserBalance,\n  updateUserPendingReward,\n} from 'state/actions'\nimport { unstake, sousUnstake, sousEmergencyUnstake } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nconst useUnstake = (pid: number) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      const txHash = await unstake(masterChefContract, pid, amount, account)\n      dispatch(fetchFarmUserDataAsync(account) as any)\n      console.info(txHash)\n    },\n    [account, dispatch, masterChefContract, pid],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nconst SYRUPIDS = [5, 6, 3, 1, 22, 23, 78]\n\nexport const useSousUnstake = (sousId) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n  const isOldSyrup = SYRUPIDS.includes(sousId)\n\n  const handleUnstake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 0) {\n        const txHash = await unstake(masterChefContract, 0, amount, account)\n        console.info(txHash)\n      } else if (isOldSyrup) {\n        const txHash = await sousEmergencyUnstake(sousChefContract, amount, account)\n        console.info(txHash)\n      } else {\n        const txHash = await sousUnstake(sousChefContract, amount, decimals, account)\n        console.info(txHash)\n      }\n      dispatch(updateUserStakedBalance(sousId, account) as any)\n      dispatch(updateUserBalance(sousId, account) as any)\n      dispatch(updateUserPendingReward(sousId, account) as any)\n    },\n    [account, dispatch, isOldSyrup, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useUnstake\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Button, Input, InputProps, Flex, Link } from '@luckyswap/uikit'\nimport useI18n from 'hooks/useI18n'\n\ninterface ModalInputProps {\n  max: string\n  symbol: string\n  onSelectMax?: () => void\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\n  placeholder?: string\n  value: string\n  addLiquidityUrl?: string\n  inputTitle?: string\n}\n\nconst getBoxShadow = ({ isWarning = false, theme }) => {\n  if (isWarning) {\n    return theme.shadows.warning\n  }\n\n  return theme.shadows.inset\n}\n\nconst StyledTokenInput = styled.div<InputProps>`\n  display: flex;\n  flex-direction: column;\n  background-color: ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  box-shadow: none;\n  color: ${({ theme }) => theme.colors.text};\n  padding: 8px 16px 8px 0;\n  width: 100%;\n`\n\nconst StyledInput = styled(Input)`\n  box-shadow: none;\n  width: 60px;\n  margin: 0 8px;\n  padding: 0 8px;\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    width: 80px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: auto;\n  }\n`\n\nconst StyledErrorMessage = styled(Text)`\n  position: absolute;\n  bottom: -22px;\n  color: #fff;\n  a {\n    display: inline;\n    color: #fff;\n  }\n`\n\nconst ModalInput: React.FC<ModalInputProps> = ({\n  max,\n  symbol,\n  onChange,\n  onSelectMax,\n  value,\n  addLiquidityUrl,\n  inputTitle,\n}) => {\n  const TranslateString = useI18n()\n  const isBalanceZero = max === '0' || !max\n\n  const displayBalance = isBalanceZero ? '0' : parseFloat(max).toFixed(4)\n\n  return (\n    <div style={{ position: 'relative' }}>\n      <StyledTokenInput isWarning={isBalanceZero}>\n        <Flex justifyContent=\"space-between\" pl=\"16px\">\n          <Text fontSize=\"14px\">{inputTitle}</Text>\n          <Text fontSize=\"14px\">\n            {TranslateString(1120, 'Balance')}: {displayBalance.toLocaleString()}\n          </Text>\n        </Flex>\n        <Flex alignItems=\"flex-end\" justifyContent=\"space-around\">\n          <StyledInput onChange={onChange} placeholder=\"0\" value={value} />\n          <Button scale=\"sm\" onClick={onSelectMax} mr=\"8px\" className=\"btn-supply\">\n            {TranslateString(452, 'Max')}\n          </Button>\n          <Text fontSize=\"16px\">{symbol}</Text>\n        </Flex>\n      </StyledTokenInput>\n      {isBalanceZero && (\n        <StyledErrorMessage fontSize=\"14px\" color=\"failure\">\n          No tokens to stake:{' '}\n          <Link fontSize=\"14px\" bold={false} href={addLiquidityUrl} external color=\"failure\">\n            {TranslateString(999, 'get')} {symbol}\n          </Link>\n        </StyledErrorMessage>\n      )}\n    </div>\n  )\n}\n\nexport default ModalInput\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal, LinkExternal } from '@luckyswap/uikit'\nimport ModalActions from 'components/ModalActions'\nimport ModalInput from 'components/ModalInput'\nimport useI18n from 'hooks/useI18n'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\n\ninterface DepositModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n  addLiquidityUrl?: string\n}\n\nconst DepositModal: React.FC<DepositModalProps> = ({ max, onConfirm, onDismiss, tokenName = '', addLiquidityUrl }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={TranslateString(1068, 'Stake LP tokens')} onDismiss={onDismiss}>\n      <ModalInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol={tokenName}\n        addLiquidityUrl={addLiquidityUrl}\n        inputTitle={TranslateString(1070, 'Stake')}\n      />\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss} width=\"100%\">\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          variant=\"success\"\n          width=\"100%\"\n          disabled={pendingTx || fullBalance === '0' || val === '0'}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n      <LinkExternal href={addLiquidityUrl} style={{ alignSelf: 'center' }}>\n        {TranslateString(999, 'Get')} {tokenName}\n      </LinkExternal>\n    </Modal>\n  )\n}\n\nexport default DepositModal\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from '@luckyswap/uikit'\nimport ModalActions from 'components/ModalActions'\nimport ModalInput from 'components/ModalInput'\nimport useI18n from 'hooks/useI18n'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\n\ninterface WithdrawModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({ onConfirm, onDismiss, max, tokenName = '' }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={TranslateString(1126, 'Unstake LP tokens')} onDismiss={onDismiss}>\n      <ModalInput\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        value={val}\n        max={fullBalance}\n        symbol={tokenName}\n        inputTitle={TranslateString(588, 'Unstake')}\n      />\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss} width=\"100%\">\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          variant=\"success\"\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n          width=\"100%\"\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default WithdrawModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Button, Flex, Heading, IconButton, AddIcon, MinusIcon, useModal } from '@luckyswap/uikit'\nimport useI18n from 'hooks/useI18n'\nimport useStake from 'hooks/useStake'\nimport useUnstake from 'hooks/useUnstake'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport DepositModal from '../DepositModal'\nimport WithdrawModal from '../WithdrawModal'\n\ninterface FarmCardActionsProps {\n  stakedBalance?: BigNumber\n  tokenBalance?: BigNumber\n  tokenName?: string\n  pid?: number\n  addLiquidityUrl?: string\n}\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n  svg {\n    width: 20px;\n  }\n`\n\nconst StakeAction: React.FC<FarmCardActionsProps> = ({\n  stakedBalance,\n  tokenBalance,\n  tokenName,\n  pid,\n  addLiquidityUrl,\n}) => {\n  const TranslateString = useI18n()\n  const { onStake } = useStake(pid)\n  const { onUnstake } = useUnstake(pid)\n\n  const rawStakedBalance = getBalanceNumber(stakedBalance)\n  const displayBalance = rawStakedBalance.toLocaleString()\n\n  const [onPresentDeposit] = useModal(\n    <DepositModal max={tokenBalance} onConfirm={onStake} tokenName={tokenName} addLiquidityUrl={addLiquidityUrl} />,\n  )\n  const [onPresentWithdraw] = useModal(\n    <WithdrawModal max={stakedBalance} onConfirm={onUnstake} tokenName={tokenName} />,\n  )\n\n  const renderStakingButtons = () => {\n    return rawStakedBalance === 0 ? (\n      <Button onClick={onPresentDeposit}>{TranslateString(999, 'Stake LP')}</Button>\n    ) : (\n      <IconButtonWrapper>\n        <IconButton variant=\"tertiary\" onClick={onPresentWithdraw} mr=\"6px\">\n          <MinusIcon color=\"primary\" width=\"14px\" />\n        </IconButton>\n        <IconButton variant=\"tertiary\" onClick={onPresentDeposit}>\n          <AddIcon color=\"primary\" width=\"14px\" />\n        </IconButton>\n      </IconButtonWrapper>\n    )\n  }\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\n      <Heading color={rawStakedBalance === 0 ? 'textDisabled' : 'text'}>{displayBalance}</Heading>\n      {renderStakingButtons()}\n    </Flex>\n  )\n}\n\nexport default StakeAction\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { fetchFarmUserDataAsync, updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { soushHarvest, soushHarvestBnb, harvest } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nexport const useHarvest = (farmPid: number) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    const txHash = await harvest(masterChefContract, farmPid, account)\n    dispatch(fetchFarmUserDataAsync(account) as any)\n    return txHash\n  }, [account, dispatch, farmPid, masterChefContract])\n\n  return { onReward: handleHarvest }\n}\n\nexport const useAllHarvest = (farmPids: number[]) => {\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    const harvestPromises = farmPids.reduce((accum, pid) => {\n      return [...accum, harvest(masterChefContract, pid, account)]\n    }, [])\n\n    return Promise.all(harvestPromises)\n  }, [account, farmPids, masterChefContract])\n\n  return { onReward: handleHarvest }\n}\n\nexport const useSousHarvest = (sousId, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    if (sousId === 0) {\n      await harvest(masterChefContract, 0, account)\n    } else if (isUsingBnb) {\n      await soushHarvestBnb(sousChefContract, account)\n    } else {\n      await soushHarvest(sousChefContract, account)\n    }\n    dispatch(updateUserPendingReward(sousId, account) as any)\n    dispatch(updateUserBalance(sousId, account) as any)\n  }, [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId])\n\n  return { onReward: handleHarvest }\n}\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { Button, Flex, Heading } from '@luckyswap/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { useHarvest } from 'hooks/useHarvest'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useWeb3React } from '@web3-react/core'\n\ninterface FarmCardActionsProps {\n  earnings?: BigNumber\n  pid?: number\n}\n\nconst HarvestAction: React.FC<FarmCardActionsProps> = ({ earnings, pid }) => {\n  const { account } = useWeb3React()\n  const TranslateString = useI18n()\n  const [pendingTx, setPendingTx] = useState(false)\n  const { onReward } = useHarvest(pid)\n\n  const rawEarningsBalance = account ? getBalanceNumber(earnings) : 0\n  const displayBalance = rawEarningsBalance.toLocaleString()\n\n  return (\n    <Flex mb=\"8px\" justifyContent=\"space-between\" alignItems=\"center\">\n      <Heading color={rawEarningsBalance === 0 ? 'textDisabled' : 'text'}>{displayBalance}</Heading>\n      <Button\n        disabled={rawEarningsBalance === 0 || pendingTx}\n        onClick={async () => {\n          setPendingTx(true)\n          await onReward()\n          setPendingTx(false)\n        }}\n      >\n        {TranslateString(562, 'Harvest')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default HarvestAction\n","import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { provider as ProviderType } from 'web3-core'\nimport { getAddress } from 'utils/addressHelpers'\nimport { getBep20Contract } from 'utils/contractHelpers'\nimport { Button, Flex, Text } from '@luckyswap/uikit'\nimport { Farm } from 'state/types'\nimport { useFarmFromSymbol, useFarmUser } from 'state/hooks'\nimport useI18n from 'hooks/useI18n'\nimport useWeb3 from 'hooks/useWeb3'\nimport { useApprove } from 'hooks/useApprove'\nimport UnlockButton from 'components/UnlockButton'\nimport StakeAction from './StakeAction'\nimport HarvestAction from './HarvestAction'\n\nconst Action = styled.div`\n  padding-top: 16px;\n`\nexport interface FarmWithStakedValue extends Farm {\n  apy?: number\n}\n\ninterface FarmCardActionsProps {\n  farm: FarmWithStakedValue\n  provider?: ProviderType\n  account?: string\n  addLiquidityUrl?: string\n}\n\nconst CardActions: React.FC<FarmCardActionsProps> = ({ farm, account, addLiquidityUrl }) => {\n  const TranslateString = useI18n()\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { pid, lpAddresses } = useFarmFromSymbol(farm.lpSymbol)\n  const { allowance, tokenBalance, stakedBalance, earnings } = useFarmUser(pid)\n  const lpAddress = getAddress(lpAddresses)\n  const lpName = farm.lpSymbol.toUpperCase()\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\n  const web3 = useWeb3()\n\n  const lpContract = getBep20Contract(lpAddress, web3)\n\n  const { onApprove } = useApprove(lpContract)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      await onApprove()\n      setRequestedApproval(false)\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onApprove])\n\n  const renderApprovalOrStakeButton = () => {\n    return isApproved ? (\n      <StakeAction\n        stakedBalance={stakedBalance}\n        tokenBalance={tokenBalance}\n        tokenName={lpName}\n        pid={pid}\n        addLiquidityUrl={addLiquidityUrl}\n      />\n    ) : (\n      <Button mt=\"8px\" width=\"100%\" disabled={requestedApproval} onClick={handleApprove}>\n        {TranslateString(758, 'Approve Contract')}\n      </Button>\n    )\n  }\n\n  return (\n    <Action>\n      <Flex>\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"3px\">\n          {/* TODO: Is there a way to get a dynamic value here from useFarmFromSymbol? */}\n          CAKE\n        </Text>\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n          {TranslateString(1072, 'Earned')}\n        </Text>\n      </Flex>\n      <HarvestAction earnings={earnings} pid={pid} />\n      <Flex>\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"3px\">\n          {lpName}\n        </Text>\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n          {TranslateString(1074, 'Staked')}\n        </Text>\n      </Flex>\n      {!account ? <UnlockButton mt=\"8px\" width=\"100%\" /> : renderApprovalOrStakeButton()}\n    </Action>\n  )\n}\n\nexport default CardActions\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { Contract } from 'web3-eth-contract'\nimport { ethers } from 'ethers'\nimport { useAppDispatch } from 'state'\nimport { updateUserAllowance, fetchFarmUserDataAsync } from 'state/actions'\nimport { approve } from 'utils/callHelpers'\nimport { useMasterchef, useCake, useSousChef, useLottery } from './useContract'\n\n// Approve a Farm\nexport const useApprove = (lpContract: Contract) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, masterChefContract, account)\n      dispatch(fetchFarmUserDataAsync(account) as any)\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, masterChefContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve a Pool\nexport const useSousApprove = (lpContract: Contract, sousId) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, sousChefContract, account)\n      dispatch(updateUserAllowance(sousId, account) as any)\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, sousChefContract, sousId])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve the lottery\nexport const useLotteryApprove = () => {\n  const { account } = useWeb3React()\n  const cakeContract = useCake()\n  const lotteryContract = useLottery()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(cakeContract, lotteryContract, account)\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, cakeContract, lotteryContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve an IFO\nexport const useIfoApprove = (tokenContract: Contract, spenderAddress: string) => {\n  const { account } = useWeb3React()\n  const onApprove = useCallback(async () => {\n    const tx = await tokenContract.methods.approve(spenderAddress, ethers.constants.MaxUint256).send({ from: account })\n    return tx\n  }, [account, spenderAddress, tokenContract])\n\n  return onApprove\n}\n","import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { Modal, Text, LinkExternal, Flex } from '@luckyswap/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { calculateCakeEarnedPerThousandDollars, apyModalRoi } from 'utils/compoundApyHelpers'\n\ninterface ApyCalculatorModalProps {\n  onDismiss?: () => void\n  lpLabel?: string\n  cakePrice?: BigNumber\n  apy?: number\n  addLiquidityUrl?: string\n}\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-template-rows: repeat(4, auto);\n  margin-bottom: 24px;\n`\n\nconst GridItem = styled.div`\n  margin-bottom: '10px';\n`\n\nconst Description = styled(Text)`\n  max-width: 320px;\n  margin-bottom: 28px;\n`\n\nconst ApyCalculatorModal: React.FC<ApyCalculatorModalProps> = ({\n  onDismiss,\n  lpLabel,\n  cakePrice,\n  apy,\n  addLiquidityUrl,\n}) => {\n  const TranslateString = useI18n()\n  const oneThousandDollarsWorthOfCake = 1000 / cakePrice.toNumber()\n\n  const cakeEarnedPerThousand1D = calculateCakeEarnedPerThousandDollars({ numberOfDays: 1, farmApy: apy, cakePrice })\n  const cakeEarnedPerThousand7D = calculateCakeEarnedPerThousandDollars({ numberOfDays: 7, farmApy: apy, cakePrice })\n  const cakeEarnedPerThousand30D = calculateCakeEarnedPerThousandDollars({ numberOfDays: 30, farmApy: apy, cakePrice })\n  const cakeEarnedPerThousand365D = calculateCakeEarnedPerThousandDollars({\n    numberOfDays: 365,\n    farmApy: apy,\n    cakePrice,\n  })\n\n  return (\n    <Modal title=\"ROI\" onDismiss={onDismiss}>\n      <Grid>\n        <GridItem>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"20px\">\n            {TranslateString(860, 'Timeframe')}\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"20px\">\n            {TranslateString(858, 'ROI')}\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"20px\">\n            {TranslateString(864, 'LUCKY per $1000')}\n          </Text>\n        </GridItem>\n        {/* 1 day row */}\n        <GridItem>\n          <Text>1d</Text>\n        </GridItem>\n        <GridItem>\n          <Text>\n            {apyModalRoi({ amountEarned: cakeEarnedPerThousand1D, amountInvested: oneThousandDollarsWorthOfCake })}%\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{cakeEarnedPerThousand1D}</Text>\n        </GridItem>\n        {/* 7 day row */}\n        <GridItem>\n          <Text>7d</Text>\n        </GridItem>\n        <GridItem>\n          <Text>\n            {apyModalRoi({ amountEarned: cakeEarnedPerThousand7D, amountInvested: oneThousandDollarsWorthOfCake })}%\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{cakeEarnedPerThousand7D}</Text>\n        </GridItem>\n        {/* 30 day row */}\n        <GridItem>\n          <Text>30d</Text>\n        </GridItem>\n        <GridItem>\n          <Text>\n            {apyModalRoi({ amountEarned: cakeEarnedPerThousand30D, amountInvested: oneThousandDollarsWorthOfCake })}%\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{cakeEarnedPerThousand30D}</Text>\n        </GridItem>\n        {/* 365 day / APY row */}\n        <GridItem>\n          <Text>365d(APY)</Text>\n        </GridItem>\n        <GridItem>\n          <Text>\n            {apyModalRoi({ amountEarned: cakeEarnedPerThousand365D, amountInvested: oneThousandDollarsWorthOfCake })}%\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{cakeEarnedPerThousand365D}</Text>\n        </GridItem>\n      </Grid>\n      <Description fontSize=\"12px\" color=\"textSubtle\">\n        {TranslateString(\n          866,\n          'Calculated based on current rates. Compounding once daily. Rates are estimates provided for your convenience only, and by no means represent guaranteed returns.',\n        )}\n      </Description>\n      <Flex justifyContent=\"center\">\n        <LinkExternal href={addLiquidityUrl}>\n          {TranslateString(999, 'Get')} {lpLabel}\n        </LinkExternal>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default ApyCalculatorModal\n","import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport { IconButton, useModal, CalculateIcon } from '@luckyswap/uikit'\nimport ApyCalculatorModal from './ApyCalculatorModal'\n\nexport interface ApyButtonProps {\n  lpLabel?: string\n  cakePrice?: BigNumber\n  apy?: number\n  addLiquidityUrl?: string\n}\n\nconst ApyButton: React.FC<ApyButtonProps> = ({ lpLabel, cakePrice, apy, addLiquidityUrl }) => {\n  const [onPresentApyModal] = useModal(\n    <ApyCalculatorModal lpLabel={lpLabel} cakePrice={cakePrice} apy={apy} addLiquidityUrl={addLiquidityUrl} />,\n  )\n\n  const handleClickButton = (event): void => {\n    event.stopPropagation()\n    onPresentApyModal()\n  }\n\n  return (\n    <IconButton onClick={handleClickButton} variant=\"text\" scale=\"sm\" ml=\"4px\">\n      <CalculateIcon width=\"18px\" />\n    </IconButton>\n  )\n}\n\nexport default ApyButton\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled, { keyframes } from 'styled-components'\nimport { Flex, Text, Skeleton } from '@luckyswap/uikit'\nimport { communityFarms } from 'config/constants'\nimport { Farm } from 'state/types'\nimport { provider as ProviderType } from 'web3-core'\nimport useI18n from 'hooks/useI18n'\nimport ExpandableSectionButton from 'components/ExpandableSectionButton'\nimport { BASE_ADD_LIQUIDITY_URL } from 'config'\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\nimport DetailsSection from './DetailsSection'\nimport CardHeading from './CardHeading'\nimport CardActionsContainer from './CardActionsContainer'\nimport ApyButton from './ApyButton'\n\nexport interface FarmWithStakedValue extends Farm {\n  apy?: number\n  liquidity?: BigNumber\n  bonus?: number\n  farmContract?: any\n}\n\nconst RainbowLight = keyframes`\n\t0% {\n\t\tbackground-position: 0% 50%;\n\t}\n\t50% {\n\t\tbackground-position: 100% 50%;\n\t}\n\t100% {\n\t\tbackground-position: 0% 50%;\n\t}\n`\n\nconst StyledCardAccent = styled.div`\n  background: linear-gradient(\n    45deg,\n    rgba(255, 0, 0, 1) 0%,\n    rgba(255, 154, 0, 1) 10%,\n    rgba(208, 222, 33, 1) 20%,\n    rgba(79, 220, 74, 1) 30%,\n    rgba(63, 218, 216, 1) 40%,\n    rgba(47, 201, 226, 1) 50%,\n    rgba(28, 127, 238, 1) 60%,\n    rgba(95, 21, 242, 1) 70%,\n    rgba(186, 12, 248, 1) 80%,\n    rgba(251, 7, 217, 1) 90%,\n    rgba(255, 0, 0, 1) 100%\n  );\n  background-size: 300% 300%;\n  animation: ${RainbowLight} 2s linear infinite;\n  border-radius: 10px;\n  filter: blur(6px);\n  position: absolute;\n  top: -2px;\n  right: -2px;\n  bottom: -2px;\n  left: -2px;\n  z-index: -1;\n`\n\nconst FCard = styled.div`\n  align-self: baseline;\n  background: ${(props) => props.theme.card.background};\n  border-radius: 10px;\n  box-shadow: 0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05);\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  padding: 24px;\n  position: relative;\n  text-align: center;\n`\n\nconst Divider = styled.div`\n  background-color: ${({ theme }) => theme.colors.borderColor};\n  height: 1px;\n  margin: 28px auto;\n  width: 100%;\n`\n\nconst ExpandingWrapper = styled.div<{ expanded: boolean }>`\n  height: ${(props) => (props.expanded ? '100%' : '0px')};\n  overflow: hidden;\n`\n\ninterface FarmCardProps {\n  farm: FarmWithStakedValue\n  removed: boolean\n  cakePrice?: BigNumber\n  provider?: ProviderType\n  account?: string\n}\n\nconst FarmCard: React.FC<FarmCardProps> = ({ farm, removed, cakePrice, account }) => {\n  const TranslateString = useI18n()\n\n  const [showExpandableSection, setShowExpandableSection] = useState(false)\n\n  const isCommunityFarm = communityFarms.includes(farm.token.symbol)\n  // We assume the token name is coin pair + lp e.g. CAKE-BNB LP, LINK-BNB LP,\n  // NAR-CAKE LP. The images should be cake-bnb.svg, link-bnb.svg, nar-cake.svg\n  const farmImage = farm.lpSymbol.split(' ')[0].toLocaleLowerCase()\n\n  const totalValueFormatted = farm.liquidity\n    ? `$${farm.liquidity.toNumber().toLocaleString(undefined, { maximumFractionDigits: 0 })}`\n    : '-'\n\n  const lpLabel = farm.lpSymbol && farm.lpSymbol.toUpperCase().replace('PANCAKE', '')\n  const earnLabel = farm.dual ? farm.dual.earnLabel : 'CAKE'\n\n  const farmAPY = farm.apy && farm.apy.toLocaleString('en-US', { maximumFractionDigits: 2 })\n\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({\n    quoteTokenAddress: farm.quoteToken.address,\n    tokenAddress: farm.token.address,\n  })\n  const addLiquidityUrl = `${BASE_ADD_LIQUIDITY_URL}/${liquidityUrlPathParts}`\n  const lpAddress = farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]\n\n  return (\n    <FCard>\n      {farm.token.symbol === 'CAKE' && <StyledCardAccent />}\n      <CardHeading\n        lpLabel={lpLabel}\n        multiplier={farm.multiplier}\n        isCommunityFarm={isCommunityFarm}\n        farmImage={farmImage}\n        tokenSymbol={farm.token.symbol}\n      />\n      {!removed && (\n        <Flex justifyContent=\"space-between\" alignItems=\"center\">\n          <Text>{TranslateString(736, 'APR')}:</Text>\n          <Text bold style={{ display: 'flex', alignItems: 'center' }}>\n            {farm.apy ? (\n              <>\n                <ApyButton lpLabel={lpLabel} addLiquidityUrl={addLiquidityUrl} cakePrice={cakePrice} apy={farm.apy} />\n                {farmAPY}%\n              </>\n            ) : (\n              <Skeleton height={24} width={80} />\n            )}\n          </Text>\n        </Flex>\n      )}\n      <Flex justifyContent=\"space-between\">\n        <Text>{TranslateString(318, 'Earn')}:</Text>\n        <Text bold>{earnLabel}</Text>\n      </Flex>\n      <CardActionsContainer farm={farm} account={account} addLiquidityUrl={addLiquidityUrl} />\n      <Divider />\n      <ExpandableSectionButton\n        onClick={() => setShowExpandableSection(!showExpandableSection)}\n        expanded={showExpandableSection}\n      />\n      <ExpandingWrapper expanded={showExpandableSection}>\n        <DetailsSection\n          removed={removed}\n          bscScanAddress={`https://testnet.bscscan.com/address/${farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]}`}\n          infoAddress={`https://pancakeswap.info/pair/${lpAddress}`}\n          totalValueFormatted={totalValueFormatted}\n          lpLabel={lpLabel}\n          addLiquidityUrl={addLiquidityUrl}\n        />\n      </ExpandingWrapper>\n    </FCard>\n  )\n}\n\nexport default FarmCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport ApyButton from 'views/Farms/components/FarmCard/ApyButton'\nimport { Address } from 'config/constants/types'\nimport BigNumber from 'bignumber.js'\nimport { BASE_ADD_LIQUIDITY_URL } from 'config'\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\nimport useI18n from 'hooks/useI18n'\n\nexport interface AprProps {\n  value: string\n  multiplier: string\n  lpLabel: string\n  tokenAddress?: Address\n  quoteTokenAddress?: Address\n  cakePrice: BigNumber\n  originalValue: number\n  hideButton?: boolean\n}\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  color: ${({ theme }) => theme.colors.text};\n\n  button {\n    width: 20px;\n    height: 20px;\n\n    svg {\n      path {\n        fill: ${({ theme }) => theme.colors.textSubtle};\n      }\n    }\n  }\n`\n\nconst AprWrapper = styled.div`\n  min-width: 60px;\n  text-align: left;\n`\n\nconst Apr: React.FC<AprProps> = ({\n  value,\n  lpLabel,\n  tokenAddress,\n  quoteTokenAddress,\n  cakePrice,\n  originalValue,\n  hideButton = false,\n}) => {\n  const TranslateString = useI18n()\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({ quoteTokenAddress, tokenAddress })\n  const addLiquidityUrl = `${BASE_ADD_LIQUIDITY_URL}/${liquidityUrlPathParts}`\n  return originalValue !== 0 ? (\n    <Container>\n      {originalValue ? (\n        <>\n          {!hideButton && (\n            <ApyButton lpLabel={lpLabel} cakePrice={cakePrice} apy={originalValue} addLiquidityUrl={addLiquidityUrl} />\n          )}\n          <AprWrapper>{value}%</AprWrapper>\n        </>\n      ) : (\n        <AprWrapper>{TranslateString(656, 'Loading...')}</AprWrapper>\n      )}\n    </Container>\n  ) : (\n    <Container>\n      <AprWrapper>{originalValue}%</AprWrapper>\n    </Container>\n  )\n}\n\nexport default Apr\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useFarmUser } from 'state/hooks'\nimport useI18n from 'hooks/useI18n'\nimport { Text, Image } from '@luckyswap/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\n\n\n\nexport interface FarmProps {\n  label: string\n  pid: number\n  image: string\n}\n\nconst IconImage = styled(Image)`\n  width: 24px;\n  height: 24px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: 40px;\n    height: 40px;\n  }\n`\n\nconst Container = styled.div`\n  padding-left: 12px;\n  display: flex;\n  align-items: center;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-left: 32px;\n  }\n`\n\nconst Farm: React.FunctionComponent<FarmProps> = ({ image, label, pid }) => {\n  const { stakedBalance } = useFarmUser(pid)\n  const TranslateString = useI18n()\n  const rawStakedBalance = getBalanceNumber(stakedBalance)\n\n\n  const handleRenderFarming = (): JSX.Element => {\n    if (rawStakedBalance) {\n      return (\n        <Text color=\"secondary\" fontSize=\"12px\" bold>\n          {TranslateString(999, '')}\n        </Text>\n      )\n    }\n\n    return null\n  }\n\n  return (\n    <Container>\n      {/* <IconImage src={`/images/farms/${image}.svg`} alt=\"icon\" width={40} height={40} mr=\"8px\" /> */}\n      <IconImage src=\"/images/logo-icon.png\" alt=\"icon\" width={40} height={40} mr=\"8px\" />\n      <IconImage src=\"/images/logo-icon.png\" alt=\"icon\" width={40} height={40} mr=\"8px\" ml=\"-16px\"/>\n      <div>\n        {handleRenderFarming()}\n        <Text bold>{label}</Text>\n      </div>\n    </Container>\n  )\n}\n\nexport default Farm\n\n\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useWeb3React } from '@web3-react/core'\n\nexport interface EarnedProps {\n  earnings: number\n  pid: number\n}\n\nconst Amount = styled.span<{ earned: number }>`\n  color: ${({ earned, theme }) => (earned ? theme.colors.text : theme.colors.textDisabled)};\n  display: flex;\n  align-items: center;\n`\n\nconst Earned: React.FunctionComponent<EarnedProps> = ({ earnings }) => {\n  const { account } = useWeb3React()\n  const amountEarned = account ? earnings : null\n\n  const displayBalance = amountEarned ? amountEarned.toLocaleString() : '?'\n  return <Amount earned={amountEarned}>{displayBalance}</Amount>\n}\n\nexport default Earned\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ChevronDownIcon, useMatchBreakpoints } from '@luckyswap/uikit'\nimport useI18n from 'hooks/useI18n'\n\ninterface DetailsProps {\n  actionPanelToggled: boolean\n}\n\nconst Container = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: flex-end;\n  padding-right: 8px;\n  color: ${({ theme }) => theme.colors.primary};\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-right: 0px;\n  }\n`\n\nconst ArrowIcon = styled(ChevronDownIcon)<{ toggled: boolean }>`\n  transform: ${({ toggled }) => (toggled ? 'rotate(180deg)' : 'rotate(0)')};\n  height: 20px;\n`\n\nconst Details: React.FC<DetailsProps> = ({ actionPanelToggled }) => {\n  const TranslateString = useI18n()\n  const { isXl } = useMatchBreakpoints()\n  const isMobile = !isXl\n\n  return (\n    <Container>\n      {!isMobile && TranslateString(658, 'Info')}\n      <ArrowIcon color=\"primary\" toggled={actionPanelToggled} />\n    </Container>\n  )\n}\n\nexport default Details\n","import React from 'react'\nimport styled from 'styled-components'\nimport { HelpIcon } from '@luckyswap/uikit'\nimport useI18n from 'hooks/useI18n'\n\nimport Tooltip from '../Tooltip/Tooltip'\n\nexport interface MultiplierProps {\n  multiplier: string\n}\n\nconst MultiplierWrapper = styled.div`\n  color: ${({ theme }) => theme.colors.text};\n  width: auto;\n  text-align: right;\n  background-color: #BF4855;\n  border-radius: 10px;\n  padding: 10px;\n  font-weight: 600;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    text-align: left;\n  }\n`\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n\n  svg {\n    margin-left: 14px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    svg {\n      margin-left: 0;\n    }\n  }\n`\n\nconst Multiplier: React.FunctionComponent<MultiplierProps> = ({ multiplier }) => {\n  const displayMultiplier = multiplier ? multiplier.toLowerCase() : '-'\n  const TranslateString = useI18n()\n\n  return (\n    <Container>\n      <MultiplierWrapper>{displayMultiplier}</MultiplierWrapper>\n      {/* <Tooltip\n        content={\n          <div>\n            {TranslateString(999, 'The multiplier represents the amount of LUCKY rewards each farm gets.')}\n            <br />\n            <br />\n            {TranslateString(\n              999,\n              'For example, if a 1x farm was getting 1 LUCKY per block, a 40x farm would be getting 40 LUCKY per block.',\n            )}\n          </div>\n        }\n      >\n        <HelpIcon color=\"textSubtle\" />\n      </Tooltip> */}\n    </Container>\n  )\n}\n\nexport default Multiplier\n","import React from 'react'\nimport styled from 'styled-components'\nimport { HelpIcon, Text } from '@luckyswap/uikit'\nimport useI18n from 'hooks/useI18n'\n\nimport Tooltip from '../Tooltip/Tooltip'\n\nexport interface LiquidityProps {\n  liquidity: number\n}\n\nconst LiquidityWrapper = styled.div`\n  min-width: 110px;\n  font-weight: 600;\n  text-align: right;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    text-align: left;\n  }\n`\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n\n  svg {\n    margin-left: 14px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    svg {\n      margin-left: 0;\n    }\n  }\n`\n\nconst Liquidity: React.FunctionComponent<LiquidityProps> = ({ liquidity }) => {\n  const displayLiquidity = liquidity\n    ? `$${Number(liquidity).toLocaleString(undefined, { maximumFractionDigits: 0 })}`\n    : '-'\n  const TranslateString = useI18n()\n\n  return (\n    <Container>\n      <LiquidityWrapper>\n        <Text>{displayLiquidity}</Text>\n      </LiquidityWrapper>\n      {/* <Tooltip content={TranslateString(999, 'The total value of the funds in this farm’s liquidity pool')}>\n        <HelpIcon color=\"textSubtle\" />\n      </Tooltip> */}\n    </Container>\n  )\n}\n\nexport default Liquidity\n","import React from 'react'\nimport styled from 'styled-components'\nimport { HelpIcon, Text } from '@luckyswap/uikit'\n\n\nexport interface PlatformProps {\n  platform: number\n}\n\nconst LiquidityWrapper = styled.div`\n  min-width: 110px;\n  font-weight: 600;\n  text-align: right;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    text-align: left;\n  }\n`\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n\n  svg {\n    margin-left: 14px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    svg {\n      margin-left: 0;\n    }\n  }\n`\n\nconst Platform: React.FunctionComponent<PlatformProps> = () => {\n  return (\n    <Container>\n      <LiquidityWrapper>\n        <Text>HUT</Text>\n      </LiquidityWrapper>\n    </Container>\n  )\n}\n\nexport default Platform\n","import styled from 'styled-components'\n\nexport const ActionContainer = styled.div`\n  /* padding: 16px; */\n  /* background: rgb(41 41 41); */\n  /* box-shadow: 0px 0px 11px 0px rgb(29 26 26 / 57%); */\n  flex-grow: 1;\n  flex-basis: 0;\n  margin-bottom: 16px;\n  \n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    // margin-left: 12px;\n    margin-right: 12px;\n    margin-bottom: 0;\n    // max-height: 100px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    // margin-left: 48px;\n    margin-right: 0;\n    margin-bottom: 0;\n    // max-height: 100px;\n  }\n`\n\nexport const ActionTitles = styled.div`\n  font-weight: 600;\n  font-size: 12px;\n  margin-bottom: 8px;\n`\n\nexport const Title = styled.span`\n  color: ${({ theme }) => theme.colors.secondary};\n`\n\nexport const Subtle = styled.span`\n  color: ${({ theme }) => theme.colors.textSubtle};\n`\n\nexport const ActionContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 0 20px;\n`\nexport const Earned = styled.div`\n  font-weight: 600;\n  font-size: 40px;\n  color: ${({ theme }) => theme.colors.text};\n  text-align: center;\n`\n\nexport const Staked = styled.div`\n  font-size: 12px;\n  color: ${({ theme }) => theme.colors.textSubtle};\n  padding: 10px 0;\n`\n","import React, { useState, useRef, useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { Button } from '@luckyswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useHarvest } from 'hooks/useHarvest'\nimport useI18n from 'hooks/useI18n'\nimport { usePriceLuckyBusd } from 'state/hooks'\nimport { useCountUp } from 'react-countup'\nimport { useFarmNFTContract, useFarmsContract } from 'hooks/useContract'\n\nimport { ActionContainer, ActionTitles, Title, Subtle, ActionContent, Earned, Staked } from './styles'\nimport { FarmType } from '../../../../../constants/index'\n\nconst WrapAction: React.FC<FarmWithStakedValue> = (props) => {\n  const { type } = props\n  const newFarmContract = useFarmNFTContract()\n  const farmContract = useFarmsContract()\n\n  const render = () => {\n    switch (type) {\n      case FarmType.LUCKYSWAP:\n        return <HarvestAction {...props} farmContract={farmContract} />\n      case FarmType.SPACEHUNTER:\n        return <HarvestAction {...props} farmContract={newFarmContract} />\n      default:\n        return <HarvestAction {...props} farmContract={farmContract} />\n    }\n  }\n  return <> {render()} </>\n}\n\nconst HarvestAction: React.FunctionComponent<FarmWithStakedValue> = ({ pid, userData, farmContract }) => {\n  const { account } = useWeb3React()\n  const earningsBigNumber = userData && account ? new BigNumber(userData.earnings) : null\n  const cakePrice = usePriceLuckyBusd()\n  let earnings = null\n  let earningsBusd = 0\n  let displayBalance = '?'\n\n  if (earningsBigNumber) {\n    earnings = getBalanceNumber(earningsBigNumber)\n    earningsBusd = new BigNumber(earnings).multipliedBy(cakePrice).toNumber()\n    displayBalance = earnings.toLocaleString()\n  }\n\n  const [pendingTx, setPendingTx] = useState(false)\n  const { onReward } = useHarvest(pid)\n  const TranslateString = useI18n()\n\n  const { countUp, update } = useCountUp({\n    start: 0,\n    end: earningsBusd,\n    duration: 1,\n    separator: ',',\n    decimals: 3,\n  })\n  const updateValue = useRef(update)\n\n  async function _onReward() {\n    console.log('claim : ', farmContract.address)\n    if (farmContract) {\n      const args = [pid, new BigNumber(0).times(new BigNumber(10).pow(18)).toString()]\n      await farmContract\n        .deposit(...args, { gasLimit: 200000 })\n        .then((response: any) => {\n          console.log('response>>', response)\n        })\n        .catch((error: any) => {\n          // setAttempting(false)\n          console.log(error)\n        })\n    }\n  }\n\n  useEffect(() => {\n    updateValue.current(earningsBusd)\n  }, [earningsBusd, updateValue])\n\n  return (\n    <ActionContainer className=\"border-r\">\n      {/* <ActionTitles>\n        <Title>BEST</Title>\n        <Subtle>{TranslateString(999, 'EARNED')}</Subtle>\n      </ActionTitles> */}\n\n      <ActionContent>\n        <div>\n          <Earned>{displayBalance}</Earned>\n          <Staked>~{countUp}USD</Staked>\n        </div>\n        <Button\n          variant=\"tertiary\"\n          disabled={!earnings || pendingTx || !account}\n          onClick={async () => {\n            setPendingTx(true)\n            await _onReward()\n            setPendingTx(false)\n          }}\n          mb=\"10px\"\n        >\n          {TranslateString(562, 'Harvest')}\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default WrapAction\n","import React from 'react'\nimport { Button, useWalletModal } from '@luckyswap/uikit'\nimport useAuth from 'hooks/useAuth'\nimport useI18n from 'hooks/useI18n'\n\nconst UnlockButton = (props) => {\n  const TranslateString = useI18n()\n  const { login, logout } = useAuth()\n  const { onPresentConnectModal } = useWalletModal(login, logout)\n\n  return (\n    <div className=\"custom-btn-farm\">\n      <Button onClick={onPresentConnectModal} {...props}>\n        {TranslateString(292, 'Unlock Wallet')}\n      </Button>\n    </div>\n  )\n}\n\nexport default UnlockButton\n","import { AddIcon, Button, IconButton, MinusIcon, useModal } from '@luckyswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport UnlockButton from 'components/UnlockButtonFarm'\nimport { BASE_ADD_LIQUIDITY_URL } from 'config'\nimport { ethers } from 'ethers'\nimport { useApproveCallbackCustom } from 'hooks/useApproveCallback'\nimport { useFarmsContract } from 'hooks/useContract'\nimport useI18n from 'hooks/useI18n'\nimport React, { useCallback, useState } from 'react'\nimport { useFarmUser } from 'state/hooks'\nimport styled from 'styled-components'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\nimport { FarmType } from '../../../../../constants/index'\nimport { useActiveWeb3React } from '../../../../../hooks/index'\nimport { useFarmNFTContract } from '../../../../../hooks/useContract'\nimport { useAppDispatch } from '../../../../../state/index'\nimport DepositModal from '../../DepositModal'\nimport WithdrawModal from '../../WithdrawModal'\nimport { ActionContainer, ActionContent, ActionTitles, Earned, Subtle, Title } from './styles'\nimport { useApproveForAllNFTCallback } from '../../../../../hooks/useApproveNFTCallback';\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n`\n\nconst WrapAction: React.FC<FarmWithStakedValue> = (props) => {\n  const { type } = props\n  const newFarmContract = useFarmNFTContract()\n  const farmContract = useFarmsContract()\n\n  const render = () => {\n    switch (type) {\n      case FarmType.LUCKYSWAP:\n        return <Staked {...props} farmContract={farmContract} />\n      case FarmType.SPACEHUNTER:\n        return <Staked {...props} farmContract={newFarmContract} />\n      default:\n        return <Staked {...props} farmContract={farmContract} />\n    }\n  }\n  return <> {render()} </>\n}\n\nconst Staked: React.FunctionComponent<any> = ({\n  pid,\n  lpSymbol,\n  lpAddresses,\n  quoteToken,\n  token,\n  type,\n  farmContract,\n}) => {\n  const TranslateString = useI18n()\n  const { account, chainId } = useActiveWeb3React()\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { allowance, tokenBalance, stakedBalance } = useFarmUser(pid)\n  const dispatch = useAppDispatch()\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\n\n  const lpAddress = lpAddresses[chainId]\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({\n    quoteTokenAddress: quoteToken.address,\n    tokenAddress: token.address,\n  })\n  const addLiquidityUrl = `${BASE_ADD_LIQUIDITY_URL}/${liquidityUrlPathParts}`\n  const rawStakedBalance = getBalanceNumber(stakedBalance)\n  const displayBalance = rawStakedBalance.toLocaleString()\n\n  const [onPresentDeposit] = useModal(\n    <DepositModal\n      max={tokenBalance}\n      onConfirm={(amount) => _onStake(amount)}\n      tokenName={lpSymbol}\n      addLiquidityUrl={addLiquidityUrl}\n    />,\n  )\n  const [onPresentWithdraw] = useModal(\n    <WithdrawModal max={stakedBalance} onConfirm={(amount) => _onUnstake(amount)} tokenName={lpSymbol} />,\n  )\n  const [approval] = useApproveCallbackCustom(lpAddress, farmContract?.address)\n\n  async function onAttemptToApprove() {\n    return approval()\n  }\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      await onAttemptToApprove()\n    } catch (e) {\n      console.error(e)\n    }\n    /* eslint-disable react-hooks/exhaustive-deps */\n  }, [approval, setRequestedApproval])\n\n  const renderStakingButtons = () => {\n    return rawStakedBalance === 0 ? (\n      <Button onClick={onPresentDeposit}>{TranslateString(999, 'Stake LP')}</Button>\n    ) : (\n      <IconButtonWrapper>\n        <IconButton variant=\"tertiary\" onClick={onPresentWithdraw} mr=\"6px\">\n          <MinusIcon color=\"primary\" width=\"14px\" />\n        </IconButton>\n        <IconButton variant=\"tertiary\" onClick={onPresentDeposit}>\n          <AddIcon color=\"primary\" width=\"14px\" />\n        </IconButton>\n      </IconButtonWrapper>\n    )\n  }\n\n  async function _onStake(amount) {\n    if (farmContract) {\n      const args = [pid, ethers.utils.parseUnits(amount, 'ether')]\n      await farmContract\n        .deposit(...args, { gasLimit: 200000 })\n        .then((response: any) => {\n          console.log('response>>', response)\n        })\n        .catch((error: any) => {\n          // setAttempting(false)\n          console.log(error)\n        })\n    }\n  }\n\n  async function _onUnstake(amount) {\n    if (farmContract) {\n      const args = [pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString()]\n      await farmContract\n        .withdraw(...args, { gasLimit: 200000 })\n        .then((response: any) => {\n          console.log('response>>', response)\n        })\n        .catch((error: any) => {\n          // setAttempting(false)\n          console.log(error)\n        })\n    }\n  }\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Subtle color=\"#2b2c3a\">{TranslateString(999, 'START FARMING')}</Subtle>\n        </ActionTitles>\n        <ActionContent>\n          <UnlockButton width=\"100%\" />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (isApproved) {\n    if (rawStakedBalance) {\n      return (\n        <ActionContainer>\n          <ActionTitles>\n            <Title>{lpSymbol} </Title>\n            <Subtle>{TranslateString(999, 'STAKED')}</Subtle>\n          </ActionTitles>\n          <ActionContent>\n            <div>\n              <Earned>{displayBalance}</Earned>\n            </div>\n            <IconButtonWrapper>\n              <IconButton variant=\"success\" onClick={onPresentWithdraw} mr=\"6px\">\n                <MinusIcon color=\"primary\" width=\"14px\" />\n              </IconButton>\n              <IconButton variant=\"success\" onClick={onPresentDeposit}>\n                <AddIcon color=\"primary\" width=\"14px\" />\n              </IconButton>\n            </IconButtonWrapper>\n          </ActionContent>\n        </ActionContainer>\n      )\n    }\n\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Subtle>{TranslateString(999, 'STAKE')} </Subtle>\n          <Title>{lpSymbol}</Title>\n        </ActionTitles>\n        <ActionContent>\n          {/* <Button width=\"100%\" onClick={onPresentDeposit} variant=\"secondary\">\n            {TranslateString(999, 'Stake LP')}\n          </Button> */}\n          {renderStakingButtons()}\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>\n        <Subtle>{TranslateString(999, 'ENABLE FARM')}</Subtle>\n      </ActionTitles>\n      <ActionContent>\n        <Button width=\"100%\" disabled={requestedApproval} onClick={handleApprove} variant=\"secondary\">\n          {TranslateString(999, 'Enable')}\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default WrapAction\n","import { useEffect, useState } from 'react'\nimport { setSpaceHunterCollection } from 'state/collection'\nimport { useActiveWeb3React } from './index'\nimport { useFarmNFTContract } from './useContract'\nimport { BoostedNFT } from '../config/constants/types'\nimport { useMySpaceHunterCollection } from '../state/hooks'\nimport { findNFT, foundNFT } from '../utils/array'\nimport { useAppDispatch } from '../state/index'\nimport { useSpaceHunterCollection } from './useCollection'\n\nconst useNFTsBoosted = (pid: number) => {\n  const { account } = useActiveWeb3React()\n  const farmContract = useFarmNFTContract()\n  const mySpaceHunterCollection = useSpaceHunterCollection()\n  const [totalBonus, setTotalBonus] = useState(0)\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    const fetchNftsUseToBoost = async () => {\n      let nfts: BoostedNFT[] = await farmContract.getUserNftsBoosted(pid, account)\n\n      nfts = nfts.map((item) => {\n        const formattedTokenId = parseInt((item as any).tokenId.toString())\n        return {\n          ...item,\n          tokenID: formattedTokenId,\n        }\n      })\n\n      dispatch(\n        setSpaceHunterCollection(\n          mySpaceHunterCollection.map((item) => {\n            if (foundNFT(nfts, item.contractAddress, item.tokenID)) {\n              return {\n                ...item,\n                isUsingToBoost: true,\n              }\n            }\n            return { ...item, isUsingToBoost: false }\n          }),\n        ),\n      )\n    }\n\n    fetchNftsUseToBoost()\n  }, [farmContract, account, pid, mySpaceHunterCollection, dispatch])\n\n  useEffect(() => {\n    farmContract.totalBoostedPercent(pid).then((response) => {\n      setTotalBonus(response.toString())\n    })\n  }, [farmContract, pid])\n  return [totalBonus]\n}\n\nexport default useNFTsBoosted\n","import React, { useState } from 'react'\nimport { Modal, Row } from 'antd'\nimport styled from 'styled-components'\nimport { SwapOutlined } from '@ant-design/icons'\nimport { isMobile } from 'react-device-detect'\nimport { BoostedNFT } from '../../../config/constants/types'\nimport { findNFT, findNFTIndex } from '../../../utils/array'\n\ninterface Props {\n  visible: any\n  setVisible: (visible: boolean) => void\n  data: any\n  // multiSelect?: boolean,\n  title: string\n}\n\nconst BoxAction = styled.div`\n  display: block;\n  color: white;\n  margin-top: 10px;\n  justify-content: space-between;\n`\nconst NFTChosen = styled.div``\nconst Name = styled.div``\nconst BonusAndAction = styled.div`\n  margin: auto 0;\n`\nconst Bonus = styled.div`\n  color: #5ffff8;\n  margin-bottom: 14px;\n`\n\nconst ImgNFT = styled.img`\n  width: 100px;\n  height: 100px;\n  padding: 10px;\n  border-radius: 30px;\n`\n\nconst CardItem = ({ image, tokenID, contractAddress, boostedPercent }: BoostedNFT) => {\n  return (\n    <>\n      <BoxAction>\n        <NFTChosen>\n          <ImgNFT src={image} />\n        </NFTChosen>\n        <BonusAndAction>\n          <Name>Chua co ten</Name>\n          <Bonus>{boostedPercent}%</Bonus>\n        </BonusAndAction>\n      </BoxAction>\n    </>\n  )\n}\nexport default function ModalSelectSwap({\n  visible,\n  data,\n  setVisible,\n  title,\n  stakeNFTsToBoost,\n  unstakeNFTsBoosting,\n  isPendingStake,\n  isPendingUnstake,\n  pid,\n}) {\n  const [selectedItems, setSelectedMyItem] = useState<BoostedNFT[]>([])\n\n  const isSelected = (item: BoostedNFT) => {\n    return findNFTIndex(selectedItems, item.contractAddress, item.tokenID) !== -1\n  }\n\n  const handleCheck = (item: BoostedNFT) => {\n    const index = findNFTIndex(selectedItems, item.contractAddress, item.tokenID)\n    if (index !== -1) {\n      setSelectedMyItem((prevState) =>\n        prevState.filter((token) => token.tokenID !== item.tokenID || token.contractAddress !== item.contractAddress),\n      )\n    } else {\n      setSelectedMyItem((prevState) => [...prevState, item])\n    }\n  }\n\n  const handleSubmit = () => {\n    if (selectedItems.length === 0) {\n      setVisible(false)\n      return\n    }\n\n    if (selectedItems[0].isUsingToBoost) {\n      unstakeNFTsBoosting(pid, selectedItems)\n    } else {\n      stakeNFTsToBoost(pid, selectedItems)\n    }\n  }\n\n  const onCloseModal = () => {\n    setVisible(false)\n  }\n\n  return (\n    <ModalStyled\n      title={title}\n      centered\n      visible={visible}\n      onCancel={onCloseModal}\n      width={500}\n      footer={\n        <Row justify=\"center\">\n          {selectedItems.length > 0 && (\n            <ButtonTrade disabled={isPendingStake || isPendingUnstake} onClick={handleSubmit}>\n              {selectedItems[0]?.isUsingToBoost ? 'Unstake' : 'Stake'}\n            </ButtonTrade>\n          )}\n        </Row>\n      }\n    >\n      <WrapperModalBody>\n        {data.map((item: BoostedNFT) => {\n          return (\n            <button\n              type=\"button\"\n              onClick={() => handleCheck(item)}\n              key={`${item.tokenID}-${item.contractAddress}`}\n              className={isSelected(item) ? 'card-item active' : 'card-item'}\n            >\n              <div className=\"card\">\n                <CardItem\n                  tokenID={item.tokenID}\n                  image={item.image}\n                  contractAddress={item.contractAddress}\n                  boostedPercent={item.boostedPercent}\n                />\n              </div>\n            </button>\n          )\n        })}\n      </WrapperModalBody>\n    </ModalStyled>\n  )\n}\nconst ButtonTrade = styled.button`\n  width: max-content;\n  height: max-content;\n  border-radius: 100px;\n  border: 2px solid #35a5fc;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 8px 24px;\n  font-weight: 600;\n  font-weight: 600;\n  font-size: 16px;\n  line-height: 24px;\n  color: #2b2e2f;\n  cursor: pointer;\n  margin-right: 10px;\n  background-color: #f4c708;\n  border-color: #203c46;\n  border: 0;\n  box-shadow: none;\n  :hover {\n    opacity: 0.7;\n  }\n  &.disabled {\n    background: #bdbdbd;\n    color: #fff;\n    border: 2px solid #fff;\n  }\n  > img,\n  span {\n    /* margin-right: 5px; */\n  }\n`\nconst ModalStyled = styled(Modal)`\n  background: linear-gradient(45deg, rgb(35 35 35) 30%, rgb(45 45 45) 100%);\n  box-shadow: 0px 0px 11px 0px rgb(16 16 16 / 57%);\n  border-radius: 24px;\n  width: auto;\n  min-width: 320px;\n  max-width: 100%;\n  padding-bottom: 0;\n  .ant-modal-body {\n    padding-top: 0 !important;\n  }\n  .ant-modal-content {\n    background-color: transparent;\n    overflow: hidden;\n    .ant-modal-body {\n      height: 270px;\n      padding: 20px;\n      display: flex;\n    }\n  }\n  .ant-modal-header {\n    align-items: center;\n    background: transparent;\n    display: flex;\n    padding: 24px;\n    border-bottom: 0;\n  }\n  .ant-modal-footer {\n    border-top: 0;\n    margin-bottom: 10px;\n  }\n  .ant-modal-close {\n    color: white;\n    margin: 12px;\n    margin-right: 20px !important;\n    &:hover {\n      opacity: 0.7;\n    }\n  }\n  .ant-modal-title {\n    color: white;\n    font-size: 25px;\n    font-weight: 600;\n    line-height: 1.1;\n  }\n`\n\nconst WrapperModalBody = styled.div`\n  width: 100%;\n  justify-content: space-around;\n  overflow: scroll;\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  flex-wrap: wrap;\n  max-height: 65vh;\n  ::-webkit-scrollbar {\n    display: none;\n  }\n  .card-item {\n    cursor: pointer;\n    filter: 1;\n    margin: ${isMobile ? '0 auto' : ' 10px'};\n    box-sizing: border-box;\n    position: relative;\n    background: transparent;\n    border: 0;\n    padding: 0;\n    &::before {\n      box-sizing: border-box;\n      border-radius: 15px;\n      content: '';\n      position: absolute;\n      top: -3px;\n      left: -3px;\n      right: -3px;\n      bottom: -3px;\n      padding: 3px;\n      background: white;\n      -webkit-mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);\n      -webkit-mask-composite: destination-out;\n    }\n    .card {\n      pointer-events: none;\n      border-radius: 15px;\n      background: linear-gradient(45deg, rgb(35 35 35) 30%, rgb(45 45 45) 100%);\n    }\n    &.active {\n      ::before {\n        .card {\n          pointer-events: none;\n        }\n        box-sizing: border-box;\n        border-radius: 15px;\n        content: '';\n        position: absolute;\n        top: -3px;\n        left: -3px;\n        right: -3px;\n        bottom: -3px;\n        padding: 3px;\n        background: #35a5fc !important;\n        -webkit-mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);\n        -webkit-mask-composite: destination-out;\n      }\n    }\n\n    /* :hover {\n      ::before {\n        box-sizing: border-box;\n]        border-radius: 8px;\n        content: \"\";\n        position: absolute;\n        top: -3px;\n        left: -3px;\n        right: -3px;\n        bottom: -3px;\n        padding: 3px;\n        background: linear-gradient(\n    270deg\n    ,#19A3DD -16.5%,#BADEB7 117.25%);\n        -webkit-mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);\n        -webkit-mask-composite: destination-out;\n      }\n      \n    } */\n  }\n`\n","export type TableProps = {\n  data?: TableDataTypes[]\n  selectedFilters?: string\n  sortBy?: string\n  sortDir?: string\n  onSort?: (value: string) => void\n}\n\nexport type ColumnsDefTypes = {\n  id: number\n  label: string\n  name: string\n  translationId: number\n  sortable: boolean\n}\n\nexport type ScrollBarProps = {\n  ref: string\n  width: number\n}\n\nexport type TableDataTypes = {\n  POOL: string\n  APY: string\n  EARNED: string\n  STAKED: string\n  DETAILS: string\n  LINKS: string\n}\n\nexport const MobileColumnSchema: ColumnsDefTypes[] = [\n  {\n    id: 1,\n    name: 'farm',\n    translationId: 999,\n    sortable: true,\n    label: '',\n  },\n  {\n    id: 2,\n    name: 'earned',\n    translationId: 1072,\n    sortable: true,\n    label: 'Earned',\n  },\n  {\n    id: 3,\n    name: 'apr',\n    translationId: 736,\n    sortable: true,\n    label: 'APR',\n  },\n  {\n    id: 6,\n    name: 'details',\n    translationId: 999,\n    sortable: true,\n    label: '',\n  },\n]\n\nexport const DesktopColumnSchema: ColumnsDefTypes[] = [\n  {\n    id: 1,\n    name: 'farm',\n    translationId: 999,\n    sortable: true,\n    label: '',\n  },\n  {\n    id: 2,\n    name: 'multiplier',\n    translationId: 999,\n    sortable: true,\n    label: '',\n  },\n  {\n    id: 7,\n    name: 'platform',\n    translationId: 999,\n    sortable: true,\n    label: '',\n  },\n  {\n    id: 3,\n    name: 'earned',\n    translationId: 1072,\n    sortable: true,\n    label: '',\n  },\n  {\n    id: 4,\n    name: 'apr',\n    translationId: 736,\n    sortable: true,\n    label: 'APR',\n  },\n  {\n    id: 5,\n    name: 'liquidity',\n    translationId: 999,\n    sortable: true,\n    label: '',\n  },\n  {\n    id: 6,\n    name: 'details',\n    translationId: 999,\n    sortable: true,\n    label: '',\n  },\n]\n\nexport enum ViewMode {\n  'TABLE' = 'TABLE',\n  'CARD' = 'CARD',\n}\n","import { isApproveForAllNFTs } from 'data/Allowances'\nimport useNFTsBoosted from 'hooks/useSpaceHunterBoosted'\nimport React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\nimport notification from 'views/Staking/Components/Alert'\nimport { useFarmNFTContract } from '../../../../../hooks/useContract'\nimport { useStakeNFTsFarm, useUnstakeNFTsFarm } from '../../../../../hooks/useStakeNFTsFarm'\nimport { useMySpaceHunterCollection } from '../../../../../state/hooks'\nimport { useTransactionAdder } from '../../../../../state/transactions/hooks'\nimport StakeNFTModal from '../../StakeNFTModal'\nimport { Title } from './styles'\nimport { useActiveWeb3React } from '../../../../../hooks/index'\nimport { approveForAllNFTs } from '../../../../../data/Allowances'\n\nconst StakeNFT = styled.div``\nconst BoxAction = styled.div`\n  display: flex;\n  margin-top: 10px;\n  justify-content: space-between;\n`\nconst NFTChosen = styled.div``\nconst BonusAndAction = styled.div`\n  margin: auto 0;\n`\nconst Bonus = styled.div`\n  color: #5ffff8;\n  margin-bottom: 14px;\n`\nconst StakeAction = styled.div`\n  cursor: pointer;\n  border-radius: 16px;\n  padding: 14px 24px;\n  background-color: transparent;\n  border: 2px solid rgb(255, 255, 255);\n  box-shadow: none;\n  color: rgb(255, 255, 255);\n  :hover {\n    opacity: 0.7;\n  }\n`\nconst ImgNFT = styled.img`\n  width: 100px;\n  height: 100px;\n  padding: 10px;\n  border-radius: 30px;\n  border: 2px solid #ffffff63;\n  opacity: 0.8;\n`\nconst TitleNFT = styled(Title)`\n  color: white;\n  margin-bottom: ;\n`\nconst Staked: React.FunctionComponent<FarmWithStakedValue> = ({ pid, lpSymbol, lpAddresses, quoteToken, token }) => {\n  const [isVisibleStakingModal, setIsVisibleStakingModal] = useState(false)\n  const [isVisibleCanStakeModal, setIsVisibleCanStakeModal] = useState(false)\n  const [totalBonus] = useNFTsBoosted(pid)\n  const mySpaceHunterCollection = useMySpaceHunterCollection()\n  const farmContract = useFarmNFTContract()\n  const addTransaction = useTransactionAdder()\n  const [isPendingStake, isConfirmedStake, stakeNFTsFarmCallback] = useStakeNFTsFarm()\n  const [isPendingUnstake, isConfirmedUnstake, unstakeNFTsFarmCallback] = useUnstakeNFTsFarm()\n  const [isApprovalForAllNfts, setIsApprovalForAllNfts] = useState<boolean>(false)\n  const [addressesNeedApprove, setAddressesNeedApprove] = useState<string[]>([])\n  const { account } = useActiveWeb3React()\n  const [isPendingApprove, setIsPendingApprove] = useState<boolean>(false)\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      const nftsCanStake = mySpaceHunterCollection.filter((item) => !item.isUsingToBoost).map((item) => item)\n      const contractAddresses: string[] = []\n      nftsCanStake.forEach((item) => {\n        if (!contractAddresses.includes(item.contractAddress)) {\n          contractAddresses.push(item.contractAddress)\n        }\n      })\n\n      setAddressesNeedApprove(contractAddresses)\n\n      isApproveForAllNFTs(contractAddresses, farmContract.address, account).then((response) => {\n        setIsApprovalForAllNfts(response)\n        if (response) {\n          clearInterval(interval)\n        }\n      })\n    }, 5000)\n\n    return () => {\n      clearInterval(interval)\n    }\n  }, [mySpaceHunterCollection, account, farmContract])\n\n  return (\n    <StakeNFT>\n      <TitleNFT>Stake NFT to bonus your farm</TitleNFT>\n      <BoxAction>\n        <NFTChosen>\n          <ImgNFT src=\"/images/farms/image.png\" />\n        </NFTChosen>\n        <BonusAndAction>\n          <Bonus>Bonused: {totalBonus ?? '0'}%</Bonus>\n          <StakeAction\n            onClick={() => {\n              setIsVisibleCanStakeModal(false)\n              setIsVisibleStakingModal(true)\n            }}\n          >\n            Staking\n          </StakeAction>\n          <StakeAction\n            onClick={() => {\n              setIsVisibleCanStakeModal(true)\n              setIsVisibleStakingModal(false)\n            }}\n          >\n            Can stake\n          </StakeAction>\n\n          {!isApprovalForAllNfts && (\n            <StakeAction\n              onClick={() => {\n                setIsPendingApprove(true)\n                approveForAllNFTs(addressesNeedApprove, farmContract.address, account)\n                  .then(() => {\n                    setIsPendingApprove(false)\n                  })\n                  .catch((err) => {\n                    notification('error', { message: 'Approve error', description: err?.message })\n                    setIsPendingApprove(false)\n                  })\n              }}\n            >\n              Approve all NFTs\n            </StakeAction>\n          )}\n        </BonusAndAction>\n      </BoxAction>\n      <StakeNFTModal\n        pid={pid}\n        title=\"Your staking NFT\"\n        visible={isVisibleStakingModal}\n        setVisible={setIsVisibleStakingModal}\n        data={mySpaceHunterCollection.filter((item) => item.isUsingToBoost)}\n        stakeNFTsToBoost={stakeNFTsFarmCallback}\n        unstakeNFTsBoosting={unstakeNFTsFarmCallback}\n        isPendingStake={isPendingStake}\n        isPendingUnstake={isPendingUnstake}\n      />\n      <StakeNFTModal\n        pid={pid}\n        title=\"Stake your NFT\"\n        visible={isVisibleCanStakeModal}\n        setVisible={setIsVisibleCanStakeModal}\n        data={mySpaceHunterCollection.filter((item) => !item.isUsingToBoost)}\n        stakeNFTsToBoost={stakeNFTsFarmCallback}\n        unstakeNFTsBoosting={unstakeNFTsFarmCallback}\n        isPendingStake={isPendingStake}\n        isPendingUnstake={isPendingUnstake}\n      />\n    </StakeNFT>\n  )\n}\n\nexport default Staked\n","import { TransactionResponse } from '@ethersproject/providers'\nimport { useCallback, useState } from 'react'\nimport { useIsTransactionConfirmed, useIsTransactionPending, useTransactionAdder } from 'state/transactions/hooks'\nimport notification from 'views/Staking/Components/Alert'\nimport { ethers } from 'ethers'\nimport { stakeNFTsFarm, unstakeNFTsFarm } from 'state/collection'\nimport { useStakingNFTContract, useFarmNFTContract } from './useContract'\nimport { StakingNFT } from '../config/constants/types'\nimport { useAppDispatch } from '../state/index'\n\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\nexport function useStakeNFTsFarm(): [boolean, boolean, (pid: any, nftsBoosted: any) => Promise<void>] {\n  const farmNFTContract = useFarmNFTContract()\n  const [txHash, setTxHash] = useState<string>('')\n  const addTransaction = useTransactionAdder()\n  const [isPending, setIsPending] = useState<boolean>(false)\n  const [isConfirmed, setIsConfirmed] = useState<boolean>(false)\n  const dispatch = useAppDispatch()\n\n  const addNftsBoostedCallback = useCallback(\n    async (pid, nftsBoosted) => {\n      if (pid === undefined || nftsBoosted.length === 0) {\n        console.log('return')\n        return\n      }\n      setIsPending(true)\n      try {\n        const tx = await farmNFTContract.addNftsBoosted(\n          pid,\n          nftsBoosted.map((item) => ({\n            tokenId: ethers.BigNumber.from(item.tokenID),\n            contractAddress: item.contractAddress,\n          })),\n        )\n\n        addTransaction(tx, {\n          summary: `\n            Stake NFTs to boost pool ${pid}\n          `,\n        })\n        const receipt = await tx.wait()\n        if (receipt.status) {\n          setIsConfirmed(true)\n\n          dispatch(stakeNFTsFarm(nftsBoosted))\n        }\n      } catch (error) {\n        notification('error', { message: 'Error', description: (error as any)?.message })\n      } finally {\n        setIsPending(false)\n      }\n    },\n    [farmNFTContract, addTransaction, dispatch],\n  )\n\n  return [isPending, isConfirmed, addNftsBoostedCallback]\n}\n\nexport function useUnstakeNFTsFarm(): [boolean, boolean, (pid: any, nftsBoosted: any) => Promise<void>] {\n  const farmNFTContract = useFarmNFTContract()\n  const [txHash, setTxHash] = useState<string>('')\n  const addTransaction = useTransactionAdder()\n  const [isPending, setIsPending] = useState<boolean>(false)\n  const [isConfirmed, setIsConfirmed] = useState<boolean>(false)\n  const dispatch = useAppDispatch()\n\n  const unstakeNftsBoostedCallback = useCallback(\n    async (pid, nftsBoosted) => {\n      if (pid === undefined || nftsBoosted.length === 0) {\n        return\n      }\n      setIsPending(true)\n      try {\n        const tx = await farmNFTContract.unsetNftBoosted(\n          pid,\n          nftsBoosted.map((item) => ({\n            tokenId: ethers.BigNumber.from(item.tokenID),\n            contractAddress: item.contractAddress,\n          })),\n        )\n        addTransaction(tx, {\n          summary: `\n            UnStake NFTs to boost pool ${pid}\n          `,\n        })\n        const receipt = await tx.wait()\n        if (receipt.status) {\n          setIsConfirmed(true)\n\n          dispatch(unstakeNFTsFarm(nftsBoosted))\n        }\n      } catch (error) {\n        notification('error', { message: 'Error', description: (error as any)?.message })\n      } finally {\n        setIsPending(false)\n      }\n    },\n    [farmNFTContract, addTransaction, dispatch],\n  )\n\n  return [isPending, isConfirmed, unstakeNftsBoostedCallback]\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport useI18n from 'hooks/useI18n'\nimport { LinkExternal, Text } from '@luckyswap/uikit'\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\nimport { communityFarms } from 'config/constants'\nimport { CommunityTag, CoreTag, DualTag } from 'components/Tags'\nimport { Row, Col } from 'antd'\nimport { FarmType } from '../../../../../constants'\nimport HarvestAction from './HarvestAction'\nimport StakedAction from './StakedAction'\nimport StakedNFTAction from './StakedNFTAction'\nimport Apr, { AprProps } from '../Apr'\nimport Multiplier, { MultiplierProps } from '../Multiplier'\nimport Liquidity, { LiquidityProps } from '../Liquidity'\n\nexport interface ActionPanelProps {\n  apr: AprProps\n  multiplier: MultiplierProps\n  liquidity: LiquidityProps\n  details: FarmWithStakedValue\n  type: FarmType\n}\n\nconst Container = styled(Row)`\n  background-color: transparent !important;\n  display: flex;\n  width: 100%;\n  flex-direction: column-reverse;\n  padding: 24px;\n\n  // display: grid;\n  // grid-template-columns: repeat(4,1fr);\n  justify-self: center;\n  text-align: center;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    flex-direction: row;\n    padding: 16px 20px;\n    background-color: transparent !important;\n  }\n`\n\nconst StyledLinkExternal = styled(LinkExternal)`\n  font-weight: 400;\n  color: #fff;\n`\n\nconst StakeContainer = styled.div`\n  color: ${({ theme }) => theme.colors.text};\n  align-items: center;\n  display: flex;\n  justify-content: space-between;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    justify-content: flex-start;\n  }\n`\n\nconst TagsContainer = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 25px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-top: 16px;\n  }\n\n  > div {\n    height: 24px;\n    padding: 0 6px;\n    font-size: 14px;\n    margin-right: 4px;\n\n    svg {\n      width: 14px;\n    }\n  }\n`\n\nconst ActionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  border-left: 1px solid #8c8c8c;\n  min-height: 140px;\n  justify-content: center;\n  @media (max-width: 576px) {\n    border-left: unset;\n  }\n  // &:not(:last-child) {\n  //   border-left: 1px solid #8c8c8c;\n  // }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    align-items: center;\n    flex-grow: 1;\n    flex-basis: 0;\n  }\n`\n\nconst InfoContainer = styled.div`\n  min-width: 200px;\n`\n\nconst ValueContainer = styled.div`\n  display: block;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    display: none;\n  }\n`\n\nconst ValueWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin: 4px 0px;\n`\n\nconst BoxHead = styled.div`\n  background-color: #444444;\n  color: #8c8c8c;\n  padding: 20px;\n  display: block;\n  // grid-template-columns: repeat(4, 1fr);\n  justify-self: center;\n  text-align: center;\n  font-size: 20px;\n  font-weight: 500;\n  margin-bottom: 15px;\n`\n\nconst Item = styled.div``\nconst ColContent = styled(Col)`\n  // & > div:nth-child(2){\n  //   border-right: 1px solid #8c8c8c;\n  // }\n  // @media (max-width: 576px) {\n  //   border-right: unset;\n  // }\n`\nconst StakedYourNFT = styled.div``\n\nconst ActionPanel: React.FunctionComponent<ActionPanelProps> = ({ details, apr, multiplier, liquidity, type }) => {\n  const farm = details\n\n  const TranslateString = useI18n()\n  const isActive = farm.multiplier !== '0X'\n  const { quoteToken, token, dual } = farm\n  const lpLabel = farm.lpSymbol && farm.lpSymbol.toUpperCase().replace('PANCAKE', '')\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({\n    quoteTokenAddress: quoteToken.address,\n    tokenAddress: token.address,\n  })\n  const lpAddress = farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]\n  const bsc = `https://testnet.bscscan.com/address/${lpAddress}`\n  const info = ``\n  const isCommunityFarm = communityFarms.includes(token.symbol)\n\n  return (\n    <>\n      {/* <BoxHead>\n      <Item>Infomation</Item>\n      <Item>WAD Earned</Item>\n      <Item>Farming</Item>\n      <Item>Your NFT</Item>\n    </BoxHead> */}\n\n      <Container>\n        <ColContent span={24} md={farm.type === 'space-hunter' ? 6 : 8}>\n          <BoxHead>\n            <Item>Infomation</Item>\n          </BoxHead>\n          <InfoContainer>\n            {isActive && (\n              <StakeContainer>\n                <StyledLinkExternal href={`https://luckyswap.finance/#/add/${liquidityUrlPathParts}`}>\n                  {TranslateString(999, `Get ${lpLabel}`, { name: lpLabel })}\n                </StyledLinkExternal>\n              </StakeContainer>\n            )}\n            <StyledLinkExternal href={bsc} color=\"#2b2c3a\">\n              {TranslateString(999, 'View Contract')}\n            </StyledLinkExternal>\n            <StyledLinkExternal href=\"#\">{TranslateString(999, 'See Pair Info')}</StyledLinkExternal>\n            <TagsContainer>\n              {isCommunityFarm ? <CommunityTag /> : <CoreTag />}\n              {dual ? <DualTag /> : null}\n            </TagsContainer>\n          </InfoContainer>\n        </ColContent>\n\n        <ValueContainer>\n          <ValueWrapper>\n            <Text>{TranslateString(736, 'APR')}</Text>\n            <Apr {...apr} />\n          </ValueWrapper>\n          <ValueWrapper>\n            <Text>{TranslateString(999, 'Multiplier')}</Text>\n            <Multiplier {...multiplier} />\n          </ValueWrapper>\n          <ValueWrapper>\n            <Text>{TranslateString(999, 'Liquidity')}</Text>\n            <Liquidity {...liquidity} />\n          </ValueWrapper>\n        </ValueContainer>\n        <ColContent span={24} md={farm.type === 'space-hunter' ? 6 : 8}>\n          <BoxHead>\n            <Item> Earned</Item>\n          </BoxHead>\n          <ActionContainer>\n            <HarvestAction {...farm} type={type} />\n          </ActionContainer>\n        </ColContent>\n\n        <ColContent span={24} md={farm.type === 'space-hunter' ? 5 : 8}>\n          <BoxHead>\n            <Item>Farming</Item>\n          </BoxHead>\n          <ActionContainer>\n            <StakedAction {...farm} type={type} />\n          </ActionContainer>\n        </ColContent>\n\n        <ColContent span={farm.type === 'space-hunter' ? 24 : 0} md={farm.type === 'space-hunter' ? 7 : 0}>\n          <BoxHead>\n            <Item>Your NFT</Item>\n          </BoxHead>\n          <ActionContainer>\n            <StakedNFTAction {...farm} />\n            {/* <StakedYourNFT>\n          \n        </StakedYourNFT> */}\n          </ActionContainer>\n        </ColContent>\n      </Container>\n    </>\n  )\n}\n\nexport default ActionPanel\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Label = styled.div`\n  font-size: 12px;\n  color: ${({ theme }) => theme.colors.textSubtle};\n  text-align: left;\n`\n\nconst ContentContainer = styled.div`\n  min-height: 24px;\n  display: flex;\n  align-items: center;\n`\n\ninterface CellLayoutProps {\n  label?: string\n}\n\nconst CellLayout: React.FC<CellLayoutProps> = ({ label = '', children }) => {\n  return (\n    <div>\n      {label && <Label>{label}</Label>}\n      <ContentContainer>{children}</ContentContainer>\n    </div>\n  )\n}\n\nexport default CellLayout\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\nimport { useMatchBreakpoints } from '@luckyswap/uikit'\nimport useI18n from 'hooks/useI18n'\n\nimport Apr, { AprProps } from './Apr'\nimport Farm, { FarmProps } from './Farm'\nimport Earned, { EarnedProps } from './Earned'\nimport Details from './Details'\nimport Multiplier, { MultiplierProps } from './Multiplier'\nimport Liquidity, { LiquidityProps } from './Liquidity'\nimport Platform, { PlatformProps } from './Platform'\nimport ActionPanel from './Actions/ActionPanel'\nimport CellLayout from './CellLayout'\nimport { DesktopColumnSchema, MobileColumnSchema } from '../types'\nimport { FarmType } from '../../../../constants/index'\n\nexport interface RowProps {\n  apr: AprProps\n  farm: FarmProps\n  earned: EarnedProps\n  multiplier: MultiplierProps\n  liquidity: LiquidityProps\n  platform: PlatformProps\n  details: FarmWithStakedValue\n  type?: FarmType\n}\n\nconst cells = {\n  apr: Apr,\n  farm: Farm,\n  earned: Earned,\n  details: Details,\n  multiplier: Multiplier,\n  liquidity: Liquidity,\n  platform: Platform,\n}\n\nconst CellInner = styled.div`\n  padding: 24px 0px 24px 10px;\n  display: flex;\n  width: 100%;\n  align-items: center;\n  padding-right: 8px;\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    padding-right: 32px;\n  }\n`\n\nconst StyledTr = styled.tr`\n  cursor: pointer;\n  border-bottom: 1px solid #444444;\n`\n\nconst EarnedMobileCell = styled.td`\n  padding: 16px 0 24px 16px;\n`\n\nconst AprMobileCell = styled.td`\n  padding-top: 16px;\n  padding-bottom: 24px;\n`\n\nconst FarmMobileCell = styled.td`\n  padding-top: 24px;\n`\n\nconst BlockActionPanel = styled.tr`\n  border-bottom: 1px solid #444444;\n`\n\nconst Row: React.FunctionComponent<RowProps> = (props) => {\n  const { details, type } = props\n  const [actionPanelToggled, setActionPanelToggled] = useState(false)\n  const TranslateString = useI18n()\n\n  const toggleActionPanel = () => {\n    setActionPanelToggled(!actionPanelToggled)\n  }\n\n  const { isXl, isXs } = useMatchBreakpoints()\n\n  const isMobile = !isXl\n  const tableSchema = isMobile ? MobileColumnSchema : DesktopColumnSchema\n  const columnNames = tableSchema.map((column) => column.name)\n\n  const handleRenderRow = () => {\n    if (!isXs) {\n      return (\n        <>\n          <StyledTr onClick={toggleActionPanel} className=\"table-color\">\n            {Object.keys(props).map((key) => {\n              const columnIndex = columnNames.indexOf(key)\n              if (columnIndex === -1) {\n                return null\n              }\n\n              switch (key) {\n                case 'details':\n                  return (\n                    <td key={key}>\n                      <CellInner>\n                        <CellLayout>\n                          <Details actionPanelToggled={actionPanelToggled} />\n                        </CellLayout>\n                      </CellInner>\n                    </td>\n                  )\n                case 'apr':\n                  return (\n                    <>\n                      <td key={key}>\n                        <CellInner>\n                          {/* <CellLayout label={TranslateString(736, 'APR')}>\n                           */}\n                          <CellLayout>\n                            <Apr {...props.apr} hideButton={isMobile} />\n                          </CellLayout>\n                        </CellInner>\n                      </td>\n                    </>\n                  )\n                default:\n                  return (\n                    <td key={key}>\n                      <CellInner>\n                        <CellLayout\n                          label={TranslateString(\n                            tableSchema[columnIndex].translationId,\n                            tableSchema[columnIndex].label,\n                          )}\n                        >\n                          {React.createElement(cells[key], props[key])}\n                        </CellLayout>\n                      </CellInner>\n                    </td>\n                  )\n              }\n            })}\n          </StyledTr>\n        </>\n      )\n    }\n\n    return (\n      <StyledTr onClick={toggleActionPanel}>\n        <td>\n          <tr>\n            <FarmMobileCell>\n              <CellLayout>\n                <Farm {...props.farm} />\n              </CellLayout>\n            </FarmMobileCell>\n          </tr>\n          <tr>\n            <EarnedMobileCell>\n              <CellLayout label={TranslateString(1072, 'Earned')}>\n                <Earned {...props.earned} />\n              </CellLayout>\n            </EarnedMobileCell>\n            <AprMobileCell>\n              <CellLayout label={TranslateString(736, 'APR')}>\n                <Apr {...props.apr} hideButton />\n              </CellLayout>\n            </AprMobileCell>\n          </tr>\n        </td>\n        <td>\n          <CellInner>\n            <CellLayout>\n              <Details actionPanelToggled={actionPanelToggled} />\n            </CellLayout>\n          </CellInner>\n        </td>\n      </StyledTr>\n    )\n  }\n\n  return (\n    <>\n      {handleRenderRow()}\n      {actionPanelToggled && details && (\n        <BlockActionPanel>\n          <td colSpan={12}>\n            <ActionPanel {...props} type={type} />\n          </td>\n        </BlockActionPanel>\n      )}\n    </>\n  )\n}\n\nexport default Row\n","import React, { useRef } from 'react'\nimport styled from 'styled-components'\nimport { useTable, Button, ChevronUpIcon, ColumnType } from '@luckyswap/uikit'\nimport useI18n from 'hooks/useI18n'\n\nimport Row, { RowProps } from './Row'\nimport { FarmType } from '../../../../constants/index'\nimport { useSpaceHunterCollection } from '../../../../hooks/useCollection'\n\nexport interface ITableProps {\n  data: RowProps[]\n  columns: ColumnType<RowProps>[]\n  sortColumn?: string\n  type: FarmType\n}\n\nconst Container = styled.div`\n  filter: ${({ theme }) => theme.card.dropShadow};\n  width: 100%;\n  /* background: ${({ theme }) => theme.card.background}; */\n  background: linear-gradient(45deg, rgb(35 35 35) 30%, rgb(45 45 45) 100%);\n  box-shadow: 0px 0px 11px 0px rgb(16 16 16 / 57%);\n  border-radius: 16px;\n  margin: 16px 0px;\n  margin-bottom: 60px;\n`\n\nconst TableWrapper = styled.div`\n  overflow: scroll;\n\n  @media (min-width: 768px) {\n    overflow: visible;\n  }\n\n  &::-webkit-scrollbar {\n    display: none;\n  }\n`\n\nconst StyledTable = styled.table`\n  border-collapse: collapse;\n  font-size: 14px;\n  border-radius: 4px;\n  margin-left: auto;\n  margin-right: auto;\n  width: 100%;\n`\n\nconst TableBody = styled.tbody`\n  & tr {\n    td {\n      font-size: 16px;\n      vertical-align: middle;\n    }\n  }\n`\n\nconst TableContainer = styled.div`\n  position: relative;\n`\n\nconst ScrollButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 5px;\n  padding-bottom: 5px;\n`\n\nconst Tab = styled.div`\n  display: grid;\n  grid-template-columns: 350.73px 165px 1fr 1fr 1fr 1fr;\n  width: 100%;\n  height: 30px;\n  border-top-left-radius: 14px;\n  border-top-right-radius: 14px;\n  padding: 30px 32px;\n  color: #fff;\n`\n\nconst Item = styled.td`\n  padding-right: 40px;\n\n  &:first-of-type {\n    padding-left: 18px;\n    padding-right: 0;\n\n    @media (min-width: 768px) {\n      padding-left: 32px;\n    }\n  }\n\n  &:nth-child(5) {\n    padding-left: 18px;\n  }\n\n  &:last-child {\n    padding-right: 0;\n  }\n`\n\nconst Text = styled.div`\n  position: relative;\n  width: fit-content;\n  font-weight: 600;\n  font-size: 14px;\n\n  @media (min-width: 768px) {\n    font-size: 20px;\n  }\n`\n\nconst Arrow = styled.div`\n  position: absolute;\n  top: 50%;\n  right: -20px;\n  transform: translateY(-50%);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  @media (max-width: 768px) {\n    display: none;\n  }\n`\n\nconst ArrowUp = styled.div`\n  width: 0;\n  height: 0;\n  border-style: solid;\n  border-width: 0 4px 6px 4px;\n  border-color: transparent transparent #8c8c8c transparent;\n  margin-bottom: 3px;\n`\n\nconst ArrowDown = styled.div`\n  width: 0;\n  height: 0;\n  border-style: solid;\n  border-width: 6px 4px 0 4px;\n  border-color: #8c8c8c transparent transparent transparent;\n`\nconst TableHeader = styled.tr`\n  color: white;\n`\nconst FarmTable: React.FC<ITableProps> = (props) => {\n  const tableWrapperEl = useRef<HTMLDivElement>(null)\n  const TranslateString = useI18n()\n  const { data, columns } = props\n\n  const { rows } = useTable(columns, data, { sortable: true, sortColumn: 'farm' })\n\n  const scrollToTop = (): void => {\n    tableWrapperEl.current.scrollIntoView({\n      behavior: 'smooth',\n    })\n  }\n\n  return (\n    <Container>\n      <TableContainer>\n        <Tab></Tab>\n        <TableWrapper ref={tableWrapperEl}>\n          <StyledTable>\n            <thead>\n              <TableHeader>\n                <Item>\n                  <Text>\n                    LP Tokens Name\n                    <Arrow>\n                      <ArrowUp></ArrowUp>\n                      <ArrowDown></ArrowDown>\n                    </Arrow>\n                  </Text>\n                </Item>\n\n                <Item>\n                  <Text>\n                    Bonus\n                    <Arrow>\n                      <ArrowUp></ArrowUp>\n                      <ArrowDown></ArrowDown>\n                    </Arrow>\n                  </Text>\n                </Item>\n\n                <Item>\n                  <Text>Token</Text>\n                </Item>\n\n                <Item>\n                  <Text>\n                    Earned\n                    <Arrow>\n                      <ArrowUp></ArrowUp>\n                      <ArrowDown></ArrowDown>\n                    </Arrow>\n                  </Text>\n                </Item>\n\n                <Item>\n                  <Text>\n                    APR\n                    <Arrow>\n                      <ArrowUp></ArrowUp>\n                      <ArrowDown></ArrowDown>\n                    </Arrow>\n                  </Text>\n                </Item>\n\n                <Item>\n                  <Text>\n                    TLV\n                    <Arrow>\n                      <ArrowUp></ArrowUp>\n                      <ArrowDown></ArrowDown>\n                    </Arrow>\n                  </Text>\n                </Item>\n              </TableHeader>\n            </thead>\n            <TableBody>\n              {rows.map((row) => {\n                return <Row {...row.original} key={`table-row-${row.id}`} type={props?.type} />\n              })}\n            </TableBody>\n          </StyledTable>\n        </TableWrapper>\n        <ScrollButtonContainer>\n          <Button variant=\"text\" onClick={scrollToTop}>\n            {TranslateString(999, 'To Top')}\n            <ChevronUpIcon color=\"primary\" />\n          </Button>\n        </ScrollButtonContainer>\n      </TableContainer>\n    </Container>\n  )\n}\n\nexport default FarmTable\n","import React, { useState, useRef } from 'react'\nimport { Input } from '@luckyswap/uikit'\nimport styled from 'styled-components'\n\nconst StyledInput = styled(Input)`\n  border-radius: 20px;\n  margin-left: auto;\n`\n\nconst InputWrapper = styled.div`\n  position: relative;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: 234px;\n    display: block;\n  }\n`\n\nconst Container = styled.div<{ toggled: boolean }>``\n\ninterface Props {\n  value: string\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\n}\n\nconst SearchInput: React.FC<Props> = ({ value, onChange }) => {\n  const [toggled, setToggled] = useState(false)\n  const inputEl = useRef(null)\n\n  return (\n    <Container toggled={toggled}>\n      <InputWrapper>\n        <StyledInput\n          className=\"input-search\"\n          ref={inputEl}\n          value={value}\n          onChange={onChange}\n          placeholder=\"Search farms\"\n          onBlur={() => setToggled(false)}\n        />\n      </InputWrapper>\n    </Container>\n  )\n}\n\nexport default SearchInput\n","import React, { useState, useRef, useEffect } from 'react'\nimport styled, { css } from 'styled-components'\nimport { ArrowDropDownIcon, Text } from '@luckyswap/uikit'\n\nconst DropDownHeader = styled.div`\n  width: 100%;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0px 16px;\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n  border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n  border-radius: 16px;\n  background: ${({ theme }) => theme.colors.input};\n  transition: border-radius 0.15s;\n`\n\nconst DropDownListContainer = styled.div`\n  min-width: 136px;\n  height: 0;\n  position: absolute;\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.input};\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n  transition: transform 0.15s, opacity 0.15s;\n  transform: scaleY(0);\n  transform-origin: top;\n  opacity: 0;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n`\n\nconst DropDownContainer = styled.div<{ isOpen: boolean; width: number; height: number }>`\n  cursor: pointer;\n  width: ${({ width }) => width}px;\n  position: relative;\n  background: ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  height: 40px;\n  min-width: 136px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n\n  ${(props) =>\n    props.isOpen &&\n    css`\n      ${DropDownHeader} {\n        border-bottom: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n        border-radius: 16px 16px 0 0;\n      }\n\n      ${DropDownListContainer} {\n        height: auto;\n        transform: scaleY(1);\n        opacity: 1;\n        border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        border-top-width: 0;\n        border-radius: 0 0 16px 16px;\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n      }\n    `}\n\n  svg {\n    position: absolute;\n    right: 16px;\n    top: 50%;\n    transform: translateY(-50%);\n  }\n`\n\nconst DropDownList = styled.ul`\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n`\n\nconst ListItem = styled.li`\n  list-style: none;\n  padding: 8px 16px;\n  &:hover {\n    background: #808080;\n  }\n`\n\nexport interface SelectProps {\n  options: OptionProps[]\n  onChange?: (option: OptionProps) => void\n}\n\nexport interface OptionProps {\n  label: string\n  value: any\n}\n\nconst Select: React.FunctionComponent<SelectProps> = ({ options, onChange }) => {\n  const containerRef = useRef(null)\n  const dropdownRef = useRef(null)\n  const [isOpen, setIsOpen] = useState(false)\n  const [selectedOption, setSelectedOption] = useState(options[0])\n  const [containerSize, setContainerSize] = useState({ width: 0, height: 0 })\n\n  const toggling = () => setIsOpen(!isOpen)\n\n  const onOptionClicked = (option: OptionProps) => () => {\n    setSelectedOption(option)\n    setIsOpen(false)\n\n    if (onChange) {\n      onChange(option)\n    }\n  }\n\n  useEffect(() => {\n    setContainerSize({\n      width: dropdownRef.current.offsetWidth, // Consider border\n      height: dropdownRef.current.offsetHeight,\n    })\n  }, [])\n\n  return (\n    <DropDownContainer isOpen={isOpen} ref={containerRef} {...containerSize}>\n      {containerSize.width !== 0 && (\n        <DropDownHeader onClick={toggling}>\n          <Text color=\"#fff\">{selectedOption.label}</Text>\n        </DropDownHeader>\n      )}\n      <ArrowDropDownIcon color=\"#fff\" onClick={toggling} />\n      <DropDownListContainer>\n        <DropDownList ref={dropdownRef}>\n          {options.map((option) =>\n            option.label !== selectedOption.label ? (\n              <ListItem onClick={onOptionClicked(option)} key={option.label}>\n                <Text color=\"#fff\">{option.label}</Text>\n              </ListItem>\n            ) : null,\n          )}\n        </DropDownList>\n      </DropDownListContainer>\n    </DropDownContainer>\n  )\n}\n\nexport default Select\n","import { Heading, Image, RowType, Text } from '@luckyswap/uikit'\nimport { ChainId } from '@luckyswap/v2-sdk'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport FlexLayout from 'components/layout/Flex'\nimport Page from 'components/layout/Page'\nimport { orderBy } from 'lodash'\nimport React, { useCallback, useEffect, useState } from 'react'\nimport { Redirect, Route, useLocation, useRouteMatch } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Card, Button, CardTitle, CardText, Row, Col } from 'reactstrap'\nimport classnames from 'classnames'\nimport { setSpaceHunterCollection } from 'state/collection'\nimport useI18n from '../../hooks/useI18n'\nimport useRefresh from '../../hooks/useRefresh'\nimport { useAppDispatch } from '../../state'\nimport { fetchFarmUserDataAsync } from '../../state/actions'\nimport { useFarms, useGetApiPrices, usePriceLuckyBusd } from '../../state/hooks'\nimport { Farm } from '../../state/types'\nimport { getFarmApr } from '../../utils/apy'\nimport { getBalanceNumber } from '../../utils/formatBalance'\nimport FarmCard, { FarmWithStakedValue } from './components/FarmCard/FarmCard'\nimport Table from './components/FarmTable/FarmTable'\nimport { RowProps } from './components/FarmTable/Row'\nimport SearchInput from './components/SearchInput'\nimport Select, { OptionProps } from './components/Select/Select'\nimport { DesktopColumnSchema, ViewMode } from './components/types'\nimport { FarmType } from '../../constants/index'\nimport { useSpaceHunterCollection } from '../../hooks/useCollection'\n\nconst ControlContainer = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n  position: relative;\n\n  justify-content: space-between;\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    flex-wrap: wrap;\n    padding: 16px 32px;\n  }\n`\n\nconst ToggleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: 10px;\n\n  ${Text} {\n    margin-left: 8px;\n  }\n`\n\nconst LabelWrapper = styled.div`\n  > ${Text} {\n    font-size: 12px;\n  }\n`\n\nconst FilterContainer = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  padding: 8px 0px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: auto;\n    padding: 0;\n  }\n`\n\nconst ViewControls = styled.div`\n  flex-wrap: wrap;\n  justify-content: space-between;\n  display: flex;\n  align-items: center;\n  width: 100%;\n\n  > div {\n    padding: 8px 0px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    justify-content: flex-start;\n    width: auto;\n\n    > div {\n      padding: 0;\n    }\n  }\n`\n\nconst StyledImage = styled(Image)`\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 58px;\n`\n\nconst Header = styled.div`\n  padding: 32px 0px;\n  background: url('../images/bg-farm.jpg');\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-position: center;\n  width: 100%;\n  height: 350px;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  padding-left: 50px;\n\n  @media (min-width: 768px) {\n    background-repeat: no-repeat;\n    background-position: unset;\n    background-size: cover;\n    padding-left: 120px;\n  }\n`\n\nconst Farms: React.FC = () => {\n  const { path } = useRouteMatch()\n  const { pathname } = useLocation()\n  const TranslateString = useI18n()\n  const farmsLP = useFarms()\n  const luckyPrice = usePriceLuckyBusd()\n  const [query, setQuery] = useState('')\n  const [viewMode, setViewMode] = useState(ViewMode.TABLE)\n  const { account, chainId } = useWeb3React()\n  const [sortOption, setSortOption] = useState('hot')\n  const prices = useGetApiPrices()\n\n  const dispatch = useAppDispatch()\n  const { fastRefresh } = useRefresh()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchFarmUserDataAsync(account) as any)\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const [stakedOnly, setStakedOnly] = useState(false)\n\n  const mySpaceHunterCollection = useSpaceHunterCollection()\n\n  useEffect(() => {\n    if (mySpaceHunterCollection.length > 0) {\n      dispatch(setSpaceHunterCollection(mySpaceHunterCollection))\n    }\n  }, [mySpaceHunterCollection, dispatch])\n\n  const isActive = !pathname.includes('history')\n\n  // farmsLP = farmsLP.filter((farm) => farm.type === type)\n\n  const [activeTab, setActiveTab] = useState('1')\n\n  const toggle = (tab) => {\n    if (activeTab !== tab) setActiveTab(tab)\n  }\n  // console.log(\"activeTab\", activeTab)\n  const activeFarms = farmsLP.filter((farm) => farm.multiplier !== '0X')\n\n  // console.log(\"---data table:\", farmsLP)\n  const inactiveFarms = farmsLP.filter((farm) => farm.multiplier === '0X')\n\n  const stakedOnlyFarms = activeFarms.filter(\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\n  )\n\n  const stakedInactiveFarms = inactiveFarms.filter(\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\n  )\n\n  const sortFarms = (farms: FarmWithStakedValue[]): FarmWithStakedValue[] => {\n    switch (sortOption) {\n      case 'apr':\n        return orderBy(farms, (farm: FarmWithStakedValue) => farm.apy, 'desc')\n      case 'multiplier':\n        return orderBy(\n          farms,\n          (farm: FarmWithStakedValue) => (farm.multiplier ? Number(farm.multiplier.slice(0, -1)) : 0),\n          'desc',\n        )\n      case 'earned':\n        return orderBy(farms, (farm: FarmWithStakedValue) => (farm.userData ? farm.userData.earnings : 0), 'desc')\n      case 'liquidity':\n        return orderBy(farms, (farm: FarmWithStakedValue) => Number(farm.liquidity), 'desc')\n      default:\n        return farms\n    }\n  }\n\n  const farmsList = useCallback(\n    (farmsToDisplay: Farm[]): FarmWithStakedValue[] => {\n      let farmsToDisplayWithAPY: FarmWithStakedValue[] = farmsToDisplay.map((farm) => {\n        if (!farm.lpTotalInQuoteToken || !prices) {\n          return farm\n        }\n\n        const quoteTokenPriceUsd = 361 // TODO: This will handel API get price BUSD/BNB\n        const totalLiquidity = new BigNumber(farm.lpTotalInQuoteToken).times(quoteTokenPriceUsd)\n        const apy = isActive ? getFarmApr(new BigNumber(farm.poolWeight), luckyPrice, totalLiquidity) : 0\n\n        return { ...farm, apy, liquidity: totalLiquidity }\n      })\n\n      if (query) {\n        const lowercaseQuery = query.toLowerCase()\n        farmsToDisplayWithAPY = farmsToDisplayWithAPY.filter((farm: FarmWithStakedValue) => {\n          return farm.lpSymbol.toLowerCase().includes(lowercaseQuery)\n        })\n      }\n      return farmsToDisplayWithAPY\n    },\n    [luckyPrice, prices, query, isActive],\n  )\n\n  if (chainId && chainId !== ChainId.BSCTESTNET && chainId !== ChainId.MAINNET) {\n    return <Redirect to=\"/\" />\n  }\n\n  const handleChangeQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value)\n  }\n\n  let farmsStaked = []\n\n  if (isActive) {\n    farmsStaked = stakedOnly ? farmsList(stakedOnlyFarms) : farmsList(activeFarms)\n  } else {\n    farmsStaked = stakedOnly ? farmsList(stakedInactiveFarms) : farmsList(inactiveFarms)\n  }\n\n  farmsStaked = sortFarms(farmsStaked)\n  const rowData = farmsStaked.map((farm) => {\n    const { token, quoteToken } = farm\n    const tokenAddress = token?.address\n    const quoteTokenAddress = quoteToken?.address\n    const lpLabel = farm.lpSymbol && farm.lpSymbol.split(' ')[0].toUpperCase().replace('PANCAKE', '')\n    // console.log(\"------farm\", farm.type)\n    const row: RowProps = {\n      apr: {\n        value: farm.apy && farm.apy.toLocaleString('en-US', { maximumFractionDigits: 2 }),\n        multiplier: farm.multiplier,\n        lpLabel,\n        tokenAddress,\n        quoteTokenAddress,\n        cakePrice: luckyPrice,\n        originalValue: farm.apy,\n      },\n      farm: {\n        image: farm.lpSymbol.split(' ')[0].toLocaleLowerCase(),\n        label: lpLabel,\n        pid: farm.pid,\n      },\n      earned: {\n        earnings: farm.userData ? getBalanceNumber(new BigNumber(farm.userData.earnings)) : null,\n        pid: farm.pid,\n      },\n      liquidity: {\n        liquidity: farm.liquidity,\n      },\n      platform: {\n        platform: farm.platform,\n      },\n      multiplier: {\n        multiplier: farm.multiplier,\n      },\n      details: farm,\n      type: farm.type,\n    }\n\n    return row\n  })\n\n  const renderContent = (type: FarmType): JSX.Element => {\n    // console.log(\"-------\", rowData[0].type)\n    // rowData =\n    if (viewMode === ViewMode.TABLE && rowData.length) {\n      const columnSchema = DesktopColumnSchema\n      const data = rowData.filter((farm) => farm.type === type)\n      // console.log(\"-----dataFarm\", data)\n      const columns = columnSchema.map((column) => ({\n        id: column.id,\n        name: column.name,\n        label: column.label,\n        sort: (a: RowType<RowProps>, b: RowType<RowProps>) => {\n          switch (column.name) {\n            case 'farm':\n              return b.id - a.id\n            case 'apr':\n              if (a.original.apr.value && b.original.apr.value) {\n                return Number(a.original.apr.value) - Number(b.original.apr.value)\n              }\n\n              return 0\n            case 'earned':\n              return a.original.earned.earnings - b.original.earned.earnings\n            default:\n              return 1\n          }\n        },\n        sortable: column.sortable,\n      }))\n\n      return <Table data={data} columns={columns} type={type} />\n    }\n\n    return (\n      <div>\n        <FlexLayout>\n          <Route exact path={`${path}`}>\n            {farmsStaked.map((farm) => (\n              <FarmCard key={farm.pid} farm={farm} cakePrice={luckyPrice} account={account} removed={false} />\n            ))}\n          </Route>\n          <Route exact path={`${path}/history`}>\n            {farmsStaked.map((farm) => (\n              <FarmCard key={farm.pid} farm={farm} cakePrice={luckyPrice} account={account} removed />\n            ))}\n          </Route>\n        </FlexLayout>\n      </div>\n    )\n  }\n\n  const handleSortOptionChange = (option: OptionProps): void => {\n    setSortOption(option.value)\n  }\n\n  return (\n    <>\n      <Header>\n        <Heading as=\"h1\" size=\"xxl\" color=\"#fff\" mb=\"24px\">\n          {TranslateString(674, 'Farms')}\n        </Heading>\n        <Heading size=\"lg\" color=\"#fff\">\n          Provide a farming platform for any projects.\n          <br /> Farms Stake Liquidity Pool (LP) tokens to earn.\n        </Heading>\n      </Header>\n\n      <Page>\n        <ControlContainer>\n          <Nav tabs>\n            <NavItem>\n              <NavLink\n                className={classnames({ active: activeTab === '1' })}\n                onClick={() => {\n                  toggle('1')\n                }}\n              >\n                Space Hunter\n              </NavLink>\n            </NavItem>\n\n            <NavItem>\n              <NavLink\n                className={classnames({ active: activeTab === '2' })}\n                onClick={() => {\n                  toggle('2')\n                }}\n              >\n                Luckyswap\n              </NavLink>\n            </NavItem>\n\n            <NavItem>\n              <NavLink\n                className={classnames({ active: activeTab === '3' })}\n                onClick={() => {\n                  toggle('3')\n                }}\n              >\n                Other\n              </NavLink>\n            </NavItem>\n          </Nav>\n\n          <TabContent activeTab={activeTab}>\n            <FilterContainer>\n              <LabelWrapper>\n                <Text color=\"#fff\" fontWeight=\"600\" fontSize=\"16px\">\n                  SORT BY\n                </Text>\n\n                <Select\n                  options={[\n                    {\n                      label: 'Hot',\n                      value: 'hot',\n                    },\n                    {\n                      label: 'APR',\n                      value: 'apr',\n                    },\n                    {\n                      label: 'Multiplier',\n                      value: 'multiplier',\n                    },\n                    {\n                      label: 'Earned',\n                      value: 'earned',\n                    },\n                    {\n                      label: 'Liquidity',\n                      value: 'liquidity',\n                    },\n                  ]}\n                  onChange={handleSortOptionChange}\n                />\n              </LabelWrapper>\n\n              <LabelWrapper style={{ marginLeft: 16 }}>\n                <Text color=\"#fff\" fontWeight=\"600\" fontSize=\"16px\">\n                  SEARCH\n                </Text>\n                <SearchInput onChange={handleChangeQuery} value={query} />\n              </LabelWrapper>\n            </FilterContainer>\n\n            <TabPane tabId=\"1\">{renderContent(FarmType.SPACEHUNTER)}</TabPane>\n\n            <TabPane tabId=\"2\">{renderContent(FarmType.LUCKYSWAP)}</TabPane>\n\n            {/* <TabPane tabId=\"3\">{renderContent('other')}</TabPane> */}\n          </TabContent>\n        </ControlContainer>\n      </Page>\n    </>\n  )\n}\n\nexport default Farms\n"],"sourceRoot":""}
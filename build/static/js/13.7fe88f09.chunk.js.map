{"version":3,"sources":["hooks/useTickets.ts","components/UnlockButton.tsx","utils/lotteryUtils.ts","components/Spacer/Spacer.tsx","components/ModalActions/ModalActions.tsx","components/ExpandableSectionButton/ExpandableSectionButton.tsx","contexts/PastLotteryDataContext.tsx","hooks/useGetLotteryHasDrawn.ts","views/Lottery-v2/components/WinningNumbers.tsx","views/Home/components/CardBusdValue.tsx","views/Lottery-v2/components/PrizeGrid.tsx","views/Lottery-v2/components/TotalPrizesCard/index.tsx","views/Lottery-v2/components/Loading.tsx","views/Lottery-v2/components/TicketCard/UserTicketsModal.tsx","views/Lottery-v2/components/YourPrizesCard/PrizesWonContent.tsx","hooks/useBuyLottery.ts","views/Lottery-v2/components/YourPrizesCard/NoPrizesContent.tsx","views/Lottery-v2/components/YourPrizesCard/index.tsx","views/Lottery-v2/components/UnlockWalletCard.tsx","hooks/useTimer.ts","components/TicketInput/TicketInput.tsx","views/Lottery-v2/components/TicketCard/BuyTicketModal.tsx","views/Lottery-v2/components/TicketCard/PurchaseWarningModal.tsx","views/Lottery-v2/components/TicketCard/TicketActions.tsx","views/Lottery-v2/helpers/CountdownHelpers.ts","views/Lottery-v2/components/TicketCard/index.tsx","views/Lottery-v2/components/HowItWorks.tsx","utils/getLotteryRoundData.ts","hooks/useGetRecentLotteryRoundData.ts","views/Lottery-v2/components/PastLotteryRoundViewer/PastLotterySearcher.tsx","views/Lottery-v2/components/PastLotteryRoundViewer/PastRoundCardError.tsx","views/Lottery-v2/components/LotteryCardHeading.tsx","views/Lottery-v2/components/PastLotteryRoundViewer/PastLotteryActions.tsx","views/Lottery-v2/helpers/formatLotteryDate.ts","views/Lottery-v2/components/Timestamp.tsx","views/Lottery-v2/components/PastLotteryRoundViewer/PastRoundCardDetails.tsx","views/Lottery-v2/components/PastLotteryRoundViewer/PastRoundCard.tsx","views/Lottery-v2/components/PastLotteryRoundViewer/index.tsx","views/Lottery-v2/components/PastDrawsHistory/HistoryChart.tsx","views/Lottery-v2/components/PastDrawsHistory/Legend.tsx","views/Lottery-v2/components/PastDrawsHistory/PastDrawsHistoryCard.tsx","views/Lottery-v2/components/Divider.tsx","views/Lottery-v2/NextDrawPage.tsx","views/Lottery-v2/PastDrawsPage.tsx","views/Lottery-v2/Lottery.tsx"],"names":["useTotalRewards","useState","BigNumber","rewards","setRewards","fastRefresh","useRefresh","lotteryContract","useContract","getLotteryAddress","lotteryAbi","useEffect","a","getTotalRewards","res","toString","fetchBalance","useTotalClaim","claimAmount","setClaimAmount","claimLoading","setClaimLoading","account","useWeb3React","ticketsContract","getLotteryTicketAddress","lotteryTicketAbi","useCallback","getTotalClaim","claim","useWinningNumbers","winningNumbers","setWinningNumbers","getWinningNumbers","useMatchingRewardLength","numbers","matchingNumbers","setMatchingNumbers","getMatchingRewardLength","matchedNumbaers","useTickets","lotteryNumber","tickets","setTickets","getTickets","UnlockButton","props","TranslateString","useI18n","useAuth","login","logout","onPresentConnectModal","useWalletModal","className","variant","onClick","multiCall","abi","calls","getChainId","chainId","web3","getWeb3NoAccount","multi","eth","Contract","MultiCallAbi","getMulticallAddress","itf","Interface","length","i","newCalls","slice","calldata","map","call","toLowerCase","encodeFunctionData","methods","aggregate","returnData","concat","index","decodeFunctionResult","multiBuy","price","numbersList","times","pow","then","tx","transactionHash","console","error","customLotteryNum","issueIndex","balanceOf","catch","log","calls1","Array","apply","address","ticketAbi","tokenIds","id","calls2","ticketIssues","finalTokenids","forEach","ticketIssue","push","calls3","getTicketsAmount","multiClaim","claimedStatus","unClaimedIds","filter","finalTokenIds","r","getLotteryStatus","drawed","calls4","reduce","p","c","sum","getMax","maxNumber","getLotteryIssueIndex","matchNumber","historyAmount","amount","div","LOTTERY_TICKET_PRICE","toNumber","parseInt","historyNumbers","StyledSpacer","styled","size","Spacer","s","spacing","useContext","ThemeContext","StyledModalActions","theme","colors","primaryDark","StyledModalAction","ModalActions","children","l","React","Children","toArray","child","Wrapper","primary","ExpandableSectionButton","expanded","aria-label","role","color","bold","defaultProps","createContext","mostRecentLotteryNumber","historyError","historyData","useGetLotteryHasDrawn","lotteryHasDrawn","setLotteryHasDrawn","state","fetchLotteryStatus","CardBodyNew","Link","Row","RowNoPadding","Column","CenteredText","CenteredTextWithPadding","TicketNumberBox","StyledCardHeader","CardWrapper","Title","secondary","StyledCardContentInner","WinningNumbers","winNumbers","MatchedNumber4","MatchedNumber3","MatchedNumber2","style","number","href","target","CardBusdValue","CardValue","fontSize","lineHeight","prefix","decimals","Grid","pastDraw","RightAlignedText","Text","RightAlignedHeading","Heading","GridItem","marginBottom","PastDrawGridItem","PrizeGrid","lotteryPrizeAmount","jackpotMatches","twoTicketMatches","threeTicketMatches","fourMatchesAmount","toFixed","threeMatchesAmount","twoMatchesAmount","burnAmount","cakeBusdPrice","usePriceLuckyBusd","getCakeBusdValue","multipliedBy","textShadow","toLocaleString","eq","value","BoxTotal","CardHeading","Right","mediaQueries","sm","Left","IconWrapper","PrizeCountWrapper","ExpandingWrapper","showFooter","BoxLucky","Dollar","TotalPrizesCard","setShowFooter","getBalanceNumber","lotteryPrizeAmountBusd","lotteryPrizeWithCommaSeparators","currentLotteryNumber","PastLotteryDataContext","mb","alignItems","justifyContent","height","width","fontWeight","num","alt","src","StyledLoading","Loading","RewardP","TicketsList","StyledButton","Button","UserTicketsModal","myTicketNumbers","onDismiss","from","rewardMatch","n","listItems","emoji","join","title","TICKETS","WinningsWrapper","StyledCardActions","PrizesWonContent","requestedClaim","setRequestedClaim","onMultiClaim","lotteryTicketContract","txHash","useMultiClaimLottery","useModal","onPresentMyTickets","addTransaction","useTransactionAdder","handleClaim","summary","winnings","as","marginRight","disabled","TextWrapper","StyledText","Image","img","md","NoPrizesContent","StyledCard","Card","isDisabled","textDisabled","lg","YourPrizesCard","isAWin","isActive","StyledCardBody","CardBody","StyledHeading","UnlockWalletCard","useCurrentTime","Date","getTime","currentMillis","setCurrentMillis","timerID","setInterval","prevMillis","clearInterval","StyledTokenInput","StyledTokenAdornmentWrapper","StyledMaxText","StyledTokenSymbol","span","TicketInput","max","symbol","availableSymbol","onChange","onSelectMax","placeholder","BuyTicketModal","val","setVal","pendingTx","setPendingTx","setRequestedBuy","fullBalance","useMemo","getFullDisplayBalance","maxTickets","onMultiBuy","useMultiBuyLottery","setMax","fetchMax","useMaxNumber","handleBuy","Math","floor","random","response","handleSelectMax","Number","LOTTERY_MAX_NUMBER_OF_TICKETS","e","currentTarget","Tips","Announce","Final","WarningModal","newTransactionsFirst","b","addedTime","spinnerIcon","spin","CardActions","Dflex","TicketCard","balanceToken","setBalanceToken","allowance","setAllowance","contractBEP20","XLUCKY_TESTNET_ADDRESSES","bep20Abi","useContractTemp","ticketsLength","PurchaseWarningModal","tokenName","onPresentBuy","data","fetchApprovalData","requestedApproval","setRequestedApproval","useApproveCallbackCustom","approval","onAttemptToApprove","handleApprove","allTransactions","useAllTransactions","sortedRecentTransactions","Object","values","isTransactionRecent","sort","getStatus","receipt","hash","hoursAndMinutesString","hours","minutes","getTicketSaleTime","msUntilNextTicketSale","getNextTicketSaleTime","getTimePeriods","isSecondCard","CardHeader","TicketCountWrapper","timeUntilTicketSale","TicketActions","LayoutWrapper","StyledLink","HowItWorks","getLotteryRoundData","fetch","json","Error","useGetRecentLotteryRoundData","isLoading","setIsLoading","setData","setError","roundData","fetchRecentLotteryData","SearchWrapper","InputWrapper","ButtonWrapper","PastLotterySearcher","initialLotteryNumber","onSubmit","setLotteryNumber","isError","setIsError","evt","preventDefault","type","isWarning","scale","PastRoundCardError","message","LotteryCardHeading","valueToDisplay","Icon","flexDirection","ExternalLinkWrap","LinkExternal","contractLink","SCAN_SITES","formatLotteryDate","lotteryDate","date","dateString","toDateString","getUTCHours","monthAndDay","split","splice","Timestamp","timeValue","TopLotteryCardHeading","BoxCard","PastRoundCardDetails","jackpotTicket","lotteryNumbers","match1Ticket","match2Ticket","match3Ticket","poolSize","oneTicketMatches","PastLotteryActions","FullWidth","PastRoundCard","PastLotteryRoundViewer","isInitialized","setState","initialLotteryData","prevState","handleSubmit","Line","lazy","InnerWrapper","HistoryChart","getDataArray","kind","dataPoint","reverse","lineStyles","borderColor","fill","borderWidth","pointRadius","pointHitRadius","chartData","labels","datasets","label","yAxisID","axesStyles","borderCapStyle","gridLines","display","ticks","fontFamily","fontColor","maxRotation","beginAtZero","autoSkipPadding","userCallback","options","legend","scales","yAxes","position","xAxes","fallback","LegendItem","Circle","isPoolSize","Legend","PastDrawsHistoryCard","textSubtle","Cards","BaseLayout","NextDrawPage","SecondCardColumnWrapper","BunnyImageWrapper","PastDrawsPage","Lottery","activeIndex","setActiveIndex","setHistoryData","setHistoryError","setCurrentLotteryNumber","setMostRecentLotteryNumber","previousLotteryNumber","getInitialLotteryIndex","Page","onItemClick","Divider","Provider"],"mappings":"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","file":"static/js/13.7fe88f09.chunk.js","sourcesContent":["import { useCallback, useState, useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { useContract, useLottery, useLotteryTicket } from 'hooks/useContract'\nimport { getLotteryAddress, getLotteryTicketAddress } from 'utils/addressHelpers'\nimport lotteryTicketAbi from 'config/abi/lotteryNft.json'\nimport lotteryAbi from 'config/abi/lottery.json'\nimport useRefresh from './useRefresh'\nimport {\n  getTotalRewards,\n  getTotalClaim,\n  getMatchingRewardLength,\n  getWinningNumbers,\n  getTickets,\n} from '../utils/lotteryUtils'\n\nconst useTickets = (lotteryNumber = null) => {\n  const [tickets, setTickets] = useState([])\n  const { account } = useWeb3React()\n  const ticketsContract = useContract(getLotteryTicketAddress(), lotteryTicketAbi)\n  const lotteryContract = useContract(getLotteryAddress(), lotteryAbi)\n  const { fastRefresh } = useRefresh()\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await getTickets(lotteryContract, ticketsContract, account, lotteryNumber)\n      setTickets(res)\n    }\n\n    if (account && lotteryContract && ticketsContract) {\n      fetchBalance()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [account, lotteryContract, ticketsContract, fastRefresh, lotteryNumber])\n\n  return tickets\n}\n\nexport const useTotalRewards = () => {\n  const [rewards, setRewards] = useState(new BigNumber(0))\n  const { fastRefresh } = useRefresh()\n  const lotteryContract = useContract(getLotteryAddress(), lotteryAbi)\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await getTotalRewards(lotteryContract)\n\n      setRewards(new BigNumber(res.toString()))\n    }\n\n    if (lotteryContract) {\n      fetchBalance()\n    }\n  }, [lotteryContract, fastRefresh])\n  return rewards\n}\n\nexport const useTotalClaim = () => {\n  const [claimAmount, setClaimAmount] = useState(new BigNumber(0))\n  const [claimLoading, setClaimLoading] = useState(false)\n  const { account } = useWeb3React()\n  const lotteryContract = useContract(getLotteryAddress(), lotteryAbi)\n  const ticketsContract = useContract(getLotteryTicketAddress(), lotteryTicketAbi)\n\n  const fetchBalance = useCallback(async () => {\n    setClaimLoading(true)\n    const claim = await getTotalClaim(lotteryContract, ticketsContract, account)\n    setClaimAmount(claim)\n    setClaimLoading(false)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [account, lotteryContract, ticketsContract])\n\n  useEffect(() => {\n    if (account && lotteryContract && ticketsContract) {\n      fetchBalance()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [account, fetchBalance, lotteryContract, ticketsContract])\n  return { claimLoading, claimAmount }\n}\n\nexport const useWinningNumbers = () => {\n  const [winningNumbers, setWinningNumbers] = useState([0, 0, 0, 0])\n  const lotteryContract = useContract(getLotteryAddress(), lotteryAbi)\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const rewards = await getWinningNumbers(lotteryContract)\n      setWinningNumbers(rewards)\n    }\n\n    if (lotteryContract) {\n      fetchBalance()\n    }\n  }, [fastRefresh, lotteryContract, setWinningNumbers])\n\n  return winningNumbers\n}\n\nexport const useMatchingRewardLength = (numbers) => {\n  const [matchingNumbers, setMatchingNumbers] = useState(0)\n  const lotteryContract = useContract(getLotteryAddress(), lotteryAbi)\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const matchedNumbaers = await getMatchingRewardLength(lotteryContract, numbers)\n\n      setMatchingNumbers(matchedNumbaers)\n    }\n\n    if (lotteryContract) {\n      fetchBalance()\n    }\n  }, [lotteryContract, numbers, fastRefresh])\n  return matchingNumbers\n}\n\nexport default useTickets\n","import React from 'react'\nimport { Button, useWalletModal } from '@luckyswap/uikit'\nimport useAuth from 'hooks/useAuth'\nimport useI18n from 'hooks/useI18n'\n\nconst UnlockButton = (props) => {\n  const TranslateString = useI18n()\n  const { login, logout } = useAuth()\n  const { onPresentConnectModal } = useWalletModal(login, logout)\n\n  return (\n    <div className=\"custom-btn\">\n      <Button variant=\"secondary\" onClick={onPresentConnectModal} {...props}>\n        {TranslateString(292, 'Unlock Wallet')}\n      </Button>\n    </div>\n  )\n}\n\nexport default UnlockButton\n","/* eslint-disable no-await-in-loop */\nimport BigNumber from 'bignumber.js'\nimport { Interface } from '@ethersproject/abi'\nimport { getWeb3NoAccount } from 'utils/web3'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport ticketAbi from 'config/abi/lotteryNft.json'\nimport lotteryAbi from 'config/abi/lottery.json'\nimport { LOTTERY_TICKET_PRICE } from 'config'\nimport { AbiItem } from 'web3-utils'\nimport { useTransactionAdder } from 'state/transactions/hooks'\nimport { getMulticallAddress } from './addressHelpers'\nimport { getChainId } from './web3React'\n\nexport const multiCall = async (abi, calls) => {\n  const chainId = await getChainId()\n  const web3 = getWeb3NoAccount(chainId)\n  const multi = new web3.eth.Contract(MultiCallAbi as unknown as AbiItem, getMulticallAddress(chainId))\n  const itf = new Interface(abi)\n  let res = []\n  if (calls.length > 100) {\n    let i = 0\n    while (i < calls.length / 100) {\n      const newCalls = calls.slice(i * 100, 100 * (i + 1))\n      const calldata = newCalls.map((call) => [call[0].toLowerCase(), itf.encodeFunctionData(call[1], call[2])])\n      const { returnData } = await multi.methods.aggregate(calldata).call()\n      i++\n      res = res.concat(returnData.map((call, index) => itf.decodeFunctionResult(newCalls[index][1], call)))\n    }\n  } else {\n    const calldata = calls.map((call) => [call[0].toLowerCase(), itf.encodeFunctionData(call[1], call[2])])\n    const { returnData } = await multi.methods.aggregate(calldata).call()\n    res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i][1], call))\n  }\n  return res\n}\n\nexport const multiBuy = async (lotteryContract, price, numbersList, account) => {\n  try {\n    return lotteryContract\n      .multiBuy(new BigNumber(price).times(new BigNumber(10).pow(18)).toString(), numbersList)\n      .then((tx) => {\n        return tx.transactionHash\n      })\n  } catch (err) {\n    return console.error(err)\n  }\n}\n\nexport const getTickets = async (lotteryContract, ticketsContract, account, customLotteryNum) => {\n  const issueIndex = customLotteryNum || (await lotteryContract.issueIndex())\n\n  const length = await ticketsContract.balanceOf(account).catch((error) => console.log('length error : ', error))\n\n  // eslint-disable-next-line prefer-spread\n  const calls1 = Array.apply(null, { length } as unknown[]).map((a, i) => [\n    ticketsContract.address,\n    'tokenOfOwnerByIndex',\n    [account, i],\n  ])\n  const res = await multiCall(ticketAbi, calls1)\n\n  const tokenIds = res.map((id) => id.toString())\n\n  const calls2 = tokenIds.map((id) => [ticketsContract.address, 'getLotteryIssueIndex', [id]])\n  const ticketIssues = await multiCall(ticketAbi, calls2)\n\n  const finalTokenids = []\n  ticketIssues.forEach(async (ticketIssue, i) => {\n    if (ticketIssue.toString() === issueIndex.toString()) {\n      finalTokenids.push(tokenIds[i])\n    }\n  })\n  const calls3 = finalTokenids.map((id) => [ticketsContract.address, 'getLotteryNumbers', [id]])\n  const tickets = await multiCall(ticketAbi, calls3)\n  return tickets\n}\n\nexport const getTicketsAmount = async (ticketsContract, account) => {\n  return ticketsContract.balanceOf(account).catch((error) => console.log('ticket amount : ', error))\n}\n\nexport const multiClaim = async (lotteryContract, ticketsContract, account) => {\n  await lotteryContract.issueIndex()\n  const length = await getTicketsAmount(ticketsContract, account)\n  // eslint-disable-next-line prefer-spread\n  const calls1 = Array.apply(null, { length } as unknown[]).map((a, i) => [\n    ticketsContract.address,\n    'tokenOfOwnerByIndex',\n    [account, i],\n  ])\n  const res = await multiCall(ticketAbi, calls1)\n  const tokenIds = res.map((id) => id.toString())\n\n  const calls2 = tokenIds.map((id) => [ticketsContract.address, 'getClaimStatus', [id]])\n  const claimedStatus = await multiCall(ticketAbi, calls2)\n\n  const unClaimedIds = tokenIds.filter((id, index) => !claimedStatus[index][0])\n\n  const calls3 = unClaimedIds.map((id) => [lotteryContract.address, 'getRewardView', [id]])\n  const rewards = await multiCall(lotteryAbi, calls3)\n\n  let finalTokenIds = []\n  rewards.forEach((r, i) => {\n    if (r > 0) {\n      finalTokenIds.push(unClaimedIds[i])\n    }\n  })\n\n  if (finalTokenIds.length > 200) {\n    finalTokenIds = finalTokenIds.slice(0, 200)\n  }\n\n  try {\n    return lotteryContract.multiClaim(finalTokenIds)\n  } catch (err) {\n    return console.error(err)\n  }\n}\n\nexport const getTotalClaim = async (lotteryContract, ticketsContract, account) => {\n  try {\n    const issueIndex = await lotteryContract.issueIndex()\n    const length = await getTicketsAmount(ticketsContract, account)\n    // eslint-disable-next-line prefer-spread\n    const calls1 = Array.apply(null, { length } as unknown[]).map((a, i) => [\n      ticketsContract.address,\n      'tokenOfOwnerByIndex',\n      [account, i],\n    ])\n    const res = await multiCall(ticketAbi, calls1)\n    const tokenIds = res.map((id) => id.toString())\n    const calls2 = tokenIds.map((id) => [ticketsContract.address, 'getLotteryIssueIndex', [id]])\n    const ticketIssues = await multiCall(ticketAbi, calls2)\n    const calls3 = tokenIds.map((id) => [ticketsContract.address, 'getClaimStatus', [id]])\n    const claimedStatus = await multiCall(ticketAbi, calls3)\n\n    const drawed = await getLotteryStatus(lotteryContract)\n\n    const finalTokenIds = []\n    ticketIssues.forEach(async (ticketIssue, i) => {\n      // eslint-disable-next-line no-empty\n      if (!drawed && ticketIssue.toString() === issueIndex) {\n      } else if (!claimedStatus[i][0]) {\n        finalTokenIds.push(tokenIds[i])\n      }\n    })\n\n    const calls4 = finalTokenIds.map((id) => [lotteryContract.address, 'getRewardView', [id]])\n\n    const rewards = await multiCall(lotteryAbi, calls4)\n    const claim = rewards.reduce((p, c) => BigNumber.sum(p, c), new BigNumber(0))\n\n    return claim\n  } catch (err) {\n    console.error(err)\n  }\n  return new BigNumber(0)\n}\n\nexport const getTotalRewards = async (lotteryContract) => {\n  const issueIndex = await lotteryContract.issueIndex()\n  return lotteryContract.getTotalRewards(issueIndex)\n}\n\nexport const getMax = async (lotteryContract) => {\n  return lotteryContract.maxNumber()\n}\n\nexport const getLotteryIssueIndex = async (lotteryContract) => {\n  const issueIndex = await lotteryContract.issueIndex()\n  return issueIndex\n}\n\nexport const getLotteryStatus = async (lotteryContract) => {\n  return lotteryContract.drawed()\n}\n\nexport const getMatchingRewardLength = async (lotteryContract, matchNumber) => {\n  let issueIndex = await lotteryContract.issueIndex()\n  const drawed = await lotteryContract.drawed()\n  if (!drawed) {\n    issueIndex -= 1\n  }\n  try {\n    const amount = await lotteryContract.historyAmount(issueIndex, 5 - matchNumber)\n    return new BigNumber(amount.toString()).div(new BigNumber(10).pow(18)).div(LOTTERY_TICKET_PRICE).toNumber()\n  } catch (err) {\n    console.error(err)\n  }\n  return 0\n}\n\nexport const getWinningNumbers = async (lotteryContract) => {\n  const issueIndex = await lotteryContract.issueIndex()\n  const numbers = []\n  const drawed = await lotteryContract.drawed()\n\n  if (!drawed && parseInt(issueIndex, 10) === 0) {\n    return [0, 0, 0, 0]\n  }\n  if (!drawed) {\n    for (let i = 0; i < 4; i++) {\n      numbers.push(+(await lotteryContract.historyNumbers(issueIndex - 1, i)).toString())\n    }\n  } else {\n    for (let i = 0; i < 4; i++) {\n      numbers.push(+(await lotteryContract.winningNumbers(i)).toString())\n    }\n  }\n  return numbers\n}\n","import React, { useContext } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\ninterface SpacerProps {\n  size?: 'sm' | 'md' | 'lg'\n}\n\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\n  const { spacing } = useContext(ThemeContext)\n\n  let s: number\n  switch (size) {\n    case 'lg':\n      s = spacing[6]\n      break\n    case 'sm':\n      s = spacing[2]\n      break\n    case 'md':\n    default:\n      s = spacing[4]\n  }\n\n  return <StyledSpacer size={s} />\n}\n\ninterface StyledSpacerProps {\n  size: number\n}\n\nconst StyledSpacer = styled.div<StyledSpacerProps>`\n  height: ${(props) => props.size}px;\n  width: ${(props) => props.size}px;\n`\n\nexport default Spacer\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport Spacer from '../Spacer'\n\nconst ModalActions: React.FC = ({ children }) => {\n  const l = React.Children.toArray(children).length\n  return (\n    <StyledModalActions>\n      {React.Children.map(children, (child, i) => (\n        <>\n          <StyledModalAction>{child}</StyledModalAction>\n          {i < l - 1 && <Spacer />}\n        </>\n      ))}\n    </StyledModalActions>\n  )\n}\n\nconst StyledModalActions = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.primaryDark}00;\n  display: flex;\n  margin: 0;\n  padding: ${(props) => props.theme.spacing[4]}px 0;\n`\n\nconst StyledModalAction = styled.div`\n  flex: 1;\n`\n\nexport default ModalActions\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ChevronDownIcon, ChevronUpIcon, Text } from '@luckyswap/uikit'\nimport useI18n from 'hooks/useI18n'\n\nexport interface ExpandableSectionButtonProps {\n  onClick?: () => void\n  expanded?: boolean\n}\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n\n  svg {\n    fill: ${({ theme }) => theme.colors.primary};\n  }\n`\n\nconst ExpandableSectionButton: React.FC<ExpandableSectionButtonProps> = ({ onClick, expanded }) => {\n  const TranslateString = useI18n()\n\n  return (\n    <Wrapper aria-label=\"Hide or show expandable content\" role=\"button\" onClick={() => onClick()}>\n      <Text color=\"primary\" bold>\n        {expanded ? TranslateString(1066, 'Hide') : TranslateString(658, 'Details')}\n      </Text>\n      {expanded ? <ChevronUpIcon /> : <ChevronDownIcon />}\n    </Wrapper>\n  )\n}\n\nExpandableSectionButton.defaultProps = {\n  expanded: false,\n}\n\nexport default ExpandableSectionButton\n","import React from 'react'\n\nexport interface PastLotteryDataState {\n  mostRecentLotteryNumber: number\n  currentLotteryNumber: number\n  historyError: boolean\n  historyData: Array<any>\n}\n\nexport default React.createContext({\n  mostRecentLotteryNumber: 0,\n  historyError: false,\n  historyData: [],\n} as PastLotteryDataState)\n","import { useEffect, useState } from 'react'\nimport { getLotteryStatus } from 'utils/lotteryUtils'\nimport { useContract } from 'hooks/useContract'\nimport { getLotteryAddress } from 'utils/addressHelpers'\nimport lotteryAbi from 'config/abi/lottery.json'\n\n/**\n * Returns whether or not the current lottery has drawn numbers\n *\n * @return {Boolean}\n */\nconst useGetLotteryHasDrawn = () => {\n  const [lotteryHasDrawn, setLotteryHasDrawn] = useState(true)\n  const lotteryContract = useContract(getLotteryAddress(), lotteryAbi)\n\n  useEffect(() => {\n    if (lotteryContract) {\n      const fetchLotteryStatus = async () => {\n        const state = await getLotteryStatus(lotteryContract)\n        setLotteryHasDrawn(state)\n      }\n\n      fetchLotteryStatus()\n    }\n  }, [lotteryContract])\n\n  return lotteryHasDrawn\n}\n\nexport default useGetLotteryHasDrawn\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useWeb3React } from '@web3-react/core'\nimport { Image, Card, CardBody } from '@luckyswap/uikit'\nimport { useWinningNumbers, useMatchingRewardLength } from 'hooks/useTickets'\nimport useI18n from 'hooks/useI18n'\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\n\nconst WinningNumbers: React.FC = () => {\n  const { account } = useWeb3React()\n  const winNumbers = useWinningNumbers()\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\n  const MatchedNumber4 = useMatchingRewardLength(4)\n  const MatchedNumber3 = useMatchingRewardLength(3)\n  const MatchedNumber2 = useMatchingRewardLength(2)\n  const TranslateString = useI18n()\n\n  return (\n    <CardWrapper>\n      <CardBodyNew>\n        <StyledCardContentInner>\n          <StyledCardHeader>\n            <Title style={{ color: 'rgb(243, 193, 17)' }}>\n              {account && lotteryHasDrawn\n                ? `${TranslateString(570, 'Latest Winning Numbers')}`\n                : TranslateString(440, 'Latest Winning Numbers')}\n            </Title>\n          </StyledCardHeader>\n          <Row>\n            {/* <img\n              alt=\"\"\n              src=\"https://merlinlab.com/static/media/leftGoldenCoin.6aef3b76.svg\"\n              className=\"sc-iCfLBT sc-ezbkgU gvyEtt jElfkq\"\n            />\n            <img\n              alt=\"\"\n              src=\"https://merlinlab.com/static/media/rightGoldenCoin.e795d41c.svg\"\n              className=\"sc-iCfLBT sc-ezbkgU KkWOV jElfkq\"\n            /> */}\n            {winNumbers.map((number, index) => (\n              // eslint-disable-next-line react/no-array-index-key\n              <TicketNumberBox key={index}>\n                <CenteredText>{number}</CenteredText>\n              </TicketNumberBox>\n            ))}\n          </Row>\n          <Column>\n            <RowNoPadding>\n              <CenteredTextWithPadding style={{ color: '#fff' }}>\n                {TranslateString(442, 'Tickets matching 4 numbers:')}\n              </CenteredTextWithPadding>\n              <CenteredTextWithPadding>\n                <strong style={{ color: '#F3C111' }}>{MatchedNumber4}</strong>\n              </CenteredTextWithPadding>\n            </RowNoPadding>\n            <RowNoPadding>\n              <CenteredTextWithPadding style={{ color: '#fff' }}>\n                {TranslateString(444, 'Tickets matching 3 numbers:')}\n              </CenteredTextWithPadding>\n              <CenteredTextWithPadding>\n                <strong style={{ color: '#F3C111' }}>{MatchedNumber3}</strong>\n              </CenteredTextWithPadding>\n            </RowNoPadding>\n            <RowNoPadding>\n              <CenteredTextWithPadding style={{ color: '#fff' }}>\n                {TranslateString(446, 'Tickets matching 2 numbers:')}\n              </CenteredTextWithPadding>\n              <CenteredTextWithPadding>\n                <strong style={{ color: '#F3C111' }}>{MatchedNumber2}</strong>\n              </CenteredTextWithPadding>\n            </RowNoPadding>\n          </Column>\n\n          <Link href=\"/\" target=\"_blank\">\n            {TranslateString(448, 'Export recent winning numbers')}\n          </Link>\n        </StyledCardContentInner>\n      </CardBodyNew>\n    </CardWrapper>\n  )\n}\n\nconst CardBodyNew = styled.div`\n  position: relative;\n  background-color: rgb(43 41 41);\n  border: 0.0625rem solid rgba(255, 255, 255, 0.2);\n  border-radius: 1.25rem;\n  padding: 24px;\n  min-height: 496px;\n`\n\nconst Link = styled.a`\n  margin-top: 1em;\n  text-decoration: none;\n  color: #101010;\n  background-color: #f3c111;\n  border-radius: 12px;\n  padding: 17px 25px;\n  font-weight: 500;\n  white-space: nowrap;\n\n  @media (min-width) {\n    padding: 10px 25px;\n  }\n\n  &:hover {\n    background-color: #ffda3b;\n    color: #101010;\n    transition: 0.5s;\n  }\n`\n\nconst Row = styled.div`\n  margin-top: 1em;\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n  border: 1px solid #f3c111;\n  border-radius: 14px;\n`\n\nconst RabbitRow = styled.div`\n  margin-top: -2.3em;\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n\n  @media (max-width: 768px) {\n    display: none;\n  }\n`\n\nconst RabbitRowSmall = styled.div`\n  margin-top: -2.3em;\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n\n  @media (min-width: 768px) {\n    display: none;\n  }\n`\n\nconst CardImage = styled.div`\n  text-align: center;\n`\n\nconst CardImageFirst = styled.div`\n  text-align: center;\n  margin-left: -1.2em;\n\n  @media (max-width: 600) {\n    margin-left: -0.2em;\n  }\n`\n\nconst RowNoPadding = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n  margin-bottom: 10px;\n`\n\nconst Column = styled.div`\n  margin-top: 1em;\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n`\n\nconst CenteredText = styled.div`\n  text-align: center;\n  align-items: center;\n`\n\nconst CenteredTextWithPadding = styled.div`\n  text-align: center;\n  align-items: center;\n  padding-left: 2px;\n  padding-right: 2px;\n  font-weight: 600;\n`\n\nconst TicketNumberBox = styled.div`\n  padding: 10px;\n  border-radius: 12px;\n  text-shadow: rgb(255 214 0) 0px 0px 12px;\n  // background: linear-gradient(180deg, #54dade 0%, #24c7d6 76.22%);\n  color: white;\n  font-size: 20px;\n  font-weight: 900;\n  margin: 10px;\n  margin-bottom: 7px;\n  width: 40px;\n\n  @media (min-width: 768px) {\n    font-size: 40px;\n    margin: 20px;\n    background: url('../images/bg-number.svg');\n    background-repeat: no-repeat;\n    width: 120px;\n    min-height: 150px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n`\n\nconst RabbitBox = styled.div`\n  /* padding: 10px; */\n  border-radius: 12px;\n  margin: 16px 20px;\n  width: 60px;\n`\n\nconst RabbitBoxSmall = styled.div`\n  padding-top: 10px;\n  padding-left: 10px;\n  border-radius: 12px;\n  margin: 20px;\n  width: 20px;\n`\n\nconst StyledCardHeader = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n`\n\nconst CardWrapper = styled.div`\n  margin-bottom: 30px;\n`\n\nconst Title = styled.div`\n  color: ${(props) => props.theme.colors.secondary};\n  font-size: 24px;\n  width: 50vw;\n  text-align: center;\n  font-weight: 1000;\n`\n\nconst StyledCardContentInner = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: space-between;\n\n  &:before {\n    position: absolute;\n    top: 0;\n    left: 0;\n    content: '';\n    background: url('../images/jackpot-l.png');\n    width: 220px;\n    height: 496px;\n\n    @media (max-width: 991px) {\n      opacity: 0.2;\n    }\n  }\n\n  &:after {\n    position: absolute;\n    top: 0;\n    right: 0;\n    content: '';\n    background: url('../images/jackpot-r.png');\n    width: 220px;\n    height: 496px;\n\n    @media (max-width: 991px) {\n      opacity: 0.2;\n    }\n  }\n`\n\nexport default WinningNumbers\n","import React from 'react'\nimport CardValue, { CardValueProps } from './CardValue'\n\nconst CardBusdValue: React.FC<CardValueProps> = (props) => {\n  return <CardValue fontSize=\"14px\" lineHeight=\"1.1\" color=\"#2b2c3a\" prefix=\"~$\" bold={false} decimals={2} {...props} />\n}\n\nexport default CardBusdValue\n","import React from 'react'\nimport styled from 'styled-components'\nimport useI18n from 'hooks/useI18n'\nimport { Heading, Text } from '@luckyswap/uikit'\nimport { BigNumber } from 'bignumber.js'\nimport { usePriceLuckyBusd } from 'state/hooks'\nimport CardBusdValue from '../../Home/components/CardBusdValue'\n\nexport interface PrizeGridProps {\n  lotteryPrizeAmount?: number\n  pastDraw?: boolean\n  jackpotMatches?: number\n  oneTicketMatches?: number\n  twoTicketMatches?: number\n  threeTicketMatches?: number\n}\n\nconst Grid = styled.div<{ pastDraw?: boolean }>`\n  display: grid;\n  grid-template-columns: repeat(${(props) => (props.pastDraw ? 3 : 2)}, 1fr);\n  grid-template-rows: repeat(4, auto);\n`\n\nconst RightAlignedText = styled(Text)`\n  text-align: right;\n`\n\nconst RightAlignedHeading = styled(Heading)`\n  text-align: right;\n`\n\nconst GridItem = styled.div<{ marginBottom?: string }>`\n  margin-bottom: ${(props) => (props.marginBottom ? props.marginBottom : '10px')};\n`\n\nconst PastDrawGridItem = styled(GridItem)`\n  transform: translate(-40%, 0%);\n`\n\nconst PrizeGrid: React.FC<PrizeGridProps> = ({\n  lotteryPrizeAmount = 0,\n  pastDraw = false,\n  jackpotMatches,\n  twoTicketMatches,\n  threeTicketMatches,\n}) => {\n  const fourMatchesAmount = +((lotteryPrizeAmount / 100) * 50).toFixed(0)\n  const threeMatchesAmount = +((lotteryPrizeAmount / 100) * 20).toFixed(0)\n  const twoMatchesAmount = +((lotteryPrizeAmount / 100) * 10).toFixed(0)\n  const burnAmount = +((lotteryPrizeAmount / 100) * 20).toFixed(0)\n  const TranslateString = useI18n()\n  const cakeBusdPrice = usePriceLuckyBusd()\n\n  const getCakeBusdValue = (amount: number) => {\n    return new BigNumber(amount).multipliedBy(cakeBusdPrice).toNumber()\n  }\n\n  return (\n    <Grid pastDraw={pastDraw}>\n      <GridItem>\n        <Text fontSize=\"24px\" color=\"#F3C111\">\n          {TranslateString(756, 'No. Matched')}\n        </Text>\n      </GridItem>\n      {pastDraw && (\n        <PastDrawGridItem>\n          <RightAlignedText fontSize=\"14px\" color=\"textSubtle\">\n            {TranslateString(754, 'Winners')}\n          </RightAlignedText>\n        </PastDrawGridItem>\n      )}\n      <GridItem>\n        <RightAlignedText fontSize=\"24px\" color=\"#F3C111\">\n          {TranslateString(752, 'Prize Pot')}\n        </RightAlignedText>\n      </GridItem>\n      {/* 4 matches row */}\n      <GridItem>\n        <Heading style={{ textShadow: 'rgb(255 214 0) 0px 0px 25px' }} size=\"md\">\n          4\n        </Heading>\n      </GridItem>\n      {pastDraw && (\n        <PastDrawGridItem>\n          <RightAlignedHeading size=\"md\">{jackpotMatches}</RightAlignedHeading>\n        </PastDrawGridItem>\n      )}\n      <GridItem>\n        <RightAlignedHeading size=\"md\">\n          {fourMatchesAmount.toLocaleString()}\n          {!pastDraw && !cakeBusdPrice.eq(0) && <CardBusdValue value={getCakeBusdValue(fourMatchesAmount)} />}\n        </RightAlignedHeading>\n      </GridItem>\n      {/* 3 matches row */}\n      <GridItem style={{ textShadow: 'rgb(255 214 0) 0px 0px 25px' }}>\n        <Text bold>3</Text>\n      </GridItem>\n      {pastDraw && (\n        <PastDrawGridItem>\n          <RightAlignedText bold>{threeTicketMatches}</RightAlignedText>\n        </PastDrawGridItem>\n      )}\n      <GridItem>\n        <RightAlignedText>\n          {threeMatchesAmount.toLocaleString()}\n          {!pastDraw && !cakeBusdPrice.eq(0) && <CardBusdValue value={getCakeBusdValue(threeMatchesAmount)} />}\n        </RightAlignedText>\n      </GridItem>\n      {/* 2 matches row */}\n      <GridItem style={{ textShadow: 'rgb(255 214 0) 0px 0px 25px' }}>\n        <Text>2</Text>\n      </GridItem>\n      {pastDraw && (\n        <PastDrawGridItem>\n          <RightAlignedText>{twoTicketMatches}</RightAlignedText>\n        </PastDrawGridItem>\n      )}\n      <GridItem>\n        <RightAlignedText>\n          {twoMatchesAmount.toLocaleString()}\n          {!pastDraw && !cakeBusdPrice.eq(0) && <CardBusdValue value={getCakeBusdValue(twoMatchesAmount)} />}\n        </RightAlignedText>\n      </GridItem>\n      {/* Burn row */}\n      <GridItem marginBottom=\"0\">\n        <Text>{TranslateString(999, `${pastDraw ? 'Burned' : 'To burn'}`)}:</Text>\n      </GridItem>\n      {pastDraw ? (\n        <>\n          <GridItem marginBottom=\"0\" />\n          <GridItem marginBottom=\"0\">\n            <RightAlignedText>{burnAmount.toLocaleString()}</RightAlignedText>\n          </GridItem>\n        </>\n      ) : (\n        <GridItem marginBottom=\"0\">\n          <RightAlignedText>{burnAmount.toLocaleString()}</RightAlignedText>\n        </GridItem>\n      )}\n    </Grid>\n  )\n}\n\nexport default PrizeGrid\n","import React, { useContext, useState } from 'react'\nimport styled from 'styled-components'\nimport { useWeb3React } from '@web3-react/core'\nimport { Heading, Card, CardBody, CardFooter, Text, PancakeRoundIcon, Flex, Skeleton } from '@luckyswap/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport useI18n from 'hooks/useI18n'\nimport { useTotalRewards } from 'hooks/useTickets'\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\nimport ExpandableSectionButton from 'components/ExpandableSectionButton/ExpandableSectionButton'\nimport { BigNumber } from 'bignumber.js'\nimport { usePriceLuckyBusd } from 'state/hooks'\nimport PrizeGrid from '../PrizeGrid'\nimport CardBusdValue from '../../../Home/components/CardBusdValue'\n\n// const Container = styled.div`\n//   margin-left: auto;\n//   margin-right: auto;\n//   max-width: 1200px;\n//   margin-bottom: 30px;\n// `\n\nconst BoxTotal = styled.div`\n  background: linear-gradient(45deg, rgb(35 35 35) 30%, rgb(45 45 45) 100%);\n  box-shadow: 0px 0px 11px 0px rgb(16 16 16 / 57%);\n  color: #ffffff;\n  overflow: hidden;\n  position: relative;\n  width: 100%;\n  margin-bottom: 20px;\n  display: grid;\n  grid-template-columns: 1fr;\n\n  @media (min-width: 991px) {\n    grid-template-columns: 1fr 1fr;\n    margin: 0 auto 60px;\n  }\n`\n\nconst CardHeading = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n`\n\nconst Right = styled.div`\n  display: flex;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    display: none;\n  }\n`\n\nconst Left = styled.div`\n  display: flex;\n`\n\nconst IconWrapper = styled.div`\n  margin-right: 16px;\n  svg {\n    width: 48px;\n    height: 48px;\n  }\n`\n\nconst PrizeCountWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst ExpandingWrapper = styled.div<{ showFooter: boolean }>`\n  height: ${(props) => (props.showFooter ? '100%' : '0px')};\n  padding: 15px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    height: 100%;\n  }\n`\nconst CardBodyNew = styled.div`\n  background-color: rgba(255, 255, 255, 0.1);\n  border: 0.0625rem solid rgba(255, 255, 255, 0.2);\n  border-radius: 1.25rem;\n  padding: 24px;\n`\n\nconst BoxLucky = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  align-items: center;\n  padding: 15px 0 5px;\n\n  h2 {\n    font-size: 44px;\n    position: relative;\n    color: #f3c111;\n    font-weight: 700;\n  }\n\n  span {\n    font-size: 16px;\n    position: absolute;\n    top: 0;\n  }\n`\n\nconst Dollar = styled.div`\n  padding-left: 60px;\n`\n\nconst TotalPrizesCard = () => {\n  const TranslateString = useI18n()\n  const { account } = useWeb3React()\n  const [showFooter, setShowFooter] = useState(false)\n  const lotteryPrizeAmount = +getBalanceNumber(useTotalRewards()).toFixed(0)\n  const lotteryPrizeAmountBusd = new BigNumber(lotteryPrizeAmount).multipliedBy(usePriceLuckyBusd()).toNumber()\n  const lotteryPrizeWithCommaSeparators = lotteryPrizeAmount.toLocaleString()\n  const { currentLotteryNumber } = useContext(PastLotteryDataContext)\n\n  return (\n    <BoxTotal>\n      <CardBody>\n        {account && (\n          <Flex mb=\"16px\" alignItems=\"center\" justifyContent=\"space-between\" style={{ height: '20px' }}>\n            {currentLotteryNumber === 0 && <Skeleton height={20} width={56} />}\n            <>\n              <Text fontSize=\"12px\" style={{ fontWeight: 600 }}>\n                {TranslateString(720, `Round #${currentLotteryNumber}`, { num: currentLotteryNumber })}\n              </Text>\n            </>\n            {/* {currentLotteryNumber > 0 && (\n                <>\n                  <Text fontSize=\"12px\" style={{ fontWeight: 600 }}>\n                    {TranslateString(720, `Round #${currentLotteryNumber}`, { num: currentLotteryNumber })}\n                  </Text>\n                </>\n              )} */}\n          </Flex>\n        )}\n\n        <CardHeading>\n          <Left>\n            <PrizeCountWrapper>\n              <Text fontSize=\"24px\" fontWeight=\"500\" color=\"textSubtle\">\n                {TranslateString(722, 'Total Pot:')}\n              </Text>\n              <BoxLucky>\n                <IconWrapper>\n                  <img width=\"55px\" alt=\"\" src=\"/images/icon-logo-y.png\" />\n                </IconWrapper>\n                <Heading style={{ textShadow: 'rgb(255 214 0) 0px 0px 25px', fontSize: '44' }} size=\"lg\">\n                  {lotteryPrizeWithCommaSeparators} <span>LUCKY</span>\n                </Heading>\n              </BoxLucky>\n              <Dollar>{lotteryPrizeAmountBusd !== 0 && <CardBusdValue value={lotteryPrizeAmountBusd} />}</Dollar>\n            </PrizeCountWrapper>\n          </Left>\n          <Right>\n            <ExpandableSectionButton onClick={() => setShowFooter(!showFooter)} expanded={showFooter} />\n          </Right>\n        </CardHeading>\n      </CardBody>\n      <ExpandingWrapper showFooter={showFooter}>\n        <CardFooter className=\"no-border\">\n          <PrizeGrid lotteryPrizeAmount={lotteryPrizeAmount} />\n        </CardFooter>\n      </ExpandingWrapper>\n    </BoxTotal>\n  )\n}\n\nexport default TotalPrizesCard\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Loading: React.FC = () => <StyledLoading />\n\nconst StyledLoading = styled.div`\n  border: 8px solid #f3f3f3;\n  border-radius: 50%;\n  border-top: 8px solid #ddd;\n  border-bottom: 8px solid #ddd;\n  width: 20px;\n  height: 20px;\n  -webkit-animation: spin 2s linear infinite;\n  animation: spin 2s linear infinite;\n  @-webkit-keyframes spin {\n    0% {\n      -webkit-transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`\n\nexport default Loading\n","import React, { useCallback } from 'react'\nimport { Button, Modal } from '@luckyswap/uikit'\nimport styled from 'styled-components'\nimport { useWinningNumbers } from 'hooks/useTickets'\nimport useI18n from 'hooks/useI18n'\n\ninterface UserTicketsModalProps {\n  myTicketNumbers: Array<any>\n  from?: string\n  onDismiss?: () => void\n}\n\nconst UserTicketsModal: React.FC<UserTicketsModalProps> = ({ myTicketNumbers, onDismiss, from }) => {\n  const winNumbers = useWinningNumbers()\n  const TranslateString = useI18n()\n  const rewardMatch = useCallback(\n    (number) => {\n      let n = 0\n      for (let i = winNumbers.length - 1; i >= 0; i--) {\n        // eslint-disable-next-line eqeqeq\n        if (winNumbers[i] == number[i]) n++\n      }\n      return n\n    },\n    [winNumbers],\n  )\n\n  const listItems = myTicketNumbers.map((number, index) => {\n    if (rewardMatch(number[0]) > 1 && from !== 'buy') {\n      const emoji = new Array(rewardMatch(number[0]) + 1).join('🤑')\n      return (\n        // eslint-disable-next-line react/no-array-index-key\n        <RewardP key={index}>\n          {emoji}\n          {number.toString()}\n          {emoji}\n        </RewardP>\n      )\n    }\n    // eslint-disable-next-line react/no-array-index-key\n    return (\n      <p style={{ color: 'yellow' }} key={index}>\n        {number.toString()}\n      </p>\n    )\n  })\n\n  return (\n    <Modal\n      title={TranslateString(490, `My Tickets (Total: ${myTicketNumbers.length})`, { TICKETS: myTicketNumbers.length })}\n      onDismiss={onDismiss}\n    >\n      <TicketsList>\n        <h2>{listItems}</h2>\n      </TicketsList>\n      <StyledButton variant=\"secondary\" onClick={onDismiss}>\n        {TranslateString(438, 'Close')}\n      </StyledButton>\n    </Modal>\n  )\n}\n\nconst RewardP = styled.div`\n  color: #ff8c28;\n`\n\nconst TicketsList = styled.div`\n  text-align: center;\n  overflow-y: auto;\n  max-height: 400px;\n  color: ${(props) => props.theme.colors.primary};\n`\n\nconst StyledButton = styled(Button)`\n  margin-top: ${(props) => props.theme.spacing[2]}px;\n`\n\nexport default UserTicketsModal\n","import React, { useCallback, useState } from 'react'\nimport styled from 'styled-components'\nimport { Button, Heading, Won, useModal } from '@luckyswap/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useMultiClaimLottery } from 'hooks/useBuyLottery'\nimport useTickets, { useTotalClaim } from 'hooks/useTickets'\nimport { useTransactionAdder } from 'state/transactions/hooks'\nimport Loading from '../Loading'\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\n\nconst WinningsWrapper = styled.div`\n  display: flex;\n  align-items: baseline;\n`\n\nconst IconWrapper = styled.div`\n  margin-bottom: 16px;\n\n  svg {\n    width: 80px;\n    height: 80px;\n  }\n`\n\nconst StyledCardActions = styled.div`\n  margin-top: ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledCardContentInner = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: space-between;\n`\n\nconst StyledButton = styled(Button)`\n  margin-top: ${(props) => props.theme.spacing[1]}px;\n`\n\nconst PrizesWonContent: React.FC = () => {\n  const [requestedClaim, setRequestedClaim] = useState(false)\n  const TranslateString = useI18n()\n  const { claimLoading, claimAmount } = useTotalClaim()\n  const { onMultiClaim } = useMultiClaimLottery()\n  const tickets = useTickets()\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\n  const addTransaction = useTransactionAdder()\n\n  const handleClaim = useCallback(async () => {\n    try {\n      setRequestedClaim(true)\n      const txHash = await onMultiClaim()\n      addTransaction(txHash, {\n        summary: 'Claim successfully!',\n      })\n      // user rejected tx or didn't go thru\n      if (txHash) {\n        setRequestedClaim(false)\n      }\n    } catch (e) {\n      console.error(e)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [onMultiClaim, setRequestedClaim])\n\n  const winnings = getBalanceNumber(claimAmount).toFixed(2)\n\n  return (\n    <StyledCardContentInner>\n      <IconWrapper>\n        <img src=\"images/icon-gif.svg\" alt=\"gif\" />\n      </IconWrapper>\n      <Heading as=\"h3\" size=\"lg\" color=\"#1CFFBB\">\n        {TranslateString(660, 'You won!')}\n      </Heading>\n      {claimLoading && <Loading />}\n      {!claimLoading && (\n        <>\n          <WinningsWrapper>\n            <Heading as=\"h4\" size=\"xl\" style={{ marginRight: '6px' }}>\n              {winnings}\n            </Heading>\n            <Heading as=\"h4\" size=\"lg\">\n              LUCKY\n            </Heading>\n          </WinningsWrapper>\n        </>\n      )}\n      <StyledCardActions>\n        <Button\n          className=\"border-yellow\"\n          variant=\"secondary\"\n          width=\"100%\"\n          disabled={requestedClaim}\n          onClick={handleClaim}\n        >\n          {TranslateString(1056, 'Collect')}\n        </Button>\n      </StyledCardActions>\n      <StyledButton variant=\"text\" onClick={onPresentMyTickets}>\n        {TranslateString(432, 'View your tickets')}\n      </StyledButton>\n    </StyledCardContentInner>\n  )\n}\n\nexport default PrizesWonContent\n","import { useCallback, useState, useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useLottery, useContract } from 'hooks/useContract'\nimport { getLotteryAddress, getLotteryTicketAddress } from 'utils/addressHelpers'\nimport lotteryAbi from 'config/abi/lottery.json'\nimport lotteryTicketAbi from 'config/abi/lotteryNft.json'\nimport { multiClaim, getMax, multiBuy } from '../utils/lotteryUtils'\n\nexport const useMultiClaimLottery = () => {\n  const { account } = useWeb3React()\n  const lotteryContract = useContract(getLotteryAddress(), lotteryAbi)\n  const lotteryTicketContract = useContract(getLotteryTicketAddress(), lotteryTicketAbi)\n\n  const handleClaim = useCallback(async () => {\n    try {\n      const txHash = await multiClaim(lotteryContract, lotteryTicketContract, account)\n      return txHash\n    } catch (e) {\n      return false\n    }\n  }, [account, lotteryContract, lotteryTicketContract])\n\n  return { onMultiClaim: handleClaim }\n}\n\nexport const useMultiBuyLottery = () => {\n  const { account } = useWeb3React()\n  const lotteryContract = useContract(getLotteryAddress(), lotteryAbi)\n\n  const handleBuy = useCallback(\n    async (amount: string, numbers: Array<any>) => {\n      try {\n        const txHash = await multiBuy(lotteryContract, amount, numbers, account)\n        return txHash\n      } catch (e) {\n        return false\n      }\n    },\n    [account, lotteryContract],\n  )\n\n  return { onMultiBuy: handleBuy }\n}\n\nexport const useMaxNumber = () => {\n  const [max, setMax] = useState(5)\n  const lotteryContract = useContract(getLotteryAddress(), lotteryAbi)\n\n  const fetchMax = useCallback(async () => {\n    const maxNumber = await getMax(lotteryContract)\n    setMax(maxNumber)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [lotteryContract])\n\n  useEffect(() => {\n    if (lotteryContract) {\n      fetchMax()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [lotteryContract, fetchMax])\n\n  return max\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Button, useModal } from '@luckyswap/uikit'\nimport useI18n from 'hooks/useI18n'\nimport useTickets from 'hooks/useTickets'\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\n\nconst Wrapper = styled.div`\n  display: flex;\n`\n\nconst TextWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst StyledText = styled(Text)`\n  padding-left: 12px;\n`\n\nconst Image = styled.img`\n  margin-right: 6px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    margin-right: 20px;\n  }\n`\nconst StyledButton = styled(Button)`\n  padding: 0 12px;\n  height: unset;\n`\n\nconst NoPrizesContent: React.FC = () => {\n  const TranslateString = useI18n()\n  const tickets = useTickets()\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\n\n  return (\n    <Wrapper>\n      <Image src=\"/images/no-prize.svg\" alt=\"no prizes won\" />\n      <TextWrapper>\n        <StyledText>{TranslateString(726, 'Sorry, no prizes to collect')}</StyledText>\n        <StyledButton variant=\"text\" onClick={onPresentMyTickets}>\n          {TranslateString(432, 'View your tickets and NFTs')}\n        </StyledButton>\n      </TextWrapper>\n    </Wrapper>\n  )\n}\n\nexport default NoPrizesContent\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card, CardBody } from '@luckyswap/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useTotalClaim } from 'hooks/useTickets'\nimport PrizesWonContent from './PrizesWonContent'\nimport NoPrizesContent from './NoPrizesContent'\n\nconst StyledCard = styled(Card)`\n  margin: 0 !important;\n  max-width: 100% !important;\n  border-radius: 14px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  ${(props) =>\n    props.isDisabled\n      ? `  \n        margin-top: 0;\n        background-color: unset;\n        box-shadow: unset;\n        border: 1px solid ${props.theme.colors.textDisabled};\n\n        ${props.theme.mediaQueries.sm} {\n          margin-top: 0;\n        }\n\n        ${props.theme.mediaQueries.lg} {\n          margin-top: 0;\n        }\n        `\n      : ``}\n`\n\nconst YourPrizesCard: React.FC = () => {\n  const { claimAmount } = useTotalClaim()\n\n  const winnings = getBalanceNumber(claimAmount)\n  const isAWin = winnings > 0\n\n  return (\n    <StyledCard isDisabled={!isAWin} isActive={isAWin}>\n      <CardBody>{isAWin ? <PrizesWonContent /> : <NoPrizesContent />}</CardBody>\n    </StyledCard>\n  )\n}\n\nexport default YourPrizesCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Card, CardBody, Ticket } from '@luckyswap/uikit'\nimport useI18n from 'hooks/useI18n'\nimport UnlockButton from 'components/UnlockButton'\n\nconst StyledCardBody = styled(CardBody)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`\n\nconst StyledHeading = styled(Heading)`\n  margin: 16px 0;\n`\n\nconst IconWrapper = styled.div`\n  svg {\n    width: 80px;\n    height: 80px;\n  }\n`\n\nconst UnlockWalletCard = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <Card isActive>\n      <StyledCardBody>\n        <IconWrapper>\n          <img src=\"https://merlinlab.com/assets/lottery/lottery.svg\" alt=\"\" />\n        </IconWrapper>\n        <StyledHeading size=\"md\">{TranslateString(1080, 'Unlock wallet to access lottery')}</StyledHeading>\n        <UnlockButton />\n      </StyledCardBody>\n    </Card>\n  )\n}\n\nexport default UnlockWalletCard\n","import { useState, useEffect } from 'react'\n\nexport const useCurrentTime = () => {\n  const [currentMillis, setCurrentMillis] = useState(new Date().getTime())\n\n  useEffect(() => {\n    const tick = () => {\n      setCurrentMillis((prevMillis) => prevMillis + 1000)\n    }\n\n    const timerID = setInterval(() => tick(), 1000)\n\n    return () => clearInterval(timerID)\n  }, [])\n\n  return currentMillis\n}\n\nexport default useCurrentTime\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button, Flex, Input, InputProps } from '@luckyswap/uikit'\nimport useI18n from 'hooks/useI18n'\n\ninterface TokenInputProps extends InputProps {\n  max: number | string\n  symbol: string\n  availableSymbol: string\n  value: string\n  onSelectMax?: () => void\n  onChange: (evt: React.FormEvent<HTMLInputElement>) => void\n}\n\nconst TicketInput: React.FC<TokenInputProps> = ({ max, symbol, availableSymbol, onChange, onSelectMax, value }) => {\n  const TranslateString = useI18n()\n\n  return (\n    <StyledTokenInput>\n      <Flex alignItems=\"center\">\n        <Input onChange={onChange} placeholder=\"0\" value={value} />\n        <StyledTokenAdornmentWrapper>\n          <StyledTokenSymbol>{symbol}</StyledTokenSymbol>\n          <StyledSpacer />\n          <div>\n            <Button size=\"sm\" variant=\"secondary\" onClick={onSelectMax}>\n              {TranslateString(452, 'Max')}\n            </Button>\n          </div>\n        </StyledTokenAdornmentWrapper>\n      </Flex>\n      <StyledMaxText>{TranslateString(454, `${max.toLocaleString()} ${availableSymbol} Available`)}</StyledMaxText>\n    </StyledTokenInput>\n  )\n}\n\nconst StyledTokenInput = styled.div``\n\nconst StyledSpacer = styled.div`\n  width: ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledTokenAdornmentWrapper = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst StyledMaxText = styled.div`\n  align-items: center;\n  color: ${(props) => props.theme.colors.primary};\n  display: flex;\n  font-size: 14px;\n  font-weight: 700;\n  height: 44px;\n  justify-content: flex-end;\n`\n\nconst StyledTokenSymbol = styled.span`\n  color: ${(props) => props.theme.colors.primary};\n  font-weight: 700;\n`\n\nexport default TicketInput\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { Button, Modal } from '@luckyswap/uikit'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport TicketInput from 'components/TicketInput'\nimport ModalActions from 'components/ModalActions'\nimport { useMultiBuyLottery, useMaxNumber } from 'hooks/useBuyLottery'\nimport useI18n from 'hooks/useI18n'\nimport { LOTTERY_MAX_NUMBER_OF_TICKETS, LOTTERY_TICKET_PRICE } from 'config'\nimport { useWeb3React } from '@web3-react/core'\nimport { useContract } from 'hooks/useContract'\nimport { getLotteryAddress } from 'utils/addressHelpers'\nimport lotteryAbi from 'config/abi/lottery.json'\nimport { useTransactionAdder } from 'state/transactions/hooks'\n\ninterface BuyTicketModalProps {\n  max: BigNumber\n  onConfirm?: (amount: string, numbers: Array<number>) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst BuyTicketModal: React.FC<BuyTicketModalProps> = ({ max, onDismiss }) => {\n  const [val, setVal] = useState('1')\n  const [pendingTx, setPendingTx] = useState(false)\n  const [, setRequestedBuy] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max, 18)\n  }, [max])\n  const maxTickets = useMemo(() => {\n    return parseInt(getFullDisplayBalance(max.div(LOTTERY_TICKET_PRICE)), 10)\n  }, [max])\n\n  const handleChange = (e: React.FormEvent<HTMLInputElement>) => setVal(e.currentTarget.value)\n\n  const { onMultiBuy } = useMultiBuyLottery()\n  const maxNumber = useMaxNumber()\n  const lotteryContract = useContract(getLotteryAddress(), lotteryAbi)\n  const addTransaction = useTransactionAdder()\n\n  const handleBuy = useCallback(async () => {\n    try {\n      setRequestedBuy(true)\n      const length = parseInt(val)\n      // @ts-ignore\n      // eslint-disable-next-line prefer-spread\n      const numbers = Array.apply(null, { length }).map(() => [\n        Math.floor(Math.random() * maxNumber) + 1,\n        Math.floor(Math.random() * maxNumber) + 1,\n        Math.floor(Math.random() * maxNumber) + 1,\n        Math.floor(Math.random() * maxNumber) + 1,\n      ])\n      // await onMultiBuy(LOTTERY_TICKET_PRICE.toString(), numbers)\n      const txHash = await lotteryContract\n        .multiBuy(new BigNumber(LOTTERY_TICKET_PRICE.toString()).times(new BigNumber(10).pow(18)).toString(), numbers)\n        .then((response) => {\n          addTransaction(response, {\n            summary: 'Buy ticket successfully!',\n          })\n        })\n      // user rejected tx or didn't go thru\n      if (txHash) {\n        setRequestedBuy(false)\n      }\n    } catch (e) {\n      console.error(e)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [onMultiBuy, setRequestedBuy, maxNumber, val])\n\n  const handleSelectMax = useCallback(() => {\n    if (Number(maxTickets) > LOTTERY_MAX_NUMBER_OF_TICKETS) {\n      setVal(LOTTERY_MAX_NUMBER_OF_TICKETS.toString())\n    } else {\n      setVal(maxTickets.toString())\n    }\n  }, [maxTickets])\n\n  const cakeCosts = (amount: string): number => {\n    return +amount * LOTTERY_TICKET_PRICE\n  }\n  return (\n    <Modal title={TranslateString(450, 'Enter amount of tickets to buy')} onDismiss={onDismiss}>\n      <TicketInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol=\"TICKET\"\n        availableSymbol=\"LUCKY\"\n      />\n      <div>\n        <Tips>{TranslateString(999, `1 Ticket = ${LOTTERY_TICKET_PRICE} LUCKY`, { num: LOTTERY_TICKET_PRICE })}</Tips>\n      </div>\n      <div>\n        <Announce>\n          {TranslateString(\n            478,\n            'Ticket purchases are final. Your LUCKY cannot be returned to you after buying tickets.',\n          )}\n        </Announce>\n        <Final>{TranslateString(460, `You will spend: ${cakeCosts(val)} LUCKY`)}</Final>\n      </div>\n      <ModalActions>\n        <Button width=\"100%\" variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          id=\"lottery-buy-complete\"\n          width=\"100%\"\n          variant=\"secondary\"\n          disabled={\n            pendingTx ||\n            parseInt(val) > Number(maxTickets) ||\n            parseInt(val) > LOTTERY_MAX_NUMBER_OF_TICKETS ||\n            parseInt(val) < 1\n          }\n          onClick={async () => {\n            setPendingTx(true)\n            await handleBuy()\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default BuyTicketModal\n\nconst Tips = styled.div`\n  margin-left: 0.4em;\n  font-size: 14px;\n  font-weight: 600;\n  color: ${(props) => props.theme.colors.primary};\n`\n\nconst Final = styled.div`\n  margin-top: 1em;\n  text-align: center;\n  font-size: 20px;\n  font-weight: 600;\n  color: ${(props) => props.theme.colors.primary};\n`\nconst Announce = styled.div`\n  margin-top: 1em;\n  margin-left: 0.4em;\n  color: #fff;\n`\n","import React from 'react'\nimport { Button, Modal } from '@luckyswap/uikit'\nimport ModalActions from 'components/ModalActions'\nimport styled from 'styled-components'\nimport useI18n from 'hooks/useI18n'\n\nconst WarningModal: React.FC<{ onDismiss?: () => void }> = ({ onDismiss }) => {\n  const TranslateString = useI18n()\n\n  return (\n    <Modal title={TranslateString(466, 'Warning')} onDismiss={onDismiss}>\n      <TicketsList>\n        {TranslateString(468, 'Lottery ticket purchases are final.')}\n        <br />\n        {TranslateString(470, 'Your CAKE will not be returned to you after you spend it to buy tickets.')}\n        <br />\n        {TranslateString(472, 'Tickets are only valid for one lottery draw, and will be burned after the draw.')}\n        <br />\n        {TranslateString(\n          474,\n          'Buying tickets does not guarantee you will win anything. Please only participate once you understand the risks.',\n        )}\n      </TicketsList>\n      <ModalActions>\n        <Button width=\"100%\" onClick={onDismiss}>\n          {TranslateString(476, 'I understand')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nconst TicketsList = styled.div`\n  text-align: left;\n  overflow-y: auto;\n  max-height: 400px;\n  color: ${(props) => props.theme.colors.primary};\n`\n\nexport default WarningModal\n","import React, { useMemo, useCallback, useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { AutoRenewIcon, Button, useModal } from '@luckyswap/uikit'\nimport useI18n from 'hooks/useI18n'\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { useContract } from 'hooks/useContract'\nimport { useApproveCallbackCustom } from 'hooks/useApproveCallback'\nimport { XLUCKY_TESTNET_ADDRESSES } from 'config'\nimport bep20Abi from 'config/abi/erc20.json'\nimport lotteryAbi from 'config/abi/lottery.json'\nimport useRefresh from 'hooks/useRefresh'\nimport { getLotteryAddress, getLotteryTicketAddress } from 'utils/addressHelpers'\nimport lotteryTicketAbi from 'config/abi/lotteryNft.json'\nimport { isTransactionRecent, useAllTransactions } from 'state/transactions/hooks'\nimport { TransactionDetails } from 'state/transactions/reducer'\nimport { getTickets } from 'utils/lotteryUtils'\nimport BuyTicketModal from './BuyTicketModal'\nimport MyTicketsModal from './UserTicketsModal'\nimport PurchaseWarningModal from './PurchaseWarningModal'\n\n// we want the latest one to come first, so return negative if a is after b\nfunction newTransactionsFirst(a: TransactionDetails, b: TransactionDetails) {\n  return b.addedTime - a.addedTime\n}\n\nconst spinnerIcon = <AutoRenewIcon spin color=\"currentColor\" />\n\nconst CardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: ${(props) => props.theme.spacing[3]}px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    justify-content: space-between;\n  }\n`\n\nconst TicketCard: React.FC = () => {\n  const TranslateString = useI18n()\n  const [balanceToken, setBalanceToken] = useState(0)\n  const [tickets, setTickets] = useState([])\n  const [allowance, setAllowance] = useState(0)\n  // const allowance = useLotteryAllowance()\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\n\n  const { account, chainId } = useWeb3React()\n  const contractBEP20 = useContract(XLUCKY_TESTNET_ADDRESSES[chainId], bep20Abi)\n\n  const useContractTemp = useContract(XLUCKY_TESTNET_ADDRESSES[chainId], bep20Abi)\n\n  const ticketsContract = useContract(getLotteryTicketAddress(), lotteryTicketAbi)\n  const lotteryContract = useContract(getLotteryAddress(), lotteryAbi)\n  const { fastRefresh } = useRefresh()\n\n  const ticketsLength = tickets.length\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\n  const [onPresentApprove] = useModal(<PurchaseWarningModal />)\n  const [onPresentBuy] = useModal(<BuyTicketModal max={new BigNumber(balanceToken)} tokenName=\"CAKE\" />)\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await getTickets(lotteryContract, ticketsContract, account, null)\n      setTickets(res)\n    }\n\n    if (account && lotteryContract && ticketsContract) {\n      fetchBalance()\n    }\n  }, [account, lotteryContract, fastRefresh, ticketsContract])\n\n  useEffect(() => {\n    if (useContractTemp) {\n      useContractTemp\n        .balanceOf(account)\n        .then((data) => {\n          setBalanceToken(data.toString())\n        })\n        .catch((error) => console.log('lottery : ', error))\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [account])\n\n  useEffect(() => {\n    if (useContractTemp) {\n      useContractTemp\n        .balanceOf(account)\n        .then((data) => {\n          setBalanceToken(data.toString())\n        })\n        .catch((error) => console.log('lottery : ', error))\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [account, fastRefresh])\n\n  useEffect(() => {\n    const fetchApprovalData = async () => {\n      if (account && contractBEP20) {\n        try {\n          const response = await contractBEP20?.allowance?.(account, getLotteryAddress())\n          setAllowance(response.toString())\n        } catch (error) {\n          console.log(' error fetch approval data')\n        }\n      }\n    }\n\n    fetchApprovalData()\n  }, [account, contractBEP20])\n  const [requestedApproval, setRequestedApproval] = useState(false)\n\n  const [approval] = useApproveCallbackCustom(XLUCKY_TESTNET_ADDRESSES[chainId], getLotteryAddress())\n\n  async function onAttemptToApprove() {\n    return approval()\n  }\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      await onAttemptToApprove()\n    } catch (e) {\n      console.error(e)\n    }\n    /* eslint-disable react-hooks/exhaustive-deps */\n  }, [approval, setRequestedApproval])\n\n  const allTransactions = useAllTransactions()\n\n  const sortedRecentTransactions = useMemo(() => {\n    const txs = Object.values(allTransactions)\n    return txs.filter(isTransactionRecent).sort(newTransactionsFirst)\n  }, [allTransactions])\n\n  const getStatus = () => {\n    const pending = sortedRecentTransactions.filter((tx) => !tx.receipt).map((tx) => tx.hash)\n    return !!pending.length\n  }\n\n  const renderLotteryTicketButtons = () => {\n    if (allowance.toString() === '0') {\n      return (\n        <Dflex>\n          <Button className=\"bg-yellow\" width=\"100%\">\n            {TranslateString(432, 'Connect Wallet')}\n          </Button>\n          <Button\n            className=\"border-yellow\"\n            width=\"100%\"\n            disabled={requestedApproval || getStatus()}\n            onClick={handleApprove}\n          >\n            {getStatus() ? spinnerIcon : ''}\n            {TranslateString(494, 'View your tickets')}\n          </Button>\n        </Dflex>\n      )\n    }\n    return (\n      <>\n        <Button\n          style={{ marginRight: '8px' }}\n          width=\"100%\"\n          disabled={ticketsLength === 0}\n          variant=\"secondary\"\n          onClick={onPresentMyTickets}\n        >\n          {TranslateString(432, 'View your tickets')}\n        </Button>\n        <Button variant=\"secondary\" id=\"lottery-buy-start\" width=\"100%\" onClick={onPresentBuy}>\n          {getStatus() ? spinnerIcon : ''}\n          {TranslateString(430, 'Buy ticket')}\n        </Button>\n      </>\n    )\n  }\n\n  return (\n    <CardActions>\n      {!lotteryHasDrawn ? (\n        <Button disabled> {TranslateString(874, 'On sale soon')}</Button>\n      ) : (\n        renderLotteryTicketButtons()\n      )}\n    </CardActions>\n  )\n}\n\nconst Dflex = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-gap: 20px;\n  width: 100%;\n`\n\nexport default TicketCard\n","import getTimePeriods from 'utils/getTimePeriods'\n\n// lottery draws UTC: 02:00 (10:00 SGT), 14:00 (22:00 SGT)\nconst lotteryDrawHoursUtc = [2, 14]\n\nconst getClosestLotteryHour = (currentHour) => {\n  switch (true) {\n    case currentHour < lotteryDrawHoursUtc[0] || currentHour >= lotteryDrawHoursUtc[1]:\n      return lotteryDrawHoursUtc[0]\n    case currentHour < lotteryDrawHoursUtc[1]:\n      return lotteryDrawHoursUtc[1]\n    default:\n      return 0\n  }\n}\n\nconst getNextLotteryDrawTime = (currentMillis) => {\n  const date = new Date(currentMillis)\n  const currentHour = date.getUTCHours()\n  const nextLotteryHour = getClosestLotteryHour(currentHour)\n  // next lottery is tomorrow if the next lottery is at 2am UTC...\n  // ...and current time is between 02:00am & 23:59pm UTC\n  const nextLotteryIsTomorrow = nextLotteryHour === 2 && currentHour >= 2 && currentHour <= 23\n  let millisTimeOfNextDraw\n\n  if (nextLotteryIsTomorrow) {\n    const tomorrow = new Date(currentMillis)\n    const nextDay = tomorrow.getUTCDate() + 1\n    tomorrow.setUTCDate(nextDay)\n    millisTimeOfNextDraw = tomorrow.setUTCHours(nextLotteryHour, 0, 0, 0)\n  } else {\n    millisTimeOfNextDraw = date.setUTCHours(nextLotteryHour, 0, 0, 0)\n  }\n\n  return millisTimeOfNextDraw\n}\n\n// @ts-ignore\nconst getNextTicketSaleTime = (currentMillis) => (parseInt(currentMillis / 3600000) + 1) * 3600000\nconst hoursAndMinutesString = (hours, minutes) => `${parseInt(hours)}h, ${parseInt(minutes)}m`\n\nexport const getTicketSaleTime = (currentMillis): string => {\n  const nextTicketSaleTime = getNextTicketSaleTime(currentMillis)\n  const msUntilNextTicketSale = nextTicketSaleTime - currentMillis\n  const { minutes } = getTimePeriods(msUntilNextTicketSale / 1000)\n  const { hours } = getTimePeriods(msUntilNextTicketSale / 1000)\n  return hoursAndMinutesString(hours, minutes)\n}\n\nexport const getLotteryDrawTime = (currentMillis): string => {\n  const nextLotteryDrawTime = getNextLotteryDrawTime(currentMillis)\n  const msUntilLotteryDraw = nextLotteryDrawTime - currentMillis\n  const { minutes } = getTimePeriods(msUntilLotteryDraw / 1000)\n  const { hours } = getTimePeriods(msUntilLotteryDraw / 1000)\n  return hoursAndMinutesString(hours, minutes)\n}\n\nexport const getTicketSaleStep = () => (1 / 12) * 100\n\nexport const getLotteryDrawStep = (currentMillis) => {\n  const msBetweenLotteries = 43200000\n  const endTime = getNextLotteryDrawTime(currentMillis)\n  const msUntilLotteryDraw = endTime - currentMillis\n  const percentageRemaining = (msUntilLotteryDraw / msBetweenLotteries) * 100\n  return 100 - percentageRemaining\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card, CardBody, TicketRound, Text, Heading } from '@luckyswap/uikit'\nimport useI18n from 'hooks/useI18n'\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\nimport useTickets from 'hooks/useTickets'\nimport { useCurrentTime } from 'hooks/useTimer'\nimport TicketActions from './TicketActions'\nimport { getTicketSaleTime } from '../../helpers/CountdownHelpers'\n\ninterface CardProps {\n  isSecondCard?: boolean\n}\n\nconst StyledCard = styled(Card)<CardProps>`\n  margin: 0 !important;\n  max-width: 100% !important;\n  border-radius: 14px;\n\n  ${(props) =>\n    props.isSecondCard\n      ? `  \n        margin-top: 0;\n\n        ${props.theme.mediaQueries.sm} {\n          margin-top: 0;\n        }\n\n        ${props.theme.mediaQueries.lg} {\n          margin-top: 0;\n        }\n        `\n      : ``}\n`\n\nconst CardHeader = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n`\n\nconst IconWrapper = styled.div`\n  margin-bottom: 16px;\n  svg {\n    width: 48px;\n    height: 48px;\n  }\n`\n\nconst TicketCountWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 10px;\n`\n\nconst TicketCard: React.FC<CardProps> = ({ isSecondCard = false }) => {\n  const TranslateString = useI18n()\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\n\n  const tickets = useTickets()\n  const ticketsLength = tickets.length\n\n  const currentMillis = useCurrentTime()\n  const timeUntilTicketSale = lotteryHasDrawn && getTicketSaleTime(currentMillis)\n  // 12\n  return (\n    <StyledCard isSecondCard={isSecondCard}>\n      <CardBody>\n        <CardHeader>\n          <IconWrapper>\n            <img alt=\"\" src=\"../images/icon-lottery.svg\" />\n          </IconWrapper>\n          {lotteryHasDrawn ? (\n            <TicketCountWrapper>\n              <Text fontSize=\"20px\" color=\"textSubtle\">\n                {TranslateString(870, 'Your tickets for this round')}\n              </Text>\n              <Heading size=\"lg\" style={{ color: '#F3C111', fontSize: '30px' }}>\n                {timeUntilTicketSale}\n              </Heading>\n            </TicketCountWrapper>\n          ) : (\n            <TicketCountWrapper>\n              <Text fontSize=\"14px\" color=\"textSubtle\">\n                {TranslateString(724, 'Your tickets for this round')}\n              </Text>\n              <Heading size=\"lg\">{ticketsLength}</Heading>\n            </TicketCountWrapper>\n          )}\n        </CardHeader>\n        <TicketActions />\n      </CardBody>\n    </StyledCard>\n  )\n}\n\nexport default TicketCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Heading, Link, Image } from '@luckyswap/uikit'\nimport useI18n from 'hooks/useI18n'\n\nconst LayoutWrapper = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 1200px;\n  margin-bottom: 30px;\n  margin: 0 auto 40px;\n  display: flex;\n  flex-direction: column;\n  border-radius: 14px;\n  padding: 20px;\n  background-color: #2b2a2a;\n  text-align: center;\n`\n\nconst StyledHeading = styled(Heading)`\n  margin: 16px 0;\n`\n\nconst StyledImage = styled(Image)`\n  align-self: center;\n`\n\nconst StyledLink = styled(Link)`\n  align-self: center;\n  margin-top: 16px;\n  border: 1px solid #f3c111;\n  background-color: transparent;\n  color: #f3c111;\n  padding: 10px 20px;\n  border-radius: 14px;\n\n  &:hover {\n    color: #ecf023;\n  }\n`\n\nconst HowItWorks = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <LayoutWrapper>\n      <StyledHeading size=\"lg\" as=\"h3\" color=\"rgb(243, 193, 17)\">\n        {TranslateString(632, 'How it works')}\n      </StyledHeading>\n      <Text fontSize=\"16px\">\n        Spend LUCKY to buy tickets, contributing to the lottery pot.\n        <br /> Win prizes if 2, 3, or 4 of your ticket numbers match the winning numbers and their exact order!\n      </Text>\n      <StyledLink href=\"https://docs.luckyswap.io\">{TranslateString(610, 'Read more')}</StyledLink>\n    </LayoutWrapper>\n  )\n}\nexport default HowItWorks\n","export type DataResponse = {\n  lotteryNumber: number\n  lotteryDate: string\n  lotteryNumbers: number[]\n  poolSize: number\n  burned: number\n  contractLink: string\n  jackpotTicket: number\n  match1Ticket: number | null\n  match2Ticket: number\n  match3Ticket: number\n  match4Ticket: number\n  poolJackpot: number\n  poolMatch3: number\n  poolMatch2: number\n  poolMatch1: number | null\n\n  // TODO: Fill in the error type\n  error: any\n}\n\n/**\n * Get data for a specific lottery\n */\nconst getLotteryRoundData = async (lotteryNumber: number): Promise<DataResponse> => {\n  try {\n    const response = await fetch(`https://api.pancakeswap.com/api/singleLottery?lotteryNumber=${lotteryNumber || 0}`)\n    const data = await response.json()\n\n    return data\n  } catch (error) {\n    throw new Error(error)\n  }\n}\n\nexport default getLotteryRoundData\n","import { useContext, useEffect, useState } from 'react'\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\nimport getLotteryRoundData, { DataResponse } from 'utils/getLotteryRoundData'\n\ntype GetRecentLotteryRoundDataReturn = {\n  isLoading: boolean\n  data: DataResponse\n  mostRecentLotteryNumber: number\n  error: any\n}\n\nconst useGetRecentLotteryRoundData = (): GetRecentLotteryRoundDataReturn => {\n  const [isLoading, setIsLoading] = useState(true)\n  const [data, setData] = useState(null)\n  const [error, setError] = useState(null)\n  const { mostRecentLotteryNumber } = useContext(PastLotteryDataContext)\n\n  useEffect(() => {\n    const fetchRecentLotteryData = async () => {\n      try {\n        setIsLoading(true)\n\n        const roundData = await getLotteryRoundData(mostRecentLotteryNumber)\n        setData(roundData)\n      } catch (err) {\n        setError(err)\n      } finally {\n        setIsLoading(false)\n      }\n    }\n    // if (mostRecentLotteryNumber > 0) {\n    //   fetchRecentLotteryData()\n    // }\n    fetchRecentLotteryData()\n  }, [mostRecentLotteryNumber, setData, setIsLoading, setError])\n\n  return { isLoading, data, mostRecentLotteryNumber, error }\n}\n\nexport default useGetRecentLotteryRoundData\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Text, Input, Button } from '@luckyswap/uikit'\nimport useI18n from 'hooks/useI18n'\n\ninterface PastLotterySearcherProps {\n  initialLotteryNumber: number\n  onSubmit: (num: number) => void\n}\n\nconst Wrapper = styled.div`\n  margin-bottom: 24px;\n`\n\nconst SearchWrapper = styled.div`\n  position: relative;\n`\nconst InputWrapper = styled.div`\n  input::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n\n  /* Firefox */\n  input[type='number'] {\n    -moz-appearance: textfield;\n  }\n`\n\nconst ButtonWrapper = styled.div`\n  position: absolute;\n  right: 8px;\n  top: 50%;\n  transform: translate(0%, -50%);\n  width: auto;\n`\n\nconst PastLotterySearcher: React.FC<PastLotterySearcherProps> = ({ initialLotteryNumber, onSubmit }) => {\n  const [lotteryNumber, setLotteryNumber] = useState(initialLotteryNumber)\n  const [isError, setIsError] = useState(false)\n  const TranslateString = useI18n()\n\n  const handleSubmit = (evt: React.FormEvent<HTMLFormElement>) => {\n    evt.preventDefault()\n    onSubmit(0)\n  }\n\n  const handleChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\n    const value = parseInt(evt.currentTarget.value, 10)\n\n    // The max value will always be the initialLotteryNumber which equals\n    // the latest lottery round\n    setIsError(value > initialLotteryNumber)\n    setLotteryNumber(value)\n  }\n\n  return (\n    <Wrapper>\n      <Text>{TranslateString(742, 'Select lottery number:')}</Text>\n      <form onSubmit={handleSubmit}>\n        <SearchWrapper>\n          <InputWrapper>\n            <Input\n              value={lotteryNumber}\n              type=\"number\"\n              isWarning={isError}\n              max={initialLotteryNumber}\n              onChange={handleChange}\n            />\n          </InputWrapper>\n          <ButtonWrapper>\n            <Button variant=\"secondary\" type=\"submit\" scale=\"sm\" disabled={isError}>\n              {TranslateString(744, 'Search')}\n            </Button>\n          </ButtonWrapper>\n        </SearchWrapper>\n      </form>\n    </Wrapper>\n  )\n}\n\nexport default PastLotterySearcher\n","import React from 'react'\nimport { Text } from '@luckyswap/uikit'\n\ninterface PastRoundCardErrorProps {\n  error: {\n    message: string\n  }\n}\n\nconst PastRoundCardError: React.FC<PastRoundCardErrorProps> = ({ error }) => {\n  return <Text p=\"24px\">{error.message}</Text>\n}\n\nexport default PastRoundCardError\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Heading, Text } from '@luckyswap/uikit'\n\ninterface HeadingProps {\n  valueToDisplay?: string\n  children?: string\n  Icon?: React.ComponentType\n}\n\nconst IconWrapper = styled.div`\n  margin-right: 16px;\n\n  svg {\n    width: 48px;\n    height: 48px;\n  }\n`\n\nconst LotteryCardHeading: React.FC<HeadingProps> = ({ valueToDisplay, children, Icon, ...props }) => {\n  return (\n    <Flex {...props}>\n      {Icon && (\n        <IconWrapper>\n          <Icon />\n        </IconWrapper>\n      )}\n      <Flex className=\"box-lucky\" flexDirection=\"column\">\n        <Text fontSize=\"16px\" color=\"textSubtle\">\n          {children}\n        </Text>\n        <Heading size=\"lg\">{valueToDisplay}</Heading>\n      </Flex>\n    </Flex>\n  )\n}\n\nLotteryCardHeading.defaultProps = {\n  valueToDisplay: '',\n  Icon: () => <div />,\n  children: '',\n}\n\nexport default LotteryCardHeading\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button, LinkExternal, useModal } from '@luckyswap/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { useWeb3React } from '@web3-react/core'\nimport useTickets from 'hooks/useTickets'\nimport UnlockButton from 'components/UnlockButton'\nimport { SCAN_SITES } from '../../../../constants'\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\n\nconst Wrapper = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  padding-top: 24px;\n\n  & > div {\n    flex: 1;\n    width: 100%;\n  }\n`\n\nconst ExternalLinkWrap = styled(LinkExternal)`\n  align-items: center;\n  display: flex;\n  height: 48px;\n  justify-content: center;\n  text-decoration: none;\n  width: 100%;\n`\n\nconst TicketCard: React.FC<{ contractLink?: string; lotteryNumber?: number }> = ({ contractLink, lotteryNumber }) => {\n  const TranslateString = useI18n()\n  const tickets = useTickets(lotteryNumber)\n  const ticketsLength = tickets.length\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\n  const { account, chainId } = useWeb3React()\n\n  if (!account) {\n    return (\n      <Wrapper>\n        <UnlockButton />\n      </Wrapper>\n    )\n  }\n\n  return (\n    <Wrapper>\n      <div>\n        <Button disabled={ticketsLength === 0} onClick={onPresentMyTickets} width=\"100%\">\n          {TranslateString(432, 'View your tickets')}\n        </Button>\n      </div>\n      <div>\n        <ExternalLinkWrap href={contractLink}>\n          {TranslateString(356, `View on ${SCAN_SITES[chainId]}`)}\n        </ExternalLinkWrap>\n      </div>\n    </Wrapper>\n  )\n}\n\nexport default TicketCard\n","const formatLotteryDate = (lotteryDate: string) => {\n  if (!lotteryDate) {\n    return {}\n  }\n\n  const date = new Date(lotteryDate)\n\n  const dateString = date.toDateString()\n  const hours = date.getUTCHours()\n  const monthAndDay = dateString.split(' ').splice(1, 2).join(' ')\n\n  return { hours, monthAndDay }\n}\n\nexport default formatLotteryDate\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text } from '@luckyswap/uikit'\nimport formatLotteryDate from '../helpers/formatLotteryDate'\n\nconst Wrapper = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n`\n\nconst Timestamp = ({ timeValue }) => {\n  const { monthAndDay, hours } = formatLotteryDate(timeValue)\n\n  return (\n    <Wrapper>\n      <Text fontSize=\"14px\">\n        {monthAndDay}, {hours}:00 UTC\n      </Text>\n    </Wrapper>\n  )\n}\n\nexport default Timestamp\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, CardBody, CardFooter, PancakeRoundIcon, TicketRound } from '@luckyswap/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { DataResponse } from 'utils/getLotteryRoundData'\nimport LotteryCardHeading from '../LotteryCardHeading'\nimport PastLotteryActions from './PastLotteryActions'\nimport PrizeGrid from '../PrizeGrid'\nimport Timestamp from '../Timestamp'\n\ninterface PastRoundCardDetailsProps {\n  data: DataResponse\n}\n\nconst CardHeading = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`\n\nconst TopLotteryCardHeading = styled(LotteryCardHeading)`\n  margin-bottom: ${(props) => props.theme.spacing[4]}px;\n`\n\nconst BoxCard = styled.div`\n  padding: 10px;\n`\n\nconst Dflex = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  align-items: center;\n`\n\nconst PastRoundCardDetails: React.FC<PastRoundCardDetailsProps> = ({ data }) => {\n  const TranslateString = useI18n()\n\n  const {\n    contractLink,\n    jackpotTicket,\n    lotteryDate,\n    lotteryNumber,\n    lotteryNumbers,\n    match1Ticket,\n    match2Ticket,\n    match3Ticket,\n    poolSize,\n  } = data\n\n  return (\n    !data.error &&\n    data && (\n      <>\n        <CardBody>\n          <CardHeading>\n            <Timestamp timeValue={lotteryDate} />\n            <Heading size=\"md\" mb=\"24px\">\n              Round #{lotteryNumber}\n            </Heading>\n            <TopLotteryCardHeading\n              valueToDisplay={`${lotteryNumbers[0]}, ${lotteryNumbers[1]}, ${lotteryNumbers[2]}, ${lotteryNumbers[3]}`}\n              // Icon={TicketRound}\n            >\n              {TranslateString(999, 'Winning numbers')}\n            </TopLotteryCardHeading>\n            <Dflex>\n              <img src=\"../images/icon-logo-y.png\" alt=\"\" />\n              <LotteryCardHeading valueToDisplay={TranslateString(999, `${poolSize.toLocaleString()}`)}>\n                {TranslateString(999, 'Total prizes')}\n              </LotteryCardHeading>\n            </Dflex>\n          </CardHeading>\n        </CardBody>\n        <BoxCard>\n          <CardFooter className=\"no-border\">\n            <PrizeGrid\n              lotteryPrizeAmount={poolSize}\n              jackpotMatches={jackpotTicket}\n              oneTicketMatches={match1Ticket}\n              twoTicketMatches={match2Ticket}\n              threeTicketMatches={match3Ticket}\n              pastDraw\n            />\n            <PastLotteryActions contractLink={contractLink} lotteryNumber={lotteryNumber} />\n          </CardFooter>\n        </BoxCard>\n      </>\n    )\n  )\n}\n\nexport default PastRoundCardDetails\n","import React from 'react'\nimport styled from 'styled-components'\n// import { Card } from '@luckyswap/uikit'\nimport { DataResponse } from 'utils/getLotteryRoundData'\nimport PastRoundCardError from './PastRoundCardError'\nimport PastRoundCardDetails from './PastRoundCardDetails'\n\ninterface PastRoundCardProps {\n  error: {\n    message: string\n  }\n  data: DataResponse\n}\n\nconst PastRoundCard: React.FC<PastRoundCardProps> = ({ error, data }) => {\n  return (\n    <FullWidth>{error.message ? <PastRoundCardError error={error} /> : <PastRoundCardDetails data={data} />}</FullWidth>\n  )\n}\n\nconst FullWidth = styled.div`\n  width: 100%;\n  background: linear-gradient(45deg, rgb(35 35 35) 30%, rgb(45 45 45) 100%);\n  box-shadow: none;\n  display: grid;\n  grid-template-columns: 1fr;\n  margin-bottom: 20px;\n  border-radius: 14px;\n\n  @media (min-width: 991px) {\n    grid-template-columns: 1fr 1fr;\n    margin-bottom: 30px;\n  }\n`\n\nexport default PastRoundCard\n","import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { Card, CardBody } from '@luckyswap/uikit'\nimport getLotteryRoundData from 'utils/getLotteryRoundData'\nimport useI18n from 'hooks/useI18n'\nimport useGetRecentLotteryRoundData from 'hooks/useGetRecentLotteryRoundData'\nimport PastLotterySearcher from './PastLotterySearcher'\nimport PastRoundCard from './PastRoundCard'\nimport Loading from '../Loading'\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst StyledCardBody = styled(CardBody)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 552px; // height of final card\n`\n\nconst PastLotteryRoundViewer = () => {\n  const [state, setState] = useState({\n    roundData: null,\n    error: { message: null, type: null },\n    isInitialized: false,\n    isLoading: true,\n  })\n  const { data: initialLotteryData, mostRecentLotteryNumber } = useGetRecentLotteryRoundData()\n  const TranslateString = useI18n()\n  const { roundData, error, isInitialized, isLoading } = state\n\n  useEffect(() => {\n    if (initialLotteryData) {\n      setState((prevState) => ({ ...prevState, isLoading: false, isInitialized: true, roundData: initialLotteryData }))\n    }\n  }, [initialLotteryData, setState])\n\n  const handleSubmit = async (lotteryNumber: number) => {\n    setState((prevState) => ({\n      ...prevState,\n      isLoading: true,\n    }))\n\n    getLotteryRoundData(lotteryNumber)\n      .then((data) => {\n        if (data.error) {\n          setState((prevState) => ({\n            ...prevState,\n            error: {\n              message: TranslateString(1076, 'The lottery number you provided does not exist'),\n              type: 'out of range',\n            },\n            isLoading: false,\n            isInitialized: true,\n          }))\n        } else {\n          setState((prevState) => ({\n            ...prevState,\n            error: { message: null, type: null },\n            roundData: data,\n            isLoading: false,\n            isInitialized: true,\n          }))\n        }\n      })\n      .catch(() => {\n        setState((prevState) => ({\n          ...prevState,\n          error: { message: TranslateString(1078, 'Error fetching data'), type: 'api' },\n          isLoading: false,\n          isInitialized: true,\n        }))\n      })\n  }\n\n  return (\n    <Wrapper>\n      <PastLotterySearcher initialLotteryNumber={mostRecentLotteryNumber} onSubmit={handleSubmit} />\n      {!isInitialized || isLoading ? (\n        <Card>\n          <StyledCardBody>\n            <Loading />\n          </StyledCardBody>\n        </Card>\n      ) : (\n        <PastRoundCard error={error} data={roundData} />\n      )}\n    </Wrapper>\n  )\n}\n\nexport default PastLotteryRoundViewer\n","import React, { lazy, Suspense, useContext } from 'react'\nimport styled from 'styled-components'\nimport { Text } from '@luckyswap/uikit'\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\nimport Loading from '../Loading'\n\nconst Line = lazy(() => import('./LineChartWrapper'))\n\nconst InnerWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n\nconst HistoryChart: React.FC = () => {\n  const { historyData, historyError } = useContext(PastLotteryDataContext)\n  const getDataArray = (kind) => {\n    return historyData\n      .map((dataPoint) => {\n        return dataPoint[kind]\n      })\n      .reverse()\n  }\n\n  const lineStyles = ({ color }) => {\n    return {\n      borderColor: color,\n      fill: false,\n      borderWidth: 2,\n      pointRadius: 0,\n      pointHitRadius: 10,\n    }\n  }\n\n  const chartData = {\n    labels: getDataArray('lotteryNumber'),\n    datasets: [\n      {\n        label: 'Pool Size',\n        data: getDataArray('poolSize'),\n        yAxisID: 'y-axis-pool',\n        ...lineStyles({ color: '#8F80BA' }),\n      },\n      {\n        label: 'Burned',\n        data: getDataArray('burned'),\n        yAxisID: 'y-axis-burned',\n        ...lineStyles({ color: '#2b2c3a' }),\n      },\n    ],\n  }\n\n  const axesStyles = ({ color, lineHeight }) => {\n    return {\n      borderCapStyle: 'round',\n      gridLines: { display: false },\n      ticks: {\n        fontFamily: 'Kanit, sans-serif',\n        fontColor: color,\n        fontSize: 14,\n        lineHeight,\n        maxRotation: 0,\n        beginAtZero: true,\n        autoSkipPadding: 15,\n        userCallback: (value) => {\n          return value.toLocaleString()\n        },\n      },\n    }\n  }\n\n  const options = {\n    legend: { display: false },\n    scales: {\n      yAxes: [\n        {\n          type: 'linear',\n          display: true,\n          position: 'left',\n          id: 'y-axis-pool',\n          ...axesStyles({ color: '#8f80ba', lineHeight: 1.6 }),\n        },\n        {\n          type: 'linear',\n          display: true,\n          position: 'right',\n          id: 'y-axis-burned',\n          ...axesStyles({ color: '#2b2c3a', lineHeight: 1.5 }),\n        },\n      ],\n      xAxes: [\n        {\n          ...axesStyles({ color: '#2b2c3a', lineHeight: 1 }),\n        },\n      ],\n    },\n  }\n\n  return (\n    <>\n      {historyError && (\n        <InnerWrapper>\n          <Text>Error fetching data</Text>\n        </InnerWrapper>\n      )}\n      {!historyError && historyData.length > 0 ? (\n        <Suspense fallback={<div>Loading...</div>}>\n          <Line data={chartData} options={options} type=\"line\" />\n        </Suspense>\n      ) : (\n        <InnerWrapper>\n          <Loading />\n        </InnerWrapper>\n      )}\n    </>\n  )\n}\n\nexport default HistoryChart\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text } from '@luckyswap/uikit'\nimport useI18n from 'hooks/useI18n'\n\nconst Wrapper = styled.div`\n  display: flex;\n  margin: 36px 0 28px;\n`\n\nconst LegendItem = styled.div`\n  display: flex;\n  margin-right: 18px;\n  align-items: center;\n`\n\nconst Circle = styled.div<{ isPoolSize?: boolean }>`\n  width: 20px;\n  height: 20px;\n  border-radius: 10px;\n  background-color: ${({ isPoolSize, theme }) => theme.colors[isPoolSize ? 'textSubtle' : 'primary']};\n  margin-right: 6px;\n`\n\nconst Legend = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <Wrapper>\n      <LegendItem>\n        <Circle isPoolSize />\n        <Text>{TranslateString(748, 'Pool Size')}</Text>\n      </LegendItem>\n      <LegendItem>\n        <Circle />\n        <Text>{TranslateString(750, 'Burned')}</Text>\n      </LegendItem>\n    </Wrapper>\n  )\n}\n\nexport default Legend\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Card, CardBody } from '@luckyswap/uikit'\nimport useI18n from 'hooks/useI18n'\nimport HistoryChart from './HistoryChart'\nimport Legend from './Legend'\n\nconst PastDrawsHistoryCard: React.FC = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <FullWidth>\n      <CardBody>\n        <Heading size=\"md\">{TranslateString(746, 'History')}</Heading>\n        <Legend />\n        <HistoryChart />\n      </CardBody>\n    </FullWidth>\n  )\n}\n\nconst FullWidth = styled(Card)`\n  max-width: 100%;\n  background: linear-gradient(45deg, rgb(35 35 35) 30%, rgb(45 45 45) 100%);\n  box-shadow: none;\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  margin-bottom: 60px;\n  border-radius: 14px;\n`\n\nexport default PastDrawsHistoryCard\n","import styled from 'styled-components'\n\nexport default styled.div`\n  background-color: ${({ theme }) => theme.colors.textSubtle};\n  height: 1px;\n  margin: 0 auto 32px;\n  width: 100%;\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useWeb3React } from '@web3-react/core'\nimport { BaseLayout } from '@luckyswap/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useTotalClaim } from 'hooks/useTickets'\nimport YourPrizesCard from './components/YourPrizesCard'\nimport UnlockWalletCard from './components/UnlockWalletCard'\nimport TicketCard from './components/TicketCard'\nimport TotalPrizesCard from './components/TotalPrizesCard'\nimport WinningNumbers from './components/WinningNumbers'\nimport HowItWorks from './components/HowItWorks'\n\nconst Cards = styled(BaseLayout)`\n  align-items: start;\n  margin-bottom: 32px;\n\n  & > div {\n    grid-column: span 6;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    & > div {\n      grid-column: span 12;\n    }\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    & > div {\n      grid-column: span 6;\n    }\n  }\n`\n\nconst SecondCardColumnWrapper = styled.div<{ isAWin?: boolean }>`\n  display: flex;\n  flex-direction: ${(props) => (props.isAWin ? 'column' : 'column-reverse')};\n`\n\nconst NextDrawPage: React.FC = () => {\n  const { account } = useWeb3React()\n  const { claimAmount } = useTotalClaim()\n  const winnings = getBalanceNumber(claimAmount)\n  const isAWin = winnings > 0\n\n  return (\n    <>\n      <Cards>\n        <div>{/* <TotalPrizesCard /> */}</div>\n        {/* <SecondCardColumnWrapper isAWin={isAWin}>\n          {!account ? (\n            <UnlockWalletCard />\n          ) : (\n            <>\n              <YourPrizesCard />\n              <TicketCard isSecondCard={isAWin} />\n            </>\n          )}\n        </SecondCardColumnWrapper> */}\n      </Cards>\n      {/* <HowItWorks /> */}\n      {/* legacy page content */}\n      {/* <WinningNumbers /> */}\n    </>\n  )\n}\n\nexport default NextDrawPage\n","import React from 'react'\nimport styled from 'styled-components'\nimport { BaseLayout } from '@luckyswap/uikit'\nimport PastLotteryRoundViewer from './components/PastLotteryRoundViewer'\nimport PastDrawsHistoryCard from './components/PastDrawsHistory/PastDrawsHistoryCard'\n\nconst Cards = styled(BaseLayout)`\n  align-items: start;\n  margin-bottom: 32px;\n\n  & > div {\n    grid-column: span 6;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    & > div {\n      grid-column: span 12;\n    }\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    & > div {\n      grid-column: span 6;\n    }\n  }\n`\n\nconst SecondCardColumnWrapper = styled.div<{ isAWin?: boolean }>`\n  display: flex;\n  flex-direction: column;\n`\n\nconst BunnyImageWrapper = styled.div`\n  display: flex;\n  margin-top: 32px;\n  justify-content: center;\n`\n\nconst PastDrawsPage: React.FC = () => {\n  return (\n    <Cards>\n      <PastLotteryRoundViewer />\n      <SecondCardColumnWrapper>\n        <PastDrawsHistoryCard />\n        <BunnyImageWrapper>\n          {/* <img src=\"/images/pancake-lottery-bunny.png\" alt=\"lottery bunny\" /> */}\n        </BunnyImageWrapper>\n      </SecondCardColumnWrapper>\n    </Cards>\n  )\n}\n\nexport default PastDrawsPage\n","import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { ButtonMenu, ButtonMenuItem } from '@luckyswap/uikit'\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\nimport { getLotteryIssueIndex } from 'utils/lotteryUtils'\nimport useI18n from 'hooks/useI18n'\nimport Page from 'components/layout/Page'\nimport { useLottery, useContract } from 'hooks/useContract'\nimport { getLotteryAddress } from 'utils/addressHelpers'\nimport lotteryAbi from 'config/abi/lottery.json'\n\nimport { useWeb3React } from '@web3-react/core'\nimport { useTotalClaim } from 'hooks/useTickets'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport Hero from './components/Hero'\nimport WinningNumbers from './components/WinningNumbers'\nimport TotalPrizesCard from './components/TotalPrizesCard'\nimport YourPrizesCard from './components/YourPrizesCard'\nimport UnlockWalletCard from './components/UnlockWalletCard'\nimport TicketCard from './components/TicketCard'\nimport HowItWorks from './components/HowItWorks'\nimport PastLotteryRoundViewer from './components/PastLotteryRoundViewer'\n// import { BaseLayout } from '@luckyswap/uikit'\nimport PastDrawsHistoryCard from './components/PastDrawsHistory/PastDrawsHistoryCard'\nimport Divider from './components/Divider'\nimport NextDrawPage from './NextDrawPage'\nimport PastDrawsPage from './PastDrawsPage'\n\nconst Wrapper = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 32px;\n`\n\nconst SecondCardColumnWrapper = styled.div<{ isAWin?: boolean }>`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-gap: 40px;\n  margin-bottom: 30px;\n\n  @media (min-width: 991px) {\n    grid-template-columns: 1fr 1fr;\n  }\n`\n\nconst Dflex = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-gap: 40px;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 1200px;\n  margin-bottom: 30px;\n`\n\nconst BoxImg = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  img {\n    width: 100%;\n    max-width: 750px;\n  }\n`\n\nconst Lottery: React.FC = () => {\n  const lotteryContract = useContract(getLotteryAddress(), lotteryAbi)\n\n  const TranslateString = useI18n()\n  const [activeIndex, setActiveIndex] = useState(0)\n  const [historyData, setHistoryData] = useState([])\n  const [historyError, setHistoryError] = useState(false)\n  const [currentLotteryNumber, setCurrentLotteryNumber] = useState(0)\n  const [mostRecentLotteryNumber, setMostRecentLotteryNumber] = useState(1)\n\n  const { account } = useWeb3React()\n  const { claimAmount } = useTotalClaim()\n  const winnings = getBalanceNumber(claimAmount)\n  const isAWin = winnings > 0\n\n  useEffect(() => {\n    fetch(`https://api.pancakeswap.com/api/lotteryHistory`)\n      .then((response) => response.json())\n      .then((data) => setHistoryData(data))\n      .catch(() => {\n        setHistoryError(true)\n      })\n  }, [])\n\n  useEffect(() => {\n    const getInitialLotteryIndex = async () => {\n      const index = await getLotteryIssueIndex(lotteryContract)\n      const previousLotteryNumber = index - 1\n\n      setCurrentLotteryNumber(index)\n      setMostRecentLotteryNumber(previousLotteryNumber)\n    }\n\n    if (lotteryContract) {\n      getInitialLotteryIndex()\n    }\n  }, [lotteryContract])\n\n  const handleClick = (index) => {\n    setActiveIndex(index)\n  }\n\n  return (\n    <>\n      <Page>\n        {/* <BoxImg>\n          <img src=\"../images/coming-soon-lot.png\" alt=\"\"/>\n        </BoxImg> */}\n        {/* {/* <Hero /> */}\n        <TotalPrizesCard />\n        <SecondCardColumnWrapper isAWin={isAWin}>\n          {!account ? (\n            <UnlockWalletCard />\n          ) : (\n            <>\n              <TicketCard isSecondCard={isAWin} />\n              <YourPrizesCard />\n            </>\n          )}\n        </SecondCardColumnWrapper>\n        <WinningNumbers />\n        <HowItWorks />\n        <PastLotteryRoundViewer />\n        <PastDrawsHistoryCard /> \n\n        <Wrapper>\n          <ButtonMenu activeIndex={activeIndex} onItemClick={handleClick} scale=\"sm\" variant=\"subtle\">\n            <ButtonMenuItem>{TranslateString(716, 'Next draw')}</ButtonMenuItem>\n            <ButtonMenuItem>{TranslateString(718, 'Past draws')}</ButtonMenuItem>\n          </ButtonMenu>\n        </Wrapper>\n        <Divider />\n        <PastLotteryDataContext.Provider\n          value={{ historyError, historyData, mostRecentLotteryNumber, currentLotteryNumber }}\n        >\n          {activeIndex === 0 ? <NextDrawPage /> : <PastDrawsPage />}\n        </PastLotteryDataContext.Provider>\n      </Page>\n    </>\n  )\n}\n\nexport default Lottery\n"],"sourceRoot":""}
{"version":3,"sources":["views/TradingCompetition/components/CompetitionHeadingText.tsx","views/TradingCompetition/components/Section/sectionStyles.tsx","hooks/useTokenBalance.ts","views/TradingCompetition/pngs/all-bunnies-clipped.png","views/TradingCompetition/components/LeadInBanner/index.tsx","views/Home/components/CardValue.tsx","views/Home/components/CardBusdValue.tsx","../node_modules/lodash/max.js","../node_modules/lodash/_baseExtremum.js","../node_modules/lodash/_baseGt.js","hooks/useFarmsWithBalance.ts","hooks/useAllEarnings.ts","views/Home/components/CakeHarvestBalance.tsx","views/Home/components/CakeWalletBalance.tsx","views/Home/components/FarmStakingCard.tsx","views/Home/components/CakeStats.tsx","views/Home/components/TotalValueLockedCard.tsx","hooks/api.ts","views/Home/components/EarnAPYCard.tsx","views/Home/components/EarnAssetCard.tsx","views/Home/Home.tsx"],"names":["H1SizeStyles","theme","mediaQueries","sm","H2SizeStyles","sharedStyles","props","textColor","background","fill","sharedVisiblyHiddenStyles","Heading1Text","styled","Heading","Heading2Text","VisuallyHiddenHeading2Text","DARKBG","DARKFILL","MIDBLUEBG","MIDBLUEBG_DARK","MIDBLUEFILL","MIDBLUEFILL_DARK","LIGHTBLUEBG","LIGHTBLUEBG_DARK","LIGHTBLUEFILL","LIGHTBLUEFILL_DARK","GOLDGRADIENT","useTotalSupply","slowRefresh","useRefresh","useState","totalSupply","setTotalSupply","useEffect","a","cakeContract","getCakeContract","methods","call","supply","BigNumber","fetchTotalSupply","useBurnedBalance","tokenAddress","balance","setBalance","web3","useWeb3","getBep20Contract","fetchBalance","useTokenBalance","account","useWeb3React","fastRefresh","StyledLeadInBanner","Box","Container","PageContainer","md","allBunniesImageClipped","Header","SubHeader","LearnMoreLink","Link","colors","primary","LaurelWrapper","div","LeadInBanner","TranslateString","useI18n","alignItems","justifyContent","width","color","px","id","to","ml","CardValue","value","decimals","fontSize","lineHeight","prefix","bold","useCountUp","start","end","duration","separator","undefined","countUp","update","updateValue","useRef","current","style","CardBusdValue","baseExtremum","require","baseGt","identity","module","exports","array","length","isSymbol","iteratee","comparator","index","computed","result","other","useFarmsWithBalance","farmsWithBalances","setFarmsWithBalances","calls","farmsConfig","map","farm","address","getMasterChefAddress","name","params","pid","multicall","masterChefABI","rawResults","results","fetchBalances","useAllEarnings","balances","res","fetchAllBalances","Block","CakeHarvestBalance","earningsSum","reduce","accum","earning","pow","toNumber","earningsBusd","multipliedBy","usePriceCakeBusd","CakeWalletBalance","cakeBalance","getCakeAddress","busdBalance","getBalanceNumber","StyledFarmStakingCard","Card","CardImage","img","Label","textSubtle","Actions","Title","h2","FarmedStakingCard","pendingTx","setPendingTx","balancesWithValue","filter","balanceType","onReward","useAllHarvest","farmWithBalance","harvestAllFarms","useCallback","src","alt","height","className","disabled","onClick","count","UnlockButton","StyledCakeStats","Row","h3","BgIMG","CakeStats","burnedBalance","cakeSupply","StyledTotalValueLockedCard","TotalValueLockedCard","data","setData","fetch","response","json","responsedata","console","error","fetchData","useGetStats","tvl","total_value_locked_all","toLocaleString","maximumFractionDigits","size","lg","CardMidContent","attrs","EarnAPYCard","farmsLP","useFarms","prices","useGetApiPrices","cakePrice","highestApy","useMemo","apys","multiplier","lpTotalInQuoteToken","quoteTokenPriceUsd","getAddress","quoteToken","toLowerCase","totalLiquidity","times","getFarmApy","poolWeight","maxApy","max","animation","variant","exact","activeClassName","mt","EarnAssetCard","activeNonCakePools","pools","pool","isFinished","earningToken","symbol","includes","latestPools","orderBy","slice","assets","join","Hero","Cards","BaseLayout","CardsBot","Subtitle","Home","Page","FarmStakingCard"],"mappings":"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","file":"static/js/6.9b4f5779.chunk.js","sourcesContent":["import { Heading } from '@beswap/uikit'\nimport styled, { DefaultTheme } from 'styled-components'\n\nconst H1SizeStyles = (theme: DefaultTheme) => `\n  font-size: 48px;\n  line-height: 110%;\n  white-space: nowrap;\n\n  ${theme.mediaQueries.sm} {\n    font-size: 64px;\n  }\n`\n\nconst H2SizeStyles = (theme: DefaultTheme) => `\n  font-size: 32px;\n  line-height: 110%;\n  white-space: nowrap;\n\n  ${theme.mediaQueries.sm} {\n    font-size: 40px\n  }\n`\n\nconst sharedStyles = (props: HeadingProps) => `\n  color: ${props.textColor ? props.textColor : '#ffffff'};\n  background:  ${props.background ? props.background : 'linear-gradient(#f88520 0%, #F88521 100%)'};\n  background-clip: text;\n  -webkit-background-clip: text;\n  ${\n    props.fill\n      ? `-webkit-text-fill-color: transparent;`\n      : `-webkit-text-stroke: 4px transparent;\n       text-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);`\n  }\n`\n\nconst sharedVisiblyHiddenStyles = `\n  visibility: hidden;\n  height: 0px;\n`\n\ninterface HeadingProps {\n  textColor?: string\n  background?: string\n  fill?: boolean\n}\n\nexport const Heading1Text = styled(Heading)<HeadingProps>`\n  ${({ theme }) => H1SizeStyles(theme)}\n  ${(props) => sharedStyles(props)}\n`\n\nexport const Heading2Text = styled(Heading)<HeadingProps>`\n  ${({ theme }) => H2SizeStyles(theme)}\n  ${(props) => sharedStyles(props)}\n`\n\nexport const VisuallyHiddenHeading1Text = styled(Heading)`\n  ${({ theme }) => H1SizeStyles(theme)}\n  ${sharedVisiblyHiddenStyles}\n`\n\nexport const VisuallyHiddenHeading2Text = styled(Heading)`\n  ${({ theme }) => H2SizeStyles(theme)}\n  ${sharedVisiblyHiddenStyles}\n`\n\nexport default Heading1Text\n","export const DARKBG = 'radial-gradient(329.58% 50% at 50% 50%, #3B2864 0%, #191326 100%)'\nexport const DARKFILL = '#191326'\nexport const MIDBLUEBG = 'linear-gradient(180deg, #CBD7EF 0%, #9A9FD0 100%)'\nexport const MIDBLUEBG_DARK = 'linear-gradient(180deg, #434575 0%, #66578D 100%)'\nexport const MIDBLUEFILL = '#9A9FD0'\nexport const MIDBLUEFILL_DARK = '#66578D'\nexport const LIGHTBLUEBG = 'linear-gradient(139.73deg, #E6FDFF 0%, #F3EFFF 100%)'\nexport const LIGHTBLUEBG_DARK = 'linear-gradient(139.73deg, #313D5C 0%, #3D2A54 100%)'\nexport const LIGHTBLUEFILL = '#F3EFFF'\nexport const LIGHTBLUEFILL_DARK = '#3D2A54'\nexport const GOLDGRADIENT = 'linear-gradient(180deg, #FFD800 0%, #EB8C00 100%)'\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { getBep20Contract, getCakeContract } from 'utils/contractHelpers'\nimport useWeb3 from './useWeb3'\nimport useRefresh from './useRefresh'\n\nconst useTokenBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { account } = useWeb3React()\n  const web3 = useWeb3()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress, web3)\n      const res =0 // = await contract.methods.balanceOf(account).call()\n      setBalance(new BigNumber(res))\n    }\n\n    if (account) {\n      fetchBalance()\n    }\n  }, [account, tokenAddress, web3, fastRefresh])\n\n  return balance\n}\n\nexport const useTotalSupply = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getCakeContract()\n      const supply = await cakeContract.methods.totalSupply().call()\n      setTotalSupply(new BigNumber(supply))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\n\nexport const useBurnedBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { slowRefresh } = useRefresh()\n  const web3 = useWeb3()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress, web3)\n      const res = 0 // await contract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call()\n      setBalance(new BigNumber(res))\n    }\n\n    fetchBalance()\n  }, [web3, tokenAddress, slowRefresh])\n\n  return balance\n}\n\nexport default useTokenBalance\n","export default __webpack_public_path__ + \"static/media/all-bunnies-clipped.6aa99e2e.png\";","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { ArrowForwardIcon, Box, Flex, LaurelLeftIcon, LaurelRightIcon } from '@beswap/uikit'\nimport styled from 'styled-components'\nimport useI18n from 'hooks/useI18n'\nimport PageContainer from 'components/layout/Container'\nimport allBunniesImageClipped from '../../pngs/all-bunnies-clipped.png'\nimport { DARKBG, GOLDGRADIENT } from '../Section/sectionStyles'\nimport { Heading1Text, Heading2Text } from '../CompetitionHeadingText'\n\nconst StyledLeadInBanner = styled(Box)`\n  background: ${DARKBG};\n  display: none;\n`\n\nconst Container = styled(PageContainer)`\n  padding-bottom: 24px;\n  padding-top: 24px;\n  text-align: center;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    background: url(${allBunniesImageClipped}) no-repeat bottom right 24px;\n    text-align: left;\n  }\n`\n\nconst Header = styled(Heading1Text)`\n  font-size: 24px;\n`\n\nconst SubHeader = styled(Heading2Text)`\n  font-size: 24px;\n  margin-bottom: 4px;\n`\n\nconst LearnMoreLink = styled(Link)`\n  align-items: center;\n  color: ${({ theme }) => theme.colors.primary};\n  display: inline-flex;\n  font-weight: 600;\n`\n\nconst LaurelWrapper = styled.div`\n  flex: none;\n  width: 40px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: none;\n  }\n`\n\nconst LeadInBanner = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <StyledLeadInBanner>\n      <Container>\n        <Flex alignItems=\"center\" justifyContent={['center', 'center', null, 'start']}>\n          <LaurelWrapper>\n            <LaurelLeftIcon width=\"40px\" color=\"warning\" />\n          </LaurelWrapper>\n          <Box px={['8px', '16px', null, '0']}>\n            <Header>{TranslateString(999, 'Easter Battle')}</Header>\n            <SubHeader background={GOLDGRADIENT} fill>\n              {TranslateString(999, '$200,000 in Prizes!')}\n            </SubHeader>\n            <LearnMoreLink id=\"hp-learn-more-cta\" to=\"/competition\">\n              {TranslateString(999, 'Learn More')}\n              <ArrowForwardIcon color=\"primary\" ml=\"4px\" />\n            </LearnMoreLink>\n          </Box>\n          <LaurelWrapper>\n            <LaurelRightIcon width=\"40px\" color=\"warning\" />\n          </LaurelWrapper>\n        </Flex>\n      </Container>\n    </StyledLeadInBanner>\n  )\n}\n\nexport default LeadInBanner\n","import React, { useEffect, useRef } from 'react'\nimport { useCountUp } from 'react-countup'\nimport { Text } from '@beswap/uikit'\n\nexport interface CardValueProps {\n  value: number\n  decimals?: number\n  fontSize?: string\n  lineHeight?: string\n  prefix?: string\n  bold?: boolean\n  color?: string\n}\n\nconst CardValue: React.FC<CardValueProps> = ({\n  value,\n  decimals,\n  fontSize = '40px',\n  lineHeight = '1',\n  prefix = '',\n  bold = true,\n  color = 'text',\n}) => {\n  const { countUp, update } = useCountUp({\n    start: 0,\n    end: value,\n    duration: 1,\n    separator: ',',\n    decimals:\n      // eslint-disable-next-line no-nested-ternary\n      decimals !== undefined ? decimals : value < 0 ? 4 : value > 1e5 ? 0 : 3,\n  })\n\n  const updateValue = useRef(update)\n\n  useEffect(() => {\n    updateValue.current(value)\n  }, [value, updateValue])\n\n  return (\n    <Text bold={bold} fontSize={fontSize} style={{ lineHeight }} color={color}>\n      {prefix}\n      {countUp}\n    </Text>\n  )\n}\n\nexport default CardValue\n","import React from 'react'\nimport CardValue, { CardValueProps } from './CardValue'\n\nconst CardBusdValue: React.FC<CardValueProps> = (props) => {\n  return (\n    <CardValue fontSize=\"14px\" lineHeight=\"1.1\" color=\"#F88521\" prefix=\"~$\" bold={false} decimals={2} {...props} />\n  )\n}\n\nexport default CardBusdValue\n","var baseExtremum = require('./_baseExtremum'),\n    baseGt = require('./_baseGt'),\n    identity = require('./identity');\n\n/**\n * Computes the maximum value of `array`. If `array` is empty or falsey,\n * `undefined` is returned.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Math\n * @param {Array} array The array to iterate over.\n * @returns {*} Returns the maximum value.\n * @example\n *\n * _.max([4, 2, 8, 6]);\n * // => 8\n *\n * _.max([]);\n * // => undefined\n */\nfunction max(array) {\n  return (array && array.length)\n    ? baseExtremum(array, identity, baseGt)\n    : undefined;\n}\n\nmodule.exports = max;\n","var isSymbol = require('./isSymbol');\n\n/**\n * The base implementation of methods like `_.max` and `_.min` which accepts a\n * `comparator` to determine the extremum value.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The iteratee invoked per iteration.\n * @param {Function} comparator The comparator used to compare values.\n * @returns {*} Returns the extremum value.\n */\nfunction baseExtremum(array, iteratee, comparator) {\n  var index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    var value = array[index],\n        current = iteratee(value);\n\n    if (current != null && (computed === undefined\n          ? (current === current && !isSymbol(current))\n          : comparator(current, computed)\n        )) {\n      var computed = current,\n          result = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseExtremum;\n","/**\n * The base implementation of `_.gt` which doesn't coerce arguments.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if `value` is greater than `other`,\n *  else `false`.\n */\nfunction baseGt(value, other) {\n  return value > other;\n}\n\nmodule.exports = baseGt;\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport multicall from 'utils/multicall'\nimport { getMasterChefAddress } from 'utils/addressHelpers'\nimport masterChefABI from 'config/abi/masterchef.json'\nimport { farmsConfig } from 'config/constants'\nimport { FarmConfig } from 'config/constants/types'\nimport useRefresh from './useRefresh'\n\nexport interface FarmWithBalance extends FarmConfig {\n  balance: BigNumber\n}\n\nconst useFarmsWithBalance = () => {\n  const [farmsWithBalances, setFarmsWithBalances] = useState<FarmWithBalance[]>([])\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalances = async () => {\n      const calls = farmsConfig.map((farm) => ({\n        address: getMasterChefAddress(),\n        name: 'pendingCake',\n        params: [farm.pid, account],\n      }))\n\n      const rawResults = await multicall(masterChefABI, calls)\n      const results = farmsConfig.map((farm, index) => ({ ...farm, balance: new BigNumber(rawResults[index]) }))\n\n      setFarmsWithBalances(results)\n    }\n\n    if (account) {\n      fetchBalances()\n    }\n  }, [account, fastRefresh])\n\n  return farmsWithBalances\n}\n\nexport default useFarmsWithBalance\n","import { useEffect, useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport multicall from 'utils/multicall'\nimport { getMasterChefAddress } from 'utils/addressHelpers'\nimport masterChefABI from 'config/abi/masterchef.json'\nimport { farmsConfig } from 'config/constants'\nimport useRefresh from './useRefresh'\n\nconst useAllEarnings = () => {\n  const [balances, setBalance] = useState([])\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchAllBalances = async () => {\n      const calls = farmsConfig.map((farm) => ({\n        address: getMasterChefAddress(),\n        name: 'pendingCake',\n        params: [farm.pid, account],\n      }))\n\n      const res = await multicall(masterChefABI, calls)\n\n      setBalance(res)\n    }\n\n    if (account) {\n      fetchAllBalances()\n    }\n  }, [account, fastRefresh])\n\n  return balances\n}\n\nexport default useAllEarnings\n","import React from 'react'\nimport { Text } from '@beswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport useI18n from 'hooks/useI18n'\nimport useAllEarnings from 'hooks/useAllEarnings'\nimport { usePriceCakeBusd } from 'state/hooks'\nimport styled from 'styled-components'\nimport CardValue from './CardValue'\nimport CardBusdValue from './CardBusdValue'\n\nconst Block = styled.div`\n  margin-bottom: 24px;\n`\n\nconst CakeHarvestBalance = () => {\n  const TranslateString = useI18n()\n  const { account } = useWeb3React()\n  const allEarnings = useAllEarnings()\n  const earningsSum = allEarnings.reduce((accum, earning) => {\n    return accum + new BigNumber(earning).div(new BigNumber(10).pow(18)).toNumber()\n  }, 0)\n  const earningsBusd = new BigNumber(earningsSum).multipliedBy(usePriceCakeBusd()).toNumber()\n\n  if (!account) {\n    return (\n      <Text color=\"#f88520\" style={{ lineHeight: '76px' }}>\n        {TranslateString(298, 'Locked')}\n      </Text>\n    )\n  }\n\n  return (\n    <Block>\n      <CardValue color=\"#f88520\" value={earningsSum} lineHeight=\"1.5\" />\n      <CardBusdValue color=\"#f88520\" value={earningsBusd} />\n    </Block>\n  )\n}\n\nexport default CakeHarvestBalance\n","import React from 'react'\nimport { Text } from '@beswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport useTokenBalance from 'hooks/useTokenBalance'\nimport useI18n from 'hooks/useI18n'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { usePriceCakeBusd } from 'state/hooks'\nimport { BigNumber } from 'bignumber.js'\nimport CardValue from './CardValue'\nimport CardBusdValue from './CardBusdValue'\n\nconst CakeWalletBalance = () => {\n  const TranslateString = useI18n()\n  const cakeBalance = useTokenBalance(getCakeAddress())\n  const busdBalance = new BigNumber(getBalanceNumber(cakeBalance)).multipliedBy(usePriceCakeBusd()).toNumber()\n  const { account } = useWeb3React()\n\n  if (!account) {\n    return (\n      <Text color=\"#f88520\" style={{ lineHeight: '54px' }}>\n        {TranslateString(298, 'Locked')}\n      </Text>\n    )\n  }\n\n  return (\n    <>\n      <CardValue color=\"#f88520\" value={getBalanceNumber(cakeBalance)} decimals={4} fontSize=\"24px\" lineHeight=\"36px\" />\n      <CardBusdValue value={busdBalance} color=\"#f88520\"/>\n    </>\n  )\n}\n\nexport default CakeWalletBalance\n","import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Heading, Card, CardBody, Button } from '@beswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport useI18n from 'hooks/useI18n'\nimport { useAllHarvest } from 'hooks/useHarvest'\nimport useFarmsWithBalance from 'hooks/useFarmsWithBalance'\nimport UnlockButton from 'components/UnlockButton'\nimport CakeHarvestBalance from './CakeHarvestBalance'\nimport CakeWalletBalance from './CakeWalletBalance'\n\nconst StyledFarmStakingCard = styled(Card)`\n  background-image: url('/images/cake-bg.png');\n  background-repeat: no-repeat;\n  background-position: top right;\n  min-height: 376px;\n`\n\nconst Block = styled.div`\n  margin-bottom: 16px;\n`\n\nconst CardImage = styled.img`\n  margin-bottom: 16px;\n`\n\nconst Label = styled.div`\n  // color: ${({ theme }) => theme.colors.textSubtle};\n  color: #F88521;\n  font-size: 14px;\n`\n\nconst Actions = styled.div`\n  margin-top: 24px;\n`\n\nconst Title = styled.h2`\n  font-size: 40px;\n  font-weight: 600;\n  line-height: 1.1;\n  margin-bottom: 24px;\n  color: #F88521;\n`\n\nconst FarmedStakingCard = () => {\n  const [pendingTx, setPendingTx] = useState(false)\n  const { account } = useWeb3React()\n  const TranslateString = useI18n()\n  const farmsWithBalance = useFarmsWithBalance()\n  const balancesWithValue = farmsWithBalance.filter((balanceType) => balanceType.balance.toNumber() > 0)\n\n  const { onReward } = useAllHarvest(balancesWithValue.map((farmWithBalance) => farmWithBalance.pid))\n\n  const harvestAllFarms = useCallback(async () => {\n    setPendingTx(true)\n    try {\n      await onReward()\n    } catch (error) {\n      // TODO: find a way to handle when the user rejects transaction or it fails\n    } finally {\n      setPendingTx(false)\n    }\n  }, [onReward])\n\n  return (\n    <StyledFarmStakingCard>\n      <CardBody>\n        {/* <Heading size=\"xl\" mb=\"24px\">\n          {TranslateString(542, 'Farms & Staking')}\n        </Heading> */}\n        <Title>Farms & Staking</Title>\n        <CardImage src=\"/images/cake.png\" alt=\"cake logo\" width={64} height={64} />\n        <Block>\n          {/* <Label>{TranslateString(544, 'CAKE to Harvest')}:</Label> */}\n          <Label>BESWAP to Harvest:</Label>\n          <CakeHarvestBalance />\n        </Block>\n        <Block>\n          {/* <Label>{TranslateString(546, 'CAKE in Wallet')}:</Label> */}\n          <Label>BESWAP in Wallet:</Label>\n          <CakeWalletBalance />\n        </Block>\n        <Actions className=\"custom\">\n          {account ? (\n            <Button\n              id=\"harvest-all\"\n              disabled={balancesWithValue.length <= 0 || pendingTx}\n              onClick={harvestAllFarms}\n              width=\"100%\"\n            >\n              {pendingTx\n                ? TranslateString(548, 'Collecting CAKE')\n                : TranslateString(532, `Harvest all (${balancesWithValue.length})`, {\n                    count: balancesWithValue.length,\n                  })}\n            </Button>\n          ) : (\n            <UnlockButton width=\"100%\" />\n          )}\n        </Actions>\n      </CardBody>\n    </StyledFarmStakingCard>\n  )\n}\n\nexport default FarmedStakingCard\n","import React from 'react'\nimport { Card, CardBody, Heading, Text } from '@beswap/uikit'\nimport styled from 'styled-components'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useTotalSupply, useBurnedBalance } from 'hooks/useTokenBalance'\nimport useI18n from 'hooks/useI18n'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport CardValue from './CardValue'\n\nconst StyledCakeStats = styled(Card)`\n  margin-left: auto;\n  margin-right: auto;\n`\n\nconst Row = styled.div`\n  align-items: center;\n  display: flex;\n  font-size: 14px;\n  justify-content: space-between;\n  margin-bottom: 8px;\n`\n\nconst Title = styled.h3`\n  font-size: 36px;\n  font-weight: 600;\n  line-height: 1.1;\n  margin-bottom: 24px;\n  color: #F88521;\n`\n\nconst BgIMG = styled.div`\n  img {\n    opacity: 0.5;\n  }\n`\n\nconst CakeStats = () => {\n  const TranslateString = useI18n()\n  const totalSupply = useTotalSupply()\n  const burnedBalance = getBalanceNumber(useBurnedBalance(getCakeAddress()))\n  const cakeSupply = totalSupply ? getBalanceNumber(totalSupply) - burnedBalance : 0\n\n  return (\n    <StyledCakeStats>\n      <CardBody>\n        {/* <Heading size=\"xl\" mb=\"24px\">\n          {TranslateString(534, 'Cake Stats')}\n        </Heading> */}\n        <Title>Candy Stats</Title>\n        <Row>\n          <Text fontSize=\"14px\" color=\"#F88521\">{TranslateString(536, 'Total BESWAP Supply')}</Text>\n          {cakeSupply && <CardValue fontSize=\"14px\" color=\"#F88521\" value={cakeSupply} />}\n        </Row>\n        <Row>\n          <Text fontSize=\"14px\" color=\"#F88521\">{TranslateString(538, 'Total BESWAP  Burned')}</Text>\n          <CardValue fontSize=\"14px\" color=\"#F88521\" decimals={0} value={burnedBalance} />\n        </Row>\n        <Row>\n          <Text fontSize=\"14px\" color=\"#F88521\">{TranslateString(540, 'New BESWAP/block')}</Text>\n          <CardValue fontSize=\"14px\" color=\"#F88521\" decimals={0} value={22} />\n        </Row>\n\n        <BgIMG>\n          <img src=\"/images/bg.png\" alt=\"\"/>\n        </BgIMG>\n      </CardBody>\n    </StyledCakeStats>\n  )\n}\n\nexport default CakeStats\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card, CardBody, Heading, Skeleton, Text } from '@beswap/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { useGetStats } from 'hooks/api'\n\nconst StyledTotalValueLockedCard = styled(Card)`\n  align-items: center;\n  display: flex;\n  flex: 1;\n`\n\nconst Title = styled.h3`\n  font-size: 24px;\n  font-weight: 600;\n  line-height: 1.1;\n  margin-bottom: 24px;\n  color: #F88521;\n`\n\nconst TotalValueLockedCard = () => {\n  const TranslateString = useI18n()\n  const data = useGetStats()\n  const tvl = data ? data.total_value_locked_all.toLocaleString('en-US', { maximumFractionDigits: 0 }) : null\n\n  return (\n    <StyledTotalValueLockedCard>\n      <CardBody>\n        {/* <Heading size=\"lg\" mb=\"24px\">\n          {TranslateString(762, 'Total Value Locked (TVL)')}\n        </Heading> */}\n        <Title>Total Value Locked (TVL)</Title>\n        {data ? (\n          <>\n            <Heading size=\"xl\" color=\"#fe5f10\">{`$${tvl}`}</Heading>\n            <Text color=\"#F88521\">{TranslateString(764, 'Across all LPs and Syrup Pools')}</Text>\n          </>\n        ) : (\n          <>\n            <Skeleton height={66} />\n          </>\n        )}\n      </CardBody>\n    </StyledTotalValueLockedCard>\n  )\n}\n\nexport default TotalValueLockedCard\n","import { useEffect, useState } from 'react'\n\n/*\n * Due to Cors the api was forked and a proxy was created\n * @see https://github.com/pancakeswap/gatsby-pancake-api/commit/e811b67a43ccc41edd4a0fa1ee704b2f510aa0ba\n */\nexport const baseUrl = 'https://api.pancakeswap.com/api/v1'\n\n/* eslint-disable camelcase */\n\nexport interface ApiTvlResponse {\n  update_at: string\n  '24h_total_volume': number\n  total_value_locked: number\n  total_value_locked_all: number\n}\n\nexport const useGetStats = () => {\n  const [data, setData] = useState<ApiTvlResponse | null>(null)\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(`${baseUrl}/tvl`)\n        const responsedata: ApiTvlResponse = await response.json()\n\n        setData(responsedata)\n      } catch (error) {\n        console.error('Unable to fetch data:', error)\n      }\n    }\n\n    fetchData()\n  }, [setData])\n\n  return data\n}\n","import React, { useMemo } from 'react'\nimport styled from 'styled-components'\nimport { Heading, Card, CardBody, Flex, ArrowForwardIcon, Skeleton } from '@beswap/uikit'\nimport max from 'lodash/max'\nimport { NavLink } from 'react-router-dom'\nimport useI18n from 'hooks/useI18n'\nimport BigNumber from 'bignumber.js'\nimport { getFarmApy } from 'utils/apy'\nimport { useFarms, usePriceCakeBusd, useGetApiPrices } from 'state/hooks'\nimport { getAddress } from '../../../utils/addressHelpers'\n\nconst StyledFarmStakingCard = styled(Card)`\n  margin-left: auto;\n  margin-right: auto;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    margin: 0;\n    max-width: none;\n  }\n`\nconst CardMidContent = styled(Heading).attrs({ size: 'xl' })`\n  line-height: 44px;\n`\nconst EarnAPYCard = () => {\n  const TranslateString = useI18n()\n  const farmsLP = useFarms()\n  const prices = useGetApiPrices()\n  const cakePrice = usePriceCakeBusd()\n\n  const highestApy = useMemo(() => {\n    const apys = farmsLP\n      // Filter inactive farms, because their theoretical APY is super high. In practice, it's 0.\n      .filter((farm) => farm.pid !== 0 && farm.multiplier !== '0X')\n      .map((farm) => {\n        if (farm.lpTotalInQuoteToken && prices) {\n          const quoteTokenPriceUsd = prices[getAddress(farm.quoteToken.address).toLowerCase()]\n          const totalLiquidity = new BigNumber(farm.lpTotalInQuoteToken).times(quoteTokenPriceUsd)\n          return getFarmApy(farm.poolWeight, cakePrice, totalLiquidity)\n        }\n        return null\n      })\n\n    const maxApy = max(apys)\n    return maxApy?.toLocaleString('en-US', { maximumFractionDigits: 2 })\n  }, [cakePrice, farmsLP, prices])\n\n  return (\n    <StyledFarmStakingCard>\n      <CardBody>\n        <Heading color=\"#F88521\" size=\"lg\">\n          Earn up to\n        </Heading>\n        <CardMidContent color=\"#fe5f10\">\n          {highestApy ? (\n            `${highestApy}% ${TranslateString(736, 'APR')}`\n          ) : (\n            <Skeleton animation=\"pulse\" variant=\"rect\" height=\"44px\" />\n          )}\n        </CardMidContent>\n        <Flex justifyContent=\"space-between\">\n          <Heading color=\"#F88521\" size=\"lg\">\n            in Farms\n          </Heading>\n          <NavLink exact activeClassName=\"active\" to=\"/farms\" id=\"farm-apy-cta\">\n            <ArrowForwardIcon mt={30} color=\"#2d2d2d\" />\n          </NavLink>\n        </Flex>\n      </CardBody>\n    </StyledFarmStakingCard>\n  )\n}\n\nexport default EarnAPYCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport orderBy from 'lodash/orderBy'\nimport { Heading, Card, CardBody, Flex, ArrowForwardIcon } from '@beswap/uikit'\nimport { NavLink } from 'react-router-dom'\nimport pools from 'config/constants/pools'\nimport { Pool } from 'state/types'\n\nconst StyledFarmStakingCard = styled(Card)`\n  background: linear-gradient(#FF9F30, #FE590D);\n  margin-left: auto;\n  margin-right: auto;\n  width: 100%;\n  ${({ theme }) => theme.mediaQueries.lg} {\n    margin: 0;\n    max-width: none;\n  }\n`\nconst CardMidContent = styled(Heading).attrs({ size: 'xl' })`\n  line-height: 44px;\n`\nconst EarnAssetCard = () => {\n  const activeNonCakePools = pools.filter((pool) => !pool.isFinished && !pool.earningToken.symbol.includes('CAKE'))\n  const latestPools: Pool[] = orderBy(activeNonCakePools, ['sortOrder', 'pid'], ['desc', 'desc']).slice(0, 3)\n  // Always include CAKE\n  const assets = ['BESWAP', ...latestPools.map((pool) => pool.earningToken.symbol)].join(', ')\n\n  return (\n    <StyledFarmStakingCard>\n      <CardBody>\n        <Heading color=\"contrast\" size=\"lg\">\n          Earn\n        </Heading>\n        <CardMidContent color=\"invertedContrast\">{assets}</CardMidContent>\n        <Flex justifyContent=\"space-between\">\n          <Heading color=\"contrast\" size=\"lg\">\n            in Pools\n          </Heading>\n          <NavLink exact activeClassName=\"active\" to=\"/syrup\" id=\"pool-cta\">\n            <ArrowForwardIcon mt={30} color=\"#fff\" />\n          </NavLink>\n        </Flex>\n      </CardBody>\n    </StyledFarmStakingCard>\n  )\n}\n\nexport default EarnAssetCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Text, BaseLayout } from '@beswap/uikit'\nimport useI18n from 'hooks/useI18n'\nimport Page from 'components/layout/Page'\nimport FarmStakingCard from 'views/Home/components/FarmStakingCard'\nimport LotteryCard from 'views/Home/components/LotteryCard'\nimport CakeStats from 'views/Home/components/CakeStats'\nimport TotalValueLockedCard from 'views/Home/components/TotalValueLockedCard'\nimport EarnAPYCard from 'views/Home/components/EarnAPYCard'\nimport EarnAssetCard from 'views/Home/components/EarnAssetCard'\nimport WinCard from 'views/Home/components/WinCard'\nimport LeadInBanner from 'views/TradingCompetition/components/LeadInBanner'\n\nconst Hero = styled.div`\n  align-items: center;\n  background-repeat: no-repeat;\n  background-position: top center;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  margin: auto;\n  margin-bottom: 32px;\n    text-align: center;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    background-image: url('/images/pan-bg2.png'), url('/images/pan-bg.png');\n    background-position: left center, right center;\n    height: 165px;\n    padding-top: 0;\n  }\n`\n\nconst Cards = styled(BaseLayout)`\n  align-items: stretch;\n  justify-content: stretch;\n  margin-bottom: 32px;\n\n  & > div {\n    grid-column: span 6 / auto;\n    width: 100%;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    & > div {\n      grid-column: span 8 / auto;\n    }\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    & > div {\n      grid-column: span 6 / auto;\n    }\n  }\n`\n\nconst CardsBot = styled(BaseLayout)`\n  align-items: stretch;\n  justify-content: stretch;\n  margin-bottom: 32px;\n\n  & > div {\n    grid-column: span 6 / auto;\n    width: 100%;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    & > div {\n      grid-column: span 8 / auto;\n    }\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    & > div {\n      grid-column: span 4 / auto;\n    }\n  }\n`\n\nconst CTACards = styled(BaseLayout)`\n  align-items: start;\n  margin-bottom: 32px;\n\n  & > div {\n    grid-column: span 8;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    & > div {\n      grid-column: span 8;\n    }\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    & > div {\n      grid-column: span 8;\n    }\n  }\n`\n\nconst Title = styled.h2`\n  font-size: 40px;\n  font-weight: 600;\n  line-height: 1.1;\n  margin-bottom: 24px;\n  color: #F88521;\n`\n\nconst Subtitle = styled.h3`\n  color: #F88521;\n  font-size: 16px;\n  font-weight: 400;\n  line-height: 1.5;\n`\n\nconst Home: React.FC = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <>\n      <LeadInBanner />\n      <Page>\n        <Hero>\n          {/* <Heading as=\"h1\" size=\"xl\" mb=\"24px\" color=\"secondary\">\n            {TranslateString(576, 'PancakeSwap')}\n          </Heading> */}\n          {/* <Text>{TranslateString(578, 'The #1 AMM and yield farm on Binance Smart Chain.')}</Text> */}\n          <Title>BeSwap</Title>\n          <Subtitle>The AMM and yield farm on Binance Smart Chain.</Subtitle>\n        </Hero>\n\n        <div>\n          <Cards>\n            <FarmStakingCard />\n            <CakeStats />\n            {/* <LotteryCard /> */}\n          </Cards>\n\n          {/* <CTACards>\n            <EarnAssetCard />\n            <WinCard />\n          </CTACards> */}\n\n          <CardsBot>\n            <EarnAPYCard />\n            <EarnAssetCard />\n            <TotalValueLockedCard />\n          </CardsBot>\n        </div>\n      </Page>\n    </>\n  )\n}\n\nexport default Home\n"],"sourceRoot":""}
{"version":3,"sources":["utils/web3.ts","config/constants/tokens.ts","hooks/useEagerConnect.ts","style/Global.tsx","config/localisation/languageCodes.ts","contexts/Localisation/languageContext.tsx","components/Menu/config.ts","components/Menu/index.tsx","components/SuspenseWithChunkError/index.tsx","components/ToastListener/index.tsx","components/EasterEgg/EasterEgg.tsx","views/Pools/components/PoolCards.tsx","views/Pools/Syrup.tsx","views/Collectibles/components/NftGiveawayModal.tsx","views/Collectibles/components/GlobalCheckClaimStatus.tsx","hooks/TranslationsContext.ts","utils/translateTextHelpers.ts","utils/maxAmountSpend.ts","components/Swap/Modal/index.tsx","components/Swap/Shared/Common.tsx","components/Swap/Column/index.tsx","components/Swap/TransactionConfirmationModal/helpers.tsx","components/Swap/TransactionConfirmationModal/ConfirmationPendingContent.tsx","components/Swap/TransactionConfirmationModal/TransactionSubmittedContent.tsx","components/Swap/TransactionConfirmationModal/TransactionConfirmationModal.tsx","components/Swap/TransactionConfirmationModal/ConfirmationModalContent.tsx","components/Swap/TransactionConfirmationModal/TransactionErrorContent.tsx","components/Swap/TransactionConfirmationModal/index.tsx","hooks/useInterval.ts","components/Swap/Popover/index.tsx","components/Swap/Tooltip/index.tsx","components/Swap/QuestionHelper/index.tsx","components/Swap/Row/index.tsx","components/Swap/swap/styleds.tsx","components/Swap/swap/FormattedPriceImpact.tsx","components/Swap/swap/SwapModalFooter.tsx","utils/contenthashToUri.ts","utils/parseENSAddress.ts","utils/uriToHttp.ts","utils/isZero.ts","hooks/useHttpLocations.ts","hooks/useENSContentHash.ts","state/lists/hooks.ts","components/Swap/Logo/index.tsx","components/Swap/pancake/CoinLogo.ts","components/Swap/CurrencyLogo/index.tsx","components/Swap/swap/SwapModalHeader.tsx","components/Swap/swap/ConfirmSwapModal.tsx","state/user/hooks.tsx","hooks/Tokens.ts","state/wallet/hooks.ts","hooks/useLast.ts","components/Swap/Card/index.tsx","components/Swap/ListLogo/index.tsx","components/Swap/SearchModal/CommonBases.tsx","components/Swap/SearchModal/styleds.tsx","components/Swap/Loader/index.tsx","components/Swap/SearchModal/CurrencyList.tsx","components/Swap/SearchModal/filtering.ts","components/Swap/SearchModal/SortButton.tsx","components/Swap/SearchModal/sorting.ts","components/Swap/TranslatedText/index.tsx","components/Swap/SearchModal/CurrencySearch.tsx","utils/getTokenList.ts","utils/resolveENSContentHash.ts","hooks/useFetchListCallback.ts","hooks/useOnClickOutside.tsx","components/Swap/SearchModal/ListSelect.tsx","hooks/useToggle.ts","utils/listVersionLabel.ts","components/Swap/SearchModal/CurrencySearchModal.tsx","components/Swap/DoubleLogo/index.tsx","components/Swap/NumericalInput/index.tsx","components/Swap/CurrencyInputPanel/index.tsx","components/Swap/swap/SwapRoute.tsx","components/Swap/swap/AdvancedSwapDetails.tsx","components/Swap/swap/AdvancedSwapDetailsDropdown.tsx","components/Swap/swap/TradePrice.tsx","components/Swap/TokenWarningModal/index.tsx","components/Swap/SyrupWarningModal/index.tsx","components/Swap/ProgressSteps/index.tsx","hooks/useSwapCallback.ts","hooks/useDebounce.ts","hooks/useENS.ts","hooks/useENSName.ts","hooks/useENSAddress.ts","utils/wrappedCurrency.ts","data/Reserves.ts","hooks/Trades.ts","state/swap/hooks.ts","hooks/useWrapCallback.ts","hooks/useParsedQueryString.ts","components/Swap/PageHeader/SlippageToleranceSetting.tsx","components/Swap/PageHeader/TransactionDeadlineSetting.tsx","components/Swap/PageHeader/SettingsModal.tsx","components/Loader/index.tsx","components/Swap/PageHeader/RecentTransactionsModal.tsx","components/Swap/PageHeader/index.tsx","components/Swap/ConnectWalletButton/index.tsx","views/AppBody.tsx","components/Swap/AddressInputPanel/index.tsx","components/Swap/CardNav/index.tsx","views/Swap/index.tsx","components/Swap/swap/confirmPriceImpactWithoutFee.ts","views/Swap/redirects.tsx","data/TotalSupply.ts","state/mint/hooks.ts","utils/currencyId.ts","components/Swap/Pane/index.tsx","views/Pool/styleds.tsx","views/AddLiquidity/ConfirmAddModalBottom.tsx","views/AddLiquidity/PoolPriceBar.tsx","components/Swap/NavigationTabs/index.tsx","components/Swap/PositionCard/index.tsx","views/AddLiquidity/index.tsx","views/Pool/index.tsx","state/burn/hooks.ts","components/ConnectWalletButton/index.tsx","components/Slider/index.tsx","views/RemoveLiquidity/index.tsx","utils/useDebouncedChangeHandler.tsx","views/RemoveLiquidity/redirects.tsx","views/AddLiquidity/redirects.tsx","hooks/LanguageContext.ts","constants/localisation/languageCodes.ts","App.tsx","Providers.tsx","hooks/useIsWindowVisible.ts","state/application/updater.ts","state/lists/updater.ts","utils/retry.ts","state/multicall/updater.tsx","utils/chunkArray.ts","state/transactions/updater.tsx","index.tsx","config/constants/farms.ts","state/global/actions.ts","state/user/reducer.ts","state/swap/reducer.ts","state/burn/reducer.ts","state/lists/reducer.ts","state/application/reducer.ts","state/multicall/reducer.ts","state/transactions/reducer.ts","state/mint/reducer.ts","state/index.ts","state/teams/index.tsx","state/transactions/actions.ts","constants/lists.ts","state/pools/fetchPools.ts","state/pools/fetchPoolsUser.ts","state/pools/index.ts","state/application/hooks.ts","state/profile/helpers.ts","state/profile/getProfile.ts","state/profile/index.tsx","state/toasts/index.ts","state/actions.ts","utils/getRpcUrl.ts","state/farms/fetchFarms.ts","state/farms/fetchFarmUser.ts","state/farms/index.ts","state/mint/actions.ts","config/constants/teams.ts","config/constants/types.ts","state/teams/helpers.ts","config/constants/campaigns.ts","utils/web3React.ts","config/constants/meta.ts","components/layout/Page.tsx","hooks/useRefresh.ts","utils/makeBatchRequest.ts","config/constants/nfts.ts","utils/wallet.ts","hooks/useAuth.ts","state/swap/actions.ts","config/constants/ifo.ts","state/block/index.ts","state/achievements/helpers.ts","state/achievements/index.ts","state/prices/index.ts","contexts/RefreshContext.tsx","state/burn/actions.ts","contexts/Localisation/translationsContext.ts","contexts/ThemeContext.tsx","constants/abis/erc20.ts","hooks/index.ts","utils/index.ts","utils/achievements.ts","views/Collectibles/components/NftCard/EasterNftCard.tsx","components/layout/Container.tsx","config/constants/index.ts","constants/index.ts","components/PageLoader.tsx","routerHistory.ts","views/Collectibles/components/InfoRow.tsx","views/Collectibles/components/TransferNftModal.tsx","views/Collectibles/components/ClaimNftModal.tsx","views/Collectibles/components/NftCard/Preview.tsx","views/Collectibles/components/NftCard/index.tsx","utils/addressHelpers.ts","data/Allowances.ts","hooks/useApproveCallback.ts","hooks/useTheme.ts","components/layout/Flex.tsx","constants/multicall/index.ts","hooks/useContract.ts","state/multicall/hooks.ts","state/hooks.ts","utils/contractHelpers.ts","state/user/actions.ts","utils/prices.ts","state/multicall/actions.ts","state/lists/actions.ts","utils/multicall.ts","hooks/useI18n.ts","hooks/useWeb3.ts","state/application/actions.ts","state/transactions/hooks.tsx","connectors/NetworkConnector.ts","connectors/bsc/bscConnector.ts","connectors/index.ts","config/constants/contracts.ts","config/constants/pools.ts"],"names":["RPC_URL","getRpcUrl","httpProvider","Web3","providers","HttpProvider","timeout","web3NoAccount","getWeb3NoAccount","tokens","bnb","symbol","projectLink","bdextest","address","56","97","decimals","bdex","cake","cake2","txl","cos","bunny","alice","for","bux","nuls","belt","ramp","bfi","dexe","bel","tpt","watch","xmark","bmxx","iotx","bor","bopen","dodo","swingby","bry","zee","swgb","sfp","lina","lit","hget","bdo","egld","ust","wsote","front","helmet","btcst","bscx","ten","balbt","asr","atm","og","reef","ditto","juv","psg","vai","wbnb","blink","unfi","twt","hard","broobee","stax","nar","nya","ctk","inj","sxp","alpha","xvs","sushi","comp","syrup","bifi","dusk","busd","eth","beth","mamzn","mgoogl","mnflx","mtsla","ltc","usdc","dai","ada","band","dot","eos","link","usdt","btcb","xrp","atom","yfii","xtz","bch","yfi","uni","fil","bake","burger","bdigg","bbadger","trade","pnt","mir","pbtc","lto","pcws","zil","lien","swth","dft","gum","dego","nrv","easy","oddz","hoo","apys","bondly","tko","itam","arpa","useEagerConnect","login","useAuth","useEffect","connectorId","window","localStorage","getItem","connectorLocalStorageKey","ConnectorNames","BSC","GlobalStyle","createGlobalStyle","theme","colors","background","EN","code","language","allLanguages","CACHE_KEY","LanguageContext","React","createContext","selectedLanguage","setSelectedLanguage","translatedLanguage","setTranslatedLanguage","projectId","parseInt","process","REACT_APP_CROWDIN_PROJECTID","stringTranslationsApi","StringTranslations","token","REACT_APP_CROWDIN_APIKEY","LanguageContextProvider","children","useState","translations","setTranslations","storedLangCode","storedLang","filter","getStoredLang","listLanguageTranslations","undefined","fetchTranslationsForSelectedLanguage","then","translationApiResponse","data","length","catch","e","console","error","Provider","value","langObject","setItem","config","label","icon","href","calloutClass","items","Menu","props","account","useWeb3React","logout","useContext","useTheme","isDark","toggleTheme","cakePriceUsd","usePriceCakeBusd","profile","useProfile","currentLang","langs","setLang","toNumber","links","username","image","nft","images","sm","profileLink","noProfileLink","showPip","SuspenseWithChunkError","state","hasError","isJsChunkLoadError","name","isCssChunkLoadError","isChunkLoadError","isRecoveringFromChunkError","history","nextState","replaceState","location","reload","this","fallback","Component","ToastListener","toasts","useSelector","remove","useToast","onRemove","id","EasterEgg","show","setShow","startFalling","useCallback","useKonamiCheatCode","onAnimationEnd","memo","PoolCard","styled","div","HeadLine","BoxPool","CardContent","Title","FlexSpace","ContentLeft","ContentRight","Boxbtn","PoolCards","activeTab","setActiveTab","toggle","tab","tabs","NavItem","NavLink","className","classnames","active","onClick","TabContent","TabPane","tabId","xs","md","Col","src","alt","Button","color","Farm","primary","useRouteMatch","path","useI18n","pools","usePools","currentBlock","useBlock","useMemo","partition","pool","isFinished","endBlock","openPools","userData","BigNumber","stakedBalance","isGreaterThan","Page","Flex","NftImage","img","showConfetti","confetti","resize","particleCount","startVelocity","gravity","spread","origin","x","y","NftGiveawayModal","onDismiss","TranslateString","team","bunnyId","Object","keys","teamNftMap","find","mapBunnyId","nftList","Number","getClaimableNft","delay","title","flexDirection","alignItems","justifyContent","bold","fontSize","mb","push","GlobalCheckClaimStatus","excludeLocations","hasDisplayedModal","useRef","isClaimable","setIsClaimable","useModal","onPresentGiftModal","easterNftContract","useEasterNftContract","pathname","useLocation","a","methods","canClaim","call","fetchClaimStatus","matchesSomeLocations","some","includes","current","defaultTranslationState","TranslationsContext","variableRegex","getTranslation","translationId","foundTranslation","translation","stringId","translatedString","text","stringToReplace","exec","indexToReplace","split","indexOf","fallbackValueAtIndex","replace","replaceDynamicString","maxAmountSpend","currencyAmount","currency","ETHER","JSBI","greaterThan","raw","MIN_ETH","CurrencyAmount","ether","subtract","BigInt","AnimatedDialogOverlay","animated","DialogOverlay","StyledDialogOverlay","AnimatedDialogContent","DialogContent","StyledDialogContent","minHeight","maxHeight","mobile","isOpen","rest","attrs","transparentize","css","mediaQueries","lg","Modal","initialFocusRef","fadeTransition","useTransition","duration","from","opacity","enter","leave","map","item","key","style","aria-label","isMobile","tabIndex","LinkStyledButton","button","disabled","textSubtle","StyledInternalLink","Link","StyledLink","ExternalLink","target","rel","handleClick","event","ctrlKey","metaKey","preventDefault","rotate","keyframes","Spinner","Column","ColumnCenter","AutoColumn","gap","justify","Wrapper","Section","ConfirmedIcon","BottomSection","StyledContentHeader","Heading","ContentHeader","variant","CustomLightSpinner","size","ConfirmationPendingContent","pendingText","TransactionSubmittedContent","chainId","hash","ThemeContext","strokeWidth","getBscScanLink","mt","TransactionConfirmationModal","attemptingTxn","content","useActiveWeb3React","ConfirmationModalContent","bottomContent","topContent","TransactionErrorContent","message","marginTop","padding","failure","textAlign","width","useInterval","callback","leading","savedCallback","tick","setInterval","clearInterval","PopoverContainer","invertedContrast","tertiary","ReferenceElement","Arrow","Popover","placement","referenceElement","setReferenceElement","popperElement","setPopperElement","arrowElement","setArrowElement","usePopper","strategy","modifiers","options","offset","element","styles","update","attributes","ref","popper","arrow","TooltipContainer","Tooltip","MouseoverTooltip","open","close","onMouseEnter","onMouseLeave","QuestionWrapper","QuestionHelper","marginLeft","Row","Box","align","border","borderRadius","RowBetween","RowFlat","AutoRow","RowFixed","ArrowWrapper","clickable","SectionBreak","BottomGrouping","ErrorText","Text","severity","binance","success","StyledBalanceMaxMini","Dots","span","SwapCallbackErrorInner","SwapCallbackErrorInnerAlertTriangle","SwapCallbackError","SwapShowAcceptChanges","FormattedPriceImpact","priceImpact","warningSeverity","lessThan","ONE_BIPS","toFixed","SwapModalFooter","onConfirm","allowedSlippage","swapErrorMessage","disabledConfirm","showInverted","setShowInverted","slippageAdjustedAmounts","computeSlippageAdjustedAmounts","computeTradePriceBreakdown","priceImpactWithoutFee","realizedLPFee","display","paddingLeft","fontWeight","formatExecutionPrice","tradeType","TradeType","EXACT_INPUT","Field","OUTPUT","toSignificant","INPUT","outputAmount","inputAmount","UTF_8_DECODER","TextDecoder","contenthashToUri","contenthash","buff","hex","startsWith","substr","Error","arr","Uint8Array","i","hexToUint8Array","codec","getCodec","rmPrefix","cid","CID","toB58String","multihash","decode","digest","trim","ENS_NAME_REGEX","parseENSAddress","ensAddress","match","ensName","toLowerCase","ensPath","uriToHttp","uri","isZero","hexNumberString","test","useHttpLocations","ens","resolvedContentHash","ensNodeArgument","namehash","registrarContract","useENSRegistrarContract","resolverAddressResult","useSingleCallResult","resolverAddress","result","resolverContract","useENSResolverContract","loading","useENSContentHash","WrappedTokenInfo","tokenInfo","tags","logoURI","Token","EMPTY_LIST","ChainId","MAINNET","BSCTESTNET","listCache","WeakMap","useTokenList","url","lists","byUrl","list","get","reduce","tokenMap","tagId","Boolean","set","listToTokenMap","useSelectedListUrl","selectedListUrl","useSelectedTokenList","BAD_SRCS","Logo","srcs","refresh","s","onError","CoinLogo","getTokenLogoURL","StyledBnbLogo","StyledLogo","CurrencyLogo","uriLocations","PriceInfoText","SwapModalHeader","recipient","showAcceptChanges","onAcceptChanges","priceImpactSeverity","marginRight","EXACT_OUTPUT","minWidth","isAddress","shortenAddress","ConfirmSwapModal","originalTrade","txHash","tradeB","tradeA","currencyEquals","equalTo","modalHeader","modalBottom","confirmationContent","serializeToken","deserializeToken","serializedToken","useIsExpertMode","user","userExpertMode","useUserSlippageTolerance","dispatch","useDispatch","userSlippageTolerance","slippageTolerance","updateUserSlippageTolerance","useUserDeadline","userDeadline","deadline","updateUserDeadline","useUserAddedTokens","serializedTokensMap","values","toV2LiquidityToken","tokenA","tokenB","Pair","getAddress","useAllTokens","userAddedTokens","allTokens","BYTES32_REGEX","parseStringOrBytes32","str","bytes32","defaultValue","parseBytes32String","useToken","tokenAddress","tokenContract","useTokenContract","tokenContractBytes32","useBytes32TokenContract","tokenName","NEVER_RELOAD","tokenNameBytes32","symbolBytes32","useCurrency","currencyId","isETH","toUpperCase","useTokenBalancesWithLoadingIndicator","validatedTokens","t","validatedTokenAddresses","vt","balances","useMultipleContractSingleData","ERC20_INTERFACE","anyLoading","callState","amount","toString","TokenAmount","useTokenBalances","useTokenBalance","tokenBalances","useCurrencyBalances","currencies","ethBalance","uncheckedAddresses","multicallContract","useMulticallContract","addresses","sort","results","useSingleContractMultipleData","useETHBalances","useCurrencyBalance","useLast","filterFn","last","setLast","prev","isDefined","Card","LightCard","GreyCard","StyledListLogo","ListLogo","BaseWrapper","disable","CommonBases","onSelect","selectedCurrency","SUGGESTED_BASES","selected","FadedSpan","PaddedColumn","MenuItem","SearchInput","input","textDisabled","Separator","SeparatorDark","StyledSVG","svg","stroke","Loader","viewBox","fill","xmlns","d","strokeLinecap","strokeLinejoin","currencyKey","StyledBalanceText","Tag","Balance","balance","toExact","TagContainer","TokenTags","tag","description","slice","join","CurrencyRow","isSelected","otherSelected","selectedTokenList","isOnSelectedList","isTokenOnList","customAdded","useIsUserAddedToken","removeToken","removeSerializedToken","useRemoveUserAddedToken","addToken","addSerializedToken","useAddUserToken","stopPropagation","justifySelf","CurrencyList","height","onCurrencySelect","otherCurrency","fixedListRef","showETH","itemData","Currency","index","itemKey","itemCount","itemSize","filterTokens","search","searchingAddress","lowerSearchParts","matchesSearch","sParts","every","p","sp","endsWith","FilterWrapper","SortButton","toggleSortOrder","ascending","useTokenComparator","inverted","useAllTokenBalances","comparator","balanceA","balanceB","balanceComp","getTokenComparator","TranslatedText","CurrencySearch","otherSelectedCurrency","showCommonBases","onChangeList","useTranslation","fixedList","searchQuery","setSearchQuery","invertSearchOrder","setInvertSearchOrder","isAddressSearch","searchToken","tokenComparator","audioPlay","filteredTokens","filteredSortedTokens","sorted","symbolMatch","handleCurrencySelect","audio","document","getElementById","play","inputRef","handleInput","checksummedInput","scrollTo","handleEnter","selectedUrl","listsByUrl","pendingUpdate","loadingRequestId","useSelectedListInfo","flex","type","placeholder","onChange","onKeyDown","iso","disableWidth","tokenListValidator","Ajv","allErrors","compile","schema","getTokenList","listUrl","resolveENSContentHash","DEFAULT_TOKEN_LIST_URL","defaultTokenJson","parsedENS","contentHashUri","translatedUri","urls","isLast","response","fetch","ok","json","validationErrors","errors","add","dataPath","REGISTRAR_ABI","constant","inputs","outputs","payable","stateMutability","REGISTRAR_ADDRESS","RESOLVER_ABI","internalType","provider","Contract","ensRegistrarContract","resolver","useFetchListCallback","library","ensResolver","NETWORK_CHAIN_ID","networkLibrary","getNetworkLibrary","requestId","nanoid","fetchTokenList","pending","tokenList","fulfilled","rejected","errorMessage","useOnClickOutside","node","handler","handlerRef","handleClickOutside","contains","addEventListener","removeEventListener","UnpaddedLinkStyledButton","StyledMenu","StyledListUrlText","ListOrigin","host","lowerListUrl","URL","listUrlRowHTMLId","ListRow","onBack","initialState","setState","useToggle","version","selectThisList","selectList","handleAcceptListUpdate","acceptListUpdate","handleRemoveList","prompt","removeList","overflow","textOverflow","major","minor","patch","ListContainer","ListSelect","listUrlInput","setListUrlInput","adding","addError","setAddError","fetchList","handleAddList","validUrl","handleEnterKey","sortedLists","u1","u2","l1","l2","cursor","maxWidth","CurrencySearchModal","listView","setListView","lastOpen","handleClickChangeList","handleClickBack","noListSelected","sizeraw","margin","HigherLogo","CoveredLogo","DoubleCurrencyLogo","currency0","currency1","StyledInput","inputRegex","RegExp","Input","onUserInput","nextUserInput","escapeRegExp","inputMode","autoComplete","autoCorrect","pattern","minLength","maxLength","spellCheck","InputRow","CurrencySelect","darken","Aligner","InputPanel","hideInput","Container","shadows","inset","CurrencyInputPanel","onMax","showMaxButton","disableCurrencySelect","hideBalance","pair","modalOpen","setModalOpen","handleDismissSearch","token0","token1","val","px","py","my","flexWrap","route","isLastItem","flexShrink","ml","TradeSummary","isExactIn","AdvancedSwapDetails","showRoute","AdvancedDetailsFooter","AdvancedSwapDetailsDropdown","lastTrade","TradePrice","price","formattedPrice","invert","baseCurrency","quoteCurrency","WarningContainer","StyledWarningIcon","AlertTriangle","TokenWarningCard","tokenSymbol","duplicateNameOrSymbol","userToken","equals","TokenWarningModal","understandChecked","setUnderstandChecked","toggleUnderstand","uc","handleDismiss","htmlFor","userSelect","checked","as","SyrupWarningModal","transactionType","Grouping","Circle","confirmed","backgroundDisabled","CircleRow","Connector","prevConfirmed","ProgressCircles","steps","step","SwapCallbackState","useDebounce","debouncedValue","setDebouncedValue","setTimeout","clearTimeout","useENS","nameOrAddress","validated","reverseLookup","debouncedAddress","changed","ENSName","useENSName","lookup","debouncedName","addr","useENSAddress","useSwapCallArguments","INITIAL_ALLOWED_SLIPPAGE","DEFAULT_DEADLINE_FROM_NOW","recipientAddressOrName","recipientAddress","contract","getRouterContract","swapMethods","Router","swapCallParameters","feeOnTransfer","Percent","Math","floor","BIPS_BASE","ttl","parameters","useSwapCallback","swapCalls","addTransaction","useTransactionAdder","VALID","Promise","all","methodName","args","estimateGas","gasEstimate","gasError","info","callStatic","callError","reason","estimatedCalls","successfulEstimation","el","ix","errorCalls","gasLimit","calculateGasMargin","inputSymbol","outputSymbol","base","withRecipient","summary","INVALID","LOADING","wrappedCurrency","WETH","wrappedCurrencyAmount","unwrappedToken","PairState","PAIR_INTERFACE","Interface","IUniswapV2PairABI","usePairs","currencyA","currencyB","pairAddresses","reserves","NOT_EXISTS","reserve0","reserve1","sortsBefore","EXISTS","usePair","useAllCommonPairs","bases","BASES_TO_CHECK_TRADES_AGAINST","basePairs","flatMap","otherBase","t0","t1","allPairs","customBases","CUSTOM_BASES","customBasesA","customBasesB","curr","liquidityToken","useSwapState","swap","tryParseAmount","typedValueParsed","parseUnits","BAD_RECIPIENT_ADDRESSES","involvesAddress","checksummedAddress","pairs","useDerivedSwapInfo","inputError","independentField","typedValue","inputCurrencyId","outputCurrencyId","inputCurrency","outputCurrency","recipientLookup","to","relevantTokenBalances","parsedAmount","bestTradeExactIn","currencyAmountIn","currencyOut","allowedPairs","Trade","maxHops","maxNumResults","useTradeExactIn","bestTradeExactOut","currencyIn","currencyAmountOut","useTradeExactOut","v2Trade","currencyBalances","formattedTo","balanceIn","amountIn","parseCurrencyFromURLParameter","urlParam","valid","WrapType","ADDRESS_REGEX","queryParametersToSwapState","parsedQs","validatedRecipient","exactAmount","isNaN","parseFloat","parseIndependentFieldURLParameter","exactField","useDefaultsFromURLSearch","parse","parseArrays","ignoreQueryPrefix","useParsedQueryString","setResult","parsed","replaceSwapState","field","NOT_APPLICABLE","wrapType","StyledSlippageToleranceSettings","Option","Options","Label","predefinedValues","SlippageToleranceSettings","setUserslippageTolerance","setValue","setError","rawValue","mr","predefinedValue","scale","min","evt","inputValue","isWarning","StyledTransactionDeadlineSetting","TransactionDeadlineSetting","setDeadline","defaultOnDismiss","SettingsModal","SlippageToleranceSetting","newTransactionsFirst","b","addedTime","RecentTransactionsModal","allTransactions","useAllTransactions","sortedRecentTransactions","isTransactionRecent","sortedRecentTransaction","receipt","status","getRowStatus","StyledPageHeader","Details","PageHeader","onPresentSettings","UnlockButton","activate","deactivate","onPresentConnectModal","useWalletModal","walletconnect","injected","BodyWrapper","AppBody","ContainerRow","InputContainer","AddressInputPanel","withoutSpaces","autoCapitalize","StyledNav","Nav","activeIndex","BoxNav","Swap","loadedUrlParams","loadedInputCurrency","loadedOutputCurrency","dismissTokenWarning","setDismissTokenWarning","isSyrup","setIsSyrup","syrupTransactionType","setSyrupTransactionType","urlLoadedTokens","c","handleConfirmTokenWarning","handleConfirmSyrupWarning","expertMode","toggleSetExpertMode","updateUserExpertMode","useExpertModeManager","isExpertMode","swapInputError","wethContract","useWETHContract","sufficientBalance","WRAP","execute","deposit","txReceipt","UNWRAP","withdraw","useWrapCallback","onWrap","wrapInputError","showWrap","parsedAmounts","onCurrencySelection","selectCurrency","onSwitchTokens","switchCurrencies","typeInput","onChangeRecipient","setRecipient","useSwapActionHandlers","isValid","dependentField","handleTypeInput","handleTypeOutput","showConfirm","tradeToConfirm","setSwapState","formattedAmounts","userHasSpecifiedInputOutput","noRoute","useApproveCallbackFromTrade","approval","approveCallback","approvalSubmitted","setApprovalSubmitted","ApprovalState","PENDING","maxAmountInput","atMaxAmountInput","swapCallback","swapCallbackError","handleSwap","PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN","ALLOWED_PRICE_IMPACT_HIGH","confirm","confirmPriceImpactWithoutFee","prevState","showApproveFlow","NOT_APPROVED","APPROVED","handleConfirmDismiss","handleAcceptChanges","checkForSyrup","purchaseType","handleInputSelect","handleMaxInput","handleOutputSelect","FlexBox","CardNav","executionPrice","ConnectWalletButton","RedirectPathToSwapOnly","useTotalSupply","totalSupply","ZERO","useMintState","mint","Pane","borderColor","ClickableText","ConfirmAddModalBottom","noLiquidity","poolTokenPercentage","onAdd","CURRENCY_A","CURRENCY_B","PoolPriceBar","pt","Tabs","ActiveText","StyledArrowLeft","ArrowLeft","AddRemoveTabs","FixedHeightRow","HoverCard","MinimalPositionCard","showUnwrapped","showMore","setShowMore","userPoolBalance","totalPoolTokens","greaterThanOrEqual","getLiquidityValue","token0Deposited","token1Deposited","textTransform","FullPositionCard","AddLiquidity","params","currencyIdA","currencyIdB","log","oneCurrencyIsWETH","otherTypedValue","pairState","equal","independentAmount","dependentAmount","wrappedIndependentAmount","dependentCurrency","dependentTokenAmount","priceOf","quote","currencyAAmount","currencyBAmount","Price","wrappedCurrencyA","liquidityMinted","tokenAmountA","tokenAmountB","getLiquidityMinted","useDerivedMintInfo","onFieldAInput","onFieldBInput","useMintActionHandlers","setShowConfirm","setAttemptingTxn","setTxHash","maxAmounts","accumulator","atMaxAmounts","useApproveCallback","ROUTER_ADDRESS","approvalA","approveACallback","approvalB","approveBCallback","router","parsedAmountA","parsedAmountB","calculateSlippageAmount","amountsMin","deadlineFromNow","ceil","Date","now","tokenBIsETH","estimate","addLiquidityETH","method","addLiquidity","estimatedGasLimit","small","fontStyle","handleCurrencyASelect","currA","newCurrencyIdA","handleCurrencyBSelect","currB","newCurrencyIdB","handleDismissConfirmation","Pool","trackedTokenPairs","pinnedPairs","PINNED_PAIRS","generatedPairs","BASES_TO_TRACK_LIQUIDITY_FOR","savedSerializedPairs","userPairs","forChain","pairId","combinedList","concat","keyed","useTrackedTokenPairs","tokenPairsWithLiquidityTokens","tpwlt","v2PairsBalances","fetchingV2PairBalances","liquidityTokensWithBalances","v2Pairs","v2IsLoading","V2Pair","allV2PairsWithLiquidity","v2Pair","useBurnState","burn","StyledRangeInput","primaryDark","Slider","max","changeCallback","aria-labelledby","OutlineCard","Body","RemoveLiquidity","userLiquidity","LIQUIDITY","liquidityValueA","liquidityValueB","liquidityValues","percentToRemove","LIQUIDITY_PERCENT","liquidityValue","multiply","quotient","useDerivedBurnInfo","_onUserInput","useBurnActionHandlers","showDetailed","setShowDetailed","atMaxAmount","pairContract","usePairContract","signatureData","setSignatureData","liquidityAmount","nonces","nonce","deadlineForSignature","EIP712Domain","domain","verifyingContract","Permit","owner","spender","toHexString","JSON","stringify","types","primaryType","send","splitSignature","signature","v","r","onLiquidityInput","onCurrencyAInput","onCurrencyBInput","currencyAmountA","currencyAmountB","currencyBIsETH","oneCurrencyIsETH","methodNames","safeGasEstimates","indexOfSuccessfulEstimation","findIndex","safeGasEstimate","isBigNumber","liquidityPercentChangeCallback","handleSelectCurrencyA","handleSelectCurrencyB","debouncedMs","inner","setInner","timer","onChangeInner","newValue","useDebouncedChangeHandler","innerLiquidityPercentage","setInnerLiquidityPercentage","paddingBottom","position","OLD_PATH_STRUCTURE","RedirectOldRemoveLiquidityPathStructure","RedirectOldAddLiquidityPathStructure","RedirectDuplicateTokenIds","defaultLanguageState","Home","lazy","Farms","Lottery","Ifos","NotFound","Collectibles","Teams","Team","Profile","TradingCompetition","EXPONENTIAL_AT","DECIMAL_PLACES","App","warn","useFetchProfile","useFetchPriceList","apiKey","credentials","Global","PageLoader","exact","strict","component","iterations","Web3ProviderNetwork","createWeb3ReactRoot","Providers","getLibrary","store","RefreshContext","VISIBILITY_STATE_SUPPORTED","isWindowVisible","visibilityState","useIsWindowVisible","focused","setFocused","listener","Updater","windowVisible","blockNumber","blockNumberCallback","getBlockNumber","on","removeListener","debouncedState","updateBlockNumber","forEach","bump","getVersionUpgrade","VersionUpgrade","NONE","PATCH","MINOR","minVersionBump","addPopup","listUpdate","oldList","newList","auto","MAJOR","removeAfterMs","waitRandom","ms","round","random","resolve","CancelledError","RetryableError","chunk","minBlockNumber","aggregate","obj","callData","resultsBlockNumber","returnData","multicall","debouncedListeners","callListeners","latestBlockNumber","useBlockNumber","cancellations","listeningKeys","allListeners","listeners","callKey","keyListeners","blocksPerFetch","previousMin","Infinity","activeListeningKeys","unserializedOutdatedCallKeys","callResults","minDataBlockNumber","fetchingBlockNumber","outdatedListeningKeys","serializedOutdatedCallKeys","outdatedCallKeys","calls","parseCallKey","chunkedCalls","maxChunkSize","numChunks","chunkSize","Array","chunkArray","fetchingMulticallResults","fn","rejectCancelled","n","minWait","maxWait","completed","promise","reject","cancel","retry","fetchChunk","fetchBlockNumber","firstCallKeyIndex","lastCallKeyIndex","updateMulticallResults","errorFetchingMulticallResults","lastBlockNumber","transactions","useAddPopup","tx","lastCheckedBlockNumber","blocksSinceCheck","minutesPending","getTime","shouldCheck","getTransactionReceipt","finalizeTransaction","blockHash","contractAddress","transactionHash","transactionIndex","txn","checkedTransaction","ethereum","autoRefreshOnNetworkChange","removeItem","ReactDOM","render","StrictMode","farms","pid","lpSymbol","lpAddresses","quoteToken","updateVersion","createAction","currentTimestamp","pairKey","token0Address","token1Address","userDarkMode","matchesDarkMode","timestamp","createReducer","builder","addCase","lastUpdateVersionTimestamp","updateUserDarkMode","action","payload","updateMatchesDarkMode","addSerializedPair","serializedPair","removeSerializedPair","tokenAAddress","tokenBAddress","muteAudio","unmuteAudio","otherField","NEW_LIST_STATE","lastInitializedDefaultListOfLists","DEFAULT_LIST_OF_LISTS","DEFAULT_LIST","addList","lastInitializedSet","l","Set","newListOfListsSet","has","popupList","walletModalOpen","settingsMenuOpen","toggleWalletModal","toggleSettingsMenu","popup","removePopup","addMulticallListeners","toCallKey","removeMulticallListeners","txs","clearAllTransactions","confirmedTime","resetMintState","load","states","configureStore","devTools","reducer","application","farmsReducer","toastsReducer","poolsReducer","prices","pricesReducer","profileReducer","teams","teamsReducer","achievements","achievementsReducer","block","blockReducer","useAppDispatch","isInitialized","isLoading","teamsList","accum","teamsSlice","createSlice","reducers","fetchStart","fetchFailed","teamFetchSucceeded","teamsFetchSucceeded","actions","fetchTeam","teamId","getTeam","fetchTeams","getTeams","fetchPoolsBlockLimits","poolsWithEnd","poolsConfig","sousId","callsStartBlock","poolConfig","callsEndBlock","sousChefABI","starts","ends","cakePoolConfig","startBlock","toJSON","fetchPoolsTotalStaking","nonBnbPools","stakingToken","bnbPool","callsNonBnbPools","callsBnbPools","getWbnbAddress","cakeABI","nonBnbPoolsTotalStaked","wbnbABI","bnbPoolsTotalStaked","totalStaked","bnbPools","nonMasterPools","web3","masterChefContract","masterChefABI","getMasterChefAddress","fetchPoolsAllowance","erc20ABI","allowances","acc","fetchUserBalances","tokenBalancesRaw","getBalance","bnbBalance","bnbBalances","fetchUserStakeBalances","userInfo","stakedBalances","_hex","masterPoolAmount","0","fetchUserPendingRewards","res","pendingRewards","pendingCake","pendingReward","PoolsSlice","setPoolsPublicData","livePoolsData","livePoolData","entry","setPoolsUserData","userPoolData","updatePoolsUserData","fetchPoolsPublicDataAsync","blockLimits","totalStakings","liveData","blockLimit","totalStaking","fetchPoolsUserDataAsync","stakingTokenBalances","allowance","stakingTokenBalance","updateUserAllowance","updateUserBalance","updateUserStakedBalance","updateUserPendingReward","transformProfileResponse","profileResponse","userId","numberPoints","nftAddress","tokenId","isActive","points","profileContract","getProfileContract","rabbitContract","getPancakeRabbitContract","profileApi","REACT_APP_API_PROFILE","getUsername","getProfile","hasRegistered","getUserProfile","getBunnyId","nfts","nftItem","Cookies","avatar","secure","expires","profileSlice","profileFetchStart","profileFetchSucceeded","profileFetchFailed","addPoints","fetchProfile","toastsSlice","toastIndex","toast","splice","unshift","clear","nodes","getNodeUrl","randomIndex","fetchFarms","farmsConfig","farmConfig","lpAddress","erc20","tokenBalanceLP","quoteTokenBalanceLP","lpTokenBalanceMC","lpTotalSupply","tokenDecimals","quoteTokenDecimals","lpTokenRatio","lpTotalInQuoteToken","pow","times","tokenAmount","quoteTokenAmount","masterchefABI","totalAllocPoint","allocPoint","poolWeight","tokenPriceVsQuote","multiplier","fetchFarmUserAllowances","masterChefAddress","farm","rawLpAllowances","parsedLpAllowances","lpBalance","fetchFarmUserTokenBalances","rawTokenBalances","parsedTokenBalances","tokenBalance","fetchFarmUserStakedBalances","rawStakedBalances","parsedStakedBalances","fetchFarmUserEarnings","rawEarnings","parsedEarnings","earnings","farmsSlice","setFarmsPublicData","liveFarmsData","liveFarmData","f","setFarmUserData","arrayOfUserDataObjects","userDataEl","fetchFarmsPublicDataAsync","fetchFarmUserDataAsync","userFarmAllowances","userFarmTokenBalances","userStakedBalances","userFarmEarnings","farmAllowance","ipfs","textColor","users","PoolCategory","getTeamProfile","teamName","numberUsers","isJoinable","staticTeamInfo","staticTeam","merge","teamsById","numberTeams","nbTeams","makeBatchRequest","teamData","onChainTeamData","campaigns","badge","campaignMap","Map","campaign","rpcUrl","InjectedConnector","supportedChainIds","WalletConnectConnector","rpc","bridge","qrcode","pollingInterval","bscConnector","BscConnector","connectorsByName","Injected","WalletConnect","Web3Provider","DEFAULT_META","customMeta","StyledPage","PageMeta","cakePriceUsdDisplay","eq","toLocaleString","minimumFractionDigits","maximumFractionDigits","pageMeta","pageTitle","property","useRefresh","fastRefresh","fast","slowRefresh","slow","batch","BatchRequest","promises","request","err","Nfts","sortOrder","video","webm","mp4","blur","setupNetwork","chainName","nativeCurrency","rpcUrls","blockExplorerUrls","toastError","connectorID","connector","UnsupportedChainIdError","NoEthereumProviderError","NoBscProviderError","UserRejectedRequestErrorInjected","UserRejectedRequestErrorWalletConnect","walletConnectProvider","ifos","subTitle","launchDate","launchTime","saleAmount","raiseAmount","cakeToBurn","projectSiteUrl","currencyAddress","releaseBlockNumber","campaignId","blockSlice","initialBlock","setBlock","getUserPointIncreaseEvents","gql","getAchievements","pointIncreaseEvents","userPoint","campaignMeta","getAchievementTitle","getAchievementDescription","achievementSlice","addAchievement","addAchievements","setAchievements","clearAchievements","fetchAchievements","kebabCase","toastTypes","DANGER","fetchPrices","createAsyncThunk","updated_at","pricesSlice","lastUpdated","extraReducers","RefreshContextProvider","setSlow","setFast","interval","ThemeContextProvider","isDarkUserSetting","setIsDark","dark","light","ERC20_ABI","context","useWeb3ReactCore","contextNetwork","NetworkContextName","BSCSCAN_PREFIXES","prefix","chars","substring","mul","basisPointsToPercent","num","slippage","divide","getContract","ABI","AddressZero","getSigner","connectUnchecked","getProviderOrSigner","_","IBeswapRouterV2","string","defaultTokens","getClaimableIfoData","ifoCampaigns","ifosList","ifoItem","ifoCampaignAddresses","pointCenterContract","getPointCenterIfoContract","checkClaimStatuses","claimStatuses","claimStatus","claimableIfoData","claimableIfoDataItem","ifoCampaign","12","13","14","EasterNftCard","onClaim","mintNFT","communityFarms","isCommunity","DAI","BUSD","USDT","UST","WETH_ONLY","ALLOWED_PRICE_IMPACT_LOW","ALLOWED_PRICE_IMPACT_MEDIUM","BLOCKED_PRICE_IMPACT_NON_EXPERT","exponentiate","createBrowserHistory","InfoRow","Value","ModalContent","Actions","TransferNftModal","tokenIds","onSuccess","setIsLoading","pancakeRabbitsContract","usePancakeRabbits","toastSuccess","handleConfirm","utils","transferFrom","ClaimNftModal","isConfirming","setIsConfirming","once","endIcon","spin","StyledImage","StyledVideo","Preview","isOwned","previewImageSrc","videoComponent","autoPlay","controls","loop","muted","poster","previewImage","Header","DetailsButton","InfoBlock","NftCard","setIsOpen","walletOwnsNft","Icon","ChevronUpIcon","ChevronDownIcon","handleSuccess","onPresentTransferModal","onPresentClaimModal","outline","getCakeAddress","masterChef","getMulticallAddress","mulltiCall","getLotteryAddress","lottery","getLotteryTicketAddress","lotteryNFT","getPancakeProfileAddress","pancakeProfile","getPancakeRabbitsAddress","pancakeRabbits","getBunnyFactoryAddress","bunnyFactory","getClaimRefundAddress","claimRefund","getPointCenterIfoAddress","pointCenterIfo","getBunnySpecialAddress","bunnySpecial","getTradingCompetitionAddress","tradingCompetition","getEasterNftAddress","easterNft","useTokenAllowance","useApproveCallbackCustom","addressNeedApprove","approve","MaxUint256","estimatedGas","debug","amountToApprove","currentAllowance","pendingApproval","useHasPendingApproval","approvalState","UNKNOWN","useExact","StyledThemeContext","FlexLayout","MULTICALL_NETWORKS","withSignerIfPossible","useContract","ENS_ABI","ERC20_BYTES32_ABI","useIfoContract","useWeb3","getIfoContract","useERC20","getBep20Contract","useCake","getCakeContract","useBunnyFactory","getBunnyFactoryContract","useLottery","getLotteryContract","useLotteryTicket","getLotteryTicketContract","useMasterchef","getMasterchefContract","useSousChef","getSouschefContract","usePointCenterIfoContract","useBunnySpecialContract","getBunnySpecialContract","useClaimRefundContract","getClaimRefundContract","useTradingCompetitionContract","getTradingCompetitionContract","getEasterNftContract","ENS_PUBLIC_RESOLVER_ABI","WETH_ABI","MULTICALL_ABI","pairAddress","useFarmsContract","addresss","FARMS_ABI","isMethodArg","isValidMethodArgs","isArray","xi","INVALID_RESULT","useCallsData","serializedCallKeys","callKeys","INVALID_CALL_STATE","syncing","LOADING_CALL_STATE","toCallState","callResult","contractInterface","fragment","decodeFunctionResult","callInputs","interface","getFunction","encodeFunctionData","useFarms","useFarmFromPid","useFarmFromSymbol","useFarmUser","pushToast","toastInfo","INFO","SUCCESS","toastWarning","WARNING","removeToast","clearToast","hasProfile","useTeam","useTeams","useFetchAchievements","useAchievements","useGetApiPrices","useGetApiPrice","cakeBnbFarm","bnbBusdFarm","bnbBusdPrice","abi","bep20Abi","ifoAbi","poolCategory","BINANCE","sousChefBnb","sousChef","cakeAbi","profileABI","pancakeRabbitsAbi","bunnyFactoryAbi","bunnySpecialAbi","lotteryAbi","lotteryTicketAbi","claimRefundAbi","tradingCompetitionAbi","easterNftAbi","BASE_FEE","ONE_HUNDRED_PERCENT","INPUT_FRACTION_AFTER_FEE","currentFee","priceImpactWithoutFeeFraction","numerator","denominator","pct","maximumAmountIn","minimumAmountOut","LOWER_HEX_REGEX","pcs","multi","MultiCallAbi","itf","calldata","includesVariable","interpolatedText","isEmpty","dataKey","templateKey","refEth","setweb3","RequestError","MiniRpcProvider","batchWaitTimeMs","isMetaMask","nextId","batchTimeoutId","clearBatch","headers","accept","body","statusText","sendAsync","jsonrpc","NetworkConnector","defaultChainId","invariant","k","currentChainId","AbstractConnector","parseSendReturn","sendReturn","hasOwnProperty","constructor","UserRejectedRequestError","kwargs","handleNetworkChanged","bind","handleChainChanged","handleAccountsChanged","handleClose","emitUpdate","BinanceChain","accounts","emitDeactivate","networkId","warning","enable","isDapper","cachedResults","net_version","netVersion","networkVersion","_chainId","NETWORK_URL","network","WalletLinkConnector","appName","appLogoUrl","earningToken","CORE","harvest","tokenPerBlock"],"mappings":"sIAAA,iEAIMA,EAAUC,cACVC,EAAe,IAAIC,IAAKC,UAAUC,aAAaL,EAAS,CAAEM,QAAS,MACnEC,EAAgB,IAAIJ,IAAKD,GAEzBM,EAAmB,WACvB,OAAOD,GAIMA,O,iCCyiCAE,IAtjCA,CACbC,IAAK,CACHC,OAAQ,MACRC,YAAa,4BAEfC,SAAU,CACRF,OAAQ,QACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,8CAENC,SAAU,GACVL,YAAa,gCAEfM,KAAM,CACJP,OAAQ,WACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,8CAENC,SAAU,GACVL,YAAa,gCAEfO,KAAM,CACJR,OAAQ,OACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,8CAENC,SAAU,GACVL,YAAa,gCAEfQ,MAAO,CACLT,OAAQ,OACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,8CAENC,SAAU,GACVL,YAAa,gCAEfS,IAAK,CACHV,OAAQ,MACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,IAENC,SAAU,GACVL,YAAa,qBAEfU,IAAK,CACHX,OAAQ,MACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,IAENC,SAAU,GACVL,YAAa,6BAEfW,MAAO,CACLZ,OAAQ,QACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,IAENC,SAAU,GACVL,YAAa,iCAEfY,MAAO,CACLb,OAAQ,QACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,IAENC,SAAU,EACVL,YAAa,oCAEfa,IAAK,CACHd,OAAQ,MACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,IAENC,SAAU,GACVL,YAAa,6BAEfc,IAAK,CACHf,OAAQ,MACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,IAENC,SAAU,GACVL,YAAa,kCAEfe,KAAM,CACJhB,OAAQ,OACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,IAENC,SAAU,EACVL,YAAa,wBAEfgB,KAAM,CACJjB,OAAQ,OACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,IAENC,SAAU,GACVL,YAAa,yBAEfiB,KAAM,CACJlB,OAAQ,OACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,IAENC,SAAU,GACVL,YAAa,yBAEfkB,IAAK,CACHnB,OAAQ,MACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,IAENC,SAAU,GACVL,YAAa,qBAEfmB,KAAM,CACJpB,OAAQ,OACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,IAENC,SAAU,GACVL,YAAa,yBAEfoB,IAAK,CACHrB,OAAQ,MACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,IAENC,SAAU,GACVL,YAAa,qBAEfqB,IAAK,CACHtB,OAAQ,MACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,IAENC,SAAU,EACVL,YAAa,gCAEfsB,MAAO,CACLvB,OAAQ,QACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,IAENC,SAAU,GACVL,YAAa,2BAEfuB,MAAO,CACLxB,OAAQ,QACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,IAENC,SAAU,EACVL,YAAa,sCAEfwB,KAAM,CACJzB,OAAQ,OACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,IAENC,SAAU,GACVL,YAAa,+BAEfyB,KAAM,CACJ1B,OAAQ,OACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,IAENC,SAAU,GACVL,YAAa,qBAEf0B,IAAK,CACH3B,OAAQ,MACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,IAENC,SAAU,GACVL,YAAa,8BAEf2B,MAAO,CACL5B,OAAQ,QACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,IAENC,SAAU,GACVL,YAAa,uBAEf4B,KAAM,CACJ7B,OAAQ,OACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,IAENC,SAAU,GACVL,YAAa,sBAEf6B,QAAS,CACP9B,OAAQ,UACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,IAENC,SAAU,GACVL,YAAa,4BAEf8B,IAAK,CACH/B,OAAQ,MACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,IAENC,SAAU,GACVL,YAAa,yBAEf+B,IAAK,CACHhC,OAAQ,MACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,IAENC,SAAU,GACVL,YAAa,wBAEfgC,KAAM,CACJjC,OAAQ,OACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,IAENC,SAAU,GACVL,YAAa,0BAEfiC,IAAK,CACHlC,OAAQ,MACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,IAENC,SAAU,GACVL,YAAa,2BAEfkC,KAAM,CACJnC,OAAQ,OACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,IAENC,SAAU,GACVL,YAAa,2BAEfmC,IAAK,CACHpC,OAAQ,MACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,IAENC,SAAU,GACVL,YAAa,6BAEfoC,KAAM,CACJrC,OAAQ,OACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,IAENC,SAAU,EACVL,YAAa,2BAEfqC,IAAK,CACHtC,OAAQ,MACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,IAENC,SAAU,GACVL,YAAa,uBAEfsC,KAAM,CACJvC,OAAQ,OACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,IAENC,SAAU,GACVL,YAAa,uBAEfuC,IAAK,CACHxC,OAAQ,MACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,IAENC,SAAU,GACVL,YAAa,2BAEfwC,MAAO,CACLzC,OAAQ,QACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,IAENC,SAAU,GACVL,YAAa,8BAEfyC,MAAO,CACL1C,OAAQ,QACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,IAENC,SAAU,GACVL,YAAa,yBAEf0C,OAAQ,CACN3C,OAAQ,SACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,IAENC,SAAU,GACVL,YAAa,8BAEf2C,MAAO,CACL5C,OAAQ,QACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,IAENC,SAAU,GACVL,YAAa,uBAEf4C,KAAM,CACJ7C,OAAQ,OACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,IAENC,SAAU,GACVL,YAAa,sBAEf6C,IAAK,CACH9C,OAAQ,MACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,IAENC,SAAU,GACVL,YAAa,2BAEf8C,MAAO,CACL/C,OAAQ,QACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,IAENC,SAAU,GACVL,YAAa,6BAEf+C,IAAK,CACHhD,OAAQ,MACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,IAENC,SAAU,EACVL,YAAa,0BAEfgD,IAAK,CACHjD,OAAQ,MACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,IAENC,SAAU,EACVL,YAAa,0BAEfiD,GAAI,CACFlD,OAAQ,KACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,IAENC,SAAU,EACVL,YAAa,0BAEfkD,KAAM,CACJnD,OAAQ,OACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,IAENC,SAAU,GACVL,YAAa,yBAEfmD,MAAO,CACLpD,OAAQ,QACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,IAENC,SAAU,EACVL,YAAa,wBAEfoD,IAAK,CACHrD,OAAQ,MACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,IAENC,SAAU,EACVL,YAAa,0BAEfqD,IAAK,CACHtD,OAAQ,MACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,IAENC,SAAU,EACVL,YAAa,0BAEfsD,IAAK,CACHvD,OAAQ,MACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,IAENC,SAAU,GACVL,YAAa,qBAEfuD,KAAM,CACJxD,OAAQ,OACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,8CAENC,SAAU,GACVL,YAAa,gCAEfwD,MAAO,CACLzD,OAAQ,QACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,IAENC,SAAU,EACVL,YAAa,0BAEfyD,KAAM,CACJ1D,OAAQ,OACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,IAENC,SAAU,GACVL,YAAa,6BAEf0D,IAAK,CACH3D,OAAQ,MACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,IAENC,SAAU,GACVL,YAAa,4BAEf2D,KAAM,CACJ5D,OAAQ,OACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,IAENC,SAAU,EACVL,YAAa,wBAEf4D,QAAS,CACP7D,OAAQ,UACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,IAENC,SAAU,GACVL,YAAa,sBAEf6D,KAAM,CACJ9D,OAAQ,OACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,IAENC,SAAU,GACVL,YAAa,2BAEf8D,IAAK,CACH/D,OAAQ,MACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,IAENC,SAAU,GACVL,YAAa,4BAEf+D,IAAK,CACHhE,OAAQ,MACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,IAENC,SAAU,GACVL,YAAa,yBAEfgE,IAAK,CACHjE,OAAQ,MACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,IAENC,SAAU,EACVL,YAAa,kCAEfiE,IAAK,CACHlE,OAAQ,MACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,IAENC,SAAU,GACVL,YAAa,kCAEfkE,IAAK,CACHnE,OAAQ,MACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,IAENC,SAAU,GACVL,YAAa,qBAEfmE,MAAO,CACLpE,OAAQ,QACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,IAENC,SAAU,GACVL,YAAa,4BAEfoE,IAAK,CACHrE,OAAQ,MACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,IAENC,SAAU,GACVL,YAAa,qBAEfqE,MAAO,CACLtE,OAAQ,QACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,IAENC,SAAU,GACVL,YAAa,sBAEfsE,KAAM,CACJvE,OAAQ,OACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,IAENC,SAAU,GACVL,YAAa,6BAEfuE,MAAO,CACLxE,OAAQ,QACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,8CAENC,SAAU,GACVL,YAAa,gCAEfwE,KAAM,CACJzE,OAAQ,OACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,IAENC,SAAU,GACVL,YAAa,0BAEfyE,KAAM,CACJ1E,OAAQ,OACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,IAENC,SAAU,GACVL,YAAa,yBAEf0E,KAAM,CACJ3E,OAAQ,OACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,IAENC,SAAU,GACVL,YAAa,+BAEf2E,IAAK,CACH5E,OAAQ,MACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,IAENC,SAAU,GACVL,YAAa,4BAEf4E,KAAM,CACJ7E,OAAQ,OACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,IAENC,SAAU,GACVL,YAAa,8CAEf6E,MAAO,CACL9E,OAAQ,QACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,IAENC,SAAU,GACVL,YAAa,2BAEf8E,OAAQ,CACN/E,OAAQ,SACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,IAENC,SAAU,GACVL,YAAa,2BAEf+E,MAAO,CACLhF,OAAQ,QACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,IAENC,SAAU,GACVL,YAAa,2BAEfgF,MAAO,CACLjF,OAAQ,QACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,IAENC,SAAU,GACVL,YAAa,2BAEfiF,IAAK,CACHlF,OAAQ,MACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,IAENC,SAAU,GACVL,YAAa,yBAEfkF,KAAM,CACJnF,OAAQ,OACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,IAENC,SAAU,GACVL,YAAa,8BAEfmF,IAAK,CACHpF,OAAQ,MACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,IAENC,SAAU,GACVL,YAAa,4BAEfoF,IAAK,CACHrF,OAAQ,MACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,8CAENC,SAAU,GACVL,YAAa,4BAEfqF,KAAM,CACJtF,OAAQ,OACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,8CAENC,SAAU,GACVL,YAAa,6BAEfsF,IAAK,CACHvF,OAAQ,MACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,8CAENC,SAAU,GACVL,YAAa,6BAEfuF,IAAK,CACHxF,OAAQ,MACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,8CAENC,SAAU,GACVL,YAAa,mBAEfwF,KAAM,CACJzF,OAAQ,OACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,8CAENC,SAAU,GACVL,YAAa,uBAEfyF,KAAM,CACJ1F,OAAQ,OACRG,QAAS,CACPE,GAAI,6CACJD,GAAI,8CAENE,SAAU,GACVL,YAAa,sBAEf0F,KAAM,CACJ3F,OAAQ,OACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,8CAENC,SAAU,GACVL,YAAa,wBAEf2F,IAAK,CACH5F,OAAQ,MACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,8CAENC,SAAU,GACVL,YAAa,2BAEf4F,KAAM,CACJ7F,OAAQ,OACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,8CAENC,SAAU,GACVL,YAAa,2BAEf6F,KAAM,CACJ9F,OAAQ,OACRG,QAAS,CACPE,GAAI,6CACJD,GAAI,8CAENE,SAAU,GACVL,YAAa,wBAEf8F,IAAK,CACH/F,OAAQ,MACRG,QAAS,CACPE,GAAI,6CACJD,GAAI,8CAENE,SAAU,GACVL,YAAa,0BAEf+F,IAAK,CACHhG,OAAQ,MACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,8CAENC,SAAU,GACVL,YAAa,oBAEfgG,IAAK,CACHjG,OAAQ,MACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,8CAENC,SAAU,GACVL,YAAa,0BAEfiG,IAAK,CACHlG,OAAQ,MACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,8CAENC,SAAU,GACVL,YAAa,wBAEfkG,IAAK,CACHnG,OAAQ,MACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,8CAENC,SAAU,GACVL,YAAa,wBAEfmG,KAAM,CACJpG,OAAQ,OACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,8CAENC,SAAU,GACVL,YAAa,+BAEfoG,OAAQ,CACNrG,OAAQ,SACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,8CAENC,SAAU,GACVL,YAAa,2BAEfqG,MAAO,CACLtG,OAAQ,QACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,IAENC,SAAU,GACVL,YAAa,2BAEfsG,QAAS,CACPvG,OAAQ,UACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,IAENC,SAAU,GACVL,YAAa,2BAEfuG,MAAO,CACLxG,OAAQ,QACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,IAENC,SAAU,GACVL,YAAa,yBAEfwG,IAAK,CACHzG,OAAQ,MACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,IAENC,SAAU,GACVL,YAAa,uBAEfyG,IAAK,CACH1G,OAAQ,MACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,IAENC,SAAU,GACVL,YAAa,2BAEf0G,KAAM,CACJ3G,OAAQ,OACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,IAENC,SAAU,GACVL,YAAa,uBAEf2G,IAAK,CACH5G,OAAQ,MACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,IAENC,SAAU,GACVL,YAAa,2BAEf4G,KAAM,CACJ7G,OAAQ,OACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,IAENC,SAAU,GACVL,YAAa,kCAEf6G,IAAK,CACH9G,OAAQ,MACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,IAENC,SAAU,GACVL,YAAa,4BAEf8G,KAAM,CACJ/G,OAAQ,OACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,IAENC,SAAU,EACVL,YAAa,yBAEf+G,KAAM,CACJhH,OAAQ,OACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,IAENC,SAAU,EACVL,YAAa,6BAEfgH,IAAK,CACHjH,OAAQ,MACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,IAENC,SAAU,GACVL,YAAa,gCAEfiH,IAAK,CACHlH,OAAQ,MACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,IAENC,SAAU,GACVL,YAAa,6BAEfkH,KAAM,CACJnH,OAAQ,OACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,IAENC,SAAU,GACVL,YAAa,iCAEfmH,IAAK,CACHpH,OAAQ,MACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,IAENC,SAAU,GACVL,YAAa,qBAEfoH,KAAM,CACJrH,OAAQ,OACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,IAENC,SAAU,GACVL,YAAa,2BAEfqH,KAAM,CACJtH,OAAQ,OACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,IAENC,SAAU,GACVL,YAAa,oBAEfsH,IAAK,CACHvH,OAAQ,MACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,IAENC,SAAU,EACVL,YAAa,oBAEfuH,KAAM,CACJxH,OAAQ,OACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,IAENC,SAAU,GACVL,YAAa,wBAEfwH,OAAQ,CACNzH,OAAQ,SACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,IAENC,SAAU,GACVL,YAAa,+BAEfyH,IAAK,CACH1H,OAAQ,MACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,IAENC,SAAU,GACVL,YAAa,+BAEf0H,KAAM,CACJ3H,OAAQ,OACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,IAENC,SAAU,GACVL,YAAa,yBAEf2H,KAAM,CACJ5H,OAAQ,OACRG,QAAS,CACPC,GAAI,6CACJC,GAAI,IAENC,SAAU,GACVL,YAAa,2B,oNC/hCF4H,EAfS,WAAO,IACrBC,EAAUC,cAAVD,MAERE,qBAAU,WACR,IAAMC,EAAcC,OAAOC,aAAaC,QAAQC,MAK5CJ,GAAeA,IAAgBK,IAAeC,KAChDT,EAAMG,KAEP,CAACH,K,sBCOSU,EAdKC,4BAAH,2LAKO,qBAAGC,MAAkBC,OAAOC,c,gBCdvCC,EAAK,CAAEC,KAAM,KAAMC,SAAU,WA6B7BC,EAAe,CAC1BH,EA7BgB,CAAEC,KAAM,KAAMC,SAAU,8CACxB,CAAED,KAAM,KAAMC,SAAU,kCACtB,CAAED,KAAM,QAASC,SAAU,4BAC3B,CAAED,KAAM,QAASC,SAAU,4BAC7B,CAAED,KAAM,KAAMC,SAAU,cACvB,CAAED,KAAM,MAAOC,SAAU,YAC1B,CAAED,KAAM,KAAMC,SAAU,eAExB,CAAED,KAAM,KAAMC,SAAU,WADxB,CAAED,KAAM,KAAMC,SAAU,eAExB,CAAED,KAAM,KAAMC,SAAU,oDACxB,CAAED,KAAM,KAAMC,SAAU,kCACxB,CAAED,KAAM,KAAMC,SAAU,UACxB,CAAED,KAAM,KAAMC,SAAU,oBACxB,CAAED,KAAM,KAAMC,SAAU,YACxB,CAAED,KAAM,KAAMC,SAAU,sBACxB,CAAED,KAAM,KAAMC,SAAU,sBACxB,CAAED,KAAM,KAAMC,SAAU,UACtB,CAAED,KAAM,QAASC,SAAU,2BAC3B,CAAED,KAAM,QAASC,SAAU,yBAC7B,CAAED,KAAM,KAAMC,SAAU,kBACxB,CAAED,KAAM,KAAMC,SAAU,8CACtB,CAAED,KAAM,QAASC,SAAU,cAC3B,CAAED,KAAM,QAASC,SAAU,WAC7B,CAAED,KAAM,KAAMC,SAAU,kCACxB,CAAED,KAAM,KAAMC,SAAU,gBACxB,CAAED,KAAM,KAAMC,SAAU,gEACxB,CAAED,KAAM,KAAMC,SAAU,yB,gBCtBpCE,EAAY,sBAcZC,EAAkBC,IAAMC,cAAc,CAC1CC,iBAAkBR,EAClBS,oBAAqB,aACrBC,mBAAoBV,EACpBW,sBAAuB,eAInBC,EAAYC,SAASC,udAAYC,6BACjCC,EAAwB,IAAIC,qBAAmB,CACnDC,MAAOJ,udAAYK,2BAOfC,EAA0B,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACAC,mBAAc,MADd,mBACzCd,EADyC,KACvBC,EADuB,OAEIa,mBAActB,GAFlB,mBAEzCU,EAFyC,KAErBC,EAFqB,OAGRW,mBAAqB,IAHb,mBAGzCC,EAHyC,KAG3BC,EAH2B,KAWhDrC,qBAAU,WACR,IAAMsC,EAAiBnC,aAAaC,QAAQa,GAC5C,GAAIqB,EAAgB,CAClB,IAAMC,EATY,SAACD,GACrB,OAAOtB,EAAawB,QAAO,SAACzB,GAC1B,OAAOA,EAASD,OAASwB,KACxB,GAMkBG,CAAcH,GACjChB,EAAoBiB,QAEpBjB,EAAoBT,KAErB,IAEHb,qBAAU,WACJqB,GA1BqC,SAACA,GAC5C,OAAOQ,EAAsBa,yBAAyBjB,EAAWJ,EAAiBP,UAAM6B,EAP3E,EAO8F,KA0BvGC,CAAqCvB,GAClCwB,MAAK,SAACC,GACDA,EAAuBC,KAAKC,OAAS,EACvCX,EAAgB,IAEhBA,EAAgBS,EAAuBC,SAG1CF,MAAK,kBAAMrB,EAAsBH,MACjC4B,OAAM,SAACC,GACNb,EAAgB,IAChBc,QAAQC,MAAM,mCAAoCF,QAGvD,CAAC7B,IAOJ,OACE,cAACH,EAAgBmC,SAAjB,CACEC,MAAO,CAAEjC,mBAAkBC,oBAPF,SAACiC,GAC5BjC,EAAoBiC,GACpBpD,aAAaqD,QAAQvC,EAAWsC,EAAWzC,OAK6BS,qBAAoBC,yBAD5F,SAGE,cAAC,IAAoB6B,SAArB,CAA8BC,MAAO,CAAElB,eAAcC,mBAArD,SAAyEH,O,SCXhEuB,EAvEa,CAC1B,CACEC,MAAO,OACPC,KAAM,WACNC,KAAM,IACNC,aAAc,eAEhB,CACEH,MAAO,QACPC,KAAM,YACNE,aAAc,cACdC,MAAO,CACL,CACEJ,MAAO,WACPE,KAAM,QACNC,aAAc,eAEhB,CACEH,MAAO,YACPE,KAAM,QACNC,aAAc,iBAIpB,CACEH,MAAO,QACPC,KAAM,WACNC,KAAM,SACNC,aAAc,eAEhB,CACEH,MAAO,QACPC,KAAM,WACNC,KAAM,SACNC,aAAc,eAEhB,CACEH,MAAO,OACPC,KAAM,WACNE,aAAc,cACdC,MAAO,CACL,CACEJ,MAAO,WACPE,KAAM,IACNC,aAAc,eAEhB,CACEH,MAAO,SACPE,KAAM,IACNC,aAAc,eAEhB,CACEH,MAAO,QACPE,KAAM,IACNC,aAAc,eAEhB,CACEH,MAAO,WACPE,KAAM,IACNC,aAAc,iBAIpB,CACEH,MAAO,MACPC,KAAM,UACNC,KAAM,IACNC,aAAc,gBC3BHE,EAhCF,SAACC,GAAW,IAAD,EACdC,EAAYC,cAAZD,QADc,EAEIlE,cAAlBD,EAFc,EAEdA,MAAOqE,EAFO,EAEPA,OAFO,EAG4BC,qBAAWlD,GAArDG,EAHc,EAGdA,iBAAkBC,EAHJ,EAGIA,oBAHJ,EAIU+C,cAAxBC,EAJc,EAIdA,OAAQC,EAJM,EAINA,YACVC,EAAeC,cACbC,EAAYC,cAAZD,QAER,OACE,cAAC,IAAD,aACET,QAASA,EACTnE,MAAOA,EACPqE,OAAQA,EACRG,OAAQA,EACRC,YAAaA,EACbK,YAAavD,GAAoBA,EAAiBP,KAClD+D,MAAO7D,EACP8D,QAASxD,EACTkD,aAAcA,EAAaO,WAC3BC,MAAOvB,EACPiB,QAAS,CACPO,SAAQ,OAAEP,QAAF,IAAEA,OAAF,EAAEA,EAASO,SACnBC,OAAc,OAAPR,QAAO,IAAPA,OAAA,EAAAA,EAASS,KAAT,iCAA+BT,EAAQS,WAAvC,aAA+B,EAAaC,OAAOC,SAAO1C,EACjE2C,YAAa,WACbC,cAAe,WACfC,UAAS,OAACd,QAAD,IAACA,OAAD,EAACA,EAASO,YAEjBjB,K,gCCYKyB,E,kDA1Cb,WAAYzB,GAAQ,IAAD,8BACjB,cAAMA,IACD0B,MAAQ,CAAEC,UAAU,GAFR,E,qDAUnB,SAAkBvC,GAAQ,IAAD,EACjBwC,EAAoC,mBAAfxC,EAAMyC,KAC3BC,EAAqC,0BAAf1C,EAAMtC,KAC5BiF,EAAmBH,GAAsBE,EAIzCE,KAA8B,UAAC9F,OAAO+F,QAAQP,aAAhB,aAAC,EAAsBM,4BAG3D,GAAID,IAAqBC,EAA4B,CACnD,IAAME,EAAS,2BAAQhG,OAAO+F,QAAQP,OAAvB,IAA8BM,4BAA4B,IAGzE,OAFA9F,OAAO+F,QAAQE,aAAaD,EAAW,SACvChG,OAAOkG,SAASC,SAIlB,MAAMjD,I,oBAGR,WAAU,IACAuC,EAAaW,KAAKZ,MAAlBC,SACAY,EAAaD,KAAKtC,MAAlBuC,SAER,OAAIZ,EACKY,EAGF,cAAC,WAAD,eAAcD,KAAKtC,W,uCAjC5B,WAEE,MAAO,CAAE2B,UAAU,O,GARcxE,IAAMqF,W,QCS5BC,EATO,WACpB,IAAMC,EAAkBC,aAAY,SAACjB,GAAD,OAAkBA,EAAMgB,OAAO3D,QAC3D6D,EAAWC,cAAXD,OAIR,OAAO,cAAC,KAAD,CAAgBF,OAAQA,EAAQI,SAFlB,SAACC,GAAD,OAAgBH,EAAOG,O,UCPxCC,GAA2C,SAAChD,GAAW,IAAD,EAClC7B,oBAAS,GADyB,mBACnD8E,EADmD,KAC7CC,EAD6C,KAEpDC,EAAeC,uBAAY,kBAAMF,GAAQ,KAAO,CAACA,IAGvD,OAFAG,aAAmBF,GAEfF,EAEA,qBAAKK,eAAgB,kBAAMJ,GAAQ,IAAnC,SACE,cAAC,IAAD,eAAoBlD,MAInB,MAGM7C,OAAMoG,KAAKP,I,8JC83C1B,I,MAAMQ,GAAWC,UAAOC,IAAV,0BAERC,GAAWF,UAAOC,IAAV,sTAcRE,GAAUH,UAAOC,IAAV,2eAqBPG,GAAcJ,UAAOC,IAAV,yEAKXI,GAAQL,UAAOC,IAAV,0JASLK,GAAYN,UAAOC,IAAV,yGAMTM,GAAcP,UAAOC,IAAV,oEAKXO,GAAeR,UAAOC,IAAV,2GAOZQ,GAAST,UAAOC,IAAV,+KAWGS,GAz9Cf,WAAsB,IAAD,EACehG,mBAAS,KADxB,mBACZiG,EADY,KACDC,EADC,KAGbC,EAAS,SAAAC,GACVH,IAAcG,GAAKF,EAAaE,IAGrC,OACE,mCACE,gCACE,eAAC,KAAD,CAAKC,MAAI,EAAT,UACE,cAACC,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,CACEC,UAAWC,KAAW,CAAEC,OAAsB,MAAdT,IAChCU,QAAS,WAAQR,EAAO,MAF1B,mBAQF,cAACG,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,CACEC,UAAWC,KAAW,CAAEC,OAAsB,MAAdT,IAChCU,QAAS,WAAQR,EAAO,MAF1B,oBAQF,cAACG,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,CACEC,UAAWC,KAAW,CAAEC,OAAsB,MAAdT,IAChCU,QAAS,WAAQR,EAAO,MAF1B,uBAQF,cAACG,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,CACEC,UAAWC,KAAW,CAAEC,OAAsB,MAAdT,IAChCU,QAAS,WAAQR,EAAO,MAF1B,sBAQF,cAACG,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,CACEC,UAAWC,KAAW,CAAEC,OAAsB,MAAdT,IAChCU,QAAS,WAAQR,EAAO,MAF1B,wBAQF,cAACG,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,CACEC,UAAWC,KAAW,CAAEC,OAAsB,MAAdT,IAChCU,QAAS,WAAQR,EAAO,MAF1B,2BAQF,cAACG,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,CACEC,UAAWC,KAAW,CAAEC,OAAsB,MAAdT,IAChCU,QAAS,WAAQR,EAAO,MAF1B,wBAQJ,eAACS,GAAA,EAAD,CAAYX,UAAWA,EAAvB,UACE,cAACY,GAAA,EAAD,CAASC,MAAM,IAAf,SACA,cAACzB,GAAD,UACE,eAAC,KAAD,CAAK0B,GAAG,IAAI7D,GAAG,IAAI8D,GAAG,IAAtB,UACE,cAACC,GAAA,EAAD,UACE,eAACxB,GAAD,WACE,cAACD,GAAD,UACE,6CAEF,iCACE,qBAAK0B,IAAI,2BAA2BC,IAAI,OAG1C,eAACzB,GAAD,WACE,cAACC,GAAD,wBAEA,eAACC,GAAD,WACE,cAACC,GAAD,uBACA,cAACC,GAAD,2BAGF,eAACF,GAAD,WACE,cAACC,GAAD,oBACA,cAACC,GAAD,qBAGF,eAACF,GAAD,WACE,cAACC,GAAD,mBACA,cAACC,GAAD,0BAIJ,cAACC,GAAD,UACE,cAACqB,GAAA,EAAD,CAAQC,MAAM,UAAd,2BAKN,cAACJ,GAAA,EAAD,UACE,eAACxB,GAAD,WACE,cAACD,GAAD,UACE,6CAGF,iCACE,qBAAK0B,IAAI,2BAA2BC,IAAI,OAG1C,eAACzB,GAAD,WACE,cAACC,GAAD,wBAEA,eAACC,GAAD,WACE,cAACC,GAAD,uBACA,cAACC,GAAD,2BAGF,eAACF,GAAD,WACE,cAACC,GAAD,oBACA,cAACC,GAAD,qBAGF,eAACF,GAAD,WACE,cAACC,GAAD,mBACA,cAACC,GAAD,0BAIJ,cAACC,GAAD,UACE,cAACqB,GAAA,EAAD,CAAQC,MAAM,UAAd,2BAKN,cAACJ,GAAA,EAAD,UACE,eAACxB,GAAD,WACE,cAACD,GAAD,UACE,6CAEF,iCACE,qBAAK0B,IAAI,2BAA2BC,IAAI,OAG1C,eAACzB,GAAD,WACE,cAACC,GAAD,wBAEA,eAACC,GAAD,WACE,cAACC,GAAD,uBACA,cAACC,GAAD,2BAGF,eAACF,GAAD,WACE,cAACC,GAAD,oBACA,cAACC,GAAD,qBAGF,eAACF,GAAD,WACE,cAACC,GAAD,mBACA,cAACC,GAAD,0BAIJ,cAACC,GAAD,UACE,cAACqB,GAAA,EAAD,CAAQC,MAAM,UAAd,2BAKN,cAACJ,GAAA,EAAD,UACE,eAACxB,GAAD,WACE,cAACD,GAAD,UACE,6CAEF,iCACE,qBAAK0B,IAAI,2BAA2BC,IAAI,OAG1C,eAACzB,GAAD,WACE,cAACC,GAAD,wBAEA,eAACC,GAAD,WACE,cAACC,GAAD,uBACA,cAACC,GAAD,2BAGF,eAACF,GAAD,WACE,cAACC,GAAD,oBACA,cAACC,GAAD,qBAGF,eAACF,GAAD,WACE,cAACC,GAAD,mBACA,cAACC,GAAD,0BAIJ,cAACC,GAAD,UACE,cAACqB,GAAA,EAAD,CAAQC,MAAM,UAAd,2BAKN,cAACJ,GAAA,EAAD,UACE,eAACxB,GAAD,WACE,cAACD,GAAD,UACE,6CAEF,iCACE,qBAAK0B,IAAI,2BAA2BC,IAAI,OAG1C,eAACzB,GAAD,WACE,cAACC,GAAD,wBAEA,eAACC,GAAD,WACE,cAACC,GAAD,uBACA,cAACC,GAAD,2BAGF,eAACF,GAAD,WACE,cAACC,GAAD,oBACA,cAACC,GAAD,qBAGF,eAACF,GAAD,WACE,cAACC,GAAD,mBACA,cAACC,GAAD,0BAIJ,cAACC,GAAD,UACE,cAACqB,GAAA,EAAD,CAAQC,MAAM,UAAd,2BAKN,cAACJ,GAAA,EAAD,UACE,eAACxB,GAAD,WACE,cAACD,GAAD,UACE,6CAEF,iCACE,qBAAK0B,IAAI,2BAA2BC,IAAI,OAG1C,eAACzB,GAAD,WACE,cAACC,GAAD,wBAEA,eAACC,GAAD,WACE,cAACC,GAAD,uBACA,cAACC,GAAD,2BAGF,eAACF,GAAD,WACE,cAACC,GAAD,oBACA,cAACC,GAAD,qBAGF,eAACF,GAAD,WACE,cAACC,GAAD,mBACA,cAACC,GAAD,0BAIJ,cAACC,GAAD,UACE,cAACqB,GAAA,EAAD,CAAQC,MAAM,UAAd,2BAKN,cAACJ,GAAA,EAAD,UACE,eAACxB,GAAD,WACE,cAACD,GAAD,UACE,6CAEF,iCACE,qBAAK0B,IAAI,2BAA2BC,IAAI,OAG1C,eAACzB,GAAD,WACE,cAACC,GAAD,wBAEA,eAACC,GAAD,WACE,cAACC,GAAD,uBACA,cAACC,GAAD,2BAGF,eAACF,GAAD,WACE,cAACC,GAAD,oBACA,cAACC,GAAD,qBAGF,eAACF,GAAD,WACE,cAACC,GAAD,mBACA,cAACC,GAAD,0BAIJ,cAACC,GAAD,UACE,cAACqB,GAAA,EAAD,CAAQC,MAAM,UAAd,2BAKN,cAACJ,GAAA,EAAD,UACE,eAACxB,GAAD,WACE,cAACD,GAAD,UACE,6CAEF,iCACE,qBAAK0B,IAAI,2BAA2BC,IAAI,OAG1C,eAACzB,GAAD,WACE,cAACC,GAAD,wBAEA,eAACC,GAAD,WACE,cAACC,GAAD,uBACA,cAACC,GAAD,2BAGF,eAACF,GAAD,WACE,cAACC,GAAD,oBACA,cAACC,GAAD,qBAGF,eAACF,GAAD,WACE,cAACC,GAAD,mBACA,cAACC,GAAD,0BAIJ,cAACC,GAAD,UACE,cAACqB,GAAA,EAAD,CAAQC,MAAM,UAAd,2BAKN,cAACJ,GAAA,EAAD,UACE,eAACxB,GAAD,WACE,cAACD,GAAD,UACE,6CAEF,iCACE,qBAAK0B,IAAI,2BAA2BC,IAAI,OAG1C,eAACzB,GAAD,WACE,cAACC,GAAD,wBAEA,eAACC,GAAD,WACE,cAACC,GAAD,uBACA,cAACC,GAAD,2BAGF,eAACF,GAAD,WACE,cAACC,GAAD,oBACA,cAACC,GAAD,qBAGF,eAACF,GAAD,WACE,cAACC,GAAD,mBACA,cAACC,GAAD,0BAIJ,cAACC,GAAD,UACE,cAACqB,GAAA,EAAD,CAAQC,MAAM,UAAd,2BAKN,cAACJ,GAAA,EAAD,UACE,eAACxB,GAAD,WACE,cAACD,GAAD,UACE,6CAEF,iCACE,qBAAK0B,IAAI,2BAA2BC,IAAI,OAG1C,eAACzB,GAAD,WACE,cAACC,GAAD,wBAEA,eAACC,GAAD,WACE,cAACC,GAAD,uBACA,cAACC,GAAD,2BAGF,eAACF,GAAD,WACE,cAACC,GAAD,oBACA,cAACC,GAAD,qBAGF,eAACF,GAAD,WACE,cAACC,GAAD,mBACA,cAACC,GAAD,0BAIJ,cAACC,GAAD,UACE,cAACqB,GAAA,EAAD,CAAQC,MAAM,UAAd,kCAQV,cAACR,GAAA,EAAD,CAASC,MAAM,IAAf,SACE,cAACzB,GAAD,UACE,eAAC,KAAD,CAAK0B,GAAG,IAAI7D,GAAG,IAAI8D,GAAG,IAAtB,UACE,cAACC,GAAA,EAAD,UACE,eAACxB,GAAD,WACE,cAACD,GAAD,UACE,6CAEF,iCACE,qBAAK0B,IAAI,2BAA2BC,IAAI,OAG1C,eAACzB,GAAD,WACE,cAACC,GAAD,wBAEA,eAACC,GAAD,WACE,cAACC,GAAD,uBACA,cAACC,GAAD,2BAGF,eAACF,GAAD,WACE,cAACC,GAAD,oBACA,cAACC,GAAD,qBAGF,eAACF,GAAD,WACE,cAACC,GAAD,mBACA,cAACC,GAAD,0BAIJ,cAACC,GAAD,UACE,cAACqB,GAAA,EAAD,CAAQC,MAAM,UAAd,2BAKN,cAACJ,GAAA,EAAD,UACE,eAACxB,GAAD,WACE,cAACD,GAAD,UACE,6CAEF,iCACE,qBAAK0B,IAAI,2BAA2BC,IAAI,OAG1C,eAACzB,GAAD,WACE,cAACC,GAAD,wBAEA,eAACC,GAAD,WACE,cAACC,GAAD,uBACA,cAACC,GAAD,2BAGF,eAACF,GAAD,WACE,cAACC,GAAD,oBACA,cAACC,GAAD,qBAGF,eAACF,GAAD,WACE,cAACC,GAAD,mBACA,cAACC,GAAD,0BAIJ,cAACC,GAAD,UACE,cAACqB,GAAA,EAAD,CAAQC,MAAM,UAAd,2BAKN,cAACJ,GAAA,EAAD,UACE,eAACxB,GAAD,WACE,cAACD,GAAD,UACE,6CAEF,iCACE,qBAAK0B,IAAI,2BAA2BC,IAAI,OAG1C,eAACzB,GAAD,WACE,cAACC,GAAD,wBAEA,eAACC,GAAD,WACE,cAACC,GAAD,uBACA,cAACC,GAAD,2BAGF,eAACF,GAAD,WACE,cAACC,GAAD,oBACA,cAACC,GAAD,qBAGF,eAACF,GAAD,WACE,cAACC,GAAD,mBACA,cAACC,GAAD,0BAIJ,cAACC,GAAD,UACE,cAACqB,GAAA,EAAD,CAAQC,MAAM,UAAd,2BAKN,cAACJ,GAAA,EAAD,UACE,eAACxB,GAAD,WACE,cAACD,GAAD,UACE,6CAEF,iCACE,qBAAK0B,IAAI,2BAA2BC,IAAI,OAG1C,eAACzB,GAAD,WACE,cAACC,GAAD,wBAEA,eAACC,GAAD,WACE,cAACC,GAAD,uBACA,cAACC,GAAD,2BAGF,eAACF,GAAD,WACE,cAACC,GAAD,oBACA,cAACC,GAAD,qBAGF,eAACF,GAAD,WACE,cAACC,GAAD,mBACA,cAACC,GAAD,0BAIJ,cAACC,GAAD,UACE,cAACqB,GAAA,EAAD,CAAQC,MAAM,UAAd,2BAKN,cAACJ,GAAA,EAAD,UACE,eAACxB,GAAD,WACE,cAACD,GAAD,UACE,6CAEF,iCACE,qBAAK0B,IAAI,2BAA2BC,IAAI,OAG1C,eAACzB,GAAD,WACE,cAACC,GAAD,wBAEA,eAACC,GAAD,WACE,cAACC,GAAD,uBACA,cAACC,GAAD,2BAGF,eAACF,GAAD,WACE,cAACC,GAAD,oBACA,cAACC,GAAD,qBAGF,eAACF,GAAD,WACE,cAACC,GAAD,mBACA,cAACC,GAAD,0BAIJ,cAACC,GAAD,UACE,cAACqB,GAAA,EAAD,CAAQC,MAAM,UAAd,2BAKN,cAACJ,GAAA,EAAD,UACE,eAACxB,GAAD,WACE,cAACD,GAAD,UACE,6CAEF,iCACE,qBAAK0B,IAAI,2BAA2BC,IAAI,OAG1C,eAACzB,GAAD,WACE,cAACC,GAAD,wBAEA,eAACC,GAAD,WACE,cAACC,GAAD,uBACA,cAACC,GAAD,2BAGF,eAACF,GAAD,WACE,cAACC,GAAD,oBACA,cAACC,GAAD,qBAGF,eAACF,GAAD,WACE,cAACC,GAAD,mBACA,cAACC,GAAD,0BAIJ,cAACC,GAAD,UACE,cAACqB,GAAA,EAAD,CAAQC,MAAM,UAAd,kCAQZ,cAACR,GAAA,EAAD,CAASC,MAAM,IAAf,SACE,cAACzB,GAAD,UACE,eAAC,KAAD,CAAK0B,GAAG,IAAI7D,GAAG,IAAI8D,GAAG,IAAtB,UACE,cAACC,GAAA,EAAD,UACE,eAACxB,GAAD,WACE,cAACD,GAAD,UACE,6CAEF,iCACE,qBAAK0B,IAAI,2BAA2BC,IAAI,OAG1C,eAACzB,GAAD,WACE,cAACC,GAAD,wBAEA,eAACC,GAAD,WACE,cAACC,GAAD,uBACA,cAACC,GAAD,2BAGF,eAACF,GAAD,WACE,cAACC,GAAD,oBACA,cAACC,GAAD,qBAGF,eAACF,GAAD,WACE,cAACC,GAAD,mBACA,cAACC,GAAD,0BAIJ,cAACC,GAAD,UACE,cAACqB,GAAA,EAAD,CAAQC,MAAM,UAAd,2BAKN,cAACJ,GAAA,EAAD,UACE,eAACxB,GAAD,WACE,cAACD,GAAD,UACE,6CAEF,iCACE,qBAAK0B,IAAI,2BAA2BC,IAAI,OAG1C,eAACzB,GAAD,WACE,cAACC,GAAD,wBAEA,eAACC,GAAD,WACE,cAACC,GAAD,uBACA,cAACC,GAAD,2BAGF,eAACF,GAAD,WACE,cAACC,GAAD,oBACA,cAACC,GAAD,qBAGF,eAACF,GAAD,WACE,cAACC,GAAD,mBACA,cAACC,GAAD,0BAIJ,cAACC,GAAD,UACE,cAACqB,GAAA,EAAD,CAAQC,MAAM,UAAd,2BAKN,cAACJ,GAAA,EAAD,UACE,eAACxB,GAAD,WACE,cAACD,GAAD,UACE,6CAEF,iCACE,qBAAK0B,IAAI,2BAA2BC,IAAI,OAG1C,eAACzB,GAAD,WACE,cAACC,GAAD,wBAEA,eAACC,GAAD,WACE,cAACC,GAAD,uBACA,cAACC,GAAD,2BAGF,eAACF,GAAD,WACE,cAACC,GAAD,oBACA,cAACC,GAAD,qBAGF,eAACF,GAAD,WACE,cAACC,GAAD,mBACA,cAACC,GAAD,0BAIJ,cAACC,GAAD,UACE,cAACqB,GAAA,EAAD,CAAQC,MAAM,UAAd,2BAKN,cAACJ,GAAA,EAAD,UACE,eAACxB,GAAD,WACE,cAACD,GAAD,UACE,6CAEF,iCACE,qBAAK0B,IAAI,2BAA2BC,IAAI,OAG1C,eAACzB,GAAD,WACE,cAACC,GAAD,wBAEA,eAACC,GAAD,WACE,cAACC,GAAD,uBACA,cAACC,GAAD,2BAGF,eAACF,GAAD,WACE,cAACC,GAAD,oBACA,cAACC,GAAD,qBAGF,eAACF,GAAD,WACE,cAACC,GAAD,mBACA,cAACC,GAAD,0BAIJ,cAACC,GAAD,UACE,cAACqB,GAAA,EAAD,CAAQC,MAAM,UAAd,2BAKN,cAACJ,GAAA,EAAD,UACE,eAACxB,GAAD,WACE,cAACD,GAAD,UACE,6CAEF,iCACE,qBAAK0B,IAAI,2BAA2BC,IAAI,OAG1C,eAACzB,GAAD,WACE,cAACC,GAAD,wBAEA,eAACC,GAAD,WACE,cAACC,GAAD,uBACA,cAACC,GAAD,2BAGF,eAACF,GAAD,WACE,cAACC,GAAD,oBACA,cAACC,GAAD,qBAGF,eAACF,GAAD,WACE,cAACC,GAAD,mBACA,cAACC,GAAD,0BAIJ,cAACC,GAAD,UACE,cAACqB,GAAA,EAAD,CAAQC,MAAM,UAAd,kCAQZ,cAACR,GAAA,EAAD,CAASC,MAAM,IAAf,SACE,cAACzB,GAAD,UACE,eAAC,KAAD,CAAK0B,GAAG,IAAI7D,GAAG,IAAI8D,GAAG,IAAtB,UACA,cAACC,GAAA,EAAD,UACI,eAACxB,GAAD,WACE,cAACD,GAAD,UACE,6CAEF,iCACE,qBAAK0B,IAAI,2BAA2BC,IAAI,OAG1C,eAACzB,GAAD,WACE,cAACC,GAAD,wBAEA,eAACC,GAAD,WACE,cAACC,GAAD,uBACA,cAACC,GAAD,2BAGF,eAACF,GAAD,WACE,cAACC,GAAD,oBACA,cAACC,GAAD,qBAGF,eAACF,GAAD,WACE,cAACC,GAAD,mBACA,cAACC,GAAD,0BAIJ,cAACC,GAAD,UACE,cAACqB,GAAA,EAAD,CAAQC,MAAM,UAAd,2BAKN,cAACJ,GAAA,EAAD,UACE,eAACxB,GAAD,WACE,cAACD,GAAD,UACE,6CAEF,iCACE,qBAAK0B,IAAI,2BAA2BC,IAAI,OAG1C,eAACzB,GAAD,WACE,cAACC,GAAD,wBAEA,eAACC,GAAD,WACE,cAACC,GAAD,uBACA,cAACC,GAAD,2BAGF,eAACF,GAAD,WACE,cAACC,GAAD,oBACA,cAACC,GAAD,qBAGF,eAACF,GAAD,WACE,cAACC,GAAD,mBACA,cAACC,GAAD,0BAIJ,cAACC,GAAD,UACE,cAACqB,GAAA,EAAD,CAAQC,MAAM,UAAd,2BAKN,cAACJ,GAAA,EAAD,UACE,eAACxB,GAAD,WACE,cAACD,GAAD,UACE,6CAEF,iCACE,qBAAK0B,IAAI,2BAA2BC,IAAI,OAG1C,eAACzB,GAAD,WACE,cAACC,GAAD,wBAEA,eAACC,GAAD,WACE,cAACC,GAAD,uBACA,cAACC,GAAD,2BAGF,eAACF,GAAD,WACE,cAACC,GAAD,oBACA,cAACC,GAAD,qBAGF,eAACF,GAAD,WACE,cAACC,GAAD,mBACA,cAACC,GAAD,0BAIJ,cAACC,GAAD,UACE,cAACqB,GAAA,EAAD,CAAQC,MAAM,UAAd,2BAKN,cAACJ,GAAA,EAAD,UACE,eAACxB,GAAD,WACE,cAACD,GAAD,UACE,6CAEF,iCACE,qBAAK0B,IAAI,2BAA2BC,IAAI,OAG1C,eAACzB,GAAD,WACE,cAACC,GAAD,wBAEA,eAACC,GAAD,WACE,cAACC,GAAD,uBACA,cAACC,GAAD,2BAGF,eAACF,GAAD,WACE,cAACC,GAAD,oBACA,cAACC,GAAD,qBAGF,eAACF,GAAD,WACE,cAACC,GAAD,mBACA,cAACC,GAAD,0BAIJ,cAACC,GAAD,UACE,cAACqB,GAAA,EAAD,CAAQC,MAAM,UAAd,kCAQZ,cAACR,GAAA,EAAD,CAASC,MAAM,IAAf,SACE,cAACzB,GAAD,UACE,eAAC,KAAD,CAAK0B,GAAG,IAAI7D,GAAG,IAAI8D,GAAG,IAAtB,UACA,cAACC,GAAA,EAAD,UACI,eAACxB,GAAD,WACE,cAACD,GAAD,UACE,6CAEF,iCACE,qBAAK0B,IAAI,2BAA2BC,IAAI,OAG1C,eAACzB,GAAD,WACE,cAACC,GAAD,wBAEA,eAACC,GAAD,WACE,cAACC,GAAD,uBACA,cAACC,GAAD,2BAGF,eAACF,GAAD,WACE,cAACC,GAAD,oBACA,cAACC,GAAD,qBAGF,eAACF,GAAD,WACE,cAACC,GAAD,mBACA,cAACC,GAAD,0BAIJ,cAACC,GAAD,UACE,cAACqB,GAAA,EAAD,CAAQC,MAAM,UAAd,2BAKN,cAACJ,GAAA,EAAD,UACE,eAACxB,GAAD,WACE,cAACD,GAAD,UACE,6CAEF,iCACE,qBAAK0B,IAAI,2BAA2BC,IAAI,OAG1C,eAACzB,GAAD,WACE,cAACC,GAAD,wBAEA,eAACC,GAAD,WACE,cAACC,GAAD,uBACA,cAACC,GAAD,2BAGF,eAACF,GAAD,WACE,cAACC,GAAD,oBACA,cAACC,GAAD,qBAGF,eAACF,GAAD,WACE,cAACC,GAAD,mBACA,cAACC,GAAD,0BAIJ,cAACC,GAAD,UACE,cAACqB,GAAA,EAAD,CAAQC,MAAM,UAAd,2BAKN,cAACJ,GAAA,EAAD,UACE,eAACxB,GAAD,WACE,cAACD,GAAD,UACE,6CAEF,iCACE,qBAAK0B,IAAI,2BAA2BC,IAAI,OAG1C,eAACzB,GAAD,WACE,cAACC,GAAD,wBAEA,eAACC,GAAD,WACE,cAACC,GAAD,uBACA,cAACC,GAAD,2BAGF,eAACF,GAAD,WACE,cAACC,GAAD,oBACA,cAACC,GAAD,qBAGF,eAACF,GAAD,WACE,cAACC,GAAD,mBACA,cAACC,GAAD,0BAIJ,cAACC,GAAD,UACE,cAACqB,GAAA,EAAD,CAAQC,MAAM,UAAd,2BAKN,cAACJ,GAAA,EAAD,UACE,eAACxB,GAAD,WACE,cAACD,GAAD,UACE,6CAEF,iCACE,qBAAK0B,IAAI,2BAA2BC,IAAI,OAG1C,eAACzB,GAAD,WACE,cAACC,GAAD,wBAEA,eAACC,GAAD,WACE,cAACC,GAAD,uBACA,cAACC,GAAD,2BAGF,eAACF,GAAD,WACE,cAACC,GAAD,oBACA,cAACC,GAAD,qBAGF,eAACF,GAAD,WACE,cAACC,GAAD,mBACA,cAACC,GAAD,0BAIJ,cAACC,GAAD,UACE,cAACqB,GAAA,EAAD,CAAQC,MAAM,UAAd,2BAKN,cAACJ,GAAA,EAAD,UACE,eAACxB,GAAD,WACE,cAACD,GAAD,UACE,6CAEF,iCACE,qBAAK0B,IAAI,2BAA2BC,IAAI,OAG1C,eAACzB,GAAD,WACE,cAACC,GAAD,wBAEA,eAACC,GAAD,WACE,cAACC,GAAD,uBACA,cAACC,GAAD,2BAGF,eAACF,GAAD,WACE,cAACC,GAAD,oBACA,cAACC,GAAD,qBAGF,eAACF,GAAD,WACE,cAACC,GAAD,mBACA,cAACC,GAAD,0BAIJ,cAACC,GAAD,UACE,cAACqB,GAAA,EAAD,CAAQC,MAAM,UAAd,kCAQZ,cAACR,GAAA,EAAD,CAASC,MAAM,IAAf,SACE,cAACzB,GAAD,UACE,eAAC,KAAD,CAAK0B,GAAG,IAAI7D,GAAG,IAAI8D,GAAG,IAAtB,UACA,cAACC,GAAA,EAAD,UACI,eAACxB,GAAD,WACE,cAACD,GAAD,UACE,6CAEF,iCACE,qBAAK0B,IAAI,2BAA2BC,IAAI,OAG1C,eAACzB,GAAD,WACE,cAACC,GAAD,wBAEA,eAACC,GAAD,WACE,cAACC,GAAD,uBACA,cAACC,GAAD,2BAGF,eAACF,GAAD,WACE,cAACC,GAAD,oBACA,cAACC,GAAD,qBAGF,eAACF,GAAD,WACE,cAACC,GAAD,mBACA,cAACC,GAAD,0BAIJ,cAACC,GAAD,UACE,cAACqB,GAAA,EAAD,CAAQC,MAAM,UAAd,2BAKN,cAACJ,GAAA,EAAD,UACE,eAACxB,GAAD,WACE,cAACD,GAAD,UACE,6CAEF,iCACE,qBAAK0B,IAAI,2BAA2BC,IAAI,OAG1C,eAACzB,GAAD,WACE,cAACC,GAAD,wBAEA,eAACC,GAAD,WACE,cAACC,GAAD,uBACA,cAACC,GAAD,2BAGF,eAACF,GAAD,WACE,cAACC,GAAD,oBACA,cAACC,GAAD,qBAGF,eAACF,GAAD,WACE,cAACC,GAAD,mBACA,cAACC,GAAD,0BAIJ,cAACC,GAAD,UACE,cAACqB,GAAA,EAAD,CAAQC,MAAM,UAAd,2BAKN,cAACJ,GAAA,EAAD,UACE,eAACxB,GAAD,WACE,cAACD,GAAD,UACE,6CAEF,iCACE,qBAAK0B,IAAI,2BAA2BC,IAAI,OAG1C,eAACzB,GAAD,WACE,cAACC,GAAD,wBAEA,eAACC,GAAD,WACE,cAACC,GAAD,uBACA,cAACC,GAAD,2BAGF,eAACF,GAAD,WACE,cAACC,GAAD,oBACA,cAACC,GAAD,qBAGF,eAACF,GAAD,WACE,cAACC,GAAD,mBACA,cAACC,GAAD,0BAIJ,cAACC,GAAD,UACE,cAACqB,GAAA,EAAD,CAAQC,MAAM,UAAd,kCAQZ,cAACR,GAAA,EAAD,CAASC,MAAM,IAAf,SACE,cAACzB,GAAD,UACE,eAAC,KAAD,CAAK0B,GAAG,IAAI7D,GAAG,IAAI8D,GAAG,IAAtB,UACA,cAACC,GAAA,EAAD,UACI,eAACxB,GAAD,WACE,cAACD,GAAD,UACE,6CAEF,iCACE,qBAAK0B,IAAI,2BAA2BC,IAAI,OAG1C,eAACzB,GAAD,WACE,cAACC,GAAD,wBAEA,eAACC,GAAD,WACE,cAACC,GAAD,uBACA,cAACC,GAAD,2BAGF,eAACF,GAAD,WACE,cAACC,GAAD,oBACA,cAACC,GAAD,qBAGF,eAACF,GAAD,WACE,cAACC,GAAD,mBACA,cAACC,GAAD,0BAIJ,cAACC,GAAD,UACE,cAACqB,GAAA,EAAD,CAAQC,MAAM,UAAd,2BAKN,cAACJ,GAAA,EAAD,UACE,eAACxB,GAAD,WACE,cAACD,GAAD,UACE,6CAEF,iCACE,qBAAK0B,IAAI,2BAA2BC,IAAI,OAG1C,eAACzB,GAAD,WACE,cAACC,GAAD,wBAEA,eAACC,GAAD,WACE,cAACC,GAAD,uBACA,cAACC,GAAD,2BAGF,eAACF,GAAD,WACE,cAACC,GAAD,oBACA,cAACC,GAAD,qBAGF,eAACF,GAAD,WACE,cAACC,GAAD,mBACA,cAACC,GAAD,0BAIJ,cAACC,GAAD,UACE,cAACqB,GAAA,EAAD,CAAQC,MAAM,UAAd,2BAKN,cAACJ,GAAA,EAAD,UACE,eAACxB,GAAD,WACE,cAACD,GAAD,UACE,6CAEF,iCACE,qBAAK0B,IAAI,2BAA2BC,IAAI,OAG1C,eAACzB,GAAD,WACE,cAACC,GAAD,wBAEA,eAACC,GAAD,WACE,cAACC,GAAD,uBACA,cAACC,GAAD,2BAGF,eAACF,GAAD,WACE,cAACC,GAAD,oBACA,cAACC,GAAD,qBAGF,eAACF,GAAD,WACE,cAACC,GAAD,mBACA,cAACC,GAAD,0BAIJ,cAACC,GAAD,UACE,cAACqB,GAAA,EAAD,CAAQC,MAAM,UAAd,2BAKN,cAACJ,GAAA,EAAD,UACE,eAACxB,GAAD,WACE,cAACD,GAAD,UACE,6CAEF,iCACE,qBAAK0B,IAAI,2BAA2BC,IAAI,OAG1C,eAACzB,GAAD,WACE,cAACC,GAAD,wBAEA,eAACC,GAAD,WACE,cAACC,GAAD,uBACA,cAACC,GAAD,2BAGF,eAACF,GAAD,WACE,cAACC,GAAD,oBACA,cAACC,GAAD,qBAGF,eAACF,GAAD,WACE,cAACC,GAAD,mBACA,cAACC,GAAD,0BAIJ,cAACC,GAAD,UACE,cAACqB,GAAA,EAAD,CAAQC,MAAM,UAAd,2BAKN,cAACJ,GAAA,EAAD,UACE,eAACxB,GAAD,WACE,cAACD,GAAD,UACE,6CAEF,iCACE,qBAAK0B,IAAI,2BAA2BC,IAAI,OAG1C,eAACzB,GAAD,WACE,cAACC,GAAD,wBAEA,eAACC,GAAD,WACE,cAACC,GAAD,uBACA,cAACC,GAAD,2BAGF,eAACF,GAAD,WACE,cAACC,GAAD,oBACA,cAACC,GAAD,qBAGF,eAACF,GAAD,WACE,cAACC,GAAD,mBACA,cAACC,GAAD,0BAIJ,cAACC,GAAD,UACE,cAACqB,GAAA,EAAD,CAAQC,MAAM,UAAd,2CC1xCPC,IA9BFhC,UAAOC,IAAV,ihBAEC,qBAAGhH,MAAkBC,OAAO+I,WAzDhB,WACJC,cAATC,KACgBC,eAFI,IAGpB5F,EAAYC,cAAZD,QACF6F,EAAQC,YAAS9F,GACf+F,EAAiBC,cAAjBD,aALmB,EAMS7H,oBAAS,GANlB,gCAQQ+H,mBACjC,kBAAMC,KAAUL,GAAO,SAACM,GAAD,OAAUA,EAAKC,YAAcL,EAAeI,EAAKE,cACxE,CAACN,EAAcF,KAVU,mBAQLS,GARK,WAYHL,mBACtB,kBAAMK,EAAU/H,QAAO,SAAC4H,GAAD,OAAUA,EAAKI,UAAY,IAAIC,IAAUL,EAAKI,SAASE,eAAeC,cAAc,QAC3G,CAACJ,IAGH,OACE,eAACK,GAAA,EAAD,WAgBE,cAAC,GAAD,IACA,cAACC,GAAA,EAAD,S,2DCxCAC,GAAWrD,UAAOsD,IAAV,gHAORC,GAAe,WACnBC,aAAS,CACPC,QAAQ,EACRC,cAAe,IACfC,cAAe,GACfC,QAAS,GACTC,OAAQ,IACRC,OAAQ,CACNC,EAAG,GACHC,EAAG,OA8CMC,GA5BwC,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAClDC,EAAkB/B,eAElB1E,EAhBgB,SAACT,GACvB,IAAKA,EACH,OAAO,KAGT,IAAKA,EAAQmH,KACX,OAAO,KAGT,IAAMC,EAAUC,OAAOC,KAAKC,MAAYC,MAAK,SAACC,GAAD,OAAgBF,KAAWE,KAAgBzH,EAAQmH,KAAK9E,MACrG,OAAOqF,KAAQF,MAAK,SAAC/G,GAAD,OAASA,EAAI2G,UAAYO,OAAOP,MAMxCQ,CADQ3H,cAAZD,SAaR,OAJA1E,qBAAU,WACRuM,iBAAMvB,GAAc,OACnB,IAGD,cAAC,KAAD,CAAOwB,MAAOZ,EAAgB,IAAK,oBAAqBD,UAAWA,EAAnE,SACE,eAAC,IAAD,CAAMc,cAAc,SAASC,WAAW,SAASC,eAAe,SAAhE,UACGxH,GAAO,cAAC2F,GAAD,CAAUzB,IAAG,uBAAkBlE,EAAIC,OAAO+D,MAClD,cAAC,KAAD,CAAMyD,MAAI,EAACpD,MAAM,YAAYqD,SAAS,OAAOC,GAAG,OAAhD,SACGlB,EAAgB,IAAK,4BAExB,cAAC,IAAD,CAAQ9C,QAhBM,WAClB6C,IACA1F,KAAQ8G,KAAK,kBAcT,SAA+BnB,EAAgB,IAAK,qBCX7CoB,GAxCuD,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,iBACjEC,EAAoBC,kBAAO,GAD6D,EAExDhL,oBAAS,GAF+C,mBAEvFiL,EAFuF,KAE1EC,EAF0E,OAGjEC,aAAS,cAAC,GAAD,KAA/BC,EAHuF,oBAIxFC,EAAoBC,eAClB/I,EAAYC,cAAZD,QACAT,EAAYC,cAAZD,QACAyJ,EAAaC,cAAbD,SA8BR,OA3BA1N,qBAAU,WAOJiE,GAAWS,GANO,uCAAG,4BAAAkJ,EAAA,sEACAJ,EAAkBK,QAAQC,SAAS7J,GAAS8J,OAD5C,OACjBD,EADiB,OAEvBT,EAAeS,GAFQ,2CAAH,oDAOpBE,KAED,CAACR,EAAmBvJ,EAASS,EAAS2I,IAGzCrN,qBAAU,WACR,IAAMiO,EAAuBhB,EAAiBiB,MAAK,SAAC9H,GAAD,OAAcsH,EAASS,SAAS/H,OAE/EgH,GAAgBa,GAAyBf,EAAkBkB,UAC7Db,IACAL,EAAkBkB,SAAU,KAE7B,CAACV,EAAUN,EAAaH,EAAkBC,EAAmBK,IAGhEvN,qBAAU,WACRkN,EAAkBkB,SAAU,IAC3B,CAACnK,EAASiJ,IAEN,M,qCChDHmB,GAA4C,CAChDjM,aAAc,GACdC,gBAAiB,cAGNiM,GAAsBlN,wBAAciN,ICT3CE,GAAgB,UAUTC,GAAiB,SAACpM,EAA0BqM,EAAuBlI,GAC9E,IAAMmI,EAAmBtM,EAAa8J,MAAK,SAACyC,GAC1C,OAAOA,EAAY5L,KAAK6L,WAAaH,KAEvC,GAAIC,EAAkB,CACpB,IAAMG,EAAmBH,EAAiB3L,KAAK+L,KAE/C,OADyBD,EAAiBV,SAAS,KAd1B,SAACO,EAA0BnI,GAEtD,IAAMwI,EAAkBR,GAAcS,KAAKN,GAAmB,GACxDO,EAAiBP,EAAiBQ,MAAM,KAAKC,QAAQJ,GACrDK,EAAuB7I,EAAS2I,MAAM,KAAKD,GACjD,OAAOP,EAAiBW,QAAQN,EAAiBK,GAWtCE,CAAqBT,EAAkBtI,GAEzCsI,EAET,OAAOtI,GAGIqF,GAAkB,SAAC6C,EAAuBlI,GAAsB,IACnEnE,EAAiBgC,qBAAWkK,IAA5BlM,aACR,MAAwB,UAApBA,EAAa,GACRmE,EAELnE,EAAaY,OAAS,EACjBwL,GAAepM,EAAcqM,EAAelI,GAE9C,MC7BF,SAASgJ,GAAeC,GAC7B,GAAKA,EACL,OAAIA,EAAeC,WAAaC,KAC1BC,KAAKC,YAAYJ,EAAeK,IAAKC,MAChCC,KAAeC,MAAML,KAAKM,SAAST,EAAeK,IAAKC,OAEzDC,KAAeC,MAAML,KAAKO,OAAO,IAEnCV,EAGMD,I,8ECVTY,GAAwBC,aAASC,MAEjCC,GAAsB7I,kBAAO0I,GAAP1I,CAAH,4QAcnB8I,GAAwBH,aAASI,MAGjCC,GAAsBhJ,mBAAO,cAAGiJ,UAAH,EAAcC,UAAd,EAAyBC,OAAzB,EAAiCC,OAAjC,IAA4CC,EAA5C,mEACjC,cAACP,GAAD,eAA2BO,OAC1BC,MAAM,CACP,aAAc,UAHYtJ,CAAH,4dAQKuJ,aAAe,IAAM,YAKjC,qBAAGJ,OAAuB,WAAa,YAGnD,gBAAGD,EAAH,EAAGA,UAAH,OACAA,GACAM,cADS,+DAEON,MAEhB,gBAAGD,EAAH,EAAGA,UAAH,OACAA,GACAO,cADS,+DAEOP,MAShB,qBAAGhQ,MAAkBwQ,aAAaC,MAGlC,qBAAGzQ,MAAkBwQ,aAAa7L,MAezB,SAAS+L,GAAT,GAOC,IANdP,EAMa,EANbA,OACAlF,EAKa,EALbA,UAKa,IAJb+E,iBAIa,aAHbC,iBAGa,MAHD,GAGC,EAFbU,EAEa,EAFbA,gBACAnP,EACa,EADbA,SAEMoP,EAAiBC,aAAcV,EAAQ,KAAM,CACjDpN,OAAQ,CAAE+N,SAAU,KACpBC,KAAM,CAAEC,QAAS,GACjBC,MAAO,CAAED,QAAS,GAClBE,MAAO,CAAEF,QAAS,KAGpB,OACE,mCACGJ,EAAeO,KACd,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,IAAK/N,EAAd,EAAcA,MAAd,OACE8N,GACE,cAACxB,GAAD,CAA+B0B,MAAOhO,EAAO2H,UAAWA,EAAW0F,gBAAiBA,EAApF,SACE,eAACZ,GAAD,CACEwB,aAAW,iBACXvB,UAAWA,EACXC,UAAWA,EACXC,OAAQsB,YAJV,WAQIb,GAAmBa,YAAW,qBAAKC,SAAU,IAAQ,KAEtDjQ,MAXqB6P,Q,4BC7FzBK,GAAmB3K,UAAO4K,OAAV,oTAKjB,qBAAGC,SAA2B,UAAY,aAC3C,gBAAG5R,EAAH,EAAGA,MAAH,SAAU4R,SAA2B5R,EAAMC,OAAO4R,WAAa7R,EAAMC,OAAO+I,WAIhE,qBAAG4I,SAA2B,KAAO,eAKrC,qBAAGA,SAA2B,KAAO,eAS/CE,GAAqB/K,kBAAOgL,IAAPhL,CAAH,4RAGpB,qBAAG/G,MAAkBC,OAAO+I,WAiBjCgJ,GAAajL,UAAOmG,EAAV,4RAGL,qBAAGlN,MAAkBC,OAAO+I,WAoBhC,SAASiJ,GAAT,GAK8E,IAAD,IAJlFC,cAIkF,MAJzE,SAIyE,EAHlFhP,EAGkF,EAHlFA,KAGkF,IAFlFiP,WAEkF,MAF5E,sBAE4E,EAD/E/B,EAC+E,wCAC5EgC,EAAc1L,uBAClB,SAAC2L,GACkB,WAAXH,GAAuBG,EAAMC,SAAWD,EAAME,SAClDF,EAAMG,mBAGV,CAACN,IAEH,OAAO,cAACF,GAAD,aAAYE,OAAQA,EAAQC,IAAKA,EAAKjP,KAAMA,EAAMkF,QAASgK,GAAiBhC,IAGrF,I,oCAAMqC,GAASC,oBAAH,wHASCC,GAAU5L,UAAOsD,IAAV,oGACFoI,ICjGZG,GAAS7L,UAAOC,IAAV,2GAKC6L,GAAe9L,kBAAO6L,GAAP7L,CAAH,sEAKZ+L,GAAa/L,UAAOC,IAAV,sHAML,gBAAG+L,EAAH,EAAGA,IAAH,OAAsB,OAARA,EAAgB,MAAmB,OAARA,GAAgB,SAAoB,OAARA,GAAgB,QAAWA,KAC/F,gBAAGC,EAAH,EAAGA,QAAH,OAAiBA,GAAWA,KAGhCJ,MChBFK,GAAUlM,UAAOC,IAAV,mEAIPkM,GAAUnM,kBAAO+L,GAAP/L,CAAH,gDAIPoM,GAAgBpM,kBAAO8L,GAAP9L,CAAH,kDAIbqM,GAAgBrM,kBAAOmM,GAAPnM,CAAH,qIASpBsM,GAAsBtM,UAAOC,IAAV,yGAIjBsM,KAUKC,GAAgB,SAAC,GAAD,IAAG/R,EAAH,EAAGA,SAAUyJ,EAAb,EAAaA,UAAb,OAC3B,eAACoI,GAAD,WACE,cAAC,IAAD,UAAU7R,IACV,cAAC,IAAD,CAAY4G,QAAS6C,EAAWuI,QAAQ,OAAxC,SACE,cAAC,IAAD,CAAW1K,MAAM,kBCpCjB2K,GAAqB1M,kBAAO4L,GAAP5L,CAAH,6DACZ,qBAAG2M,QACJ,qBAAGA,QAwBCC,GArBoB,SAAC,GAAiE,IAA/D1I,EAA8D,EAA9DA,UAAW2I,EAAmD,EAAnDA,YAC/C,OACE,cAACX,GAAD,UACE,eAACC,GAAD,WACE,cAAC,GAAD,CAAejI,UAAWA,EAA1B,sCACA,cAACkI,GAAD,UACE,cAACM,GAAD,CAAoB9K,IAAI,0BAA0BC,IAAI,SAAS8K,KAAK,WAEtE,eAACZ,GAAD,CAAYC,IAAI,OAAOC,QAAQ,SAA/B,UACE,cAACF,GAAD,CAAYC,IAAI,OAAOC,QAAQ,SAA/B,SACE,cAAC,KAAD,CAAM7G,SAAS,OAAf,SACE,iCAASyH,QAGb,cAAC,KAAD,CAAMzH,SAAS,OAAf,8D,oBCUK0H,GAvBqB,SAAC,GAAoE,IAAlE5I,EAAiE,EAAjEA,UAAW6I,EAAsD,EAAtDA,QAASC,EAA6C,EAA7CA,KACnD/T,EAAQ0D,qBAAWsQ,gBAEzB,OACE,cAACf,GAAD,UACE,eAACC,GAAD,WACE,cAAC,GAAD,CAAejI,UAAWA,EAA1B,mCACA,cAACkI,GAAD,UACE,cAAC,KAAD,CAAec,YAAa,GAAKP,KAAM,GAAI5K,MAAO9I,EAAMC,OAAO+I,YAEjE,eAAC8J,GAAD,CAAYC,IAAI,MAAMC,QAAQ,SAA9B,UACGc,GAAWC,GACV,cAAC,IAAD,CAAc7Q,KAAMgR,aAAeJ,EAASC,EAAM,eAAlD,6BAEF,cAAC,IAAD,CAAQ3L,QAAS6C,EAAWkJ,GAAG,OAAOlM,UAAU,aAAhD,4BCYKmM,GA1BsB,SAAC,GAOP,IAN7BjE,EAM4B,EAN5BA,OACAlF,EAK4B,EAL5BA,UACAoJ,EAI4B,EAJ5BA,cACAN,EAG4B,EAH5BA,KACAH,EAE4B,EAF5BA,YACAU,EAC4B,EAD5BA,QAEQR,EAAYS,eAAZT,QAER,OAAKA,EAIH,cAACpD,GAAD,CAAOP,OAAQA,EAAQlF,UAAWA,EAAWgF,UAAW,GAAxD,SACGoE,EACC,cAAC,GAAD,CAA4BpJ,UAAWA,EAAW2I,YAAaA,IAC7DG,EACF,cAAC,GAAD,CAA6BD,QAASA,EAASC,KAAMA,EAAM9I,UAAWA,IAEtEqJ,MAVe,MCHRE,GAZkB,SAAC,GAAoF,IAAlF1I,EAAiF,EAAjFA,MAAO2I,EAA0E,EAA1EA,cAAexJ,EAA2D,EAA3DA,UAAWyJ,EAAgD,EAAhDA,WACnE,OACE,eAACzB,GAAD,WACE,eAACC,GAAD,WACE,cAAC,GAAD,CAAejI,UAAWA,EAA1B,SAAsCa,IACrC4I,OAEH,cAACtB,GAAD,CAAeL,IAAI,OAAnB,SAA2B0B,U,WCYlBE,GApBiB,SAAC,GAA0D,IAAxDC,EAAuD,EAAvDA,QAAS3J,EAA8C,EAA9CA,UACpCjL,EAAQ0D,qBAAWsQ,gBACzB,OACE,eAACf,GAAD,WACE,eAACC,GAAD,WACE,cAAC,GAAD,CAAejI,UAAWA,EAA1B,mBACA,eAAC6H,GAAD,CAAYxB,MAAO,CAAEuD,UAAW,GAAIC,QAAS,UAAY/B,IAAI,OAAOC,QAAQ,SAA5E,UACE,cAAC,KAAD,CAAelK,MAAO9I,EAAMC,OAAO8U,QAASzD,MAAO,CAAE2C,YAAa,KAAOP,KAAM,KAC/E,cAAC,KAAD,CAAMvH,SAAS,OAAOrD,MAAM,UAAUwI,MAAO,CAAE0D,UAAW,SAAUC,MAAO,OAA3E,SACGL,UAIP,cAACxB,GAAD,CAAeL,IAAI,OAAnB,SACE,cAAC,IAAD,CAAQ3K,QAAS6C,EAAjB,2BChBOmJ,M,oDCLA,SAASc,GAAYC,EAAsBtJ,GAAuC,IAAjBuJ,IAAgB,yDACxFC,EAAgB5I,mBAGtBnN,qBAAU,WACR+V,EAAc3H,QAAUyH,IACvB,CAACA,IAGJ7V,qBAAU,WACR,SAASgW,IAAQ,IACP5H,EAAY2H,EAAZ3H,QACJA,GACFA,IAIJ,GAAc,OAAV7B,EAAgB,CACduJ,GAASE,IACb,IAAMjP,EAAKkP,YAAYD,EAAMzJ,GAC7B,OAAO,kBAAM2J,cAAcnP,OAG5B,CAACwF,EAAOuJ,ICjBb,I,GAAMK,GAAmB1O,UAAOC,IAAV,2QAGN,SAAC1D,GAAD,OAAYA,EAAMiD,KAAO,UAAY,YACxC,SAACjD,GAAD,OAAYA,EAAMiD,KAAO,EAAI,KAG1B,qBAAGvG,MAAkBC,OAAOyV,oBACtB,qBAAG1V,MAAkBC,OAAO0V,WACtBrF,aAAe,GAAK,YACrC,qBAAGtQ,MAAkBC,OAAO4R,cAIjC+D,GAAmB7O,UAAOC,IAAV,wDAIhB6O,GAAQ9O,UAAOC,IAAV,uvBAYa,qBAAGhH,MAAkBC,OAAO0V,YAElC,qBAAG3V,MAAkBC,OAAOyV,oBA4C/B,SAASI,GAAT,GAAiF,IAAD,IAA7DxB,EAA6D,EAA7DA,QAAS/N,EAAoD,EAApDA,KAAM/E,EAA8C,EAA9CA,SAA8C,IAApCuU,iBAAoC,MAAxB,OAAwB,IAC7CtU,mBAAgC,MADa,mBACtFuU,EADsF,KACpEC,EADoE,OAEnDxU,mBAAgC,MAFmB,mBAEtFyU,EAFsF,KAEvEC,EAFuE,OAGrD1U,mBAAgC,MAHqB,mBAGtF2U,EAHsF,KAGxEC,EAHwE,OAItDC,aAAUN,EAAkBE,EAAe,CAChFH,YACAQ,SAAU,QACVC,UAAW,CACT,CAAErR,KAAM,SAAUsR,QAAS,CAAEC,OAAQ,CAAC,EAAG,KACzC,CAAEvR,KAAM,QAASsR,QAAS,CAAEE,QAASP,OALjCQ,EAJqF,EAIrFA,OAAQC,EAJ6E,EAI7EA,OAAQC,EAJqE,EAIrEA,WAexB,OAFA5B,GALuBxO,uBAAY,WAC7BmQ,GACFA,MAED,CAACA,IACwBtQ,EAAO,IAAM,MAGvC,qCACE,cAACqP,GAAD,CAAkBmB,IAAKd,EAAvB,SAAoDzU,IACpD,cAAC,KAAD,UACE,eAACiU,GAAD,yBAAkBlP,KAAMA,EAAMwQ,IAAKZ,EAAyB7E,MAAOsF,EAAOI,QAAYF,EAAWE,QAAjG,cACG1C,EACD,cAACuB,GAAD,aACE5N,UAAS,oCAAW6O,EAAWE,cAAtB,aAAW,EAAoB,gCAA/B,QAA2D,IACpED,IAAKV,EACL/E,MAAOsF,EAAOK,OACVH,EAAWG,iBC7G3B,I,GAAMC,GAAmBnQ,UAAOC,IAAV,mIAYP,SAASmQ,GAAT,GAAmD,IAAhC/I,EAA+B,EAA/BA,KAASgC,EAAsB,yBAC/D,OAAO,cAAC0F,GAAD,aAASxB,QAAS,cAAC4C,GAAD,UAAmB9I,KAA8BgC,IAGrE,SAASgH,GAAT,GAA8E,IAAlD5V,EAAiD,EAAjDA,SAAa4O,EAAoC,+BAC1D3O,oBAAS,GADiD,mBAC3E8E,EAD2E,KACrEC,EADqE,KAE5E6Q,EAAO3Q,uBAAY,kBAAMF,GAAQ,KAAO,CAACA,IACzC8Q,EAAQ5Q,uBAAY,kBAAMF,GAAQ,KAAQ,CAACA,IACjD,OACE,cAAC2Q,GAAD,2BAAa/G,GAAb,IAAmB7J,KAAMA,EAAzB,SACE,qBAAKgR,aAAcF,EAAMG,aAAcF,EAAvC,SACG9V,OCtBT,IAAMiW,GAAkB1Q,UAAOC,IAAV,4TAUP,qBAAGhH,MAAkBC,OAAO4R,cAS3B,SAAS6F,GAAT,GAAqD,IAA3BtJ,EAA0B,EAA1BA,KAA0B,EACzC3M,oBAAkB,GADuB,mBAC1D8E,EAD0D,KACpDC,EADoD,KAG3D6Q,EAAO3Q,uBAAY,kBAAMF,GAAQ,KAAO,CAACA,IACzC8Q,EAAQ5Q,uBAAY,kBAAMF,GAAQ,KAAQ,CAACA,IAEjD,OACE,sBAAM8K,MAAO,CAAEqG,WAAY,GAA3B,SACE,cAACR,GAAD,CAAS/I,KAAMA,EAAM7H,KAAMA,EAA3B,SACE,cAACkR,GAAD,CAAiBrP,QAASiP,EAAME,aAAcF,EAAMG,aAAcF,EAAlE,SACE,cAAC,KAAD,CAAU5D,KAAM,W,8DC/BpBkE,GAAM7Q,kBAAO8Q,OAAP9Q,CAAH,4JAIQ,qBAAG+Q,OAAsB,YAC7B,qBAAGhD,WACJ,qBAAGiD,UACI,qBAAGC,gBAGTC,GAAalR,kBAAO6Q,GAAP7Q,CAAH,iEAIVmR,GAAUnR,UAAOC,IAAV,0EAKPmR,GAAUpR,kBAAO6Q,GAAP7Q,CAAH,0IAER,gBAAGgM,EAAH,EAAGA,IAAH,OAAaA,GAAG,WAAQA,MACf,gBAAGC,EAAH,EAAGA,QAAH,OAAiBA,GAAWA,KAGnC,qBAAGD,OAIJqF,GAAWrR,kBAAO6Q,GAAP7Q,CAAH,qEAET,gBAAGgM,EAAH,EAAGA,IAAH,OAAaA,GAAG,WAAQA,MAGrB6E,MC9BF3E,GAAUlM,UAAOC,IAAV,qDAIPqR,GAAetR,UAAOC,IAAV,wDAGrB,qBAAGsR,UAEC/H,cADK,gIAOL,QAGKgI,GAAexR,UAAOC,IAAV,wFAGH,qBAAGhH,MAAkBC,OAAO0V,YAGrC6C,GAAiBzR,UAAOC,IAAV,mDAIdyR,GAAY1R,kBAAO2R,KAAP3R,CAAH,6CACX,gBAAG/G,EAAH,EAAGA,MAAO2Y,EAAV,EAAUA,SAAV,OACM,IAAbA,GAA+B,IAAbA,EACd3Y,EAAMC,OAAO8U,QACA,IAAb4D,EACA3Y,EAAMC,OAAO2Y,QACA,IAAbD,EACA3Y,EAAMC,OAAOmO,KACbpO,EAAMC,OAAO4Y,WAGRC,GAAuB/R,UAAO4K,OAAV,yeAGR,qBAAG3R,MAAkBC,OAAOyV,oBAS1C,qBAAG1V,MAAkBC,OAAO4R,cAUf,qBAAG7R,MAAkBC,OAAO0V,YAMvCoD,GAAOhS,UAAOiS,KAAV,sUAqBXC,GAAyBlS,UAAOC,IAAV,mUACN,gBAAGhH,EAAH,EAAGA,MAAH,OAAesQ,aAAe,GAAKtQ,EAAMC,OAAO8U,YAQ3D,qBAAG/U,MAAkBC,OAAO8U,WAUjCmE,GAAsCnS,UAAOC,IAAV,kNACnB,gBAAGhH,EAAH,EAAGA,MAAH,OAAesQ,aAAe,GAAKtQ,EAAMC,OAAO8U,YAU/D,SAASoE,GAAT,GAA0D,IAA7BzW,EAA4B,EAA5BA,MAClC,OACE,eAACuW,GAAD,WACE,cAACC,GAAD,UACE,cAAC,KAAD,CAAexF,KAAM,OAEvB,4BAAIhR,OAKH,IAAM0W,GAAwBrS,kBAAO+L,GAAP/L,CAAH,uIACZ,gBAAG/G,EAAH,EAAGA,MAAH,OAAesQ,aAAe,GAAKtQ,EAAMC,OAAO+I,YAC3D,qBAAGhJ,MAAkBC,OAAO+I,WCjIxB,SAASqQ,GAAT,GAA2E,IAA3CC,EAA0C,EAA1CA,YAC7C,OACE,cAACb,GAAD,CAAWtM,SAAS,OAAOwM,SAAUY,aAAgBD,GAArD,SACGA,EAAeA,EAAYE,SAASC,MAAY,SAAjC,UAA+CH,EAAYI,QAAQ,GAAnE,KAA4E,MCMnF,SAASC,GAAT,GAYX,IAAD,QAXD7b,EAWC,EAXDA,MACA8b,EAUC,EAVDA,UACAC,EASC,EATDA,gBACAC,EAQC,EARDA,iBACAC,EAOC,EAPDA,gBAOC,EACuCtY,oBAAkB,GADzD,mBACMuY,EADN,KACoBC,EADpB,KAEKC,EAA0B1Q,mBAAQ,kBAAM2Q,aAA+Brc,EAAO+b,KAAkB,CACpGA,EACA/b,IAJD,EAMgD0L,mBAAQ,kBAAM4Q,aAA2Btc,KAAQ,CAACA,IAA3Fuc,EANP,EAMOA,sBAAuBC,EAN9B,EAM8BA,cACzB3B,EAAWY,aAAgBc,GAEjC,OACE,qCACE,eAACvH,GAAD,CAAYC,IAAI,MAAhB,UACE,eAACkF,GAAD,CAAYH,MAAM,SAAlB,UACE,cAAC,KAAD,CAAM3L,SAAS,OAAf,mBACA,eAAC,KAAD,CACEA,SAAS,OACTmF,MAAO,CACLrF,eAAgB,SAChBD,WAAY,SACZuO,QAAS,OACTvF,UAAW,QACXwF,YAAa,MACbC,WAAY,KARhB,UAWGC,aAAqB5c,EAAOkc,GAC7B,cAAClB,GAAD,CAAsB1Q,QAAS,kBAAM6R,GAAiBD,IAAtD,SACE,cAAC,KAAD,CAAQtG,KAAM,aAKpB,eAACuE,GAAD,WACE,eAACG,GAAD,WACE,cAAC,KAAD,CAAMjM,SAAS,OAAf,SACGrO,EAAM6c,YAAcC,KAAUC,YAAc,mBAAqB,iBAEpE,cAACnD,GAAD,CAAgBtJ,KAAK,4GAEvB,eAACgK,GAAD,WACE,cAAC,KAAD,CAAMjM,SAAS,OAAf,SACGrO,EAAM6c,YAAcC,KAAUC,YAA9B,oBACGX,EAAwBY,KAAMC,eADjC,aACG,EAAuCC,cAAc,UADxD,QAC8D,IAD9D,oBAEGd,EAAwBY,KAAMG,cAFjC,aAEG,EAAsCD,cAAc,UAFvD,QAE6D,MAEhE,cAAC,KAAD,CAAM7O,SAAS,OAAOwL,WAAW,MAAjC,SACG7Z,EAAM6c,YAAcC,KAAUC,YAC3B/c,EAAMod,aAAanM,SAASzX,OAC5BwG,EAAMqd,YAAYpM,SAASzX,eAIrC,eAAC2gB,GAAD,WACE,eAACG,GAAD,WACE,cAAC,KAAD,CAAMjM,SAAS,OAAf,0BACA,cAACuL,GAAD,CAAgBtJ,KAAK,iFAEvB,cAACiL,GAAD,CAAsBC,YAAae,OAErC,eAACpC,GAAD,WACE,eAACG,GAAD,WACE,cAAC,KAAD,CAAMjM,SAAS,OAAf,oCACA,cAACuL,GAAD,CAAgBtJ,KAAK,sHAEvB,cAAC,KAAD,CAAMjC,SAAS,OAAf,SACGmO,EAAa,iBAAMA,QAAN,IAAMA,OAAN,EAAMA,EAAeU,cAAc,GAAnC,YAA6Cld,EAAMqd,YAAYpM,SAASzX,QAAW,YAKvG,eAAC6gB,GAAD,WACE,cAAC,IAAD,CACAlQ,UAAU,aACRG,QAASwR,EACThI,SAAUmI,EACVvG,QAASmF,EAAW,EAAI,SAAW,UACnCxE,GAAG,OACH9N,GAAG,uBANL,SAQGsS,EAAW,EAAI,cAAgB,iBAGjCmB,EAAmB,cAACX,GAAD,CAAmBzW,MAAOoX,IAAuB,W,sDClG7E,IAAMsB,GAAgB,IAAIC,YAMX,SAASC,GAAiBC,GACvC,IAAMC,EAjBD,SAAyBC,GAE9B,IADAA,EAAMA,EAAIC,WAAW,MAAQD,EAAIE,OAAO,GAAKF,GACrCnZ,OAAS,IAAM,EAAG,MAAM,IAAIsZ,MAAM,8CAE1C,IADA,IAAMC,EAAM,IAAIC,WAAWL,EAAInZ,OAAS,GAC/ByZ,EAAI,EAAGA,EAAIF,EAAIvZ,OAAQyZ,IAC9BF,EAAIE,GAAK/a,SAASya,EAAIE,OAAW,EAAJI,EAAO,GAAI,IAE1C,OAAOF,EAUMG,CAAgBT,GACvBU,EAAQC,oBAASV,GACvB,OAAQS,GACN,IAAK,UACH,IAAM5Z,EAAO8Z,oBAASX,GAChBY,EAAM,IAAIC,KAAIha,GACpB,MAAM,UAAN,OAAiBia,uBAAYF,EAAIG,YAEnC,IAAK,UACH,IAAMla,EAAO8Z,oBAASX,GAChBY,EAAM,IAAIC,KAAIha,GACdka,EAAYC,kBAAOJ,EAAIG,WAC7B,MAAuB,aAAnBA,EAAUpX,KACN,UAAN,OAAiBiW,GAAcoB,OAAOD,EAAUE,QAAQC,QAElD,UAAN,OAAiBJ,uBAAYF,EAAIG,YAGrC,QACE,MAAM,IAAIX,MAAJ,8BAAiCK,KCxC7C,IAAMU,GAAiB,kCAEhB,SAASC,GAAgBC,GAC9B,IAAMC,EAAQD,EAAWC,MAAMH,IAC/B,GAAKG,EACL,MAAO,CAAEC,QAAQ,GAAD,OAAKD,EAAM,GAAGE,cAAd,OAAkCC,QAASH,EAAM,ICDpD,SAASI,GAAUC,GAAwB,IAAD,IAEvD,OADiBA,EAAI3O,MAAM,KAAK,GAAGwO,eAEjC,IAAK,QACH,MAAO,CAACG,GACV,IAAK,OACH,MAAO,CAAC,QAAD,OAAWA,EAAIxB,OAAO,IAAMwB,GACrC,IAAK,OACH,IAAMpJ,EAAI,UAAGoJ,EAAIL,MAAM,8BAAb,aAAG,EAAmC,GAChD,MAAO,CAAC,oCAAD,OAAqC/I,EAArC,oCAAsEA,EAAtE,MACT,IAAK,OACH,IAAM5O,EAAI,UAAGgY,EAAIL,MAAM,8BAAb,aAAG,EAAmC,GAChD,MAAO,CAAC,oCAAD,OAAqC3X,EAArC,oCAAsEA,EAAtE,MACT,QACE,MAAO,I,0BCdE,SAASiY,GAAOC,GAC7B,MAAO,SAASC,KAAKD,GCCR,SAASE,GAAiBJ,GACvC,IAAMK,EAAMhU,mBAAQ,kBAAO2T,EAAMP,GAAgBO,QAAOlb,IAAY,CAACkb,IAC/DM,ECCO,SAA2BV,GAA4E,IAAD,MAC7GW,EAAkBlU,mBAAQ,WAC9B,IAAKuT,EAAS,MAAO,MAAC9a,GACtB,IACE,OAAO8a,EAAU,CAACY,oBAASZ,IAAY,MAAC9a,GACxC,MAAOS,GACP,MAAO,MAACT,MAET,CAAC8a,IACEa,EAAoBC,cAAwB,GAC5CC,EAAwBC,aAAoBH,EAAmB,WAAYF,GAC3EM,EAAe,UAAGF,EAAsBG,cAAzB,aAAG,EAA+B,GACjDC,EAAmBC,aACvBH,GAAmBZ,GAAOY,QAAmB/b,EAAY+b,GACzD,GAEIzC,EAAcwC,aAAoBG,EAAkB,cAAeR,GAEzE,MAAO,CACLnC,YAAW,oBAAEA,EAAY0C,cAAd,aAAE,EAAqB,UAAvB,QAA6B,KACxCG,QAASN,EAAsBM,SAAW7C,EAAY6C,SDrB5BC,CAAiB,OAACb,QAAD,IAACA,OAAD,EAACA,EAAKT,SACnD,OAAOvT,mBAAQ,WACb,OAAIgU,EACKC,EAAoBlC,YAAc2B,GAAU5B,GAAiBmC,EAAoBlC,cAAgB,GAEjG4B,EAAMD,GAAUC,GAAO,KAE/B,CAACK,EAAKC,EAAoBlC,YAAa4B,IEDrC,IAAMmB,GAAb,kDAKE,WAAYC,EAAsBC,GAAkB,IAAD,8BACjD,cAAMD,EAAUzK,QAASyK,EAAU9mB,QAAS8mB,EAAU3mB,SAAU2mB,EAAUjnB,OAAQinB,EAAUpZ,OAL9EoZ,eAImC,IAFnCC,UAEmC,EAEjD,EAAKD,UAAYA,EACjB,EAAKC,KAAOA,EAHqC,EALrD,yCAWE,WACE,OAAO5Y,KAAK2Y,UAAUE,YAZ1B,GAAsCC,MAqBhCC,IAA2B,sBAC9BC,KAAQC,QAAU,IADY,gBAE9BD,KAAQE,WAAa,IAFS,IAK3BC,GACe,qBAAZC,QAA0B,IAAIA,QAAwC,KA+BxE,SAASC,GAAaC,GAC3B,IAAMC,EAAQlZ,aAAkD,SAAAjB,GAAK,OAAIA,EAAMma,MAAMC,SACrF,OAAO5V,mBAAQ,WAAO,IAAD,EACnB,IAAK0V,EAAK,OAAOP,GACjB,IAAMjR,EAAO,UAAGyR,EAAMD,UAAT,aAAG,EAAYxR,QAC5B,IAAKA,EAAS,OAAOiR,GACrB,IACE,OApCC,SAAwBU,GAC7B,IAAMpB,EAAM,OAAGc,SAAH,IAAGA,QAAH,EAAGA,GAAWO,IAAID,GAC9B,GAAIpB,EAAQ,OAAOA,EAEnB,IAAM9M,EAAMkO,EAAKjoB,OAAOmoB,QACtB,SAACC,EAAUjB,GAAe,IAAD,MACjBC,EAAe,oBACnBD,EAAUC,YADS,iBACnB,EACIrN,KAAI,SAAAsO,GAAU,IAAD,EACb,GAAI,UAACJ,EAAKb,YAAN,aAAC,EAAYiB,GACjB,OAAO,2BAAKJ,EAAKb,KAAKiB,IAAtB,IAA8BpZ,GAAIoZ,cAJnB,aACnB,EAKI3d,QAAO,SAACgJ,GAAD,OAAqB4U,QAAQ5U,aANrB,QAM4B,GAC3CzJ,EAAQ,IAAIid,GAAiBC,EAAWC,GAC9C,QAA+Cvc,IAA3Cud,EAASne,EAAMyS,SAASzS,EAAM5J,SAAwB,MAAMmkB,MAAM,qBACtE,OAAO,2BACF4D,GADL,mBAEGne,EAAMyS,QAFT,2BAGO0L,EAASne,EAAMyS,UAHtB,mBAIKzS,EAAM5J,QAAU4J,QAfb,eAmBLsd,KAGP,OADS,OAATI,SAAS,IAATA,OAAWY,IAAIN,EAAMlO,GACdA,EAUIyO,CAAelS,GACtB,MAAOhL,GAEP,OADAD,QAAQC,MAAM,yCAA0CA,GACjDic,MAER,CAACQ,EAAOD,IAGN,SAASW,KACd,OAAO5Z,aAA4D,SAAAjB,GAAK,OAAIA,EAAMma,MAAMW,mBAGnF,SAASC,KACd,OAAOd,GAAaY,MCzFtB,I,GAAMG,GAA6C,GAYpC,SAASC,GAAT,GAAkD,IAAlCC,EAAiC,EAAjCA,KAAMtX,EAA2B,EAA3BA,IAAQwH,EAAmB,iCAC1C3O,mBAAiB,GAA5B0e,EADqD,oBAGxDxX,EAA0BuX,EAAK1U,MAAK,SAAC4U,GAAD,OAAQJ,GAASI,MAE3D,OAAIzX,EAEA,+CACMyH,GADN,IAEExH,IAAKA,EACLD,IAAKA,EACL0X,QAAS,WACH1X,IAAKqX,GAASrX,IAAO,GACzBwX,GAAQ,SAACpE,GAAD,OAAOA,EAAI,SAMpB,cAAC,KAAD,eAAgB3L,IC/BzB,I,SAKekQ,GALEvZ,kBAAOkZ,GAAPlZ,CAAH,6DACH,qBAAG2M,QACF,qBAAGA,QCGT6M,GAAkB,SAAC9oB,GAAD,0GACuEA,EADvE,cAGlB+oB,GAAgBzZ,UAAOsD,IAAV,uIACR,qBAAGqJ,QACF,qBAAGA,QAKT+M,GAAa1Z,kBAAOkZ,GAAPlZ,CAAH,6DACL,qBAAG2M,QACF,qBAAGA,QAGA,SAASgN,GAAT,GAQX,IAAD,IAPD3R,EAOC,EAPDA,SAOC,IAND2E,YAMC,MANM,OAMN,EALDpC,EAKC,EALDA,MAMMqP,EAAepD,GAAiBxO,aAAoBuP,GAAmBvP,EAAS0P,aAAUxc,GAE1Fie,EAAiB1W,mBAAQ,WAC7B,OAAIuF,IAAaC,KAAc,GAE3BD,aAAoB2P,KAClB3P,aAAoBuP,GAChB,GAAN,oBAAWqC,GAAX,0CAA0C5R,QAA1C,IAA0CA,OAA1C,EAA0CA,EAAUzX,cAApD,QAA8D,QAA9D,QAA6EipB,GAAgBxR,EAAStX,WAGjG,CAAC,iBAAD,wBAAkBsX,QAAlB,IAAkBA,OAAlB,EAAkBA,EAAUzX,cAA5B,QAAsC,QAAtC,QAAqDipB,GAAgBxR,EAAStX,UAEhF,GAPyB,IAAD,EACa,IAO3C,CAACsX,EAAU4R,IAEd,OAAI5R,IAAaC,KACR,cAACwR,GAAD,CAAe7X,IAAI,wBAAwB+K,KAAMA,EAAMpC,MAAOA,KAGhE,OAACvC,QAAD,IAACA,OAAD,EAACA,EAAkBzX,QACxB,cAAC,GAAD,CAAUoc,KAAMA,EAAMwM,KAAMA,EAAMtX,IAAG,2BAAKmG,QAAL,IAAKA,OAAL,EAAKA,EAAUzX,cAAf,QAAyB,QAAzB,SAAyCga,MAAOA,IAErF,cAACmP,GAAD,CAAY/M,KAAMA,EAAMwM,KAAMA,EAAMtX,IAAG,2BAAKmG,QAAL,IAAKA,OAAL,EAAKA,EAAUzX,cAAf,QAAyB,QAAzB,SAAyCga,MAAOA,ICzC3F,IAAMsP,GAAgB7Z,kBAAO2R,KAAP3R,CAAH,mIAKN,qBAAG/G,MAAkBC,OAAO+I,WAK1B,SAAS6X,GAAT,GAYX,IAAD,IAXD/iB,EAWC,EAXDA,MACA+b,EAUC,EAVDA,gBACAiH,EASC,EATDA,UACAC,EAQC,EARDA,kBACAC,EAOC,EAPDA,gBAQM9G,EAA0B1Q,mBAAQ,kBAAM2Q,aAA+Brc,EAAO+b,KAAkB,CACpG/b,EACA+b,IAEMQ,EAA0B7Q,mBAAQ,kBAAM4Q,aAA2Btc,KAAQ,CAACA,IAA5Euc,sBACF4G,EAAsB1H,aAAgBc,GAEtCra,EAAQ0D,qBAAWsQ,gBAEzB,OACE,eAAClB,GAAD,CAAYC,IAAI,KAAKzB,MAAO,CAAEuD,UAAW,QAAzC,UACE,eAACoD,GAAD,CAAYH,MAAM,WAAlB,UACE,eAACM,GAAD,CAAUrF,IAAI,MAAd,UACE,cAAC2N,GAAD,CAAc3R,SAAUjR,EAAMqd,YAAYpM,SAAU2E,KAAK,OAAOpC,MAAO,CAAE4P,YAAa,UACtF,cAAC,KAAD,CACE/U,SAAS,OACTrD,MAAOiY,GAAqBjjB,EAAM6c,YAAcC,KAAUuG,aAAenhB,EAAMC,OAAO+I,QAAU,OAFlG,SAIGlL,EAAMqd,YAAYH,cAAc,QAGrC,cAAC5C,GAAD,CAAUrF,IAAI,MAAd,SACE,cAAC,KAAD,CAAM5G,SAAS,OAAOmF,MAAO,CAAEqG,WAAY,OAAQ8C,WAAY,KAA/D,SACG3c,EAAMqd,YAAYpM,SAASzX,cAIlC,cAAC8gB,GAAD,UACE,cAAC,KAAD,CAAW1E,KAAK,KAAK5K,MAAO9I,EAAMC,OAAO4R,WAAYP,MAAO,CAAEqG,WAAY,MAAOyJ,SAAU,YAE7F,eAACnJ,GAAD,CAAYH,MAAM,WAAlB,UACE,eAACM,GAAD,CAAUrF,IAAI,MAAd,UACE,cAAC2N,GAAD,CAAc3R,SAAUjR,EAAMod,aAAanM,SAAU2E,KAAK,OAAOpC,MAAO,CAAE4P,YAAa,UACvF,cAAC,KAAD,CACE/U,SAAS,OACTmF,MAAO,CAAEqG,WAAY,OAAQ8C,WAAY,KACzC3R,MACEmY,EAAsB,EAClBjhB,EAAMC,OAAO8U,QACbgM,GAAqBjjB,EAAM6c,YAAcC,KAAUC,YACnD7a,EAAMC,OAAO+I,QACb,OARR,SAWGlL,EAAMod,aAAaF,cAAc,QAGtC,cAAC5C,GAAD,CAAUrF,IAAI,MAAd,SACE,cAAC,KAAD,CAAM5G,SAAS,OAAOmF,MAAO,CAAEqG,WAAY,OAAQ8C,WAAY,KAA/D,SACG3c,EAAMod,aAAanM,SAASzX,cAIlCypB,EACC,cAAC3H,GAAD,CAAuBpG,QAAQ,aAAaD,IAAI,MAAhD,SACE,eAACkF,GAAD,WACE,eAACG,GAAD,WACE,cAAC,KAAD,CAAe1E,KAAM,GAAIpC,MAAO,CAAE4P,YAAa,MAAOE,SAAU,MAChE,cAAC,KAAD,CAAMtY,MAAM,UAAZ,+BAEF,cAAC,IAAD,CAAQV,QAAS4Y,EAAjB,yBAGF,KACJ,cAAClO,GAAD,CAAYE,QAAQ,aAAaD,IAAI,KAAKzB,MAAO,CAAEwD,QAAS,YAA5D,SACGhX,EAAM6c,YAAcC,KAAUC,YAC7B,eAAC+F,GAAD,6DAEE,2CACG1G,EAAwBY,KAAMC,eADjC,aACG,EAAuCC,cAAc,GADxD,IAC6Dld,EAAMod,aAAanM,SAASzX,UAExF,sCAGH,eAACspB,GAAD,wDAEE,2CACG1G,EAAwBY,KAAMG,cADjC,aACG,EAAsCD,cAAc,GADvD,IAC4Dld,EAAMqd,YAAYpM,SAASzX,UAEtF,wCAIQ,OAAdwpB,EACC,cAAChO,GAAD,CAAYE,QAAQ,aAAaD,IAAI,KAAKzB,MAAO,CAAEwD,QAAS,YAA5D,SACE,eAAC,KAAD,oCACyB,IACvB,mBAAGhJ,MAAOgV,EAAV,SAAsBO,aAAUP,GAAaQ,aAAeR,GAAaA,SAG3E,QCtGK,SAASS,GAAT,GAwBX,IAAD,YAvBDzjB,EAuBC,EAvBDA,MACA0jB,EAsBC,EAtBDA,cACAR,EAqBC,EArBDA,gBACAnH,EAoBC,EApBDA,gBACAD,EAmBC,EAnBDA,UACA3O,EAkBC,EAlBDA,UACA6V,EAiBC,EAjBDA,UACAhH,EAgBC,EAhBDA,iBACA3J,EAeC,EAfDA,OACAkE,EAcC,EAdDA,cACAoN,EAaC,EAbDA,OAcMV,EAAoBvX,mBACxB,kBAAMkW,QAAQ5hB,GAAS0jB,IApCsBE,EAoC2BF,GApC1CG,EAoCmC7jB,GAlC1D6c,YAAc+G,EAAO/G,YAC3BiH,aAAeD,EAAOxG,YAAYpM,SAAU2S,EAAOvG,YAAYpM,YAC/D4S,EAAOxG,YAAY0G,QAAQH,EAAOvG,eAClCyG,aAAeD,EAAOzG,aAAanM,SAAU2S,EAAOxG,aAAanM,YACjE4S,EAAOzG,aAAa2G,QAAQH,EAAOxG,gBANxC,IAAkCyG,EAAeD,IAqC7C,CAACF,EAAe1jB,IAGZgkB,EAAcpb,uBAAY,WAC9B,OAAO5I,EACL,cAAC+iB,GAAD,CACE/iB,MAAOA,EACP+b,gBAAiBA,EACjBiH,UAAWA,EACXC,kBAAmBA,EACnBC,gBAAiBA,IAEjB,OACH,CAACnH,EAAiBmH,EAAiBF,EAAWC,EAAmBjjB,IAE9DikB,EAAcrb,uBAAY,WAC9B,OAAO5I,EACL,cAAC6b,GAAD,CACEC,UAAWA,EACX9b,MAAOA,EACPic,gBAAiBgH,EACjBjH,iBAAkBA,EAClBD,gBAAiBA,IAEjB,OACH,CAACA,EAAiBD,EAAWmH,EAAmBjH,EAAkBhc,IAG/D8V,EAAW,0BAAe9V,QAAf,IAAeA,GAAf,UAAeA,EAAOqd,mBAAtB,aAAe,EAAoBH,cAAc,GAAjD,mBACfld,QADe,IACfA,GADe,UACfA,EAAOqd,mBADQ,iBACf,EAAoBpM,gBADL,aACf,EAA8BzX,OADf,uBAETwG,QAFS,IAETA,GAFS,UAETA,EAAOod,oBAFE,aAET,EAAqBF,cAAc,GAF1B,mBAEgCld,QAFhC,IAEgCA,GAFhC,UAEgCA,EAAOod,oBAFvC,iBAEgC,EAAqBnM,gBAFrD,aAEgC,EAA+BzX,QAE1E0qB,EAAsBtb,uBAC1B,kBACEoT,EACE,cAAC,GAAD,CAAyB7O,UAAWA,EAAW2J,QAASkF,IAExD,cAAC,GAAD,CACEhO,MAAM,eACNb,UAAWA,EACXyJ,WAAYoN,EACZrN,cAAesN,MAGrB,CAAC9W,EAAW8W,EAAaD,EAAahI,IAGxC,OACE,cAAC,GAAD,CACE3J,OAAQA,EACRlF,UAAWA,EACXoJ,cAAeA,EACfN,KAAM0N,EACNnN,QAAS0N,EACTpO,YAAaA,I,sDChFnB,SAASqO,GAAe5gB,GACtB,MAAO,CACLyS,QAASzS,EAAMyS,QACfrc,QAAS4J,EAAM5J,QACfG,SAAUyJ,EAAMzJ,SAChBN,OAAQ+J,EAAM/J,OACd6N,KAAM9D,EAAM8D,MAIhB,SAAS+c,GAAiBC,GACxB,OAAO,IAAIzD,KACTyD,EAAgBrO,QAChBqO,EAAgB1qB,QAChB0qB,EAAgBvqB,SAChBuqB,EAAgB7qB,OAChB6qB,EAAgBhd,MAoDb,SAASid,KACd,OAAOnc,aAA0D,SAACjB,GAAD,OAAWA,EAAMqd,KAAKC,kBAclF,SAASC,KACd,IAAMC,EAAWC,cAYjB,MAAO,CAXuBxc,aAAiE,SAACjB,GAC9F,OAAOA,EAAMqd,KAAKK,yBAGahc,uBAC/B,SAACic,GACCH,EAASI,aAA4B,CAAEF,sBAAuBC,OAEhE,CAACH,KAME,SAASK,KACd,IAAML,EAAWC,cAYjB,MAAO,CAXcxc,aAAwD,SAACjB,GAC5E,OAAOA,EAAMqd,KAAKS,gBAGIpc,uBACtB,SAACqc,GACCP,EAASQ,aAAmB,CAAEF,aAAcC,OAE9C,CAACP,KA0BE,SAASS,KAA+B,IACrCnP,EAAYS,eAAZT,QACFoP,EAAsBjd,aAAkD,qBAAGoc,KAAQjrB,UAEzF,OAAOoS,mBAAQ,WAAO,IAAD,EACnB,OAAKsK,EACEzI,OAAO8X,OAAP,UAAcD,EAAoBpP,UAAlC,QAAyD,IAAI3C,IAAI+Q,IADnD,KAEpB,CAACgB,EAAqBpP,IA0BpB,SAASsP,GAAT,GAAsE,IAAD,mBAAxCC,EAAwC,KAAhCC,EAAgC,KAC1E,OAAO,IAAI5E,KAAM2E,EAAOvP,QAASyP,KAAKC,WAAWH,EAAQC,GAAS,GAAI,UAAW,YCtL5E,SAASG,KAA8C,IACpD3P,EAAYS,eAAZT,QACF4P,EAAkBT,KAClBU,EAAY5D,KAElB,OAAOvW,mBAAQ,WACb,OAAKsK,EAEH4P,EAEGnE,QACC,SAACC,EAAUne,GAET,OADAme,EAASne,EAAM5J,SAAW4J,EACnBme,IALb,eASSmE,EAAU7P,KAXA,KAcpB,CAACA,EAAS4P,EAAiBC,IAUhC,IAAMC,GAAgB,sBACtB,SAASC,GAAqBC,EAAyBC,EAA6BC,GAClF,OAAOF,GAAOA,EAAIxhB,OAAS,EACvBwhB,EACAC,GAAWH,GAActG,KAAKyG,GAC9BE,aAAmBF,GACnBC,EAMC,SAASE,GAASC,GAAkD,IACjErQ,EAAYS,eAAZT,QACF1c,EAASqsB,KAEThsB,EAAU4pB,aAAU8C,GAEpBC,EAAgBC,aAAiB5sB,QAAWwK,GAAW,GACvDqiB,EAAuBC,aAAwB9sB,QAAWwK,GAAW,GACrEZ,EAA2B5J,EAAUL,EAAOK,QAAWwK,EAEvDuiB,EAAYzG,aAAoB1c,OAAQY,EAAYmiB,EAAe,YAAQniB,EAAWwiB,MACtFC,EAAmB3G,aACvB1c,OAAQY,EAAYqiB,EACpB,YACAriB,EACAwiB,MAEIntB,EAASymB,aAAoB1c,OAAQY,EAAYmiB,EAAe,cAAUniB,EAAWwiB,MACrFE,EAAgB5G,aAAoB1c,OAAQY,EAAYqiB,EAAsB,cAAUriB,EAAWwiB,MACnG7sB,EAAWmmB,aAAoB1c,OAAQY,EAAYmiB,EAAe,gBAAYniB,EAAWwiB,MAE/F,OAAOjb,mBAAQ,WACb,GAAInI,EAAO,OAAOA,EAClB,GAAKyS,GAAYrc,EAAjB,CACA,GAAIG,EAASwmB,SAAW9mB,EAAO8mB,SAAWoG,EAAUpG,QAAS,OAAO,KAC9C,IAAD,QAArB,GAAIxmB,EAASqmB,OACX,OAAO,IAAIS,KACT5K,EACArc,EACAG,EAASqmB,OAAO,GAChB4F,GAAoB,UAACvsB,EAAO2mB,cAAR,aAAC,EAAgB,GAAjB,UAAqB0G,EAAc1G,cAAnC,aAAqB,EAAuB,GAAI,WACpE4F,GAAoB,UAACW,EAAUvG,cAAX,aAAC,EAAmB,GAApB,UAAwByG,EAAiBzG,cAAzC,aAAwB,EAA0B,GAAI,qBAI7E,CACDxmB,EACAqc,EACAlc,EAASwmB,QACTxmB,EAASqmB,OACT3mB,EAAO8mB,QACP9mB,EAAO2mB,OACP0G,EAAc1G,OACd5c,EACAmjB,EAAUpG,QACVoG,EAAUvG,OACVyG,EAAiBzG,SAId,SAAS2G,GAAYC,GAC1B,IAAMC,EAAsC,SAApB,OAAVD,QAAU,IAAVA,OAAA,EAAAA,EAAYE,eACpB1jB,EAAQ6iB,GAASY,OAAQ7iB,EAAY4iB,GAC3C,OAAOC,EAAQ9V,KAAQ3N,EC3DlB,SAAS2jB,GACdvtB,EACAL,GAEA,IAAM6tB,EAA2Bzb,mBAC/B,yCAAMpS,QAAN,IAAMA,OAAN,EAAMA,EAAQ0K,QAAO,SAACojB,GAAD,OAAqD,IAA1B7D,aAAS,OAAC6D,QAAD,IAACA,OAAD,EAACA,EAAGztB,mBAA7D,QAAoF,KACpF,CAACL,IAGG+tB,EAA0B3b,mBAAQ,kBAAMyb,EAAgB9T,KAAI,SAAAiU,GAAE,OAAIA,EAAG3tB,aAAU,CAACwtB,IAEhFI,EAAWC,aAA8BH,EAAyBI,KAAiB,YAAa,CAAC9tB,IAEjG+tB,EAAsBhc,mBAAQ,kBAAM6b,EAAS7X,MAAK,SAAAiY,GAAS,OAAIA,EAAUrH,aAAU,CAACiH,IAE1F,MAAO,CACL7b,mBACE,kBACE/R,GAAWwtB,EAAgB3iB,OAAS,EAChC2iB,EAAgB1F,QAA4D,SAAC1Y,EAAMxF,EAAO0a,GAAO,IAAD,IACxFnZ,EAAK,OAAGyiB,QAAH,IAAGA,GAAH,UAAGA,EAAWtJ,UAAd,iBAAG,EAAekC,cAAlB,aAAG,EAAwB,GAChCyH,EAAS9iB,EAAQqM,KAAKO,OAAO5M,EAAM+iB,iBAAc1jB,EAIvD,OAHIyjB,IACF7e,EAAKxF,EAAM5J,SAAW,IAAImuB,KAAYvkB,EAAOqkB,IAExC7e,IACN,IACH,KACN,CAACpP,EAASwtB,EAAiBI,IAE7BG,GAIG,SAASK,GACdpuB,EACAL,GAEA,OAAO4tB,GAAqCvtB,EAASL,GAAQ,GAIxD,SAAS0uB,GAAgBviB,EAAkBlC,GAChD,IAAM0kB,EAAgBF,GAAiBtiB,EAAS,CAAClC,IACjD,GAAKA,EACL,OAAO0kB,EAAc1kB,EAAM5J,SAGtB,SAASuuB,GACdziB,EACA0iB,GAEA,IAAM7uB,EAASoS,mBAAQ,yCAAMyc,QAAN,IAAMA,OAAN,EAAMA,EAAYnkB,QAAO,SAACiN,GAAD,OAAiCA,aAAoB2P,eAA9E,QAAwF,KAAI,CACjHuH,IAGIF,EAAgBF,GAAiBtiB,EAASnM,GAE1C8uB,EA9FD,SACLC,GAEA,IAAMC,EAAoBC,eAEpBC,EAAsB9c,mBAC1B,kBACE2c,EACIA,EACGhV,IAAIkQ,MACJvf,QAAO,SAACoL,GAAD,OAA0B,IAANA,KAC3BqZ,OACH,KACN,CAACJ,IAGGK,EAAUC,aACdL,EACA,gBACAE,EAAUnV,KAAI,SAAA1Z,GAAO,MAAI,CAACA,OAG5B,OAAO+R,mBACL,kBACE8c,EAAU/G,QAA8C,SAAC1Y,EAAMpP,EAASskB,GAAO,IAAD,IACtEnZ,EAAK,OAAG4jB,QAAH,IAAGA,GAAH,UAAGA,EAAUzK,UAAb,iBAAG,EAAckC,cAAjB,aAAG,EAAuB,GAErC,OADIrb,IAAOiE,EAAKpP,GAAW4X,KAAeC,MAAML,KAAKO,OAAO5M,EAAM+iB,cAC3D9e,IACN,MACL,CAACyf,EAAWE,IAiEKE,CADUld,mBAAQ,yCAAMyc,QAAN,IAAMA,OAAN,EAAMA,EAAYzY,MAAK,SAAAuB,GAAQ,OAAIA,IAAaC,eAAhD,WAAiE,CAACiX,IACvD,CAAC1iB,GAAW,IAE5D,OAAOiG,mBACL,yCACEyc,QADF,IACEA,OADF,EACEA,EAAY9U,KAAI,SAAApC,GACd,GAAKxL,GAAYwL,EACjB,OAAIA,aAAoB2P,KAAcqH,EAAchX,EAAStX,SACzDsX,IAAaC,KAAckX,EAAW3iB,QAA1C,YAJJ,QAMQ,KACR,CAACA,EAAS0iB,EAAYC,EAAYH,IAI/B,SAASY,GAAmBpjB,EAAkBwL,GACnD,OAAOiX,GAAoBziB,EAAS,CAACwL,IAAW,GClHnC,SAAS6X,GACtBhkB,EACAikB,GACuB,IAAD,EACEplB,mBAA+BolB,GAAYA,EAASjkB,GAASA,OAAQX,GADvE,mBACf6kB,EADe,KACTC,EADS,KAStB,OAPAznB,qBAAU,WACRynB,GAAQ,SAACC,GAEP,OAD2BH,GAAWA,EAASjkB,GACzBA,EACfokB,OAER,CAACH,EAAUjkB,IACPkkB,EAGT,SAASG,GAAanc,GACpB,OAAa,OAANA,QAAoB7I,IAAN6I,E,wCCrBjBoc,GAAOngB,UAAOC,IAAV,mJAIG,qBAAG8N,WACJ,qBAAGiD,UACI,qBAAGC,gBAEPkP,MAEFC,GAAYpgB,kBAAOmgB,GAAPngB,CAAH,kFACA,qBAAG/G,MAAkBC,OAAOyV,oBAC5B,qBAAG1V,MAAkBC,OAAOyV,oBAGrC0R,GAAWrgB,kBAAOmgB,GAAPngB,CAAH,wDACC,qBAAG/G,MAAkBC,OAAO0V,YCZ5C0R,GAAiBtgB,kBAAOkZ,GAAPlZ,CAAH,6DACT,qBAAG2M,QACF,qBAAGA,QAGA,SAAS4T,GAAT,GAUX,IATF7I,EASC,EATDA,QACAnN,EAQC,EARDA,MAQC,IAPDoC,YAOC,MAPM,OAON,EAND9K,EAMC,EANDA,IAOMsX,EAAiB3C,GAAiBkB,GAExC,OAAO,cAAC4I,GAAD,CAAgBze,IAAKA,EAAK8K,KAAMA,EAAMwM,KAAMA,EAAM5O,MAAOA,ICblE,IAAMiW,GAAcxgB,UAAOC,IAAV,yPACK,gBAAGhH,EAAH,EAAGA,MAAH,SAAUwnB,QAAyB,cAAgBxnB,EAAMC,OAAO0V,YAOxE,qBAAG6R,SAA0B,aACnB,gBAAGxnB,EAAH,EAAGA,MAAH,SAAUwnB,SAA0BxnB,EAAMC,OAAOyV,oBAGnD,gBAAG1V,EAAH,EAAGA,MAAH,SAAUwnB,SAAyBxnB,EAAMC,OAAO0V,YACzD,qBAAG6R,SAAyB,SAG1B,SAASC,GAAT,GAQX,IAPF3T,EAOC,EAPDA,QACA4T,EAMC,EANDA,SACAC,EAKC,EALDA,iBAMA,OACE,eAAC7U,GAAD,CAAYC,IAAI,KAAhB,UACE,eAACoF,GAAD,WACE,cAAC,KAAD,CAAMhM,SAAS,OAAf,0BACA,cAACuL,GAAD,CAAgBtJ,KAAK,2DAEvB,eAAC+J,GAAD,CAASpF,IAAI,MAAb,UACE,eAACwU,GAAD,CACEnf,QAAS,WACFuf,GAAqB/F,aAAe+F,EAAkB3Y,OACzD0Y,EAAS1Y,OAGbwY,QAASG,IAAqB3Y,KANhC,UAQE,cAAC0R,GAAD,CAAc3R,SAAUC,KAAOsC,MAAO,CAAE4P,YAAa,KACrD,cAAC,KAAD,sBAEApN,EAAU8T,KAAgB9T,GAAW,IAAI3C,KAAI,SAAC9P,GAC9C,IAAMwmB,EAAWF,aAA4BjJ,MAASiJ,EAAiBlwB,UAAY4J,EAAM5J,QACzF,OACE,eAAC8vB,GAAD,CAAanf,QAAS,kBAAOyf,GAAYH,EAASrmB,IAAQmmB,QAASK,EAAnE,UACE,cAACnH,GAAD,CAAc3R,SAAU1N,EAAOiQ,MAAO,CAAE4P,YAAa,KACrD,cAAC,KAAD,UAAO7f,EAAM/J,WAFmE+J,EAAM5J,kB,+CCrDvFqwB,GAAY/gB,kBAAOqR,GAAPrR,CAAH,iEACX,qBAAG/G,MAAkBC,OAAO+I,WAI1B+e,GAAehhB,kBAAO+L,GAAP/L,CAAH,yEAKZihB,GAAWjhB,kBAAOkR,GAAPlR,CAAH,uRAMT,qBAAG6K,UAA4B,aACvB,qBAAGA,UAA2B,UAE1B,gBAAG5R,EAAH,EAAGA,MAAH,SAAU4R,UAA4B5R,EAAMC,OAAOyV,oBAE9D,gBAAG9D,EAAH,EAAGA,SAAUiW,EAAb,EAAaA,SAAb,OAA6BjW,GAAYiW,EAAW,GAAM,KAG1DI,GAAclhB,UAAOmhB,MAAV,seAWb,qBAAGloB,MAAkBC,OAAOmO,QAEjB,qBAAGpO,MAAkBC,OAAO0V,YAMrC,qBAAG3V,MAAkBC,OAAOkoB,gBAIjB,qBAAGnoB,MAAkBC,OAAO+I,WAIvCof,GAAYrhB,UAAOC,IAAV,wFAGA,qBAAGhH,MAAkBC,OAAOyV,oBAGrC2S,GAAgBthB,UAAOC,IAAV,wFAGJ,qBAAGhH,MAAkBC,OAAO0V,YC5D5ClD,GAASC,oBAAH,wHASN4V,GAAYvhB,UAAOwhB,IAAV,mIACG9V,IACN,qBAAGiB,QACJ,qBAAGA,QAEA,gBAAG8U,EAAH,EAAGA,OAAQxoB,EAAX,EAAWA,MAAX,cAAuBwoB,QAAvB,IAAuBA,IAAUxoB,EAAMC,OAAO+I,WAQ7C,SAASyf,GAAT,GAAyF,IAAD,IAAtE/U,YAAsE,MAA/D,OAA+D,EAAvD8U,EAAuD,EAAvDA,OAAWpY,EAA4C,kCACrG,OACE,cAACkY,GAAD,yBAAWI,QAAQ,YAAYC,KAAK,OAAOC,MAAM,6BAA6BlV,KAAMA,EAAM8U,OAAQA,GAAYpY,GAA9G,aACE,sBACEyY,EAAE,6HACF5U,YAAY,MACZ6U,cAAc,QACdC,eAAe,aCdvB,SAASC,GAAYja,GACnB,OAAOA,aAAoB2P,KAAQ3P,EAAStX,QAAUsX,IAAaC,KAAQ,QAAU,GAGvF,IAAMia,GAAoBliB,kBAAO2R,KAAP3R,CAAH,2HAOjBmiB,GAAMniB,UAAOC,IAAV,2SACa,qBAAGhH,MAAkBC,OAAO0V,YACvC,qBAAG3V,MAAkBC,OAAO4R,cAYvC,SAASsX,GAAT,GAA4D,IAAzCC,EAAwC,EAAxCA,QACjB,OAAO,cAACH,GAAD,CAAmBnd,MAAOsd,EAAQC,UAAlC,SAA8CD,EAAQpO,cAAc,KAG7E,IAAMsO,GAAeviB,UAAOC,IAAV,8EAKlB,SAASuiB,GAAT,GAA0D,IAArCxa,EAAoC,EAApCA,SACnB,KAAMA,aAAoBuP,IACxB,OAAO,yBAF8C,IAK/CE,EAASzP,EAATyP,KACR,IAAKA,GAAwB,IAAhBA,EAAKlc,OAAc,OAAO,yBAEvC,IAAMknB,EAAMhL,EAAK,GAEjB,OACE,eAAC8K,GAAD,WACE,cAAClS,GAAD,CAAkBhJ,KAAMob,EAAIC,YAA5B,SACE,cAACP,GAAD,UAAmBM,EAAIrkB,MAAbqkB,EAAInjB,MAEfmY,EAAKlc,OAAS,EACb,cAAC8U,GAAD,CACEhJ,KAAMoQ,EACHkL,MAAM,GACNvY,KAAI,gBAAGhM,EAAH,EAAGA,KAAMskB,EAAT,EAASA,YAAT,gBAA8BtkB,EAA9B,aAAuCskB,MAC3CE,KAAK,QAJV,SAME,cAACT,GAAD,oBAEA,QAKV,SAASU,GAAT,GAYI,IAXF7a,EAWC,EAXDA,SACA2Y,EAUC,EAVDA,SACAmC,EASC,EATDA,WACAC,EAQC,EARDA,cACAxY,EAOC,EAPDA,MAOC,EAC4BiD,eAArBhR,EADP,EACOA,QAASuQ,EADhB,EACgBA,QACXzC,EAAM2X,GAAYja,GAClBgb,EAAoBhK,KACpBiK,EAAmBC,aAAcF,EAAmBhb,GACpDmb,ER/DD,SAA6Bnb,GAElC,QADwBkU,KACCzX,MAAK,SAACnK,GAAD,OAAWugB,aAAe7S,EAAU1N,MQ6D9C8oB,CAAoBpb,GAClCqa,EAAUzC,GAAkB,OAACpjB,QAAD,IAACA,SAAWtB,EAAW8M,GAEnDqb,ETgDD,WACL,IAAM5H,EAAWC,cACjB,OAAO/b,uBACL,SAACoN,EAAiBrc,GAChB+qB,EAAS6H,aAAsB,CAAEvW,UAASrc,eAE5C,CAAC+qB,IStDiB8H,GACdC,ETqCD,WACL,IAAM/H,EAAWC,cACjB,OAAO/b,uBACL,SAACrF,GACCmhB,EAASgI,aAAmB,CAAErI,gBAAiBF,GAAe5gB,QAEhE,CAACmhB,IS3CciI,GAGjB,OACE,eAACzC,GAAD,CACE1W,MAAOA,EACPrJ,UAAS,qBAAgBoJ,GACzBjJ,QAAS,kBAAOyhB,EAAa,KAAOnC,KACpC9V,SAAUiY,EACVhC,SAAUiC,EALZ,UAOE,cAACpJ,GAAD,CAAc3R,SAAUA,EAAU2E,KAAK,SACvC,eAAC,GAAD,WACE,cAAC,KAAD,CAAM5H,MAAOiD,EAAS5J,KAAtB,SAA6B4J,EAASzX,SACtC,eAACwwB,GAAD,WACIkC,IAAoBE,GAAiBnb,aAAoBuP,GAYvD,KAXF,eAAC,KAAD,2BAEE,cAAC5M,GAAD,CACEtJ,QAAS,SAACiK,GACRA,EAAMqY,kBACF5W,GAAW/E,aAAoB2P,MAAO0L,EAAYtW,EAAS/E,EAAStX,UAH5E,yBAUFuyB,GAAqBE,GAAiBnb,aAAoBuP,GAYxD,KAXF,eAAC,KAAD,8BAEE,cAAC5M,GAAD,CACEtJ,QAAS,SAACiK,GACRA,EAAMqY,kBACF3b,aAAoB2P,MAAO6L,EAASxb,IAH5C,4BAYR,cAACwa,GAAD,CAAWxa,SAAUA,IACrB,cAACqJ,GAAD,CAAU9G,MAAO,CAAEqZ,YAAa,YAAhC,SACGvB,EAAU,cAACD,GAAD,CAASC,QAASA,IAAc7lB,EAAU,cAACklB,GAAD,IAAa,UAM3D,SAASmC,GAAT,GAgBX,IAfFC,EAeC,EAfDA,OACA5E,EAcC,EAdDA,WACA0B,EAaC,EAbDA,iBACAmD,EAYC,EAZDA,iBACAC,EAWC,EAXDA,cACAC,EAUC,EAVDA,aACAC,EASC,EATDA,QAUMC,EAAW1hB,mBAAQ,kBAAOyhB,EAAO,CAAIE,KAASnc,OAAb,oBAAuBiX,IAAvB,aAAyCA,KAAc,CAACA,EAAYgF,IAErGrT,EAAMlR,uBACV,YAA6B,IAA1BrE,EAAyB,EAAzBA,KAAM+oB,EAAmB,EAAnBA,MAAO9Z,EAAY,EAAZA,MACRvC,EAAqB1M,EAAK+oB,GAC1BvB,EAAanK,QAAQiI,GAAoB/F,aAAe+F,EAAkB5Y,IAC1E+a,EAAgBpK,QAAQqL,GAAiBnJ,aAAemJ,EAAehc,IAE7E,OACE,cAAC6a,GAAD,CACEtY,MAAOA,EACPvC,SAAUA,EACV8a,WAAYA,EACZnC,SANiB,kBAAMoD,EAAiB/b,IAOxC+a,cAAeA,MAIrB,CAACgB,EAAkBC,EAAepD,IAG9B0D,EAAU3kB,uBAAY,SAAC0kB,EAAe/oB,GAAhB,OAA8B2mB,GAAY3mB,EAAK+oB,MAAS,IAEpF,OACE,cAAC,KAAD,CACEP,OAAQA,EACR9T,IAAKiU,EACL/V,MAAM,OACNiW,SAAUA,EACVI,UAAWJ,EAAS5oB,OACpBipB,SAAU,GACVF,QAASA,EAPX,SASGzT,ICzMA,SAAS4T,GAAap0B,EAAiBq0B,GAC5C,GAAsB,IAAlBA,EAAOnpB,OAAc,OAAOlL,EAEhC,IAAMs0B,EAAmBrK,aAAUoK,GAEnC,GAAIC,EACF,OAAOt0B,EAAO0K,QAAO,SAACT,GAAD,OAAWA,EAAM5J,UAAYi0B,KAGpD,IAAMC,EAAmBF,EACtBzO,cACAxO,MAAM,OACN1M,QAAO,SAACse,GAAD,OAAOA,EAAE9d,OAAS,KAE5B,GAAgC,IAA5BqpB,EAAiBrpB,OACnB,OAAOlL,EAGT,IAAMw0B,EAAgB,SAACxL,GACrB,IAAMyL,EAASzL,EACZpD,cACAxO,MAAM,OACN1M,QAAO,SAACgiB,GAAD,OAASA,EAAIxhB,OAAS,KAEhC,OAAOqpB,EAAiBG,OAAM,SAACC,GAAD,OAAoB,IAAbA,EAAEzpB,QAAgBupB,EAAOre,MAAK,SAACwe,GAAD,OAAQA,EAAGtQ,WAAWqQ,IAAMC,EAAGC,SAASF,UAG7G,OAAO30B,EAAO0K,QAAO,SAACT,GAAW,IACvB/J,EAAiB+J,EAAjB/J,OAAQ6N,EAAS9D,EAAT8D,KAEhB,OAAQ7N,GAAUs0B,EAAct0B,IAAa6N,GAAQymB,EAAczmB,MAIxDqmB,I,GChCFU,GAAgBnlB,kBAAOqR,GAAPrR,CAAH,0LAEf,qBAAG/G,MAAkBC,OAAOmO,QAWxB,SAAS+d,GAAT,GAMX,IALFC,EAKC,EALDA,gBACAC,EAIC,EAJDA,UAKA,OACE,cAACH,GAAD,CAAe9jB,QAASgkB,EAAxB,SACE,cAAC,KAAD,CAAMjgB,SAAS,OAAf,SAAuBkgB,EAAY,SAAM,aCaxC,SAASC,GAAmBC,GACjC,IAAMlH,EVoFD,WAAqF,IAClF9hB,EAAYgR,eAAZhR,QACFogB,EAAYF,KAEZ4B,EAAWQ,GAAgB,OAACtiB,QAAD,IAACA,SAAWtB,EADtBuH,mBAAQ,kBAAM6B,OAAO8X,OAAP,OAAcQ,QAAd,IAAcA,IAAa,MAAK,CAACA,KAEtE,cAAO0B,QAAP,IAAOA,IAAY,GUzFFmH,GACXC,EAAajjB,mBAAQ,kBAxB7B,SAA4B6b,GAG1B,OAAO,SAAoBhC,EAAeC,GAKxC,IArBuBoJ,EAAwBC,EAwBzCC,GAxBiBF,EAqBNrH,EAAShC,EAAO5rB,SArBck1B,EAsB9BtH,EAAS/B,EAAO7rB,SArB/Bi1B,GAAYC,EACPD,EAASxd,YAAYyd,IAAa,EAAID,EAAS7K,QAAQ8K,GAAY,EAAI,EAE5ED,GAAYA,EAASxd,YAAY,MAC3B,EAENyd,GAAYA,EAASzd,YAAY,KAC5B,EAEF,GAeL,OAAoB,IAAhB0d,EAA0BA,EAE1BvJ,EAAO/rB,QAAUgsB,EAAOhsB,OAEnB+rB,EAAO/rB,OAAO0lB,cAAgBsG,EAAOhsB,OAAO0lB,eAAiB,EAAI,EAEnEqG,EAAO/rB,QAAcgsB,EAAOhsB,QAAX,EAAyB,GAMlBu1B,CAAkB,OAACxH,QAAD,IAACA,IAAY,MAAK,CAACA,IACtE,OAAO7b,mBAAQ,WACb,OAAI+iB,EACK,SAAClJ,EAAeC,GAAhB,OAAgE,EAA9BmJ,EAAWpJ,EAAQC,IAEvDmJ,IACN,CAACF,EAAUE,IAGDH,ICtCAQ,GALQ,SAAC,GAAsD,IAApD/e,EAAmD,EAAnDA,cAAevM,EAAoC,EAApCA,SACjC0J,EAAkB/B,eACxB,OAAO,mCAAG+B,EAAgB6C,EAAevM,MC4BpC,SAASurB,GAAT,GAQkB,IAPvBpF,EAOsB,EAPtBA,iBACAmD,EAMsB,EANtBA,iBACAkC,EAKsB,EALtBA,sBACAC,EAIsB,EAJtBA,gBACAhiB,EAGsB,EAHtBA,UACAkF,EAEsB,EAFtBA,OAGQ+U,GADc,EADtBgI,aAEcC,eAANjI,GACApR,EAAYS,eAAZT,QAGFsZ,GAFQ1pB,qBAAWsQ,gBAEPvH,oBALI,EAMgBhL,mBAAiB,IANjC,mBAMf4rB,EANe,KAMFC,EANE,OAO4B7rB,oBAAkB,GAP9C,mBAOf8rB,EAPe,KAOIC,EAPJ,KAQhB7J,EAAYF,KAGZgK,EAAkBpM,aAAUgM,GAC5BK,EAAcxJ,GAASmJ,GAEvBpC,EAAmBzhB,mBAAQ,WAC/B,IAAM4W,EAAIiN,EAAYrQ,cAAcN,OACpC,MAAa,KAAN0D,GAAkB,MAANA,GAAmB,OAANA,GAAoB,QAANA,IAC7C,CAACiN,IAEEM,EAAkBrB,GAAmBiB,GAErCK,EAAY3nB,aAAqD,SAACjB,GAAD,OAAWA,EAAMqd,KAAKuL,aAEvFC,EAA0BrkB,mBAAQ,WACtC,OAAIikB,EAAwBC,EAAc,CAACA,GAAe,GACnDlC,GAAangB,OAAO8X,OAAOQ,GAAY0J,KAC7C,CAACI,EAAiBC,EAAa/J,EAAW0J,IAEvCS,EAAgCtkB,mBAAQ,WAC5C,GAAIkkB,EAAa,MAAO,CAACA,GACzB,IAAMK,EAASF,EAAetH,KAAKoH,GAC7BK,EAAcX,EACjBrQ,cACAxO,MAAM,OACN1M,QAAO,SAACse,GAAD,OAAOA,EAAE9d,OAAS,KAC5B,OAAI0rB,EAAY1rB,OAAS,EAAUyrB,EAE7B,GAAN,oBACML,EAAc,CAACA,GAAe,IADpC,aAGKK,EAAOjsB,QAAO,SAACT,GAAD,aAAW,UAAAA,EAAM/J,cAAN,eAAc0lB,iBAAkBgR,EAAY,OAH1E,aAIKD,EAAOjsB,QAAO,SAACT,GAAD,aAAW,UAAAA,EAAM/J,cAAN,eAAc0lB,iBAAkBgR,EAAY,UAEzE,CAACH,EAAgBR,EAAaK,EAAaC,IAExCM,EAAuBvnB,uBAC3B,SAACqI,GAGC,GAFA+b,EAAiB/b,GACjB9D,IACI2iB,EAAW,CACb,IAAMM,EAAQC,SAASC,eAAe,WAClCF,GACFA,EAAMG,UAIZ,CAACpjB,EAAW6f,EAAkB8C,IAIhCtuB,qBAAU,WACJ6Q,GAAQmd,EAAe,MAC1B,CAACnd,IAGJ,IAAMme,EAAW7hB,mBACX8hB,EAAc7nB,uBAAY,SAAC2L,GAAW,IAAD,EACnC6V,EAAQ7V,EAAMH,OAAOtP,MACrB4rB,EAAmBnN,aAAU6G,GACnCoF,EAAekB,GAAoBtG,GACnC,UAAAkF,EAAU1f,eAAV,SAAmB+gB,SAAS,KAC3B,IAEGC,EAAchoB,uBAClB,SAAClE,GACC,GAAc,UAAVA,EAAE6O,IAEJ,GAAU,QADAgc,EAAYrQ,cAAcN,OAElCuR,EAAqBjf,WAChB,GAAI8e,EAAqBxrB,OAAS,EAAG,CAAC,IAAD,GAExC,UAAAwrB,EAAqB,GAAGx2B,cAAxB,eAAgC0lB,iBAAkBqQ,EAAY3Q,OAAOM,eACrC,IAAhC8Q,EAAqBxrB,QAErB2rB,EAAqBH,EAAqB,OAKlD,CAACA,EAAsBG,EAAsBZ,KpBxC1C,WAA4G,IAAD,IAC1GsB,EAAc9O,KACd+O,EAAa3oB,aAAkD,SAAAjB,GAAK,OAAIA,EAAMma,MAAMC,SACpFC,EAAOsP,EAAcC,EAAWD,QAAe1sB,EAE5C,SAAEod,QAAF,IAAEA,OAAF,EAAEA,EAAM3R,QACR,SAAE2R,QAAF,IAAEA,OAAF,EAAEA,EAAMwP,cACF,OAAJxP,QAAI,IAAJA,KAAMyP,iBoBoCQC,GAEzB,OACE,eAAC,GAAD,CAAQzd,MAAO,CAAE2D,MAAO,OAAQ+Z,KAAM,OAAS/mB,UAAU,YAAzD,UACE,eAAC8f,GAAD,CAAchV,IAAI,OAAlB,UACE,eAACkF,GAAD,WACE,eAAC,KAAD,CAAMhQ,UAAU,eAAhB,UACE,cAAC,GAAD,CAAgB8F,cAAe,GAA/B,4BACA,cAAC2J,GAAD,CACEtJ,KAAMlD,GACJ,IACA,0FAIN,cAAC,IAAD,CAAW9C,QAAS6C,OAEtB,cAACgd,GAAD,CACEgH,KAAK,OACL5oB,GAAG,qBACH6oB,YAAahK,EAAE,gCACftiB,MAAOyqB,EACPtW,IAAKuX,EACLa,SAAUZ,EACVa,UAAWV,IAEZzB,GACC,cAACxF,GAAD,CAAa3T,QAASA,EAAS4T,SAAUuG,EAAsBtG,iBAAkBA,IAEnF,eAAC1P,GAAD,WACE,cAAC,KAAD,CAAM9L,SAAS,OAAf,SACE,cAAC,GAAD,CAAgB4B,cAAe,IAA/B,0BAEF,cAACoe,GAAD,CAAYE,UAAWkB,EAAmBnB,gBAAiB,kBAAMoB,GAAqB,SAAC6B,GAAD,OAAUA,cAGpG,cAACjH,GAAD,IAEA,qBAAK9W,MAAO,CAAE0d,KAAM,KAAO/mB,UAAU,iBAArC,SACE,cAAC,KAAD,CAAWqnB,cAAY,EAAvB,SACG,gBAAGzE,EAAH,EAAGA,OAAH,OACC,cAACD,GAAD,CACEC,OAAQA,EACRI,QAASA,EACThF,WAAY6H,EACZhD,iBAAkBmD,EAClBlD,cAAeiC,EACfrF,iBAAkBA,EAClBqD,aAAcoC,SAMrB,QAgCQL,I,yFCrNTwC,GAAqB,IAAIC,KAAI,CAAEC,WAAW,IAAQC,QAAQC,IAOjD,SAAeC,GAA9B,qC,8CAAe,WACbC,EACAC,GAFa,uCAAA5iB,EAAA,yDAIT2iB,IAAYE,KAJH,yCAKJC,IALI,YAOPC,EAAYrT,GAAgBiT,IAPrB,0CAacC,EAAsBG,EAAUlT,SAb9C,OAaTmT,EAbS,+DAeTztB,QAAQC,MAAR,sCAA6CutB,EAAUlT,SAAvD,MACM,IAAInB,MAAJ,sCAAyCqU,EAAUlT,UAhBhD,kBAoBToT,EAAgB7U,GAAiB4U,GApBxB,yDAsBTztB,QAAQC,MAAM,yCAA0CwtB,GAClD,IAAItU,MAAJ,kDAAqDsU,IAvBlD,QAyBXE,EAAOlT,GAAU,GAAD,OAAIiT,GAAJ,iBAAoBF,EAAUhT,eAA9B,QAAyC,KAzB9C,wBA2BXmT,EAAOlT,GAAU2S,GA3BN,QA6BJ9T,EAAI,EA7BA,aA6BGA,EAAIqU,EAAK9tB,QA7BZ,wBA8BL4c,EAAMkR,EAAKrU,GACXsU,EAAStU,IAAMqU,EAAK9tB,OAAS,EAC/BguB,OAhCO,sBAkCQC,MAAMrR,GAlCd,QAkCToR,EAlCS,6DAoCT7tB,QAAQC,MAAM,uBAAwBmtB,EAAtC,OACIQ,EArCK,uBAqCS,IAAIzU,MAAJ,kCAAqCiU,IArC9C,kDA0CNS,EAASE,GA1CH,qBA2CLH,EA3CK,uBA2CS,IAAIzU,MAAJ,kCAAqCiU,IA3C9C,gEAgDQS,EAASG,OAhDjB,WAgDLA,EAhDK,OAiDNlB,GAAmBkB,GAjDb,uBAkDHC,EAlDG,oBAmDPnB,GAAmBoB,cAnDZ,aAmDP,EAA2BpR,QAAe,SAAC1Y,EAAMnE,GAAW,IAAD,EACnDkuB,EAAG,UAAMluB,EAAMmuB,SAAZ,sBAAwBnuB,EAAMkS,eAA9B,QAAyC,IAClD,OAAO/N,EAAKvE,OAAS,EAAd,UAAqBuE,EAArB,aAA8B+pB,GAA9B,UAAyCA,KAC/C,WAtDI,QAsDG,gBACN,IAAIhV,MAAJ,wCAA2C8U,IAvDxC,iCAyDJD,GAzDI,QA6BoB1U,IA7BpB,8BA2DP,IAAIH,MAAM,mCA3DH,2E,oCCdTkV,GAAgB,CACpB,CACEC,UAAU,EACVC,OAAQ,CACN,CACE7rB,KAAM,OACN8pB,KAAM,YAGV9pB,KAAM,WACN8rB,QAAS,CACP,CACE9rB,KAAM,kBACN8pB,KAAM,YAGViC,SAAS,EACTC,gBAAiB,OACjBlC,KAAM,aAGJmC,GAAoB,6CAEpBC,GAAe,CACnB,CACEN,UAAU,EACVC,OAAQ,CACN,CACEM,aAAc,UACdnsB,KAAM,OACN8pB,KAAM,YAGV9pB,KAAM,cACN8rB,QAAS,CACP,CACEK,aAAc,QACdnsB,KAAM,GACN8pB,KAAM,UAGViC,SAAS,EACTC,gBAAiB,OACjBlC,KAAM,aAKV,SAAS/Q,GAAiBF,EAAyBuT,GACjD,OAAO,IAAIC,KAASxT,EAAiBqT,GAAcE,GAQtC,SAAezB,GAA9B,qC,8CAAe,WAAqC/S,EAAiBwU,GAAtD,mBAAArkB,EAAA,6DACPukB,EAAuB,IAAID,KAASJ,GAAmBN,GAAeS,GACtExd,EAAO4J,oBAASZ,GAFT,SAGiB0U,EAAqBC,SAAS3d,GAH/C,cAGPiK,EAHO,yBAINE,GAAiBF,EAAiBuT,GAAUhW,YAAYxH,IAJlD,4C,sBCjDR,SAAS4d,KAAiE,IAAD,EACjDpd,eAArBT,EADsE,EACtEA,QAAS8d,EAD6D,EAC7DA,QACXpP,EAAWC,cAEXoP,EAAcnrB,uBAClB,SAACqW,GACC,IAAK6U,GAAW9d,IAAY8K,KAAQC,QAAS,CAC3C,GAAIiT,OAAqBlT,KAAQC,QAAS,CACxC,IAAMkT,EAAiBC,eACvB,GAAID,EACF,OAAOjC,GAAsB/S,EAASgV,GAG1C,MAAM,IAAInW,MAAM,4CAElB,OAAOkU,GAAsB/S,EAAS6U,KAExC,CAAC9d,EAAS8d,IAGZ,OAAOlrB,sBAAW,uCAChB,WAAOmpB,GAAP,eAAA3iB,EAAA,6DACQ+kB,EAAYC,eAClB1P,EAAS2P,KAAeC,QAAQ,CAAEH,YAAW/S,IAAK2Q,KAFpD,kBAGSD,GAAaC,EAASgC,GAC1B1vB,MAAK,SAACkwB,GAEL,OADA7P,EAAS2P,KAAeG,UAAU,CAAEpT,IAAK2Q,EAASwC,YAAWJ,eACtDI,KAER9vB,OAAM,SAACG,GAGN,MAFAD,QAAQC,MAAR,oCAA2CmtB,GAAWntB,GACtD8f,EAAS2P,KAAeI,SAAS,CAAErT,IAAK2Q,EAASoC,YAAWO,aAAc9vB,EAAMkS,WAC1ElS,MAXZ,2CADgB,sDAehB,CAAC8f,EAAUqP,IC7CR,SAASY,GACdC,EACAC,GAEA,IAAMC,EAAanmB,iBAAiCkmB,GACpDrzB,qBAAU,WACRszB,EAAWllB,QAAUilB,IACpB,CAACA,IAEJrzB,qBAAU,WACR,IAAMuzB,EAAqB,SAACrwB,GAAmB,IAAD,IAC5C,oBAAIkwB,EAAKhlB,eAAT,aAAI,EAAcolB,SAAStwB,EAAE0P,eAA7B,UAGI0gB,EAAWllB,SAASklB,EAAWllB,WAKrC,OAFAygB,SAAS4E,iBAAiB,YAAaF,GAEhC,WACL1E,SAAS6E,oBAAoB,YAAaH,MAE3C,CAACH,IAGSD,I,eCLf,IAAMQ,GAA2BlsB,kBAAO2K,GAAP3K,CAAH,kFAGjB,qBAAG6K,SAA2B,MAAQ,OAG7C6D,GAAmB1O,UAAOC,IAAV,ggBAEN,SAAC1D,GAAD,OAAYA,EAAMiD,KAAO,UAAY,YACxC,SAACjD,GAAD,OAAYA,EAAMiD,KAAO,EAAI,KAE1B,qBAAGvG,MAAkBC,OAAOyV,oBACtB,qBAAG1V,MAAkBC,OAAO0V,YAGvC,qBAAG3V,MAAkBC,OAAO4R,cAUjCqhB,GAAansB,UAAOC,IAAV,4IAQVmsB,GAAoBpsB,UAAOC,IAAV,kKASvB,SAASosB,GAAT,GAAuD,IAAjCvD,EAAgC,EAAhCA,QACd9S,EAAUvT,mBAAQ,kCAAMoT,GAAgBiT,UAAtB,aAAM,EAA0B9S,UAAS,CAAC8S,IAC5DwD,EAAO7pB,mBAAQ,WACnB,IAAIuT,EAAJ,CACA,IAAMuW,EAAezD,EAAQ7S,cAC7B,GAAIsW,EAAa5X,WAAW,YAAc4X,EAAa5X,WAAW,WAChE,OAAOmU,EAET,IAEE,OADY,IAAI0D,IAAI1D,GACTwD,KACX,MAAO3wB,GACP,WAED,CAACmtB,EAAS9S,IACb,OAAO,0CAAGA,QAAH,IAAGA,IAAWsW,IAGvB,SAASG,GAAiB3D,GACxB,MAAM,YAAN,OAAmBA,EAAQlhB,QAAQ,MAAO,MAG5C,IAAM8kB,GAAU5sB,gBAAK,YAAgF,IAA7DgpB,EAA4D,EAA5DA,QAAS6D,EAAmD,EAAnDA,OACzC9E,EAAa3oB,aAAkD,SAACjB,GAAD,OAAWA,EAAMma,MAAMC,SACtFU,EAAkBD,KAClB2C,EAAWC,cAHiF,EAIhDmM,EAAWiB,GAA5CxQ,EAJiF,EAI1F3R,QAA8B0kB,EAJ4D,EAI3EvD,cAEjBhF,EAAagG,IAAY/P,EANmE,ECpFrF,WAAiE,IAA9C6T,EAA6C,0DACnDlyB,mBAASkyB,GAD0C,mBACtE3uB,EADsE,KAC/D4uB,EAD+D,KAEvEhsB,EAASlB,uBAAY,kBAAMktB,GAAS,SAAC5M,GAAD,OAAWA,OAAO,IAC5D,MAAO,CAAChiB,EAAO4C,GDyFQisB,EAAU,GARiE,mBAQ3Fxc,EAR2F,KAQrFzP,EARqF,KAS5F8qB,EAAOjmB,mBATqF,EAUlDhL,qBAVkD,mBAU3FuU,EAV2F,KAUzEC,EAVyE,OAWxDxU,qBAXwD,mBAW3FyU,EAX2F,KAW5EC,EAX4E,OAanEG,aAAUN,EAAkBE,EAAe,CACxEH,UAAW,OACXQ,SAAU,QACVC,UAAW,CAAC,CAAErR,KAAM,SAAUsR,QAAS,CAAEC,OAAQ,CAAC,EAAG,QAH/CE,EAb0F,EAa1FA,OAAQE,EAbkF,EAalFA,WAMhB2b,GAAkBC,EAAMrb,EAAOzP,OAAS3F,GAExC,IEzGuC6xB,EFyGjCC,EAAiBrtB,uBAAY,WAC7BmjB,IAEJrH,EAASwR,aAAWnE,IACpB6D,OACC,CAAClR,EAAUqH,EAAYgG,EAAS6D,IAE7BO,EAAyBvtB,uBAAY,WACpC0rB,GACL5P,EAAS0R,aAAiBrE,MACzB,CAACrN,EAAUqN,EAASuC,IAEjB+B,EAAmBztB,uBAAY,WAC/B,WAAAlH,OAAO40B,OAAP,uEACF5R,EAAS6R,aAAWxE,MAErB,CAACrN,EAAUqN,IAEd,OAAKxQ,EAGH,eAAC,GAAD,CAAmBvH,MAAM,SAAShD,QAAQ,OAAOzO,GAAImtB,GAAiB3D,GAAtE,UACGxQ,EAAKZ,QACJ,cAAC6I,GAAD,CAAUhW,MAAO,CAAE4P,YAAa,QAAUzC,QAASY,EAAKZ,QAAS7V,IAAG,UAAKyW,EAAKla,KAAV,gBAEpE,qBAAKmM,MAAO,CAAE2D,MAAO,OAAQ4V,OAAQ,OAAQ3J,YAAa,UAE5D,eAAC,GAAD,CAAQ5P,MAAO,CAAE0d,KAAM,KAAvB,UACE,cAAC,GAAD,UACE,cAAC,KAAD,CAAM9iB,KAAM2d,EAAY1d,SAAS,OAAOmF,MAAO,CAAEgjB,SAAU,SAAUC,aAAc,YAAnF,SACGlV,EAAKla,SAGV,cAAC,GAAD,CACEmM,MAAO,CACLuD,UAAW,OAFf,SAKE,cAACse,GAAD,CAAmBrnB,MAAO+jB,EAA1B,SACE,cAACuD,GAAD,CAAYvD,QAASA,WAI3B,eAACqD,GAAD,CAAYnc,IAAK2b,EAAjB,UACE,qBAAKphB,MAAO,CAAEiJ,QAAS,gBAAkBxD,IAAKd,EAA9C,SACE,cAAC,IAAD,CACE3E,MAAO,CACL2D,MAAO,OACPiM,YAAa,OAEf9Y,QAASR,EACT4L,QAAQ,YANV,SAQE,cAAC,IAAD,QAIH6D,GACC,eAAC,GAAD,yBAAkB9Q,MAAI,EAACwQ,IAAKZ,EAAyB7E,MAAOsF,EAAOI,QAAYF,EAAWE,QAA1F,cACE,8BAAMqI,IEpKuByU,EFoKEzU,EAAKyU,QEnKxC,IAAN,OAAWA,EAAQU,MAAnB,YAA4BV,EAAQW,MAApC,YAA6CX,EAAQY,UFoK3C,cAACrM,GAAD,IACA,cAACpW,GAAD,CAAc/O,KAAI,gDAA2C2sB,GAA7D,uBACA,cAACoD,GAAD,CAA0B7qB,QAAS+rB,EAAkBviB,SAA6C,IAAnCvG,OAAOC,KAAKsjB,GAAYtsB,OAAvF,yBAGC8vB,GACC,cAACa,GAAD,CAA0B7qB,QAAS6rB,EAAnC,gCAKPpK,EACC,cAAC,IAAD,CAAQjY,UAAQ,EAACN,MAAO,CAAE2D,MAAO,OAAQmM,SAAU,QAAnD,sBAIA,mCACE,cAAC,IAAD,CACEnZ,UAAU,gBACVqJ,MAAO,CACL2D,MAAO,OACPmM,SAAU,UAEZhZ,QAAS2rB,EANX,wBAxDIlE,GAHM,QA2Ed8E,GAAgB5tB,UAAOC,IAAV,6DAKZ,SAAS4tB,GAAT,GAA2F,IAAD,EAApE3pB,EAAoE,EAApEA,UAAWyoB,EAAyD,EAAzDA,OAAyD,EACvDjyB,mBAAiB,IADsC,mBACxFozB,EADwF,KAC1EC,EAD0E,KAGzFtS,EAAWC,cACXtD,EAAQlZ,aAAkD,SAACjB,GAAD,OAAWA,EAAMma,MAAMC,SACjF2V,EAASrV,QAAO,UAACP,EAAM0V,UAAP,aAAC,EAAqB/F,kBALmD,EAM/DrtB,mBAAwB,MANuC,mBAMxFuzB,EANwF,KAM9EC,EAN8E,KAQzF1G,EAAc7nB,uBAAY,SAAClE,GAC/BsyB,EAAgBtyB,EAAE0P,OAAOtP,OACzBqyB,EAAY,QACX,IACGC,EAAYvD,KAEZwD,EAAgBzuB,uBAAY,WAC5BquB,IACJE,EAAY,MACZC,EAAUL,GACP1yB,MAAK,WACJ2yB,EAAgB,OAEjBvyB,OAAM,SAACG,GACNuyB,EAAYvyB,EAAMkS,SAClB4N,EAAS6R,aAAWQ,UAEvB,CAACE,EAAQvS,EAAU0S,EAAWL,IAE3BO,EAAoB5rB,mBAAQ,WAChC,OAAO0T,GAAU2X,GAAcvyB,OAAS,GAAKod,QAAQ9C,GAAgBiY,MACpE,CAACA,IAEEQ,EAAiB3uB,uBACrB,SAAClE,GACK4yB,GAAsB,UAAV5yB,EAAE6O,KAChB8jB,MAGJ,CAACA,EAAeC,IAGZE,EAAc9rB,mBAAQ,WAE1B,OADiB6B,OAAOC,KAAK6T,GAE1Brd,QAAO,SAAC+tB,GACP,OAAOnQ,QAAQP,EAAM0Q,GAASniB,YAE/B6Y,MAAK,SAACgP,EAAIC,GAAQ,IACAC,EAAOtW,EAAMoW,GAAtB7nB,QACSgoB,EAAOvW,EAAMqW,GAAtB9nB,QACR,OAAI+nB,GAAMC,EACDD,EAAGtwB,KAAK6X,cAAgB0Y,EAAGvwB,KAAK6X,eAClC,EACDyY,EAAGtwB,KAAK6X,gBAAkB0Y,EAAGvwB,KAAK6X,cAClC,EACA,EAEFyY,GAAY,EACZC,EAAW,EACR,OAEV,CAACvW,IAEJ,OACE,eAAC,GAAD,CAAQ7N,MAAO,CAAE2D,MAAO,OAAQ+Z,KAAM,OAAtC,UACE,cAACjH,GAAD,UACE,eAAC9P,GAAD,WACE,8BACE,cAAC,KAAD,CAAW3G,MAAO,CAAEqkB,OAAQ,WAAavtB,QAASsrB,MAEpD,cAAC,KAAD,CAAMvnB,SAAS,OAAf,0BACA,cAAC,IAAD,CAAW/D,QAAS6C,SAIxB,cAACmd,GAAD,IAEA,eAACL,GAAD,CAAchV,IAAI,OAAlB,UACE,eAAC,KAAD,CAAM7G,MAAI,EAAV,uBACa,IACX,cAACwL,GAAD,CAAgBtJ,KAAK,8MAEvB,eAAC,GAAD,WACE,cAAC6Z,GAAD,CACEgH,KAAK,OACL5oB,GAAG,iBACH6oB,YAAY,kCACZtsB,MAAOiyB,EACP1F,SAAUZ,EACVa,UAAWiG,EACX/jB,MAAO,CAAEuZ,OAAQ,UAAW7S,aAAc,GAAIlD,QAAS,UAEzD,cAAC,IAAD,CAAQ1M,QAAS+sB,EAAe7jB,MAAO,CAAEskB,SAAU,MAAOje,WAAY,OAAS/F,UAAWwjB,EAA1F,oBAIDJ,EACC,cAAC,KAAD,CAAMlsB,MAAM,UAAUgD,MAAOkpB,EAAU1jB,MAAO,CAAEijB,aAAc,WAAYD,SAAU,UAApF,SACGU,IAED,QAGN,cAAC5M,GAAD,IAEA,cAACuM,GAAD,UACGW,EAAYnkB,KAAI,SAAC0e,GAAD,OACf,cAAC,GAAD,CAAuBA,QAASA,EAAS6D,OAAQA,GAAnC7D,QAGlB,cAACzH,GAAD,IAEA,qBAAK9W,MAAO,CAAEwD,QAAS,OAAQE,UAAW,UAA1C,SACE,cAAC/C,GAAD,CAAc/O,KAAK,yBAAnB,+BAMO0xB,I,SGjTA,SAASiB,GAAT,GAMe,IAL5B1lB,EAK2B,EAL3BA,OACAlF,EAI2B,EAJ3BA,UACA6f,EAG2B,EAH3BA,iBACAnD,EAE2B,EAF3BA,iBACAqF,EAC2B,EAD3BA,sBAC2B,EACKvrB,oBAAkB,GADvB,mBACpBq0B,EADoB,KACVC,EADU,KAErBC,EAAWpP,GAAQzW,GAEzB7Q,qBAAU,WACJ6Q,IAAW6lB,GACbD,GAAY,KAEb,CAAC5lB,EAAQ6lB,IAEZ,IAAM/H,EAAuBvnB,uBAC3B,SAACqI,GACC+b,EAAiB/b,GACjB9D,MAEF,CAACA,EAAW6f,IAGRmL,EAAwBvvB,uBAAY,WACxCqvB,GAAY,KACX,IACGG,EAAkBxvB,uBAAY,WAClCqvB,GAAY,KACX,IAGGI,GADkBtW,KAGxB,OACE,cAACnP,GAAD,CAAOP,OAAQA,EAAQlF,UAAWA,EAAWgF,UAAW,GAAID,UAAW8lB,EAAW,GAAKK,EAAiB,EAAI,GAA5G,SACGL,EACC,cAAClB,GAAD,CAAY3pB,UAAWA,EAAWyoB,OAAQwC,IAE1C,cAACnJ,GAAD,CACE5c,OAAQA,EACRlF,UAAWA,EACX6f,iBAAkBmD,EAClBf,aAAc+I,EACdtO,iBAAkBA,EAClBqF,sBAAuBA,EACvBC,iBAAiB,MC3D3B,I,GAAMha,GAAUlM,UAAOC,IAAV,qHAIK,gBAAGovB,EAAH,EAAGA,QAAH,SAAYC,QAAmB,WAAQD,EAAU,EAAI,GAAGzQ,WAAzB,SAU3C2Q,GAAavvB,kBAAO2Z,GAAP3Z,CAAH,6CAGVwvB,GAAcxvB,kBAAO2Z,GAAP3Z,CAAH,mEAEP,gBAAGqvB,EAAH,EAAGA,QAAH,iBAAqBA,EAAU,GAAGzQ,WAAlC,SAGK,SAAS6Q,GAAT,GAKc,IAJ3BC,EAI0B,EAJ1BA,UACAC,EAG0B,EAH1BA,UAG0B,IAF1BhjB,YAE0B,MAFnB,GAEmB,MAD1B2iB,cAC0B,SAC1B,OACE,eAAC,GAAD,CAASD,QAAS1iB,EAAM2iB,OAAQA,EAAhC,UACGI,GAAa,cAACH,GAAD,CAAYvnB,SAAU0nB,EAAW/iB,KAAI,UAAKA,EAAKiS,WAAV,QAClD+Q,GAAa,cAACH,GAAD,CAAaxnB,SAAU2nB,EAAWhjB,KAAI,UAAKA,EAAKiS,WAAV,MAA4ByQ,QAAS1iB,OChC/F,I,kBAAMijB,GAAc5vB,UAAOmhB,MAAV,snBAUD,gBAAGpQ,EAAH,EAAGA,MAAH,OAAeA,GAASA,KAqB3B,qBAAG9X,MAAkBC,OAAO4R,cAInC+kB,GAAaC,OAAO,0BAEbC,GAAQr2B,IAAMoG,MAAK,YAWyC,IAVvEjE,EAUsE,EAVtEA,MACAm0B,EASsE,EATtEA,YACA7H,EAQsE,EARtEA,YACG9e,EAOmE,sDAOtE,OACE,cAACumB,GAAD,2BACMvmB,GADN,IAEExN,MAAOA,EACPusB,SAAU,SAAC9c,GAVE,IAAC2kB,GACM,MADNA,EAYH3kB,EAAMH,OAAOtP,MAAM+L,QAAQ,KAAM,OAXlBioB,GAAWtZ,KAAK2Z,aAAaD,MACvDD,EAAYC,IAaZE,UAAU,UACVprB,MAAM,eACNqrB,aAAa,MACbC,YAAY,MAEZnI,KAAK,OACLoI,QAAQ,sBACRnI,YAAaA,GAAe,MAC5BoI,UAAW,EACXC,UAAW,GACXC,WAAW,cC/DXC,GAAW1wB,UAAOC,IAAV,gJAID,cAAG6gB,SAAH,MAA8B,gCAIrC6P,GAAiB3wB,UAAO4K,OAAV,sVAMT,gBAAGkW,EAAH,EAAGA,SAAU7nB,EAAb,EAAaA,MAAb,OAA0B6nB,EAAW7nB,EAAMC,OAAOmO,KAAO,aAU5C,gBAAGpO,EAAH,EAAGA,MAAH,OAAe23B,aAAO,IAAM33B,EAAMC,OAAOioB,UAkB3D0P,IAdW7wB,UAAOC,IAAV,2PAIH,qBAAGhH,MAAkBC,OAAOmO,QAM1B,gBAAGpO,EAAH,EAAGA,MAAH,OAAe23B,aAAO,GAAK33B,EAAMC,OAAO4R,eAIrC9K,UAAOiS,KAAV,4GAMP6e,GAAa9wB,UAAOC,IAAV,oKAIG,qBAAG8wB,UAA6B,MAAQ,UACrC,qBAAG93B,MAAkBC,OAAOC,cAI5C63B,GAAYhxB,UAAOC,IAAV,uGAGC,qBAAGhH,MAAkBg4B,QAAQC,SAoB9B,SAASC,GAAT,GAec,IAd3Bt1B,EAc0B,EAd1BA,MACAm0B,EAa0B,EAb1BA,YAa0B,KAZ1BoB,MAY0B,EAX1BC,cAW0B,EAV1Bp1B,OACA8nB,QAS0B,OAVlB5f,GAAgB,IAAK,SAUH,EAT1B4f,kBACA/b,EAQ0B,EAR1BA,SAQ0B,IAP1BspB,6BAO0B,cAN1BC,YAM0B,EAL1BC,aAK0B,MALnB,KAKmB,MAJ1BT,iBAI0B,SAH1B/M,EAG0B,EAH1BA,cACA1kB,EAE0B,EAF1BA,GACA4mB,EAC0B,EAD1BA,gBAC0B,EACQxrB,oBAAS,GADjB,mBACnB+2B,EADmB,KACRC,EADQ,KAElBl1B,EAAYgR,eAAZhR,QAGFm1B,GAF0B/R,GAAkB,OAACpjB,QAAD,IAACA,SAAWtB,EAAZ,OAAuB8M,QAAvB,IAAuBA,SAAY9M,GAEzDyE,uBAAY,WACtC+xB,GAAa,KACZ,CAACA,KAEJ,OACE,eAACZ,GAAD,CAAYxxB,GAAIA,EAAhB,UACE,cAAC0xB,GAAD,CAAWD,UAAWA,EAAtB,SACE,eAACL,GAAD,CAAUnmB,MAAOwmB,EAAY,CAAEhjB,QAAS,IAAKkD,aAAc,OAAU,GAAI6P,SAAUwQ,EAAnF,UAEA,cAACX,GAAD,CACI7P,WAAY9Y,EACZ9G,UAAU,8BACVG,QAAS,WACFiwB,GACHI,GAAa,IALrB,SASI,eAACb,GAAD,WACGW,EACC,cAAC/B,GAAD,CAAoBC,UAAW8B,EAAKI,OAAQjC,UAAW6B,EAAKK,OAAQllB,KAAM,GAAI2iB,QAAM,IAClFtnB,EACF,cAAC2R,GAAD,CAAc3R,SAAUA,EAAU2E,KAAK,OAAOpC,MAAO,CAAE4P,YAAa,SAClE,KACHqX,EACC,eAAC,KAAD,kBACGA,QADH,IACGA,OADH,EACGA,EAAMI,OAAOrhC,OADhB,WACyBihC,QADzB,IACyBA,OADzB,EACyBA,EAAMK,OAAOthC,UAGtC,cAAC,KAAD,WACIyX,GAAYA,EAASzX,QAAUyX,EAASzX,OAAOgL,OAAS,GAAxD,UACKyM,EAASzX,OAAOoyB,MAAM,EAAG,GAD9B,cAGE3a,EAASzX,OAAOoyB,MAAM3a,EAASzX,OAAOgL,OAAS,EAAGyM,EAASzX,OAAOgL,SAHpE,OAIEyM,QAJF,IAIEA,OAJF,EAIEA,EAAUzX,SAAW,cAAC,GAAD,CAAgByW,cAAe,GAA/B,kCAG3BsqB,GAAyB,cAAC,IAAD,UAI7BP,GACA,mCACE,cAAC,GAAD,CACE7vB,UAAU,qBACVrF,MAAOA,EACPm0B,YAAa,SAAA8B,GACX9B,EAAY8B,cAQtBR,GAAyBvN,GACzB,cAAC+K,GAAD,CACE1lB,OAAQqoB,EACRvtB,UAAWytB,EACX5N,iBAAkBA,EAClBnD,iBAAkB5Y,EAClBie,sBAAuBjC,EACvBkC,gBAAiBA,O,kBC1KZpmB,mBAAK,YAAiD,IAA5B/I,EAA2B,EAA3BA,MACjCkC,EAAQ0D,qBAAWsQ,gBACzB,OACE,cAAC,IAAD,CACE8kB,GAAG,OACHC,GAAG,SACHC,GAAG,SACH1nB,MAAO,CAAEyG,OAAO,aAAD,OAAe/X,EAAMC,OAAO0V,UAAYqC,aAAc,QACrEihB,SAAS,OACThtB,eAAe,eACfD,WAAW,SAPb,SASGlO,EAAMo7B,MAAMhwB,KAAKiI,KAAI,SAAC9P,EAAO0a,EAAG7S,GAC/B,IAAMiwB,EAAsBpd,IAAM7S,EAAK5G,OAAS,EAChD,OAEE,cADA,CACC,WAAD,WACE,eAAC,IAAD,CAAM02B,GAAG,SAAShtB,WAAW,SAASsF,MAAO,CAAE8nB,WAAY,GAA3D,UACE,cAAC1Y,GAAD,CAAc3R,SAAU1N,EAAOqS,KAAK,WACpC,cAAC,KAAD,CAAMvH,SAAS,OAAOrD,MAAM,OAAOuwB,GAAG,SAAtC,SACGh4B,EAAM/J,YAGV6hC,EAAa,KAAO,cAAC,KAAD,CAAcrwB,MAAM,iBAP5BiT,WCVzB,SAASud,GAAT,GAA8F,IAAD,QAArEx7B,EAAqE,EAArEA,MAAO+b,EAA8D,EAA9DA,gBAA8D,EAC1CO,aAA2Btc,GAApEuc,EADmF,EACnFA,sBAAuBC,EAD4D,EAC5DA,cACzBif,EAAYz7B,EAAM6c,YAAcC,KAAUC,YAC1CX,EAA0BC,aAA+Brc,EAAO+b,GAEtE,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,eAAC5B,GAAD,WACE,eAACG,GAAD,WACE,cAAC,KAAD,CAAMjM,SAAS,OAAf,SAAuBotB,EAAY,mBAAqB,iBACxD,cAAC7hB,GAAD,CAAgBtJ,KAAK,4GAEvB,cAACgK,GAAD,UACE,cAAC,KAAD,CAAMjM,SAAS,OAAf,SACGotB,EAAS,8BACHrf,EAAwBY,KAAMC,eAD3B,aACH,EAAuCC,cAAc,GADlD,YACwDld,EAAMod,aAAanM,SAASzX,eADpF,QAEN,IAFM,8BAGH4iB,EAAwBY,KAAMG,cAH3B,aAGH,EAAsCD,cAAc,GAHjD,YAGuDld,EAAMqd,YAAYpM,SAASzX,eAHlF,QAIN,WAIV,eAAC2gB,GAAD,WACE,eAACG,GAAD,WACE,cAAC,KAAD,CAAMjM,SAAS,OAAf,0BACA,cAACuL,GAAD,CAAgBtJ,KAAK,sFAEvB,cAACiL,GAAD,CAAsBC,YAAae,OAGrC,eAACpC,GAAD,WACE,eAACG,GAAD,WACE,cAAC,KAAD,CAAMjM,SAAS,OAAf,oCACA,cAACuL,GAAD,CAAgBtJ,KAAK,2HAEvB,cAAC,KAAD,CAAMjC,SAAS,OAAf,SACGmO,EAAa,UAAMA,EAAcU,cAAc,GAAlC,YAAwCld,EAAMqd,YAAYpM,SAASzX,QAAW,cAYjG,SAASkiC,GAAT,GAAmE,IAApC17B,EAAmC,EAAnCA,MAAmC,EAC7CykB,KAAnB1I,EADgE,oBAGjE4f,EAAY/Z,QAAQ5hB,GAASA,EAAMo7B,MAAMhwB,KAAK5G,OAAS,GAE7D,OACE,cAACwQ,GAAD,CAAYC,IAAI,KAAhB,SACGjV,GACC,qCACE,cAACw7B,GAAD,CAAcx7B,MAAOA,EAAO+b,gBAAiBA,IAC5C4f,GACC,qCACE,cAAClhB,GAAD,IACA,eAACzF,GAAD,CAAYxB,MAAO,CAAEwD,QAAS,UAA9B,UACE,eAACsD,GAAD,WACE,cAAC,KAAD,CAAMjM,SAAS,OAAf,mBACA,cAACuL,GAAD,CAAgBtJ,KAAK,+EAEvB,cAAC,GAAD,CAAWtQ,MAAOA,eC3ElC,I,SAAM47B,GAAwB3yB,UAAOC,IAAV,gVAQhB,qBAAGhH,MAAkBC,OAAO4R,cAIxB,qBAAGtL,KAAmB,iBAAmB,uBAIzC,SAASozB,GAAT,GAAoF,IAAD,EAA5C77B,EAA4C,EAA5CA,MAAUsS,EAAkC,0BAC1FwpB,EzBSChT,GyBTyB9oB,EzBSVmpB,IyBPtB,OACE,cAACyS,GAAD,CAAuBnzB,KAAMmZ,QAAQ5hB,GAArC,SACE,cAAC07B,GAAD,2BAAyBppB,GAAzB,IAA+BtS,MAAK,iBAAEA,QAAF,IAAEA,IAAS87B,SAAX,aAAwB33B,OCfnD,SAAS43B,GAAT,GAAgF,IAAD,UAAzDC,EAAyD,EAAzDA,MAAO9f,EAAkD,EAAlDA,aAAcC,EAAoC,EAApCA,gBAClD8f,EAAiB/f,EAAY,OAAG8f,QAAH,IAAGA,OAAH,EAAGA,EAAO9e,cAAc,GAAxB,OAA6B8e,QAA7B,IAA6BA,GAA7B,UAA6BA,EAAOE,gBAApC,aAA6B,EAAiBhf,cAAc,GAEzFzU,EAAOmZ,SAAa,OAALoa,QAAK,IAALA,OAAA,EAAAA,EAAOG,gBAAP,OAAuBH,QAAvB,IAAuBA,OAAvB,EAAuBA,EAAOI,gBAC7Cl3B,EAAQgX,EAAY,iBACnB8f,QADmB,IACnBA,GADmB,UACnBA,EAAOI,qBADY,aACnB,EAAsB5iC,OADH,uBACiBwiC,QADjB,IACiBA,GADjB,UACiBA,EAAOG,oBADxB,aACiB,EAAqB3iC,QADtC,iBAEnBwiC,QAFmB,IAEnBA,GAFmB,UAEnBA,EAAOG,oBAFY,aAEnB,EAAqB3iC,OAFF,uBAEgBwiC,QAFhB,IAEgBA,GAFhB,UAEgBA,EAAOI,qBAFvB,aAEgB,EAAsB5iC,QAEhE,OACE,cAAC,KAAD,CAAM6U,SAAS,OAAOmF,MAAO,CAAErF,eAAgB,SAAUD,WAAY,SAAUuO,QAAS,QAAxF,SACGhU,EACC,4CACGwzB,QADH,IACGA,IAAkB,IADrB,IAC2B/2B,EACzB,cAAC8V,GAAD,CAAsB1Q,QAAS,kBAAM6R,GAAiBD,IAAtD,SACE,cAAC,KAAD,CAAa/E,MAAM,OAAOnM,MAAM,iBAIpC,MCdR,I,MAAMmK,GAAUlM,UAAOC,IAAV,+FACG,gBAAGhH,EAAH,EAAGA,MAAH,OAAesQ,aAAe,GAAKtQ,EAAMC,OAAO0V,aAK1DwkB,GAAmBpzB,UAAOC,IAAV,sMAUhBozB,GAAoBrzB,kBAAOszB,KAAPtzB,CAAH,8CACX,qBAAG/G,MAAkBC,OAAO8U,WAOxC,SAASulB,GAAT,GAA6D,IAAD,QAAhCj5B,EAAgC,EAAhCA,MAClByS,EAAYS,eAAZT,QAEFymB,EAAW,iBAAGl5B,QAAH,IAAGA,GAAH,UAAGA,EAAO/J,cAAV,aAAG,EAAe0lB,qBAAlB,QAAmC,GAC9CwH,EAAS,iBAAGnjB,QAAH,IAAGA,GAAH,UAAGA,EAAO8D,YAAV,aAAG,EAAa6X,qBAAhB,QAAiC,GAE1C2G,EAAYF,KAEZ+W,EAAwBhxB,mBAAQ,WACpC,SAAKnI,IAAUyS,IAERzI,OAAOC,KAAKqY,GAAWnW,MAAK,SAAC2W,GAAkB,IAAD,IAC7CsW,EAAY9W,EAAUQ,GAC5B,OAAIsW,EAAUC,OAAOr5B,MAGd,UAAAo5B,EAAUnjC,cAAV,eAAkB0lB,iBAAkBud,IAAe,UAAAE,EAAUt1B,YAAV,eAAgB6X,iBAAkBwH,QAE7F,CAACnjB,EAAOyS,EAAS6P,EAAW4W,EAAa/V,IAE5C,OAAKnjB,EAGH,cAAC,GAAD,CAASqB,MAAO83B,EAAhB,SACE,eAACriB,GAAD,CAASpF,IAAI,MAAb,UACE,eAACD,GAAD,CAAYC,IAAI,OAAhB,UACE,cAAC2N,GAAD,CAAc3R,SAAU1N,EAAOqS,KAAK,SACpC,uCAEF,eAACZ,GAAD,CAAYC,IAAI,OAAOC,QAAQ,aAA/B,UACE,eAAC,KAAD,WACG3R,GAASA,EAAM8D,MAAQ9D,EAAM/J,QAAU+J,EAAM8D,OAAS9D,EAAM/J,OAA5D,UACM+J,EAAM8D,KADZ,aACqB9D,EAAM/J,OAD3B,KAEG+J,EAAM8D,MAAQ9D,EAAM/J,OAAQ,OAEjCwc,GACC,cAAC7B,GAAD,CAAcX,MAAO,CAAEmJ,WAAY,KAAOvX,KAAMgR,aAAeJ,EAASzS,EAAM5J,QAAS,SAAvF,SACE,eAAC,KAAD,CAAMqU,MAAOzK,EAAM5J,QAAnB,UAA6B6pB,aAAejgB,EAAM5J,SAAlD,kCAjBO,KA0BN,SAASkjC,GAAT,GAQX,IAPFxqB,EAOC,EAPDA,OACA/Y,EAMC,EANDA,OACAwiB,EAKC,EALDA,UAKC,EACiDnY,oBAAS,GAD1D,mBACMm5B,EADN,KACyBC,EADzB,KAEKC,EAAmBp0B,uBAAY,kBAAMm0B,GAAqB,SAACE,GAAD,OAASA,OAAK,IAExEC,EAAgBt0B,uBAAY,kBAAM,OAAM,IAC9C,OACE,cAACgK,GAAD,CAAOP,OAAQA,EAAQlF,UAAW+vB,EAAe/qB,UAAW,GAA5D,SACE,cAACkqB,GAAD,CAAkBlyB,UAAU,0BAA5B,SACE,eAAC6K,GAAD,CAAYC,IAAI,KAAhB,UACE,eAACoF,GAAD,CAASpF,IAAI,MAAb,UACE,cAACqnB,GAAD,IACA,cAAC,KAAD,CAAMtxB,MAAM,UAAZ,+BAEF,eAAC,KAAD,2DAC+C,qCAD/C,sIAIA,cAAC,KAAD,wKAIA,eAAC,KAAD,kDACsC,2EAErC1R,EAAO+Z,KAAI,SAAC9P,GACX,OAAO,cAACi5B,GAAD,CAAsCj5B,MAAOA,GAAtBA,EAAM5J,YAEtC,eAACwgB,GAAD,WACE,8BACE,wBAAOgjB,QAAQ,sBAAsB3pB,MAAO,CAAEqkB,OAAQ,UAAWuF,WAAY,QAA7E,UACE,uBACE70B,GAAG,sBACH4oB,KAAK,WACLhnB,UAAU,sBACVkzB,QAASP,EACTzL,SAAU2L,IACT,IACH,cAAC,KAAD,CAAMM,GAAG,OAAO/B,GAAG,MAAnB,+BAKJ,cAAC,IAAD,CACEznB,UAAWgpB,EACXpnB,QAAQ,SACRlC,MAAO,CAAE2D,MAAO,SAChBhN,UAAU,uBACVG,QAAS,WACPwR,KANJ,gCC/HZ,I,eAAMugB,GAAmBpzB,UAAOC,IAAV,sMAUhBozB,GAAoBrzB,kBAAOszB,KAAPtzB,CAAH,8CACX,qBAAG/G,MAAkBC,OAAO8U,WAGzB,SAASsmB,GAAT,GAQX,IAPFlrB,EAOC,EAPDA,OACAmrB,EAMC,EANDA,gBACA1hB,EAKC,EALDA,UAKC,EACiDnY,oBAAS,GAD1D,mBACMm5B,EADN,KACyBC,EADzB,KAEKC,EAAmBp0B,uBAAY,kBAAMm0B,GAAqB,SAACE,GAAD,OAASA,OAAK,IAExEC,EAAgBt0B,uBAAY,kBAAM,OAAM,IAC9C,OACE,cAACgK,GAAD,CAAOP,OAAQA,EAAQlF,UAAW+vB,EAAe/qB,UAAW,GAA5D,SACE,cAAC,GAAD,CAAkBhI,UAAU,0BAA5B,SACE,eAAC6K,GAAD,CAAYC,IAAI,KAAhB,UACE,eAACoF,GAAD,CAASpF,IAAI,MAAb,UACE,cAAC,GAAD,IACA,cAAC,KAAD,CAAMjK,MAAM,UAAZ,8BAEmB,KAApBwyB,GACC,qCACE,eAAC,KAAD,CAAMxyB,MAAM,UAAZ,oCACyB,iCAASwyB,IADlC,aAGA,cAAC,KAAD,CAAMxyB,MAAM,UAAZ,SACuB,WAApBwyB,EACG,iEACA,8FAIV,eAACrjB,GAAD,WACE,8BACE,wBAAOgjB,QAAQ,sBAAsB3pB,MAAO,CAAEqkB,OAAQ,UAAWuF,WAAY,QAA7E,UACE,uBACE70B,GAAG,sBACH4oB,KAAK,WACLhnB,UAAU,sBACVkzB,QAASP,EACTzL,SAAU2L,IACT,IACH,cAAC,KAAD,CAAMM,GAAG,OAAT,+BAGJ,cAAC,IAAD,CACExpB,UAAWgpB,EACXpnB,QAAQ,SACRlC,MAAO,CAAE2D,MAAO,SAChB7M,QAAS,WACPyyB,GAAqB,GACrBjhB,KANJ,gCC9DZ,IAAM3G,GAAUlM,kBAAO+L,GAAP/L,CAAH,sDAIPw0B,GAAWx0B,kBAAOkR,GAAPlR,CAAH,6CAIRy0B,GAASz0B,UAAOC,IAAV,sPAGU,gBAAGhH,EAAH,EAAGA,MAAOy7B,EAAV,EAAUA,UAAV,SAAqB7pB,SAC5B5R,EAAMC,OAAOy7B,mBAAqBD,EAAYz7B,EAAMC,OAAO4Y,QAAU7Y,EAAMC,OAAO+I,WAOtF,gBAAGhJ,EAAH,EAAGA,MAAOy7B,EAAV,EAAUA,UAAV,SAAqB7pB,SACjB5R,EAAMC,OAAOmO,KAAOqtB,EAAYz7B,EAAMC,OAAO4Y,QAAU,aAGhE8iB,GAAY50B,UAAOC,IAAV,qGAMT40B,GAAY70B,UAAOC,IAAV,kLAMT,gBAAGhH,EAAH,EAAGA,MAAO67B,EAAV,EAAUA,cAAV,OAA8BvrB,aAAe,GAAKurB,EAAgB77B,EAAMC,OAAO4Y,QAAU7Y,EAAMC,OAAO+I,YACtG,gBAAGhJ,EAAH,EAAGA,MAAH,SAAU67B,cAAqC77B,EAAMC,OAAO+I,QAAUhJ,EAAMC,OAAOy7B,sBAmB1E,SAASI,GAAT,GAA2D,IAAhCC,EAA+B,EAA/BA,MACxC,OACE,cAAC,GAAD,CAAS/oB,QAAQ,SAAjB,SACE,eAACuoB,GAAD,WACGQ,EAAM5qB,KAAI,SAAC6qB,EAAMjgB,GAChB,OAEE,cADA,CACC4f,GAAD,WACE,cAACH,GAAD,CAAQC,UAAWO,EAAMpqB,UAAWmqB,EAAMhgB,EAAI,IAAY,IAANA,EAApD,SACGigB,EAAO,SAAMjgB,EAAI,IAEpB,cAAC6f,GAAD,CAAWC,cAAeG,MAJZjgB,MAQpB,cAACyf,GAAD,CAAQ5pB,UAAWmqB,EAAMA,EAAMz5B,OAAS,GAAxC,SAA6Cy5B,EAAMz5B,OAAS,S,ICjE9D25B,G,kBCRS,SAASC,GAAet5B,EAAUiJ,GAAmB,IAAD,EACrBpK,mBAAYmB,GADS,mBAC1Du5B,EAD0D,KAC1CC,EAD0C,KAiBjE,OAdA98B,qBAAU,WAER,IAAMqzB,EAAU0J,YAAW,WACzBD,EAAkBx5B,KACjBiJ,GAKH,OAAO,WACLywB,aAAa3J,MAEd,CAAC/vB,EAAOiJ,IAEJswB,ECZM,SAASI,GACtBC,GAEA,IAAMC,EAAYpb,aAAUmb,GACtBE,ECAO,SAAoBjlC,GAAiE,IAAD,MAC3FklC,EAAmBT,GAAYzkC,EAAS,KACxCimB,EAAkBlU,mBAAQ,WAC9B,IAAKmzB,IAAqBtb,aAAUsb,GAAmB,MAAO,MAAC16B,GAC/D,IACE,OAAO06B,EAAmB,CAAChf,oBAAS,GAAD,OAAIgf,EAAiB3f,cAAcrB,OAAO,GAA1C,mBAAgE,MAAC1Z,GACpG,MAAOS,GACP,MAAO,MAACT,MAET,CAAC06B,IACE/e,EAAoBC,cAAwB,GAC5CG,EAAkBD,aAAoBH,EAAmB,WAAYF,GACrEI,EAAqB,UAAGE,EAAgBC,cAAnB,aAAG,EAAyB,GACjDC,EAAmBC,aACvBL,IAA0BV,GAAOU,GAAyBA,OAAwB7b,GAClF,GAEIkD,EAAO4Y,aAAoBG,EAAkB,OAAQR,GAErDkf,EAAUD,IAAqBllC,EACrC,MAAO,CACLolC,QAASD,EAAU,KAAH,oBAAUz3B,EAAK8Y,cAAf,aAAU,EAAc,UAAxB,QAA8B,KAC9CG,QAASwe,GAAW5e,EAAgBI,SAAWjZ,EAAKiZ,SDtBhC0e,CAAWL,QAAax6B,GACxC86B,EEHO,SAAuBhgB,GAAwE,IAAD,MACrGigB,EAAgBd,GAAYnf,EAAS,KACrCW,EAAkBlU,mBAAQ,WAC9B,IAAKwzB,EAAe,MAAO,MAAC/6B,GAC5B,IACE,OAAO+6B,EAAgB,CAACrf,oBAASqf,IAAkB,MAAC/6B,GACpD,MAAOS,GACP,MAAO,MAACT,MAET,CAAC+6B,IACEpf,EAAoBC,cAAwB,GAC5CG,EAAkBD,aAAoBH,EAAmB,WAAYF,GACrEI,EAAqB,UAAGE,EAAgBC,cAAnB,aAAG,EAAyB,GACjDC,EAAmBC,aACvBL,IAA0BV,GAAOU,GAAyBA,OAAwB7b,GAClF,GAEIg7B,EAAOlf,aAAoBG,EAAkB,OAAQR,GAErDkf,EAAUI,IAAkBjgB,EAClC,MAAO,CACLtlB,QAASmlC,EAAU,KAAH,oBAAUK,EAAKhf,cAAf,aAAU,EAAc,UAAxB,QAA8B,KAC9CG,QAASwe,GAAW5e,EAAgBI,SAAW6e,EAAK7e,SFnBvC8e,CAAcV,GAE7B,MAAO,CACLpe,QAASse,EAActe,SAAW2e,EAAO3e,QACzC3mB,QAASglC,GAAaM,EAAOtlC,QAC7B0N,KAAMu3B,EAAcG,QAAUH,EAAcG,SAAWJ,GAAaM,EAAOtlC,SAAU+kC,GAAwB,MFuBjH,SAASW,GACPr/B,GAIa,IAHb+b,EAGY,uDAHcujB,KAC1Bra,EAEY,uDAFOsa,KACnBC,EACY,yCAC0B/oB,eAA9BhR,EADI,EACJA,QAASuQ,EADL,EACKA,QAAS8d,EADd,EACcA,QADd,EAG0B2K,GAAOe,GAA5BC,EAHL,EAGJ9lC,QACFqpB,EAAuC,OAA3Bwc,EAAkC/5B,EAAUg6B,EAE9D,OAAO/zB,mBAAQ,WACb,IAAK1L,IAAUgjB,IAAc8Q,IAAYruB,IAAYuQ,EAAS,MAAO,GAErE,IAAM0pB,EAA4BC,aAAkB3pB,EAAS8d,EAASruB,GACtE,IAAKi6B,EACH,MAAO,GAGT,IAAME,EAAc,GAwBpB,OAtBAA,EAAYrxB,KAEVsxB,KAAOC,mBAAmB9/B,EAAO,CAC/B+/B,eAAe,EACfhkB,gBAAiB,IAAIikB,KAAQ7uB,KAAKO,OAAOuuB,KAAKC,MAAMnkB,IAAmBokB,MACvEnd,YACAod,IAAKnb,KAILjlB,EAAM6c,YAAcC,KAAUC,aAChC6iB,EAAYrxB,KAEVsxB,KAAOC,mBAAmB9/B,EAAO,CAC/B+/B,eAAe,EACfhkB,gBAAiB,IAAIikB,KAAQ7uB,KAAKO,OAAOuuB,KAAKC,MAAMnkB,IAAmBokB,MACvEnd,YACAod,IAAKnb,KAKJ2a,EAAYvsB,KAAI,SAACgtB,GAAD,MAAiB,CAAEA,aAAYX,iBACrD,CAACj6B,EAASsW,EAAiB/F,EAASiP,EAAU6O,EAAS9Q,EAAWhjB,IAKhE,SAASsgC,GACdtgC,GAI+F,IAH/F+b,EAG8F,uDAHpEujB,KAC1Bra,EAE8F,uDAF3Esa,KACnBC,EAC8F,yCACxD/oB,eAA9BhR,EADsF,EACtFA,QAASuQ,EAD6E,EAC7EA,QAAS8d,EADoE,EACpEA,QAEpByM,EAAYlB,GAAqBr/B,EAAO+b,EAAiBkJ,EAAUua,GAEnEgB,EAAiBC,eALuE,EAOxDhC,GAAOe,GAA5BC,EAP6E,EAOtF9lC,QACFqpB,EAAuC,OAA3Bwc,EAAkC/5B,EAAUg6B,EAE9D,OAAO/zB,mBAAQ,WACb,OAAK1L,GAAU8zB,GAAYruB,GAAYuQ,EAGlCgN,EAOE,CACL9b,MAAOi3B,GAAkBuC,MACzBrpB,SAAS,WAAD,4BAAE,8CAAAjI,EAAA,sEAC0CuxB,QAAQC,IACxDL,EAAUltB,KAAI,SAAC9D,GAAU,IAAD,IAIlBA,EAFF8wB,WAAcQ,EAFM,EAENA,WAAYC,EAFN,EAEMA,KAAMh8B,EAFZ,EAEYA,MAChC46B,EACEnwB,EADFmwB,SAEI/mB,GAAW7T,GAASwa,GAAOxa,GAAS,GAAK,CAAEA,SAEjD,OAAO,EAAA46B,EAASqB,aAAYF,GAArB,qBAAoCC,GAApC,QAA0CnoB,KAC9CtU,MAAK,SAAC28B,GACL,MAAO,CACLzxB,OACAyxB,kBAGHv8B,OAAM,SAACw8B,GAAc,IAAD,EAGnB,OAFAt8B,QAAQu8B,KAAK,wDAAyD3xB,IAE/D,EAAAmwB,EAASyB,YAAWN,GAApB,qBAAmCC,GAAnC,QAAyCnoB,KAC7CtU,MAAK,SAAC8b,GAEL,OADAxb,QAAQu8B,KAAK,uDAAwD3xB,EAAM0xB,EAAU9gB,GAC9E,CAAE5Q,OAAM3K,MAAO,IAAIkZ,MAAM,mEAEjCrZ,OAAM,SAAC28B,GAEN,IAAI1M,EACJ,OAFA/vB,QAAQu8B,KAAK,mBAAoB3xB,EAAM6xB,GAE/BA,EAAUC,QAChB,IAAK,8CACL,IAAK,0CACH3M,EACE,6HACF,MACF,QACEA,EAAY,uDAAmD0M,EAAUC,OAA7D,wEAEhB,MAAO,CAAE9xB,OAAM3K,MAAO,IAAIkZ,MAAM4W,cApCpC,UACF4M,EADE,OA2CFC,EAAuBD,EAAe5zB,MAC1C,SAAC8zB,EAAIC,EAAIlgB,GAAT,MACE,gBAAiBigB,IAAOC,IAAOlgB,EAAK/c,OAAS,GAAK,gBAAiB+c,EAAKkgB,EAAK,OA7CzE,sBAiDAC,EAAaJ,EAAet9B,QAAO,SAACuL,GAAD,MAA8B,UAAWA,MACnE/K,OAAS,GAlDlB,sBAkD2Bk9B,EAAWA,EAAWl9B,OAAS,GAAGI,MAlD7D,aAmDA,IAAIkZ,MAAM,8EAnDV,gBA4DJyjB,EALFhyB,KACEmwB,EAxDI,EAwDJA,SAxDI,IAyDJW,WAAcQ,EAzDV,EAyDUA,WAAYC,EAzDtB,EAyDsBA,KAAMh8B,EAzD5B,EAyD4BA,MAElCk8B,EACEO,EADFP,YA3DM,kBA8DDtB,EAASmB,GAAT,MAAAnB,EAAQ,aAAgBoB,GAAhB,qBACba,SAAUC,aAAmBZ,IACzBl8B,IAAUwa,GAAOxa,GAAS,CAAEA,QAAOmO,KAAMxN,GAAY,CAAEwN,KAAMxN,OAEhEpB,MAAK,SAACmuB,GACL,IAAMqP,EAAc7hC,EAAMqd,YAAYpM,SAASzX,OACzCsoC,EAAe9hC,EAAMod,aAAanM,SAASzX,OAC3C6jB,EAAcrd,EAAMqd,YAAYH,cAAc,GAC9CE,EAAepd,EAAMod,aAAaF,cAAc,GAEhD6kB,EAAI,eAAW1kB,EAAX,YAA0BwkB,EAA1B,gBAA6CzkB,EAA7C,YAA6D0kB,GACjEE,EACJhf,IAAcvd,EACVs8B,EADJ,UAEOA,EAFP,eAGMvC,GAA0Bjc,aAAUic,GAChChc,aAAegc,GACfA,GAOZ,OAJAgB,EAAehO,EAAU,CACvByP,QAASD,IAGJxP,EAASvc,QAEjBxR,OAAM,SAACG,GAEN,MAAoB,QAAX,OAALA,QAAK,IAALA,OAAA,EAAAA,EAAOtC,MACH,IAAIwb,MAAM,0BAGhBnZ,QAAQC,MAAR,cAA6BA,EAAOi8B,EAAYC,EAAMh8B,GAChD,IAAIgZ,MAAJ,uBAA0BlZ,EAAMkS,eA/FpC,4CAAF,kDAAC,GAmGTlS,MAAO,MA3GwB,OAA3B46B,EACK,CAAEt4B,MAAOi3B,GAAkB+D,QAAS7qB,SAAU,KAAMzS,MAAO,qBAE7D,CAAEsC,MAAOi3B,GAAkBgE,QAAS9qB,SAAU,KAAMzS,MAAO,MAN3D,CAAEsC,MAAOi3B,GAAkB+D,QAAS7qB,SAAU,KAAMzS,MAAO,0BAgHnE,CAAC5E,EAAO8zB,EAASruB,EAASuQ,EAASgN,EAAWwc,EAAwBe,EAAWC,K,SAhNhFrC,O,qBAAAA,I,qBAAAA,I,kBAAAA,Q,KAmNSmC,I,oBK5NR,SAAS8B,GAAgBnxB,EAAgC+E,GAE9D,OAAOA,GAAW/E,IAAaC,KAAQmxB,KAAKrsB,GAAW/E,aAAoB2P,KAAQ3P,OAAW9M,EAGzF,SAASm+B,GACdtxB,EACAgF,GAEA,IAAMzS,EAAQyN,GAAkBgF,EAAUosB,GAAgBpxB,EAAeC,SAAU+E,QAAW7R,EAC9F,OAAOZ,GAASyN,EAAiB,IAAI8W,KAAYvkB,EAAOyN,EAAeK,UAAOlN,EAGzE,SAASo+B,GAAeh/B,GAC7B,OAAIA,EAAMq5B,OAAOyF,KAAK9+B,EAAMyS,UAAkB9E,KACvC3N,ECRT,IAEYi/B,GAFNC,GAAiB,I,OAAIC,GAAUC,MAS9B,SAASC,GAASza,GAAyF,IACxGnS,EAAYS,eAAZT,QAEF1c,EAASoS,mBACb,kBACEyc,EAAW9U,KAAI,mCAAEwvB,EAAF,KAAaC,EAAb,WAA4B,CACzCV,GAAgBS,EAAW7sB,GAC3BosB,GAAgBU,EAAW9sB,SAE/B,CAACA,EAASmS,IAGN4a,EAAgBr3B,mBACpB,kBACEpS,EAAO+Z,KAAI,YAAuB,IAAD,mBAApBkS,EAAoB,KAAZC,EAAY,KAC/B,OAAOD,GAAUC,IAAWD,EAAOqX,OAAOpX,GAAUC,KAAKC,WAAWH,EAAQC,QAAUrhB,OAE1F,CAAC7K,IAGGovB,EAAUlB,aAA8Bub,EAAeN,GAAgB,eAC7E,OAAO/2B,mBAAQ,WACb,OAAOgd,EAAQrV,KAAI,SAAC8M,EAAQlC,GAAO,IACjB+kB,EAAsB7iB,EAA9BA,OAAkBG,EAAYH,EAAZG,QACpBiF,EAASjsB,EAAO2kB,GAAG,GACnBuH,EAASlsB,EAAO2kB,GAAG,GAEzB,GAAIqC,EAAS,MAAO,CAACkiB,GAAUL,QAAS,MACxC,IAAK5c,IAAWC,GAAUD,EAAOqX,OAAOpX,GAAS,MAAO,CAACgd,GAAUN,QAAS,MAC5E,IAAKc,EAAU,MAAO,CAACR,GAAUS,WAAY,MAPb,IAQxBC,EAAuBF,EAAvBE,SAAUC,EAAaH,EAAbG,SARc,EASP5d,EAAO6d,YAAY5d,GAAU,CAACD,EAAQC,GAAU,CAACA,EAAQD,GATlD,mBASzBsV,EATyB,KASjBC,EATiB,KAUhC,MAAO,CACL0H,GAAUa,OACV,IAAI5d,KAAK,IAAIqC,KAAY+S,EAAQqI,EAASrb,YAAa,IAAIC,KAAYgT,EAAQqI,EAAStb,mBAG3F,CAACa,EAASpvB,IAGR,SAASgqC,GAAQ/d,EAAmBC,GACzC,OAAOod,GAAS,CAAC,CAACrd,EAAQC,KAAU,GCjDtC,SAAS+d,GAAkBV,EAAsBC,GAA+B,IACtE9sB,EAAYS,eAAZT,QAGFwtB,EAAiB93B,mBAAQ,kBAAOsK,EAAUytB,KAA8BztB,GAAW,KAAK,CAACA,IAGzF0tB,EAA8Bh4B,mBAClC,kBACEi4B,KAAQH,GAAO,SAACzB,GAAD,OAA4ByB,EAAMnwB,KAAI,SAACuwB,GAAD,MAAe,CAAC7B,EAAM6B,SAAa5/B,QACtF,mCAAE6/B,EAAF,KAAMC,EAAN,YAAcD,EAAGlqC,UAAYmqC,EAAGnqC,aAEpC,CAAC6pC,IAZ0E,EAepDxtB,EACrB,CAACosB,GAAgBS,EAAW7sB,GAAUosB,GAAgBU,EAAW9sB,IACjE,MAAC7R,OAAWA,GAjB6D,mBAetEohB,EAfsE,KAe9DC,EAf8D,KAsDvEue,EAAWnB,GAnC6Bl3B,mBAC5C,kBACE6Z,GAAUC,EACN,CAEE,CAACD,EAAQC,IAFX,oBAIKge,EAAMnwB,KAAI,SAAC0uB,GAAD,MAA0B,CAACxc,EAAQwc,OAJlD,aAMKyB,EAAMnwB,KAAI,SAAC0uB,GAAD,MAA0B,CAACvc,EAAQuc,OANlD,aAQK2B,IAEF1/B,QAAO,SAAC1K,GAAD,OAAsCsoB,QAAQtoB,EAAO,IAAMA,EAAO,OACzE0K,QAAO,mCAAE6/B,EAAF,KAAMC,EAAN,YAAcD,EAAGlqC,UAAYmqC,EAAGnqC,WAGvCqK,QAAO,YAAe,IAAD,mBAAZ6/B,EAAY,KAARC,EAAQ,KACpB,IAAK9tB,EAAS,OAAO,EACrB,IAAMguB,EAAcC,KAAajuB,GACjC,IAAKguB,EAAa,OAAO,EAEzB,IAAME,EAAoCF,EAAYH,EAAGlqC,SACnDwqC,EAAoCH,EAAYF,EAAGnqC,SAEzD,OAAKuqC,IAAiBC,KAClBD,IAAiBA,EAAax2B,MAAK,SAACq0B,GAAD,OAAU+B,EAAGlH,OAAOmF,UACvDoC,IAAiBA,EAAaz2B,MAAK,SAACq0B,GAAD,OAAU8B,EAAGjH,OAAOmF,UAI/D,KACN,CAACxc,EAAQC,EAAQge,EAAOE,EAAW1tB,KAMrC,OAAOtK,mBACL,kBACE6B,OAAO8X,OACL0e,EAEG//B,QAAO,SAACmc,GAAD,OAAgDyB,QAAQzB,EAAO,KAAOqiB,GAAUa,QAAUljB,EAAO,OAExGsB,QAAwC,SAAC1Y,EAAD,GAAqB,IAAD,EAAVq7B,EAAU,oBAE3D,OADAr7B,EAAKq7B,EAAKC,eAAe1qC,SAAzB,UAAoCoP,EAAKq7B,EAAKC,eAAe1qC,gBAA7D,QAAyEyqC,EAClEr7B,IACN,OAET,CAACg7B,K,SDpEOvB,O,qBAAAA,I,2BAAAA,I,mBAAAA,I,sBAAAA,Q,mBESL,SAAS8B,KACd,OAAOn8B,aAAwC,SAACjB,GAAD,OAAWA,EAAMq9B,QAiD3D,SAASC,GAAe1/B,EAAgBmM,GAC7C,GAAKnM,GAAUmM,EAGf,IACE,IAAMwzB,EAAmBC,sBAAW5/B,EAAOmM,EAASnX,UAAU+tB,WAC9D,GAAyB,MAArB4c,EACF,OAAOxzB,aAAoB2P,KACvB,IAAIkH,KAAY7W,EAAUE,KAAKO,OAAO+yB,IACtClzB,KAAeC,MAAML,KAAKO,OAAO+yB,IAEvC,MAAO7/B,GAEPD,QAAQu8B,KAAR,yCAA+Cp8B,EAA/C,KAAyDF,IAM7D,IAAM+/B,GAAoC,CACxC,6CACA,6CACA,8CAQF,SAASC,GAAgB5kC,EAAc6kC,GACrC,OACE7kC,EAAMo7B,MAAMhwB,KAAKsE,MAAK,SAACnM,GAAD,OAAWA,EAAM5J,UAAYkrC,MACnD7kC,EAAMo7B,MAAM0J,MAAMp1B,MAAK,SAAC+qB,GAAD,OAAUA,EAAK4J,eAAe1qC,UAAYkrC,KAK9D,SAASE,KAMb,IAAD,QAuCIC,EAKe,EAIwC,EA/CnDv/B,EAAYC,cAAZD,QADR,EASI6+B,KALFW,EAJF,EAIEA,iBACAC,EALF,EAKEA,WAC6BC,EAN/B,EAMGnoB,KAAMG,OAAU4J,WACaqe,EAPhC,EAOGpoB,KAAMC,QAAW8J,WAClB/D,EARF,EAQEA,UAGIqiB,EAAgBve,GAAYqe,GAC5BG,EAAiBxe,GAAYse,GAC7BG,EAAkB9G,GAAM,OAACzb,QAAD,IAACA,SAAa7e,GACtCqhC,EAAiB,UAAkB,OAAdxiB,EAAqBvd,EAAU8/B,EAAgB5rC,eAAnD,QAA+D,KAEhF8rC,EAAwBvd,GAAmB,OAACziB,QAAD,IAACA,SAAWtB,EAAW,QACtEkhC,QADsE,IACtEA,SAAiBlhC,EADqD,OAEtEmhC,QAFsE,IAEtEA,SAAkBnhC,IAGds3B,EAAqBwJ,IAAqBjoB,KAAMG,MAChDuoB,EAAelB,GAAeU,EAAD,UAAczJ,EAAY4J,EAAgBC,SAA1C,aAA6DnhC,GAE1FwhC,EDpDD,SAAyBC,EAAmCC,GACjE,IAAMC,EAAevC,GAAiB,OAACqC,QAAD,IAACA,OAAD,EAACA,EAAkB30B,SAAU40B,GAEnE,OAAOn6B,mBAAQ,WACoD,IAAD,EAAhE,OAAIk6B,GAAoBC,GAAeC,EAAathC,OAAS,GAC3D,UACEuhC,KAAMJ,iBAAiBG,EAAcF,EAAkBC,EAAa,CAAEG,QAAS,EAAGC,cAAe,IAAK,UADxG,QAIK,OACN,CAACH,EAAcF,EAAkBC,IC0CXK,CAAgBzK,EAAYiK,OAAevhC,EAA5B,OAAuCmhC,QAAvC,IAAuCA,SAAkBnhC,GAC3FgiC,EDrCD,SAA0BC,EAAuBC,GACtD,IAAMP,EAAevC,GAAkB6C,EAAD,OAAaC,QAAb,IAAaA,OAAb,EAAaA,EAAmBp1B,UAEtE,OAAOvF,mBAAQ,WACoD,IAAD,EAAhE,OAAI06B,GAAcC,GAAqBP,EAAathC,OAAS,GAC3D,UACEuhC,KAAMI,kBAAkBL,EAAcM,EAAYC,EAAmB,CAAEL,QAAS,EAAGC,cAAe,IAAK,UADzG,QAKK,OACN,CAACH,EAAcM,EAAYC,IC0BJC,CAAgB,OAACjB,QAAD,IAACA,SAAiBlhC,EAAYs3B,OAA2Bt3B,EAAfuhC,GAE9Ea,EAAU9K,EAAYkK,EAAmBQ,EAEzCK,GAAgB,oBACnBxpB,KAAMG,MAAQsoB,EAAsB,IADjB,eAEnBzoB,KAAMC,OAASwoB,EAAsB,IAFlB,GAKhBtd,GAA2C,oBAC9CnL,KAAMG,MADwC,OAChCkoB,QADgC,IAChCA,SAAiBlhC,GADe,eAE9C6Y,KAAMC,OAFwC,OAE/BqoB,QAF+B,IAE/BA,SAAkBnhC,GAFa,IAM5CsB,IACHu/B,EAAa,kBAGVU,KACHV,EAAU,UAAGA,SAAH,QAAiB,mBAGxB7c,EAAWnL,KAAMG,QAAWgL,EAAWnL,KAAMC,UAChD+nB,EAAU,UAAGA,SAAH,QAAiB,kBAG7B,IACyB,EADnByB,EAAcljB,aAAUiiB,GAC9B,GAAKA,GAAOiB,GAEL,IAC6C,IAAlD9B,GAAwBh0B,QAAQ81B,IAC/Bd,GAAoBf,GAAgBe,EAAkBc,IACtDN,GAAqBvB,GAAgBuB,EAAmBM,GACzD,CAAC,IAAD,EACAzB,EAAU,UAAGA,SAAH,QAAiB,0BAN3BA,EAAU,UAAGA,SAAH,QAAiB,oBAtD7B,MA+D0BvgB,KAAnB1I,EA/DP,oBAiEMK,EAA0BmqB,GAAWxqB,GAAmBM,aAA+BkqB,EAASxqB,GAjEtG,EAoE8B,CAC5ByqB,EAAiBxpB,KAAMG,OACvBf,EAA0BA,EAAwBY,KAAMG,OAAS,MAF5DupB,EApEP,KAoEkBC,EApElB,KA6EA,OAJID,GAAaC,GAAYD,EAAUhrB,SAASirB,KAC9C3B,EAAU,uBAAmB2B,EAAS11B,SAASzX,OAArC,aAGL,CACL2uB,aACAqe,mBACAd,eACAa,QAAO,OAAEA,QAAF,IAAEA,SAAWpiC,EACpB6gC,cAIJ,SAAS4B,GAA8BC,GACrC,GAAwB,kBAAbA,EAAuB,CAChC,IAAMC,EAAQvjB,aAAUsjB,GACxB,GAAIC,EAAO,OAAOA,EAClB,GAA+B,QAA3BD,EAAS5f,cAAyB,MAAO,MAC7C,IAAc,IAAV6f,EAAiB,MAAO,MAE9B,cAAO,YAAS,GAYlB,IClNYC,GDkNNloB,GAAiB,qFACjBmoB,GAAgB,sBAUf,SAASC,GAA2BC,GAAgC,IAAD,EACpE7B,EAAgBuB,GAA8BM,EAAS7B,eACvDC,EAAiBsB,GAA8BM,EAAS5B,gBACxDD,IAAkBC,IACmB,kBAA5B4B,EAAS5B,eAClBD,EAAgB,GAEhBC,EAAiB,IAIrB,IA/BoCuB,EA+B9B7jB,EApBR,SAA4BA,GAC1B,MAAyB,kBAAdA,EAA+B,KAC1BO,aAAUP,KAEtBnE,GAAeW,KAAKwD,IACpBgkB,GAAcxnB,KAAKwD,GADoBA,EAEpC,MAcWmkB,CAAmBD,EAASlkB,WAE9C,OAAO,EAAP,kBACGhG,KAAMG,MAAQ,CACb4J,WAAYse,IAFhB,eAIGroB,KAAMC,OAAS,CACd8J,WAAYue,IALhB,4BA/B2B,kBAFSuB,EAwCOK,EAASE,cAtCZC,MAAMC,WAAWT,IAAwB,GAAXA,GA+BtE,kCA5BF,SAA2CA,GACzC,MAA2B,kBAAbA,GAAoD,WAA3BA,EAAS3nB,cAA6BlC,KAAMC,OAASD,KAAMG,MAmC9EoqB,CAAkCL,EAASM,aAR/D,2BASExkB,GATF,EAcK,SAASykB,KAED,IACLzxB,EAAYtQ,cAAZsQ,QACF0O,EAAWC,cACXuiB,EElQO,WAA2C,IAChDvZ,EAAWxe,cAAXwe,OACR,OAAOjiB,mBACL,kBAAOiiB,GAAUA,EAAOnpB,OAAS,EAAIkjC,iBAAM/Z,EAAQ,CAAEga,aAAa,EAAOC,mBAAmB,IAAU,KACtG,CAACja,IF8Pcka,GAHL,EAIgBlkC,qBAJhB,mBAILwc,EAJK,KAIG2nB,EAJH,KA0BZ,OAlBAtmC,qBAAU,WACR,GAAKwU,EAAL,CACA,IAAM+xB,EAASd,GAA2BC,GAE1CxiB,EACEsjB,aAAiB,CACf9C,WAAY6C,EAAO7C,WACnB+C,MAAOF,EAAO9C,iBACdE,gBAAiB4C,EAAO/qB,KAAMG,OAAO4J,WACrCqe,iBAAkB2C,EAAO/qB,KAAMC,QAAQ8J,WACvC/D,UAAW+kB,EAAO/kB,aAItB8kB,EAAU,CAAE3C,gBAAiB4C,EAAO/qB,KAAMG,OAAO4J,WAAYqe,iBAAkB2C,EAAO/qB,KAAMC,QAAQ8J,gBAEnG,CAACrC,EAAU1O,IAEPmK,G,SCpRG4mB,O,mCAAAA,I,eAAAA,I,oBAAAA,Q,KAMZ,I,YAAMmB,GAAiB,CAAEC,SAAUpB,GAASmB,gBER5C,I,eAIME,GAAkCn/B,UAAOC,IAAV,sDAI/Bm/B,GAASp/B,UAAOC,IAAV,iDAINo/B,GAAUr/B,UAAOC,IAAV,gPAKTm/B,GAIAA,IAIA,qBAAGnmC,MAAkBwQ,aAAa7L,MAKhC0hC,GAAQt/B,UAAOC,IAAV,+FAMLs/B,GAAmB,CACvB,CAAEtjC,MAAO,OAAQJ,MAAO,IACxB,CAAEI,MAAO,OAAQJ,MAAO,IACxB,CAAEI,MAAO,KAAMJ,MAAO,IAsFT2jC,GAnFmB,WAAO,IAAD,EACoBhkB,KADpB,mBAC/BG,EAD+B,KACR8jB,EADQ,OAEZ/kC,mBAASihB,EAAwB,KAFrB,mBAE/B9f,EAF+B,KAExB6jC,EAFwB,OAGZhlC,mBAAwB,MAHZ,mBAG/BiB,EAH+B,KAGxBgkC,EAHwB,KAkCtC,OAvBApnC,qBAAU,WACR,IACE,IAAMqnC,EAAmB,IAAR/jC,GACZ+I,OAAOw5B,MAAMwB,IAAaA,EAAW,GAAKA,EAxDhC,KAyDbH,EAAyBG,GACzBD,EAAS,OAETA,EAAS,qCAEX,SACAA,EAAS,wCAEV,CAAC9jC,EAAO8jC,EAAUF,IAGrBlnC,qBAAU,WACJojB,EApEmB,GAqErBgkB,EAAS,6BACAhkB,EArEa,KAsEtBgkB,EAAS,sCAEV,CAAChkB,EAAuBgkB,IAGzB,eAACR,GAAD,WACE,cAACG,GAAD,UACE,cAAC,KAAD,CAAM/0B,MAAO,CAAEmJ,WAAY,IAAK3R,MAAO,QAAvC,SACE,cAAC,GAAD,CAAgBiF,cAAe,GAA/B,oCAIJ,eAACq4B,GAAD,WACE,cAAC,IAAD,CAAMh6B,GAAI,CAAC,MAAO,GAAIw6B,GAAI,CAAC,EAAG,OAA9B,SACGN,GAAiBn1B,KAAI,YAAwC,IAArCnO,EAAoC,EAApCA,MAAc6jC,EAAsB,EAA7BjkC,MAG9B,OACE,cAACujC,GAAD,UACE,cAAC,IAAD,CAAQ70B,MAAO,CAAExI,MAAO,WAAa0K,QAAS5Q,IAAUikC,EAAkB,UAAY,WAAYz+B,QAJlF,kBAAMq+B,EAASI,IAI/B,SACG7jC,KAFQ6jC,QAQnB,eAAC,IAAD,CAAM76B,WAAW,SAAjB,UACE,cAACm6B,GAAD,UACE,cAAC,IAAD,CACElX,KAAK,SACL6X,MAAM,KACN9K,KAAM,GACN+K,IAAK,GACL7X,YAAY,KACZtsB,MAAOA,EACPusB,SA5DS,SAAC6X,GAA8C,IACnDC,EAAeD,EAAI90B,OAA1BtP,MACR6jC,EAASrB,WAAW6B,KA2DVC,UAAqB,OAAVxkC,MAGf,cAACyjC,GAAD,UACE,cAAC,KAAD,CAAMh6B,SAAS,OAAf,uBAILzJ,GACC,cAAC,KAAD,CAAMyR,GAAG,MAAMrL,MAAM,UAArB,SACGpG,QCtHLykC,GAAmCpgC,UAAOC,IAAV,sDAIhCq/B,GAAQt/B,UAAOC,IAAV,+FAML8T,GAAQ/T,UAAOC,IAAV,0LAIH8vB,IAIApe,MAoDO0uB,GA9CoB,WAAO,IAAD,EACPvkB,KADO,mBAChCE,EADgC,KACtBskB,EADsB,OAEb5lC,mBAASshB,EAAW,IAFP,mBAEhCngB,EAFgC,KAEzB6jC,EAFyB,OAGbhlC,mBAAwB,MAHX,mBAGhCiB,EAHgC,KAGzBgkC,EAHyB,KAyBvC,OAdApnC,qBAAU,WACR,IACE,IAAMqnC,EAAmB,GAAR/jC,GACZ+I,OAAOw5B,MAAMwB,IAAaA,EAAW,GACxCU,EAAYV,GACZD,EAAS,OAETA,EAAS,0BAEX,SACAA,EAAS,6BAEV,CAAC9jC,EAAO8jC,EAAUW,IAGnB,eAACF,GAAD,WACE,cAAC,GAAD,UACE,cAAC,KAAD,CAAM71B,MAAO,CAAEmJ,WAAY,IAAK3R,MAAO,QAAvC,SACE,cAAC,GAAD,CAAgBiF,cAAe,GAA/B,sCAIJ,eAAC+M,GAAD,WACE,cAAC,IAAD,CAAOxJ,MAAO,CAAExI,MAAO,QAAUmmB,KAAK,SAAS+M,KAAK,IAAI+K,IAAI,IAAInkC,MAAOA,EAAOusB,SA7B/D,SAAC6X,GAA8C,IACnDC,EAAeD,EAAI90B,OAA1BtP,MACR6jC,EAASzlC,SAASimC,EAAY,QA4B1B,cAAC,KAAD,CAAM31B,MAAO,CAAExI,MAAO,QAAtB,wBAEDpG,GACC,cAAC,KAAD,CAAMyR,GAAG,MAAMrL,MAAM,UAArB,SACGpG,QC5DL4kC,GAAmB,kBAAM,MAWhBC,GATO,SAAC,GAA0D,IAAD,IAAvDt8B,iBAAuD,MAA3Cq8B,GAA2C,EAC9E,OACE,eAAC,KAAD,CAAOr/B,UAAU,cAAc6D,MAAM,WAAWb,UAAWA,EAA3D,UACE,cAACu8B,GAAD,IACA,cAAC,GAAD,QCZA/0B,GAASC,oBAAH,wHASN4V,GAAYvhB,UAAOwhB,IAAV,mIACG9V,IACN,qBAAGiB,QACJ,qBAAGA,QAEA,gBAAG8U,EAAH,EAAGA,OAAQxoB,EAAX,EAAWA,MAAX,cAAuBwoB,QAAvB,IAAuBA,IAAUxoB,EAAMC,OAAO+I,WAQ7C,SAASyf,GAAT,GAAyF,IAAD,IAAtE/U,YAAsE,MAA/D,OAA+D,EAAvD8U,EAAuD,EAAvDA,OAAWpY,EAA4C,kCACrG,OACE,cAAC,GAAD,yBAAWsY,QAAQ,YAAYC,KAAK,OAAOC,MAAM,6BAA6BlV,KAAMA,EAAM8U,OAAQA,GAAYpY,GAA9G,aACE,sBACEyY,EAAE,6HACF5U,YAAY,MACZ6U,cAAc,QACdC,eAAe,aCpBvB,I,qBAAMue,GAAmB,kBAAM,MAEzBG,GAAuB,SAACv6B,EAAuBw6B,GAAxB,OAAkDA,EAAEC,UAAYz6B,EAAEy6B,WAqEhFC,GArDiB,SAAC,GAAoE,IAAD,IAAjE38B,iBAAiE,MAArDq8B,GAAqD,IACrE/yB,eAArBhR,EAD0F,EAC1FA,QAASuQ,EADiF,EACjFA,QACX+zB,EAAkBC,eAGlBC,EAA2Bv+B,mBAAQ,WAEvC,OADY6B,OAAO8X,OAAO0kB,GACf/lC,OAAOkmC,MAAqBzhB,KAAKkhB,MAC3C,CAACI,IAEJ,OACE,eAAC,KAAD,CAAO/7B,MAAM,sBAAsBb,UAAWA,EAA9C,WACI1H,GACA,eAAC,IAAD,CAAM0I,eAAe,SAASF,cAAc,SAASC,WAAW,SAAhE,UACE,cAAC,KAAD,CAAMI,GAAG,MAAMF,MAAI,EAAnB,yEAGA,cAAC,IAAD,CAAQsH,QAAQ,WAAWE,KAAK,KAAKtL,QAAS6C,EAA9C,sBAKH1H,GAAWuQ,GAA+C,IAApCi0B,EAAyBzlC,QAC9C,eAAC,IAAD,CAAM2J,eAAe,SAASF,cAAc,SAASC,WAAW,SAAhE,UACE,cAAC,KAAD,CAAMI,GAAG,MAAMF,MAAI,EAAnB,oCAGA,cAAC,IAAD,CAAQsH,QAAQ,WAAWE,KAAK,KAAKtL,QAAS6C,EAA9C,sBAKH1H,GACCuQ,GACAi0B,EAAyB52B,KAAI,SAAC82B,GAA6B,IACjDl0B,EAAkBk0B,EAAlBl0B,KAAMgsB,EAAYkI,EAAZlI,QAD0C,EAhD7C,SAACkI,GAAiD,IAC7Dl0B,EAAkBk0B,EAAlBl0B,KAAMm0B,EAAYD,EAAZC,QAEd,OAAKn0B,EAIDA,GAA4B,KAAb,OAAPm0B,QAAO,IAAPA,OAAA,EAAAA,EAASC,QACZ,CAAEllC,KAAM,cAAC,IAAD,CAAqB6F,MAAM,YAAcA,MAAO,WAG1D,CAAE7F,KAAM,cAAC,IAAD,CAAW6F,MAAM,YAAcA,MAAO,WAP5C,CAAE7F,KAAM,cAAC,GAAD,IAAY6F,MAAO,QA8CJs/B,CAAaH,GAA7BhlC,EAFgD,EAEhDA,KAAM6F,EAF0C,EAE1CA,MAEd,OACE,mCACE,eAAC,IAAD,CAAiBkD,WAAW,SAASC,eAAe,gBAAgBG,GAAG,MAAvE,UACE,cAAC,IAAD,CAAclJ,KAAMgR,aAAeJ,EAASC,EAAM,eAAgBjL,MAAOA,EAAzE,gBACGi3B,QADH,IACGA,IAAWhsB,IAEb9Q,IAJQ8Q,YClDnBs0B,GAAmBthC,UAAOC,IAAV,+CAIhBshC,GAAUvhC,UAAOC,IAAV,0CAmCEuhC,GA/BI,SAAC,GAAuD,IAArDz8B,EAAoD,EAApDA,MAAO2d,EAA6C,EAA7CA,YAAajoB,EAAgC,EAAhCA,SAAgC,EAC5CoL,aAAS,cAAC,GAAD,KAA9B47B,EADiE,sBAElC57B,aAAS,cAAC,GAAD,KAFyB,oBAIxE,OACE,eAACy7B,GAAD,WACE,eAAC,IAAD,CAAMr8B,WAAW,SAAjB,UACE,eAACs8B,GAAD,WACE,cAAC,IAAD,CAASl8B,GAAG,MAAMtD,MAAM,UAAxB,SAAmCgD,IAClC2d,GACC,cAAC,KAAD,CAAM3gB,MAAM,UAAUqD,SAAS,OAA/B,SACGsd,OAIR,qBAAKxhB,UAAU,YAAf,SACC,qBAAKA,UAAU,eAAf,SACE,cAAC,IAAD,CAAYuL,QAAQ,OAAOpL,QAASogC,EAAmB18B,MAAM,WAA7D,SACI,cAAC,IAAD,CAASmJ,MAAM,OAAOnM,MAAM,0BAQnCtH,GAAY,cAAC,KAAD,CAAM2S,GAAG,OAAT,SAAiB3S,Q,SC7BrBinC,GApB6B,SAACnlC,GAC3C,IAAM4H,EAAkB/B,eAD6B,EAEX3F,cAAlCD,EAF6C,EAE7CA,QAASmlC,EAFoC,EAEpCA,SAAUC,EAF0B,EAE1BA,WASnBC,EAA0BC,cAPd,SAACtpC,GACnB,OACSmpC,EADW,kBAAhBnpC,EACcupC,KAEFC,QAG4CJ,EAAYplC,GAAlEqlC,sBAER,OACE,cAAC,KAAD,yBAAQxgC,QAASwgC,EAAuBt3B,MAAO,CAAEpR,WAAY,cAAmBoD,GAAhF,aACG4H,EAAgB,IAAK,qBCjBf89B,GAAcjiC,kBAAOmgB,IAAPngB,CAAH,wNAeT,SAASkiC,GAAT,GAA+D,IAA5CznC,EAA2C,EAA3CA,SAChC,OAAO,cAACwnC,GAAD,CAAa/gC,UAAU,eAAvB,SAAuCzG,ICVhD,I,MAAMq2B,GAAa9wB,UAAOC,IAAV,wLAKM,qBAAGhH,MAAkBC,OAAOyV,oBAK5CwzB,GAAeniC,UAAOC,IAAV,gPAKI,gBAAGtE,EAAH,EAAGA,MAAO1C,EAAV,EAAUA,MAAV,OAAuB0C,EAAQ1C,EAAMC,OAAO8U,QAAU/U,EAAMC,OAAOyV,oBACtD,qBAAGhT,MAAqB,WAAa,gBACtD,qBAAGA,MAAqB,WAAa,gBACjC,qBAAG1C,MAAkBC,OAAOyV,oBAG5CyzB,GAAiBpiC,UAAOC,IAAV,4DAKd8vB,GAAQ/vB,UAAOmhB,MAAV,4kBAMW,qBAAGloB,MAAkBC,OAAOyV,oBACtB,qBAAGhT,MAAqB,WAAa,gBACtD,gBAAGA,EAAH,EAAGA,MAAO1C,EAAV,EAAUA,MAAV,OAAuB0C,EAAQ1C,EAAMC,OAAO8U,QAAU/U,EAAMC,OAAO+I,WAMjE,qBAAGhJ,MAAkBC,OAAOkoB,gBAe5B,qBAAGnoB,MAAkBC,OAAOkoB,gBAI1B,SAASihB,GAAT,GAUX,IATF/iC,EASC,EATDA,GACAzD,EAQC,EARDA,MACAusB,EAOC,EAPDA,SAQQrb,EAAYS,eAAZT,QADP,EAGkCyoB,GAAO35B,GAAlCnL,EAHP,EAGOA,QAAS2mB,EAHhB,EAGgBA,QAASjZ,EAHzB,EAGyBA,KAEpBopB,EAAc7nB,uBAClB,SAAC2L,GACC,IACMg3B,EADQh3B,EAAMH,OAAOtP,MACC+L,QAAQ,OAAQ,IAC5CwgB,EAASka,KAEX,CAACla,IAGGzsB,EAAQgd,QAAQ9c,EAAMN,OAAS,IAAM8b,IAAY3mB,GAEvD,OACE,cAAC,GAAD,CAAY4O,GAAIA,EAAhB,SACE,cAAC6iC,GAAD,CAAcxmC,MAAOA,EAArB,SACE,cAACymC,GAAD,UACE,eAACr2B,GAAD,CAAYC,IAAI,KAAhB,UACE,eAACkF,GAAD,WACE,cAAC,KAAD,CAAMnP,MAAM,aAAa2R,WAAY,IAAKtO,SAAS,OAAnD,uBAGC1U,GAAWqc,GACV,cAAC7B,GAAD,CAAc/O,KAAMgR,aAAeJ,EAAD,OAAU3O,QAAV,IAAUA,IAAQ1N,EAAS,WAAY6Z,MAAO,CAAEnF,SAAU,QAA5F,kCAKJ,cAAC,GAAD,CACElE,UAAU,0BACVgnB,KAAK,OACLkI,aAAa,MACbC,YAAY,MACZkS,eAAe,MACf9R,WAAW,QACXtI,YAAY,6BACZxsB,MAAOA,EACP20B,QAAQ,wBACRlI,SAAUZ,EACV3rB,MAAOA,aCnHrB,I,GAAM2mC,GAAYxiC,UAAOC,IAAV,2GAqBAwiC,GAfH,SAAC,GAAD,QAAGC,mBAAH,MAAiB,EAAjB,SACV,cAACF,GAAD,CAAWthC,UAAU,WAArB,SACE,cAACyhC,GAAD,UACE,eAAC,IAAD,CAAYD,YAAaA,EAAaj2B,QAAQ,SAA9C,UACE,cAAC,IAAD,CAAgBnN,GAAG,gBAAgBi9B,GAAG,QAAQlI,GAAIrpB,IAAlD,SACE,cAAC,GAAD,CAAgBhE,cAAe,EAA/B,oBAEF,cAAC,IAAD,CAAgB1H,GAAG,gBAAgBi9B,GAAG,QAAQlI,GAAIrpB,IAAM9J,UAAU,WAAlE,SACE,cAAC,GAAD,CAAgB8F,cAAe,GAA/B,iCASJ27B,GAAS3iC,UAAOC,IAAV,+CCwbG2iC,GAhbF,WAAO,IAAD,oBACXC,EAAkBrE,KADP,EAImC,CAClD3gB,GAAW,OAACglB,QAAD,IAACA,OAAD,EAACA,EAAiB3G,iBAC7Bre,GAAW,OAACglB,QAAD,IAACA,OAAD,EAACA,EAAiB1G,mBAFxB2G,EAJU,KAIWC,EAJX,OAQqCroC,oBAAkB,GARvD,mBAQVsoC,EARU,KAQWC,EARX,OASavoC,oBAAkB,GAT/B,mBASVwoC,EATU,KASDC,EATC,OAUuCzoC,mBAAiB,IAVxD,mBAUV0oC,EAVU,KAUYC,EAVZ,KAWXC,EAA2B7gC,mBAC/B,8CAAM,CAACqgC,EAAqBC,UAA5B,aAAM,EAA6ChoC,QAAO,SAACwoC,GAAD,OAAmBA,aAAa5rB,eAA1F,QAAoG,KACpG,CAACmrB,EAAqBC,IAElBS,EAA4B7jC,uBAAY,WAC5CsjC,GAAuB,KACtB,IAEGQ,EAA4B9jC,uBAAY,WAC5CwjC,GAAW,GACXE,EAAwB,MACvB,IAEK7mC,EAAYC,cAAZD,QACFvD,EAAQ0D,qBAAWsQ,gBAzBR,EtD4DZ,WACL,IAAMwO,EAAWC,cACXgoB,EAAaroB,KAEbsoB,EAAsBhkC,uBAAY,WACtC8b,EAASmoB,aAAqB,CAAEroB,gBAAiBmoB,OAChD,CAACA,EAAYjoB,IAEhB,MAAO,CAACioB,EAAYC,GsDzCGE,GAAhBC,EA3BU,sBA8BEhoB,KAAZE,EA9BU,sBA+BSR,KAAnB1I,EA/BU,sBAkCmCuoB,KAA5CW,EAlCS,EAkCTA,iBAAkBC,EAlCT,EAkCSA,WAAYliB,EAlCrB,EAkCqBA,UAlCrB,EAmC2E+hB,KAApFwB,EAnCS,EAmCTA,QAASC,EAnCA,EAmCAA,iBAAkBd,GAnClB,EAmCkBA,aAAcvd,GAnChC,EAmCgCA,WAAwB6kB,GAnCxD,EAmC4ChI,WAnC5C,GZfJ,SACbK,EACAC,EACAJ,GAC2F,IAAD,EAC7Dx/B,cAArBsQ,EADkF,EAClFA,QAASvQ,EADyE,EACzEA,QACXwnC,EAAeC,eACf5hB,EAAUzC,GAAkB,OAACpjB,QAAD,IAACA,SAAWtB,EAAWkhC,GAEnDhoB,EAAc3R,mBAAQ,kBAAM84B,GAAeU,EAAYG,KAAgB,CAACA,EAAeH,IACvF1E,EAAiBC,eAEvB,OAAO/0B,mBAAQ,WACb,IAAKuhC,IAAiBj3B,IAAYqvB,IAAkBC,EAAgB,OAAO4C,GAE3E,IAAMiF,EAAoB9vB,GAAeiO,IAAYA,EAAQ5P,SAAS2B,GAEtE,OAAIgoB,IAAkBn0B,MAAS4S,aAAeue,KAAKrsB,GAAUsvB,GACpD,CACL6C,SAAUpB,GAASqG,KACnBC,QACEF,GAAqB9vB,EAArB,sBACI,4BAAAjO,EAAA,+EAE4B69B,EAAaK,QAAQ,CAAExoC,MAAM,KAAD,OAAOuY,EAAYhM,IAAIwW,SAAS,OAFxF,OAEU0lB,EAFV,OAGI/M,EAAe+M,EAAW,CAAEtL,QAAQ,QAAD,OAAU5kB,EAAYH,cAAc,GAApC,kBAHvC,gDAKIvY,QAAQC,MAAM,oBAAd,MALJ,8DAQAT,EACN6gC,WAAYmI,OAAoBhpC,EAAY,4BAE1C2f,aAAeue,KAAKrsB,GAAUqvB,IAAkBC,IAAmBp0B,KAChE,CACLi3B,SAAUpB,GAASyG,OACnBH,QACEF,GAAqB9vB,EAArB,sBACI,4BAAAjO,EAAA,+EAE4B69B,EAAaQ,SAAb,YAA2BpwB,EAAYhM,IAAIwW,SAAS,MAFhF,OAEU0lB,EAFV,OAGI/M,EAAe+M,EAAW,CAAEtL,QAAQ,UAAD,OAAY5kB,EAAYH,cAAc,GAAtC,kBAHvC,gDAKIvY,QAAQC,MAAM,qBAAd,MALJ,8DAQAT,EACN6gC,WAAYmI,OAAoBhpC,EAAY,6BAGvC+jC,KAER,CAAC+E,EAAcj3B,EAASqvB,EAAeC,EAAgBjoB,EAAaiO,EAASkV,IYDdkN,CAChEvlB,GAAWnL,KAAMG,OACjBgL,GAAWnL,KAAMC,QACjBioB,GAHMiD,GApCS,GAoCTA,SAAmBwF,GApCV,GAoCCN,QAA6BO,GApC9B,GAoCkB5I,WAK7B6I,GAAoB1F,KAAapB,GAASmB,eAC1CloC,GAAQ6tC,QAAW1pC,EAAYoiC,EAE/BuH,GAAgBD,IAAQ,oBAEvB7wB,KAAMG,MAAQuoB,IAFS,eAGvB1oB,KAAMC,OAASyoB,IAHQ,wBAMvB1oB,KAAMG,MAAQ8nB,IAAqBjoB,KAAMG,MAAQuoB,GAAnC,OAAkD1lC,SAAlD,IAAkDA,QAAlD,EAAkDA,GAAOqd,aANhD,eAOvBL,KAAMC,OAASgoB,IAAqBjoB,KAAMC,OAASyoB,GAApC,OAAmD1lC,SAAnD,IAAmDA,QAAnD,EAAmDA,GAAOod,cAPlD,GA5Cb,GbbZ,WAML,IAAMsH,EAAWC,cACXopB,EAAsBnlC,uBAC1B,SAACq/B,EAAch3B,GACbyT,EACEspB,aAAe,CACb/F,QACAlhB,WAAY9V,aAAoB2P,KAAQ3P,EAAStX,QAAUsX,IAAaC,KAAQ,MAAQ,QAI9F,CAACwT,IAqBH,MAAO,CACLupB,eAnBqBrlC,uBAAY,WACjC8b,EAASwpB,kBACR,CAACxpB,IAkBFqpB,sBACA9U,YAjBkBrwB,uBAClB,SAACq/B,EAAc/C,GACbxgB,EAASypB,aAAU,CAAElG,QAAO/C,kBAE9B,CAACxgB,IAcD0pB,kBAXwBxlC,uBACxB,SAACoa,GACC0B,EAAS2pB,aAAa,CAAErrB,iBAE1B,CAAC0B,KaiC6E4pB,GAAxEL,GAtDS,GAsDTA,eAAgBF,GAtDP,GAsDOA,oBAAqB9U,GAtD5B,GAsD4BA,YAAamV,GAtDzC,GAsDyCA,kBACpDG,IAAWvB,GACXwB,GAAwBvJ,IAAqBjoB,KAAMG,MAAQH,KAAMC,OAASD,KAAMG,MAEhFsxB,GAAkB7lC,uBACtB,SAAC9D,GACCm0B,GAAYjc,KAAMG,MAAOrY,KAE3B,CAACm0B,KAEGyV,GAAmB9lC,uBACvB,SAAC9D,GACCm0B,GAAYjc,KAAMC,OAAQnY,KAE5B,CAACm0B,KApEc,GAwEgFt1B,mBAM9F,CACDgrC,aAAa,EACbC,oBAAgBzqC,EAChBoS,eAAe,EACfyF,sBAAkB7X,EAClBwf,YAAQxf,IAnFO,8BAwERwqC,GAxEQ,GAwERA,YAAaC,GAxEL,GAwEKA,eAAgB5yB,GAxErB,GAwEqBA,iBAAkBzF,GAxEvC,GAwEuCA,cAAeoN,GAxEtD,GAwEsDA,OAAUkrB,GAxEhE,MAsFXC,IAAgB,oBACnB7J,EAAmBC,GADA,eAEnBsJ,GAAiBX,GAAQ,oBACtBC,GAAc7I,UADQ,aACtB,EAAiC1Z,iBADX,QACwB,GADxB,oBAEtBuiB,GAAcU,WAFQ,aAEtB,EAA+BtxB,cAAc,UAFvB,QAE6B,IAJnC,GAOhBke,GAAK,OAAGp7B,SAAH,IAAGA,QAAH,EAAGA,GAAOo7B,MACf2T,GAA8BntB,QAClCuG,GAAWnL,KAAMG,QAAUgL,GAAWnL,KAAMC,UAA5C,UAAuD6wB,GAAc7I,UAArE,aAAuD,EAAiC7zB,YAAYD,KAAKO,OAAO,MAE5Gs9B,IAAW5T,GAjGA,GAoGmB6T,aAA4BjvC,GAAO+b,GApGtD,qBAoGVmzB,GApGU,MAoGAC,GApGA,SAuGiCxrC,oBAAkB,GAvGnD,qBAuGVyrC,GAvGU,MAuGSC,GAvGT,MA0GjB7tC,qBAAU,WACJ0tC,KAAaI,KAAcC,SAC7BF,IAAqB,KAEtB,CAACH,GAAUE,KAEd,IAAMI,GAA6Cz+B,GAAey1B,EAAiBxpB,KAAMG,QACnFsyB,GAAmB7tB,QAAQ4tB,KAAc,UAAI1B,GAAc9wB,KAAMG,cAAxB,aAAI,EAA4B4G,QAAQyrB,MAjHtE,GAoH4ClP,GAC3DtgC,GACA+b,EACAkJ,EACAjC,GAJgB0sB,GApHD,GAoHTr4B,SAA+Bs4B,GApHtB,GAoHe/qC,MAOxB2X,GAA0BD,aAA2Btc,IAArDuc,sBAEFqzB,GAAahnC,uBAAY,WACzB2T,KC3JO,SAAsCA,GACnD,OAAKA,EAAsBb,SAASm0B,QAQ7BtzB,EAAsBb,SAASo0B,OAC7BpuC,OAAOquC,QAAP,mDACuCD,KAA0Bl0B,QACpE,GAFG,sEAHC,YAJNla,OAAO40B,OAAP,mDAC8CuZ,KAAqCj0B,QAC/E,GAFJ,kEDwJ4Bo0B,CAA6BzzB,KAGtDmzB,KAGLb,IAAa,SAACoB,GAAD,mBAAC,eAAoBA,GAArB,IAAgC15B,eAAe,EAAMyF,sBAAkB7X,EAAWwf,YAAQxf,OACvGurC,KACGrrC,MAAK,SAAC4R,GACL44B,IAAa,SAACoB,GAAD,mBAAC,eACTA,GADQ,IAEX15B,eAAe,EACfyF,sBAAkB7X,EAClBwf,OAAQ1N,UAGXxR,OAAM,SAACG,GACNiqC,IAAa,SAACoB,GAAD,mBAAC,eACTA,GADQ,IAEX15B,eAAe,EACfyF,iBAAkBpX,EAAMkS,QACxB6M,YAAQxf,aAGb,CAACoY,GAAuBmzB,GAAcb,KAtJxB,GAyJuBlrC,oBAAkB,GAzJzC,qBAyJVuY,GAzJU,MAyJIC,GAzJJ,MA4JXgH,GAAsB1H,aAAgBc,IAItC2zB,IACHlD,KACAkC,KAAaI,KAAca,cAC1BjB,KAAaI,KAAcC,SAC1BH,IAAqBF,KAAaI,KAAcc,aACjDjtB,GAAsB,IAAM4pB,GAE1BsD,GAAuBznC,uBAAY,WACvCimC,IAAa,SAACoB,GAAD,mBAAC,eAAoBA,GAArB,IAAgCtB,aAAa,OAGtDhrB,IACFsV,GAAYjc,KAAMG,MAAO,MAE1B,CAAC8b,GAAatV,GAAQkrB,KAEnByB,GAAsB1nC,uBAAY,WACtCimC,IAAa,SAACoB,GAAD,mBAAC,eAAoBA,GAArB,IAAgCrB,eAAgB5uC,UAC5D,CAACA,KAIEuwC,GAAgB3nC,uBACpB,SAACmhB,EAAkBymB,GACA,UAAbzmB,IACFqiB,GAAW,GACXE,EAAwBkE,MAG5B,CAACpE,EAAYE,IAGTmE,GAAoB7nC,uBACxB,SAACy8B,GACCgK,IAAqB,GACrBtB,GAAoB/wB,KAAMG,MAAOkoB,GACU,UAAvCA,EAAc7rC,OAAO0lB,eACvBqxB,GAAclL,EAAc7rC,OAAO0lB,cAAe,aAGtD,CAAC6uB,GAAqBsB,GAAsBkB,KAGxCG,GAAiB9nC,uBAAY,WAC7B4mC,IACFvW,GAAYjc,KAAMG,MAAOqyB,GAAejkB,aAEzC,CAACikB,GAAgBvW,KAEd0X,GAAqB/nC,uBACzB,SAAC08B,GACCyI,GAAoB/wB,KAAMC,OAAQqoB,GACU,UAAxCA,EAAe9rC,OAAO0lB,eACxBqxB,GAAcjL,EAAe9rC,OAAO0lB,cAAe,YAGvD,CAAC6uB,GAAqBwC,KAGxB,OACE,qCACE,cAAC1T,GAAD,CACExqB,OAAQk6B,EAAgB/nC,OAAS,IAAMynC,EACvC3yC,OAAQizC,EACRzwB,UAAW2wB,IAEb,cAAClP,GAAD,CACElrB,OAAQ85B,EACR3O,gBAAiB6O,EACjBvwB,UAAW4wB,IAGb,eAACvB,GAAD,WACE,eAACyF,GAAD,WACE,cAACC,GAAD,IACA,cAAC,GAAD,CAAY7iC,MAAM,GAAG2d,YAAY,QAEnC,eAAC,GAAD,CAASpjB,GAAG,YAAZ,UACE,cAACkb,GAAD,CACEpR,OAAQs8B,GACR3uC,MAAOA,GACP0jB,cAAekrB,GACf1rB,gBAAiBotB,GACjB/5B,cAAeA,GACfoN,OAAQA,GACRX,UAAWA,EACXjH,gBAAiBA,EACjBD,UAAW8zB,GACX5zB,iBAAkBA,GAClB7O,UAAWkjC,KAEb,eAAC,IAAD,CAAUlmC,UAAU,YAApB,UACE,eAAC6K,GAAD,CAAYC,IAAI,KAAhB,UACE,cAACmlB,GAAD,CACEl1B,MACE+/B,IAAqBjoB,KAAMC,SAAW4wB,IAAY7tC,GAC9C,mBACAoN,GAAgB,GAAI,QAE1BtI,MAAOgqC,GAAiB9xB,KAAMG,OAC9Bmd,eAAgBmV,GAChBx+B,SAAUkX,GAAWnL,KAAMG,OAC3B8b,YAAawV,GACbpU,MAAOqW,GACP1jB,iBAAkByjB,GAClBxjB,cAAe9E,GAAWnL,KAAMC,QAChC1U,GAAG,wBAEL,cAACyM,GAAD,CAAYE,QAAQ,gBAApB,SACE,eAACmF,GAAD,CAASnF,QAAS63B,EAAe,gBAAkB,SAAUv5B,MAAO,CAAEwD,QAAS,UAA/E,UACE,cAACuD,GAAD,CAAcpQ,UAAU,iBAAiBqQ,WAAS,EAAlD,SACE,cAAC,IAAD,CACE9E,QAAQ,WACRpL,QAAS,WACP+kC,IAAqB,GACrBpB,MAEFz6B,MAAO,CAAE0G,aAAc,OACvBtE,KAAK,KAPP,SASE,cAAC,IAAD,CAAe5K,MAAM,UAAUmM,MAAM,aAG1B,OAAd6L,IAAuB6qB,IAAYd,EAClC,cAACn5B,GAAD,CAAkBrL,GAAG,uBAAuB+B,QAAS,kBAAM8jC,GAAkB,KAA7E,qCAGE,UAGR,cAAChU,GAAD,CACEt1B,MAAOgqC,GAAiB9xB,KAAMC,QAC9Bgc,YAAayV,GACbxpC,MACE+/B,IAAqBjoB,KAAMG,QAAU0wB,IAAY7tC,GAAQ,iBAAmBoN,GAAgB,GAAI,MAElGktB,eAAe,EACfrpB,SAAUkX,GAAWnL,KAAMC,QAC3B+P,iBAAkB2jB,GAClB1jB,cAAe9E,GAAWnL,KAAMG,OAChC5U,GAAG,yBAGU,OAAdya,GAAuB6qB,GAYpB,KAXF,qCACE,eAACxzB,GAAD,CAASnF,QAAQ,gBAAgB1B,MAAO,CAAEwD,QAAS,UAAnD,UACE,cAACuD,GAAD,CAAcC,WAAW,EAAzB,SACE,cAAC,KAAD,CAAW5E,KAAK,KAAK5K,MAAO9I,EAAMC,OAAO4R,eAE3C,cAACH,GAAD,CAAkBrL,GAAG,0BAA0B+B,QAAS,kBAAM8jC,GAAkB,OAAhF,8BAIF,cAAC9C,GAAD,CAAmB/iC,GAAG,YAAYzD,MAAOke,EAAWqO,SAAU+c,QAIjEP,GAAW,KACV,cAAC,GAAD,CAAM72B,QAAQ,yBAAyBkD,aAAa,OAApD,SACE,eAAClF,GAAD,CAAYC,IAAI,MAAhB,UACG2M,QAAQ5hB,KACP,eAACma,GAAD,CAAYH,MAAM,SAAlB,UACE,cAAC,KAAD,CAAM3L,SAAS,OAAf,mBACA,cAAC0tB,GAAD,CACEC,MAAK,OAAEh8B,SAAF,IAAEA,QAAF,EAAEA,GAAO8wC,eACd50B,aAAcA,GACdC,gBAAiBA,QAItBJ,IAAoBujB,MACnB,eAACnlB,GAAD,CAAYH,MAAM,SAAlB,UACE,cAAC,KAAD,CAAM3L,SAAS,OAAf,gCACA,eAAC,KAAD,CAAMA,SAAS,OAAf,UAAuB0N,EAAkB,IAAzC,kBAOZ,eAACrB,GAAD,CAAgBvQ,UAAU,UAA1B,UACI1E,EAEEooC,GACF,cAAC,IAAD,CAAQ/5B,SAAU8N,QAAQgsB,IAAiBtjC,QAASqjC,GAApD,gBACGC,SADH,IACGA,MACEzF,KAAapB,GAASqG,KAAO,OAASjF,KAAapB,GAASyG,OAAS,SAAW,OAEnFwB,IAAWD,GACb,cAACzlB,GAAD,CAAU9V,MAAO,CAAE0D,UAAW,UAA9B,SACE,cAAC,KAAD,CAAM5I,GAAG,MAAT,sDAEA4hC,GACF,eAAC/1B,GAAD,WACE,cAAC,IAAD,CACE7P,QAAS6kC,GACTr7B,SAAUo7B,KAAaI,KAAca,cAAgBf,GACrD57B,MAAO,CAAE2D,MAAO,OAChBzB,QAASw5B,KAAaI,KAAcc,SAAW,UAAY,UAJ7D,SAMGlB,KAAaI,KAAcC,QAC1B,eAACl1B,GAAD,CAASpF,IAAI,MAAMC,QAAQ,SAA3B,uBACY,cAACyV,GAAD,CAAQD,OAAO,aAEzB0kB,IAAqBF,KAAaI,KAAcc,SAClD,WADE,4BAGSjoB,GAAWnL,KAAMG,cAH1B,aAGS,EAAyB3jB,UAGxC,cAAC,IAAD,CACE8Q,QAAS,WACHyiC,EACF6C,KAEAf,GAAa,CACXD,eAAgB5uC,GAChBuW,eAAe,EACfyF,sBAAkB7X,EAClBwqC,aAAa,EACbhrB,YAAQxf,KAIdqP,MAAO,CAAE2D,MAAO,OAChB5O,GAAG,cACHuL,UACGy6B,IAAWW,KAAaI,KAAcc,UAAajtB,GAAsB,IAAM4pB,EAElFr3B,QAAS64B,IAAWprB,GAAsB,EAAI,SAAW,UAnB3D,SAqBGA,GAAsB,IAAM4pB,EAA5B,kCAEU5pB,GAAsB,EAAI,UAAY,SAIrD,cAAC,IAAD,CACE7Y,QAAS,WACHyiC,EACF6C,KAEAf,GAAa,CACXD,eAAgB5uC,GAChBuW,eAAe,EACfyF,sBAAkB7X,EAClBwqC,aAAa,EACbhrB,YAAQxf,KAIdoE,GAAG,cACHuL,UAAWy6B,IAAYprB,GAAsB,IAAM4pB,KAAmB4C,GACtEj6B,QAAS64B,IAAWprB,GAAsB,IAAMwsB,GAAoB,SAAW,UAhBjF,SAkBG3C,KACE7pB,GAAsB,IAAM4pB,EAA5B,sCAEU5pB,GAAsB,EAAI,UAAY,OA5ErD,cAAC4tB,GAAD,IA+EDb,IAAmB,cAAC,GAAD,CAAejS,MAAO,CAACiR,KAAaI,KAAcc,YACrErD,GAAgB/wB,GAAmB,cAACX,GAAD,CAAmBzW,MAAOoX,KAAuB,iBAK7F,cAAC6f,GAAD,CAA6B77B,MAAOA,SAOpC4wC,GAAU3nC,UAAOC,IAAV,mFEndN,SAAS8nC,GAAT,GAAoE,IAAlCppC,EAAiC,EAAjCA,SACvC,OAAO,cAAC,IAAD,CAAU49B,GAAE,2BAAO59B,GAAP,IAAiBsH,SAAU,YAGjC8hC,I,kBCDR,SAASC,GAAe1tC,GAAyC,IAAD,IAC/Dm8B,EAAWnZ,aAAgB,OAAChjB,QAAD,IAACA,OAAD,EAACA,EAAO5J,SAAS,GAE5Cu3C,EAAsB,UAAGjxB,aAAoByf,EAAU,sBAAjC,iBAAG,EAA8Cvf,cAAjD,aAAG,EAAuD,GAEtF,OAAO5c,GAAS2tC,EAAc,IAAIppB,KAAYvkB,EAAO2tC,EAAYrpB,iBAAc1jB,EAGlE8sC,ICDTE,GAAOhgC,KAAKO,OAAO,GAElB,SAAS0/B,KACd,OAAOjpC,aAAwC,SAACjB,GAAD,OAAWA,EAAMmqC,QCf3D,SAAStqB,GAAW9V,GACzB,GAAIA,IAAaC,KAAO,MAAO,MAC/B,GAAID,aAAoB2P,KAAO,OAAO3P,EAAStX,QAC/C,MAAM,IAAImkB,MAAM,oBAGHiJ,I,YCAAuqB,GANFroC,UAAOC,IAAV,kGACY,qBAAGhH,MAAkBC,OAAOovC,eCArCp8B,GAAUlM,UAAOC,IAAV,qDAIPsoC,GAAgBvoC,kBAAO2R,KAAP3R,CAAH,oFAIf,qBAAG/G,MAAkBC,OAAO+I,WAG1B+P,GAAOhS,UAAOiS,KAAV,sUCPV,SAASu2B,GAAT,GAcH,IAAD,gBAbDC,EAaC,EAbDA,YACA1V,EAYC,EAZDA,MACA7T,EAWC,EAXDA,WACA2lB,EAUC,EAVDA,cACA6D,EASC,EATDA,oBACAC,EAQC,EARDA,MASA,OACE,qCACE,eAACz3B,GAAD,WACE,eAAC,KAAD,qBAAOgO,EAAWnL,KAAM60B,mBAAxB,aAAO,EAA8Br4C,OAArC,gBACA,eAAC8gB,GAAD,WACE,cAACsI,GAAD,CAAc3R,SAAUkX,EAAWnL,KAAM60B,YAAar+B,MAAO,CAAE4P,YAAa,SAC5E,cAAC,KAAD,oBAAO0qB,EAAc9wB,KAAM60B,mBAA3B,aAAO,EAAiC30B,cAAc,WAG1D,eAAC/C,GAAD,WACE,eAAC,KAAD,qBAAOgO,EAAWnL,KAAM80B,mBAAxB,aAAO,EAA8Bt4C,OAArC,gBACA,eAAC8gB,GAAD,WACE,cAACsI,GAAD,CAAc3R,SAAUkX,EAAWnL,KAAM80B,YAAat+B,MAAO,CAAE4P,YAAa,SAC5E,cAAC,KAAD,oBAAO0qB,EAAc9wB,KAAM80B,mBAA3B,aAAO,EAAiC50B,cAAc,WAG1D,eAAC/C,GAAD,WACE,cAAC,KAAD,oBACA,cAAC,KAAD,gCACQgO,EAAWnL,KAAM60B,mBADzB,aACQ,EAA8Br4C,OADtC,qBACkDwiC,QADlD,IACkDA,OADlD,EACkDA,EAAO9e,cAAc,GADvE,sBAEIiL,EAAWnL,KAAM80B,mBAFrB,aAEI,EAA8Bt4C,aAIpC,cAAC2gB,GAAD,CAAY3G,MAAO,CAAErF,eAAgB,YAArC,SACE,cAAC,KAAD,gCACQga,EAAWnL,KAAM80B,mBADzB,aACQ,EAA8Bt4C,OADtC,qBACkDwiC,QADlD,IACkDA,OADlD,EACkDA,EAAOE,SAAShf,cAAc,GADhF,sBAEIiL,EAAWnL,KAAM60B,mBAFrB,aAEI,EAA8Br4C,YAIpC,eAAC2gB,GAAD,WACE,cAAC,KAAD,6BACA,eAAC,KAAD,WAAOu3B,EAAc,MAAH,OAAWC,QAAX,IAAWA,OAAX,EAAWA,EAAqBz0B,cAAc,GAAhE,UAEF,cAAC,IAAD,CAAQ7G,GAAG,OAAO/L,QAASsnC,EAAOznC,UAAU,aAA5C,SACGunC,EAAc,uBAAyB,sBClDzC,SAASK,GAAT,GAUH,IAAD,gBATD5pB,EASC,EATDA,WACAupB,EAQC,EARDA,YACAC,EAOC,EAPDA,oBACA3V,EAMC,EANDA,MAOA,OACE,cAAChnB,GAAD,CAAYC,IAAI,KAAhB,SACE,eAACoF,GAAD,CAASnF,QAAQ,eAAeD,IAAI,MAApC,UACE,eAACD,GAAD,CAAYE,QAAQ,SAApB,UACE,cAAC,KAAD,2BAAO8mB,QAAP,IAAOA,OAAP,EAAOA,EAAO9e,cAAc,UAA5B,QAAkC,MAClC,eAAC,KAAD,CAAM7O,SAAS,OAAOrD,MAAM,aAAagnC,GAAI,EAA7C,oBACG7pB,EAAWnL,KAAM80B,mBADpB,aACG,EAA8Bt4C,OADjC,kBAC8C2uB,EAAWnL,KAAM60B,mBAD/D,aAC8C,EAA8Br4C,aAG9E,eAACwb,GAAD,CAAYE,QAAQ,SAApB,UACE,cAAC,KAAD,2BAAO8mB,QAAP,IAAOA,GAAP,UAAOA,EAAOE,gBAAd,aAAO,EAAiBhf,cAAc,UAAtC,QAA4C,MAC5C,eAAC,KAAD,CAAM7O,SAAS,OAAOrD,MAAM,aAAagnC,GAAI,EAA7C,oBACG7pB,EAAWnL,KAAM60B,mBADpB,aACG,EAA8Br4C,OADjC,kBAC8C2uB,EAAWnL,KAAM80B,mBAD/D,aAC8C,EAA8Bt4C,aAG9E,eAACwb,GAAD,CAAYE,QAAQ,SAApB,UACE,eAAC,KAAD,WACGw8B,GAAe1V,EACZ,MADH,WAEuB,OAAnB2V,QAAmB,IAAnBA,OAAA,EAAAA,EAAqBj2B,SAASC,OAAY,QAA1C,OAAoDg2B,QAApD,IAAoDA,OAApD,EAAoDA,EAAqB/1B,QAAQ,UAFrF,QAE4F,IAH/F,OAMA,cAAC,KAAD,CAAMvN,SAAS,OAAOrD,MAAM,aAAagnC,GAAI,EAA7C,mCASKD,I,SC3CTE,GAAOhpC,UAAOC,IAAV,4JAQJgpC,GAAajpC,UAAOC,IAAV,uEAKVipC,GAAkBlpC,kBAAOmpC,KAAPnpC,CAAH,6CACV,qBAAG/G,MAAkBC,OAAOmO,QAiBhC,SAAS+hC,GAAT,GAAyD,IAAhCpb,EAA+B,EAA/BA,OAC9B,OACE,cAACgb,GAAD,UACE,eAAC93B,GAAD,CAAY3G,MAAO,CAAEwD,QAAS,QAA9B,UACE,cAAC,IAAD,CAAawuB,GAAG,QAAhB,SACE,cAAC2M,GAAD,MAEF,eAACD,GAAD,WAAajb,EAAS,MAAQ,SAA9B,gBACA,6B,mCC3BKqb,GAAiBrpC,kBAAOkR,GAAPlR,CAAH,+CAIdspC,GAAYtpC,kBAAOmgB,GAAPngB,CAAH,qGACA,qBAAG/G,MAAkBC,OAAOyV,oBAE1B,gBAAG1V,EAAH,EAAGA,MAAH,OAAe23B,aAAO,IAAM33B,EAAMC,OAAOyV,qBAU1D,SAAS46B,GAAT,GAAkF,IAAnD/X,EAAkD,EAAlDA,KAAkD,IAA5CgY,qBAA4C,SAC9EhtC,EAAYgR,eAAZhR,QACFkzB,EAAY8Z,EAAgBhY,EAAKI,OAAS0H,GAAe9H,EAAKI,QAC9DjC,EAAY6Z,EAAgBhY,EAAKK,OAASyH,GAAe9H,EAAKK,QAHkB,EAKtDn3B,oBAAS,GAL6C,mBAK/E+uC,EAL+E,KAKrEC,EALqE,KAOhFC,EAAkB5qB,GAAe,OAACviB,QAAD,IAACA,SAAWtB,EAAWs2B,EAAK4J,gBAC7DwO,EAAkB5B,GAAexW,EAAK4J,gBAR0C,EAWlF5J,GACAoY,GACAD,GAEFzhC,KAAK2hC,mBAAmBD,EAAgBxhC,IAAKuhC,EAAgBvhC,KACzD,CACEopB,EAAKsY,kBAAkBtY,EAAKI,OAAQgY,EAAiBD,GAAiB,GACtEnY,EAAKsY,kBAAkBtY,EAAKK,OAAQ+X,EAAiBD,GAAiB,IAExE,MAACzuC,OAAWA,GApBoE,mBAU/E6uC,EAV+E,KAU9DC,EAV8D,KAsBtF,OACE,mCACGL,GACC,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC59B,GAAD,CAAYC,IAAI,OAAhB,UACE,cAACq9B,GAAD,UACE,cAACh4B,GAAD,UACE,cAAC,KAAD,CAAM9G,MAAO,CAAE0/B,cAAe,YAAav2B,WAAY,KAAOtO,SAAS,OAAOrD,MAAM,aAApF,0CAKJ,eAACsnC,GAAD,CAAgBhoC,QAAS,kBAAMqoC,GAAaD,IAA5C,UACE,eAACp4B,GAAD,WACE,cAACoe,GAAD,CAAoBC,UAAWA,EAAWC,UAAWA,EAAWL,QAAM,EAAC3iB,KAAM,KAC7E,eAAC,KAAD,CAAMvH,SAAS,OAAf,UACGsqB,EAAUn/B,OADb,IACsBo/B,EAAUp/B,aAGlC,cAAC8gB,GAAD,UACE,cAAC,KAAD,CAAMjM,SAAS,OAAf,SAAuBukC,EAAkBA,EAAgB11B,cAAc,GAAK,WAGhF,eAAClI,GAAD,CAAYC,IAAI,MAAhB,UACE,eAACq9B,GAAD,WACE,eAAC,KAAD,CAAMjkC,SAAS,OAAf,UAAuBsqB,EAAUn/B,OAAjC,OACCw5C,EACC,cAAC14B,GAAD,UACE,cAAC,KAAD,CAAMihB,GAAG,MAAMltB,SAAS,OAAxB,gBACG2kC,QADH,IACGA,OADH,EACGA,EAAiB91B,cAAc,OAIpC,OAGJ,eAACo1B,GAAD,WACE,eAAC,KAAD,CAAMjkC,SAAS,OAAf,UAAuBuqB,EAAUp/B,OAAjC,OACCy5C,EACC,cAAC34B,GAAD,UACE,cAAC,KAAD,CAAMihB,GAAG,MAAMltB,SAAS,OAAxB,gBACG4kC,QADH,IACGA,OADH,EACGA,EAAiB/1B,cAAc,OAIpC,mBAYL,SAASi2B,GAAT,GAAwD,IAA5B1Y,EAA2B,EAA3BA,KACjCh1B,EAAYgR,eAAZhR,QAEFkzB,EAAY4J,GAAe9H,EAAKI,QAChCjC,EAAY2J,GAAe9H,EAAKK,QAJ8B,EAMpCn3B,oBAAS,GAN2B,mBAM7D+uC,EAN6D,KAMnDC,EANmD,KAQ9DC,EAAkB5qB,GAAe,OAACviB,QAAD,IAACA,SAAWtB,EAAWs2B,EAAK4J,gBAC7DwO,EAAkB5B,GAAexW,EAAK4J,gBAEtCsN,EACFiB,GAAqBC,GAAmB1hC,KAAK2hC,mBAAmBD,EAAgBxhC,IAAKuhC,EAAgBvhC,KACnG,IAAI2uB,KAAQ4S,EAAgBvhC,IAAKwhC,EAAgBxhC,UACjDlN,EAd8D,EAiBhEs2B,GACAoY,GACAD,GAEFzhC,KAAK2hC,mBAAmBD,EAAgBxhC,IAAKuhC,EAAgBvhC,KACzD,CACEopB,EAAKsY,kBAAkBtY,EAAKI,OAAQgY,EAAiBD,GAAiB,GACtEnY,EAAKsY,kBAAkBtY,EAAKK,OAAQ+X,EAAiBD,GAAiB,IAExE,MAACzuC,OAAWA,GA1BkD,mBAgB7D6uC,EAhB6D,KAgB5CC,EAhB4C,KA4BpE,OACE,cAACV,GAAD,UACE,eAACv9B,GAAD,CAAYC,IAAI,OAAhB,UACE,eAACq9B,GAAD,CAAgBhoC,QAAS,kBAAMqoC,GAAaD,IAAWl/B,MAAO,CAAEqkB,OAAQ,WAAxE,UACE,eAACvd,GAAD,WACE,cAACoe,GAAD,CAAoBC,UAAWA,EAAWC,UAAWA,EAAWL,QAAM,EAAC3iB,KAAM,KAC7E,cAAC,KAAD,UAAQ+iB,GAAcC,EAAf,UAAqDD,EAAUn/B,OAA/D,YAAyEo/B,EAAUp/B,QAAxD,cAACyhB,GAAD,2BAEpC,cAACX,GAAD,UACGo4B,EACC,cAAC,KAAD,CAAW98B,KAAK,KAAKpC,MAAO,CAAEqG,WAAY,UAE1C,cAAC,KAAD,CAAajE,KAAK,KAAKpC,MAAO,CAAEqG,WAAY,eAIjD64B,GACC,eAAC19B,GAAD,CAAYC,IAAI,MAAhB,UACE,eAACq9B,GAAD,WACE,cAACh4B,GAAD,UACE,eAAC,KAAD,qBAAcqe,EAAUn/B,OAAxB,SAEDw5C,EACC,eAAC14B,GAAD,WACE,cAAC,KAAD,CAAMihB,GAAG,MAAT,gBAAgByX,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAiB91B,cAAc,KAC/C,cAAC0F,GAAD,CAAchN,KAAK,OAAOpC,MAAO,CAAEqG,WAAY,OAAS5I,SAAU0nB,OAGpE,OAIJ,eAAC2Z,GAAD,WACE,cAACh4B,GAAD,UACE,eAAC,KAAD,qBAAcse,EAAUp/B,OAAxB,SAEDy5C,EACC,eAAC34B,GAAD,WACE,cAAC,KAAD,CAAMihB,GAAG,MAAT,gBAAgB0X,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAiB/1B,cAAc,KAC/C,cAAC0F,GAAD,CAAchN,KAAK,OAAOpC,MAAO,CAAEqG,WAAY,OAAS5I,SAAU2nB,OAGpE,OAGJ,eAAC0Z,GAAD,WACE,cAAC,KAAD,gCACA,cAAC,KAAD,UAAOM,EAAkBA,EAAgB11B,cAAc,GAAK,SAE9D,eAACo1B,GAAD,WACE,cAAC,KAAD,+BACA,cAAC,KAAD,UAAOX,EAAmB,UAAMA,EAAoB/1B,QAAQ,GAAlC,KAA0C,SAGtE,eAACzB,GAAD,CAAYpD,UAAU,OAAtB,UACE,cAAC,IAAD,CAAQ5M,UAAU,aAAamzB,GAAIrpB,IAAMuxB,GAAE,eAAUze,GAAW4R,GAArB,YAAmC5R,GAAW6R,IAAcplB,MAAO,CAAE2D,MAAO,OAAvH,iBAGA,cAAC,IAAD,CACEhN,UAAU,aACVmzB,GAAIrpB,IACJT,MAAO,CAAE2D,MAAO,OAChBquB,GAAE,kBAAaze,GAAW4R,GAAxB,YAAsC5R,GAAW6R,IAJrD,+BCvKC,SAASwa,GAAT,GAK0D,IAAD,0BAJtEp0B,MACEq0B,OAAUC,EAG0D,EAH1DA,YAAaC,EAG6C,EAH7CA,YAEzB9rC,EACsE,EADtEA,QAEA9C,QAAQ6uC,IAAI,iCAAiC,CAAEF,cAAaC,gBADU,MAEhC98B,eAA9BhR,EAF8D,EAE9DA,QAASuQ,EAFqD,EAErDA,QAAS8d,EAF4C,EAE5CA,QACpB+O,EAAY/b,GAAYwsB,GACxBxQ,EAAYhc,GAAYysB,GAExBE,EAAoB7xB,QACxB5L,IACI6sB,GAAa/e,aAAe+e,EAAWR,KAAKrsB,KAC3C8sB,GAAahf,aAAegf,EAAWT,KAAKrsB,MAE7C22B,EAAaroB,KAXmD,EAcZ8sB,KAAlDnM,EAd8D,EAc9DA,iBAAkBC,EAd4C,EAc5CA,WAAYwO,EAdgC,EAchCA,gBAdgC,ERpBjE,SACL7Q,EACAC,GAaC,IAAD,QAgGIl+B,EAKiC,EAIqC,EAzG1E,EAC6B6R,eAArBhR,EADR,EACQA,QAASuQ,EADjB,EACiBA,QADjB,EAG0Do7B,KAAlDnM,EAHR,EAGQA,iBAAkBC,EAH1B,EAG0BA,WAAYwO,EAHtC,EAGsCA,gBAEhClF,EAAiBvJ,IAAqBjoB,KAAM60B,WAAa70B,KAAM80B,WAAa90B,KAAM60B,WAGlF1pB,EAA8Czc,mBAClD,4CACGsR,KAAM60B,WADT,OACsBhP,QADtB,IACsBA,SAAa1+B,GADnC,eAEG6Y,KAAM80B,WAFT,OAEsBhP,QAFtB,IAEsBA,SAAa3+B,GAFnC,IAIA,CAAC0+B,EAAWC,IAbd,EAiB0BQ,GAAQnb,EAAWnL,KAAM60B,YAAa1pB,EAAWnL,KAAM80B,aAjBjF,mBAiBO6B,EAjBP,KAiBkBlZ,EAjBlB,KAkBMyW,EAAcD,GAAc,OAACxW,QAAD,IAACA,OAAD,EAACA,EAAM4J,gBAEnCqN,EACJiC,IAAcnR,GAAUS,YAAcrhB,QAAQsvB,GAAe//B,KAAKyiC,MAAM1C,EAAY7/B,IAAK8/B,KAGrF5pB,EAAWW,GAAmB,OAACziB,QAAD,IAACA,SAAWtB,EAAW,CACzDgkB,EAAWnL,KAAM60B,YACjB1pB,EAAWnL,KAAM80B,cAEbtL,GAAuD,oBAC1DxpB,KAAM60B,WAAatqB,EAAS,IAD8B,eAE1DvK,KAAM80B,WAAavqB,EAAS,IAF8B,GAMvDssB,EAAgDrP,GAAeU,EAAY/c,EAAW8c,IACtF6O,EAA8CpoC,mBAAQ,WAC1D,GAAIgmC,EACF,OAAIgC,GAAmBvrB,EAAWqmB,GACzBhK,GAAekP,EAAiBvrB,EAAWqmB,SAEpD,EAEF,GAAIqF,EAAJ,CAEE,IAAME,EAA2BzR,GAAsBuR,EAAmB79B,GAFrD,EAGI,CAACosB,GAAgBS,EAAW7sB,GAAUosB,GAAgBU,EAAW9sB,IAAnFuP,EAHc,KAGNC,EAHM,KAIrB,GAAID,GAAUC,GAAUuuB,GAA4BtZ,EAAM,CACxD,IAAMuZ,EAAoBxF,IAAmBxxB,KAAM80B,WAAahP,EAAYD,EACtEoR,EACJzF,IAAmBxxB,KAAM80B,WACrBrX,EAAKyZ,QAAQ3uB,GAAQ4uB,MAAMJ,GAC3BtZ,EAAKyZ,QAAQ1uB,GAAQ2uB,MAAMJ,GACjC,OAAOC,IAAsB9iC,KAAQK,KAAeC,MAAMyiC,EAAqB5iC,KAAO4iC,MAKzF,CAACvC,EAAagC,EAAiBvrB,EAAYqmB,EAAgBqF,EAAmBhR,EAAW7sB,EAAS8sB,EAAWrI,IAE1GqT,GAA+D,oBAClE9wB,KAAM60B,WAAa5M,IAAqBjoB,KAAM60B,WAAagC,EAAoBC,GADb,eAElE92B,KAAM80B,WAAa7M,IAAqBjoB,KAAM60B,WAAaiC,EAAkBD,GAFX,GAK/D7X,EAAQtwB,mBAAQ,WACpB,GAAIgmC,EAAa,CAAC,IACY0C,EAAyDtG,EAA5E9wB,KAAM60B,YAAkDwC,EAAoBvG,EAAvC9wB,KAAM80B,YACpD,OAAIsC,GAAmBC,EACd,IAAIC,KAAMF,EAAgBnjC,SAAUojC,EAAgBpjC,SAAUmjC,EAAgB/iC,IAAKgjC,EAAgBhjC,UAE5G,EAEF,IAAMkjC,EAAmBnS,GAAgBS,EAAW7sB,GACpD,OAAOykB,GAAQ8Z,EAAmB9Z,EAAKyZ,QAAQK,QAAoBpwC,IAClE,CAAC6R,EAAS6sB,EAAW6O,EAAajX,EAAMqT,IAGrC0G,EAAkB9oC,mBAAQ,WAAO,IACT0oC,EAAyDtG,EAA5E9wB,KAAM60B,YAAkDwC,EAAoBvG,EAAvC9wB,KAAM80B,YADhB,EAEC,CACnCxP,GAAsB8R,EAAiBp+B,GACvCssB,GAAsB+R,EAAiBr+B,IAFlCy+B,EAF6B,KAEfC,EAFe,KAMpC,GAAIja,GAAQyW,GAAeuD,GAAgBC,EACzC,OAAOja,EAAKka,mBAAmBzD,EAAauD,EAAcC,KAG3D,CAAC5G,EAAe93B,EAASykB,EAAMyW,IAE5BS,EAAsBjmC,mBAAQ,WAClC,GAAI8oC,GAAmBtD,EACrB,OAAO,IAAIlR,KAAQwU,EAAgBnjC,IAAK6/B,EAAYpe,IAAI0hB,GAAiBnjC,OAG1E,CAACmjC,EAAiBtD,IAGhBzrC,IACHb,EAAQ,kBAGN+uC,IAAcnR,GAAUN,UAC1Bt9B,EAAK,UAAGA,SAAH,QAAYwI,GAAgB,IAAK,iBAGnC0gC,EAAc9wB,KAAM60B,aAAgB/D,EAAc9wB,KAAM80B,cAC3DltC,EAAK,UAAGA,SAAH,QAAYwI,GAAgB,GAAI,oBA1GvC,IA+GwF,EAIA,EAN5DgnC,EAAyDtG,EAA5E9wB,KAAM60B,YAAkDwC,EAAoBvG,EAAvC9wB,KAAM80B,YAUpD,OARIsC,IAAe,OAAI5N,QAAJ,IAAIA,GAAJ,UAAIA,EAAmBxpB,KAAM60B,mBAA7B,aAAI,EAAsCn2B,SAAS04B,MACpExvC,EAAK,iCAAmBujB,EAAWnL,KAAM60B,mBAApC,aAAmB,EAA8Br4C,OAAjD,aAGH66C,IAAe,OAAI7N,QAAJ,IAAIA,GAAJ,UAAIA,EAAmBxpB,KAAM80B,mBAA7B,aAAI,EAAsCp2B,SAAS24B,MACpEzvC,EAAK,iCAAmBujB,EAAWnL,KAAM80B,mBAApC,aAAmB,EAA8Bt4C,OAAjD,aAGA,CACLg1C,iBACArmB,aACAsS,OACAkZ,YACAnN,mBACAsH,gBACA9R,QACA0V,cACA8C,kBACA7C,sBACA/sC,SQlGEgwC,CAAkB,OAAC/R,QAAD,IAACA,SAAa1+B,EAAd,OAAyB2+B,QAAzB,IAAyBA,SAAa3+B,GAX1DqqC,EAhBoE,EAgBpEA,eACArmB,EAjBoE,EAiBpEA,WACAsS,EAlBoE,EAkBpEA,KACAkZ,EAnBoE,EAmBpEA,UACAnN,EApBoE,EAoBpEA,iBACAsH,EArBoE,EAqBpEA,cACA9R,EAtBoE,EAsBpEA,MACA0V,EAvBoE,EAuBpEA,YACA8C,EAxBoE,EAwBpEA,gBACA7C,EAzBoE,EAyBpEA,oBACA/sC,EA1BoE,EA0BpEA,MA1BoE,ERiIjE,SACL8sC,GAKA,IAAMhtB,EAAWC,cAejB,MAAO,CACLkwB,cAdoBjsC,uBACpB,SAACs8B,GACCxgB,EAASypB,aAAU,CAAElG,MAAOjrB,KAAM60B,WAAY3M,aAAYwM,aAA6B,IAAhBA,OAEzE,CAAChtB,EAAUgtB,IAWXoD,cAToBlsC,uBACpB,SAACs8B,GACCxgB,EAASypB,aAAU,CAAElG,MAAOjrB,KAAM80B,WAAY5M,aAAYwM,aAA6B,IAAhBA,OAEzE,CAAChtB,EAAUgtB,KQvH4BqD,CAAsBrD,GAAvDmD,EA5B8D,EA4B9DA,cAAeC,EA5B+C,EA4B/CA,cAEjBvG,GAAW3pC,EA9BqD,EAiChCjB,oBAAkB,GAjCc,mBAiC/DgrC,GAjC+D,KAiClDqG,GAjCkD,QAkC5BrxC,oBAAkB,GAlCU,qBAkC/D4S,GAlC+D,MAkChD0+B,GAlCgD,SAqCnDlwB,KAAZE,GArC+D,wBAsC5CR,KAAnB1I,GAtC+D,wBAuC1CpY,mBAAiB,IAvCyB,qBAuC/DggB,GAvC+D,MAuCvDuxB,GAvCuD,MA0ChEpG,IAAgB,oBACnB7J,EAAmBC,GADA,eAEnBsJ,EAAiBkD,EAAcgC,EAAH,oBAAqB5F,EAAcU,UAAnC,aAAqB,EAA+BtxB,cAAc,UAAlE,QAAwE,IAFjF,GAMhBi4B,GAAiD,CAACn4B,KAAM60B,WAAY70B,KAAM80B,YAAYrwB,QAC1F,SAAC2zB,EAAanN,GACZ,OAAO,2BACFmN,GADL,mBAEGnN,EAAQl3B,GAAey1B,EAAiByB,QAG7C,IAGIoN,GAAmD,CAACr4B,KAAM60B,WAAY70B,KAAM80B,YAAYrwB,QAC5F,SAAC2zB,EAAanN,GAAW,IAAD,IACtB,OAAO,2BACFmN,GADL,mBAEGnN,EAFH,UAEWkN,GAAWlN,UAFtB,aAEW,EAAmBlkB,QAAnB,UAA2B+pB,EAAc7F,UAAzC,QAAmD,SAGhE,IAjEoE,GAqEhCqN,aAAmBxH,EAAc9wB,KAAM60B,YAAa0D,MArEpB,qBAqE/DC,GArE+D,MAqEpDC,GArEoD,SAsEhCH,aAAmBxH,EAAc9wB,KAAM80B,YAAayD,MAtEpB,qBAsE/DG,GAtE+D,MAsEpDC,GAtEoD,MAwEhEnV,GAAiBC,eAxE+C,SA0EvDmR,KA1EuD,8EA0EtE,4DAAAxiC,EAAA,yDACO4G,GAAY8d,GAAYruB,EAD/B,oDAEQmwC,EAASjW,aAAkB3pB,EAAS8d,EAASruB,GAEvBowC,EAAqD/H,EAAxE9wB,KAAM60B,YAAgDiE,EAAkBhI,EAArC9wB,KAAM80B,YAC7C+D,GAAkBC,GAAkBjT,GAAcC,EALzD,4EAUK9lB,KAAM60B,WAAakE,aAAwBF,EAAenE,EAAc,EAAI31B,IAAiB,IAVlG,eAWKiB,KAAM80B,WAAaiE,aAAwBD,EAAepE,EAAc,EAAI31B,IAAiB,IAF1Fi6B,EATR,EAcQC,EAAkBhW,KAAKiW,KAAKC,KAAKC,MAAQ,KAAQnxB,GAMnD4d,IAAc3xB,MAAS4xB,IAAc5xB,MACjCmlC,EAAcvT,IAAc5xB,KAClColC,EAAWV,EAAO7U,YAAYwV,gBAC9BC,EAASZ,EAAOW,gBAChBzV,EAAO,qBACLsB,GAAgBiU,EAAcxT,EAAYC,EAAW9sB,UADhD,aACL,EAA+Drc,eAD1D,QACqE,IACzE08C,EAAcR,EAAgBC,GAAezkC,IAAIwW,WAClDmuB,EAAWK,EAAcr5B,KAAM60B,WAAa70B,KAAM80B,YAAYjqB,WAC9DmuB,EAAWK,EAAcr5B,KAAM80B,WAAa90B,KAAM60B,YAAYhqB,WAC9DpiB,EACAwwC,GAEFnxC,EAAQmH,KAAUgH,MAAMojC,EAAcP,EAAgBD,GAAexkC,IAAIwW,cAEzEyuB,EAAWV,EAAO7U,YAAY0V,aAC9BD,EAASZ,EAAOa,aAChB3V,EAAO,qBACLsB,GAAgBS,EAAW7sB,UADtB,aACL,EAAqCrc,eADhC,QAC2C,GAD3C,oBAELyoC,GAAgBU,EAAW9sB,UAFtB,aAEL,EAAqCrc,eAFhC,QAE2C,GAChDk8C,EAAcxkC,IAAIwW,WAClBiuB,EAAczkC,IAAIwW,WAClBmuB,EAAWh5B,KAAM60B,YAAYhqB,WAC7BmuB,EAAWh5B,KAAM80B,YAAYjqB,WAC7BpiB,EACAwwC,GAEFnxC,EAAQ,MAGVmwC,IAAiB,GAjDnB,UAmDQqB,EAAQ,WAAR,eAAYxV,GAAZ,QAAkBh8B,EAAQ,CAAEA,SAAU,MACzCT,MAAK,SAACqyC,GAAD,OACJF,EAAM,WAAN,eAAU1V,GAAV,mCACMh8B,EAAQ,CAAEA,SAAU,IAD1B,IAEE68B,SAAUC,aAAmB8U,QAC5BryC,MAAK,SAACmuB,GAAc,IAAD,QACpByiB,IAAiB,GAEjBzU,GAAehO,EAAU,CACvByP,QAAQ,OAAD,iBAAS6L,EAAc9wB,KAAM60B,mBAA7B,aAAS,EAAiC30B,cAAc,GAAxD,sBACLiL,EAAWnL,KAAM60B,mBADZ,aACL,EAA8Br4C,OADzB,0BAECs0C,EAAc9wB,KAAM80B,mBAFrB,aAEC,EAAiC50B,cAAc,GAFhD,sBAEsDiL,EAAWnL,KAAM80B,mBAFvE,aAEsD,EAA8Bt4C,UAG7F07C,GAAU1iB,EAASvc,YAGtBxR,OAAM,SAACC,GACNuwC,IAAiB,GAED,QAAX,OAADvwC,QAAC,IAADA,OAAA,EAAAA,EAAGpC,OACLqC,QAAQC,MAAMF,MAxEtB,6CA1EsE,sBAuJtE,IAAMsf,GAAc,WAAO,IAAD,QACxB,OAAO0tB,EACL,cAAC18B,GAAD,CAAYC,IAAI,OAAhB,SACE,cAACoU,GAAD,CAAWhT,GAAG,OAAO6D,aAAa,OAAlC,SACE,eAACE,GAAD,WACE,cAAC,KAAD,CAAW/L,SAAS,OAAOy6B,GAAG,MAA9B,6BACM3gB,EAAWnL,KAAM60B,mBADvB,aACM,EAA8Br4C,OADpC,sBAC8C2uB,EAAWnL,KAAM80B,mBAD/D,aAC8C,EAA8Bt4C,UAE5E,cAACk/B,GAAD,CACEC,UAAWxQ,EAAWnL,KAAM60B,YAC5BjZ,UAAWzQ,EAAWnL,KAAM80B,YAC5Bl8B,KAAM,YAMd,eAACZ,GAAD,CAAYC,IAAI,OAAhB,UACE,eAACmF,GAAD,CAAS5G,MAAO,CAAEuD,UAAW,QAA7B,UACE,cAAC,KAAD,CAAW1I,SAAS,OAAOy6B,GAAG,MAA9B,gBACG0L,QADH,IACGA,OADH,EACGA,EAAiBt3B,cAAc,KAElC,cAACwb,GAAD,CACEC,UAAWxQ,EAAWnL,KAAM60B,YAC5BjZ,UAAWzQ,EAAWnL,KAAM80B,YAC5Bl8B,KAAM,QAGV,cAAC,GAAD,UACE,cAAC,KAAD,CAAWvH,SAAS,OAApB,6BACM8Z,EAAWnL,KAAM60B,mBADvB,aACM,EAA8Br4C,OADpC,sBAC8C2uB,EAAWnL,KAAM80B,mBAD/D,aAC8C,EAA8Bt4C,OAD5E,oBAIF,cAAC,KAAD,CAAWm9C,OAAK,EAACz/B,UAAU,OAAOF,QAAQ,aAAaxD,MAAO,CAAEojC,UAAW,UAA3E,0EAEI76B,GAAkB,IAFtB,yCASAkI,GAAc,WAClB,OACE,cAACwtB,GAAD,CACEzV,MAAOA,EACP7T,WAAYA,EACZ2lB,cAAeA,EACf4D,YAAaA,EACbE,MAAOA,GACPD,oBAAqBA,KAKrB77B,GAAW,8BAAgBg4B,EAAc9wB,KAAM60B,mBAApC,aAAgB,EAAiC30B,cAAc,GAA/D,sBACfiL,EAAWnL,KAAM60B,mBADF,aACf,EAA8Br4C,OADf,0BAETs0C,EAAc9wB,KAAM80B,mBAFX,aAET,EAAiC50B,cAAc,GAFtC,sBAE4CiL,EAAWnL,KAAM80B,mBAF7D,aAE4C,EAA8Bt4C,QAErFq9C,GAAwBjuC,uBAC5B,SAACkuC,GACC,IAAMC,EAAiBhwB,GAAW+vB,GAC9BC,IAAmBxD,EACrB9rC,EAAQ8G,KAAR,eAAqBglC,EAArB,YAAoCD,IAEpC7rC,EAAQ8G,KAAR,eAAqBwoC,EAArB,YAAuCxD,MAG3C,CAACA,EAAa9rC,EAAS6rC,IAEnB0D,GAAwBpuC,uBAC5B,SAACquC,GACC,IAAMC,EAAiBnwB,GAAWkwB,GAC9B3D,IAAgB4D,EACd3D,EACF9rC,EAAQ8G,KAAR,eAAqBglC,EAArB,YAAoC2D,IAEpCzvC,EAAQ8G,KAAR,eAAqB2oC,IAGvBzvC,EAAQ8G,KAAR,eAAqB+kC,GAAe,MAApC,YAA6C4D,MAGjD,CAAC5D,EAAa7rC,EAAS8rC,IAGnB4D,GAA4BvuC,uBAAY,WAC5CosC,IAAe,GAEXrxB,IACFkxB,EAAc,IAEhBK,GAAU,MACT,CAACL,EAAelxB,KACnB,OACE,qCAEE,eAACwnB,GAAD,WAGE,cAACkH,GAAD,CAAepb,QAAM,IACrB,eAAC,GAAD,WACE,cAAC,GAAD,CACE5kB,OAAQs8B,GACRxhC,UAAWgqC,GACX5gC,cAAeA,GACfN,KAAM0N,GACNnN,QAAS,kBACP,cAAC,GAAD,CACExI,MAAO0jC,EAAc,0BAA4B,mBACjDvkC,UAAWgqC,GACXvgC,WAAYoN,GACZrN,cAAesN,MAGnBnO,YAAaA,KAEf,cAAC,IAAD,UACE,eAACd,GAAD,CAAYC,IAAI,OAAhB,UACGy8B,GACC,cAAC38B,GAAD,UACE,cAAC,GAAD,UACE,eAACC,GAAD,CAAYC,IAAI,OAAhB,UACE,cAAC,KAAD,oDACA,cAAC,KAAD,2EACA,cAAC,KAAD,8EAKR,cAACmlB,GAAD,CACEt1B,MAAOgqC,GAAiB9xB,KAAM60B,YAC9B5Y,YAAa4b,EACbxa,MAAO,WAAO,IAAD,IACXwa,EAAa,oBAACM,GAAWn4B,KAAM60B,mBAAlB,aAAC,EAA8BtmB,iBAA/B,QAA4C,KAE3DyB,iBAAkB6pB,GAClBvc,eAAgB+a,GAAar4B,KAAM60B,YACnC5gC,SAAUkX,EAAWnL,KAAM60B,YAC3BtpC,GAAG,6BACH4mB,iBAAiB,IAEnB,cAACpa,GAAD,UACE,cAAC,IAAD,CAAS/J,MAAM,iBAEjB,cAACovB,GAAD,CACEt1B,MAAOgqC,GAAiB9xB,KAAM80B,YAC9B7Y,YAAa6b,EACb9nB,iBAAkBgqB,GAClB3c,MAAO,WAAO,IAAD,IACXya,EAAa,oBAACK,GAAWn4B,KAAM80B,mBAAlB,aAAC,EAA8BvmB,iBAA/B,QAA4C,KAE3D+O,eAAgB+a,GAAar4B,KAAM80B,YACnC7gC,SAAUkX,EAAWnL,KAAM80B,YAC3BvpC,GAAG,6BACH4mB,iBAAiB,IAElBhH,EAAWnL,KAAM60B,aAAe1pB,EAAWnL,KAAM80B,aAAe6B,IAAcnR,GAAUN,SACvF,gCACE,cAAC,KAAD,CACE1uB,MAAO,CAAE0/B,cAAe,YAAav2B,WAAY,KACjD3R,MAAM,aACNqD,SAAS,OACTC,GAAG,MAJL,SAMGojC,EAAc,gCAAkC,0BAEnD,cAAC,GAAD,UACE,cAACK,GAAD,CACE5pB,WAAYA,EACZwpB,oBAAqBA,EACrBD,YAAaA,EACb1V,MAAOA,SAMbv2B,EAGA,eAACuP,GAAD,CAAYC,IAAI,KAAhB,WACIugC,KAAclG,KAAca,cAC5BqF,KAAclG,KAAcC,SAC5BmG,KAAcpG,KAAca,cAC5BuF,KAAcpG,KAAcC,UAC5BhB,GACE,eAACp0B,GAAD,WACGq7B,KAAclG,KAAcc,UAC3B,cAAC,IAAD,CACE9lC,QAASmrC,GACT3hC,SAAU0hC,KAAclG,KAAcC,QACtC/7B,MAAO,CAAE2D,MAAOu+B,KAAcpG,KAAcc,SAAW,MAAQ,QAHjE,SAKGoF,KAAclG,KAAcC,QAC3B,eAAC,GAAD,kCAAiBpnB,EAAWnL,KAAM60B,mBAAlC,aAAiB,EAA8Br4C,UADhD,4BAGY2uB,EAAWnL,KAAM60B,mBAH7B,aAGY,EAA8Br4C,UAI9Ck8C,KAAcpG,KAAcc,UAC3B,cAAC,IAAD,CACE9lC,QAASqrC,GACT7hC,SAAU4hC,KAAcpG,KAAcC,QACtC/7B,MAAO,CAAE2D,MAAOq+B,KAAclG,KAAcc,SAAW,MAAQ,QAHjE,SAKGsF,KAAcpG,KAAcC,QAC3B,eAAC,GAAD,kCAAiBpnB,EAAWnL,KAAM80B,mBAAlC,aAAiB,EAA8Bt4C,UADhD,4BAGY2uB,EAAWnL,KAAM80B,mBAH7B,aAGY,EAA8Bt4C,aAMrD,cAAC,IAAD,CACE2Q,UAAU,aACVG,QAAS,WACHqiC,EACFiF,KAEAoD,IAAe,IAGnBlhC,UAAWy6B,GAAWiH,KAAclG,KAAcc,UAAYsF,KAAcpG,KAAcc,SAC1F16B,SACG64B,GAAaT,EAAc9wB,KAAM60B,aAAiB/D,EAAc9wB,KAAM80B,YACnE,SACA,UAbR,gBAiBGltC,QAjBH,IAiBGA,IAAS,cAtDd,cAACmsC,GAAD,eA8DTtW,IAASiX,GAAeiC,IAAcnR,GAAUN,QAC/C,cAACltB,GAAD,CAAYxB,MAAO,CAAE8P,SAAU,QAASvM,UAAW,QAAnD,SACE,cAACy7B,GAAD,CAAqBC,cAAegB,EAAmBhZ,KAAMA,MAE7D,QC7ZK,SAAS2c,KACRxxC,qBAAWsQ,gBAAzB,IACQzQ,EAAYgR,eAAZhR,QAGF4xC,EnE4KD,WAAmD,IAChDrhC,EAAYS,eAAZT,QACF1c,EAASqsB,KAGT2xB,EAAc5rC,mBAAQ,wBAAOsK,GAAO,UAAGuhC,KAAavhC,UAAhB,QAAiC,KAAK,CAACA,IAG3EwhC,EAAmC9rC,mBACvC,kBACEsK,EACI2tB,KAAQp2B,OAAOC,KAAKlU,IAAS,SAAC+sB,GAAkB,IAAD,EACvC9iB,EAAQjK,EAAO+sB,GAErB,OAEE,UAACoxB,KAA6BzhC,UAA9B,QAA0C,IAEvC3C,KAAI,SAAC0uB,GACJ,OAAIA,EAAKpoC,UAAY4J,EAAM5J,QAClB,KAEF,CAACooC,EAAMx+B,MAEfS,QAAO,SAACiqB,GAAD,OAAkC,OAANA,QAG1C,KACN,CAAC30B,EAAQ0c,IAIL0hC,EAAuBvvC,aAAiD,qBAAGoc,KAAQugB,SAEnF6S,EAA8BjsC,mBAAQ,WAC1C,IAAKsK,IAAY0hC,EAAsB,MAAO,GAC9C,IAAME,EAAWF,EAAqB1hC,GACtC,OAAK4hC,EAEErqC,OAAOC,KAAKoqC,GAAUvkC,KAAI,SAACwkC,GAChC,MAAO,CAACzzB,GAAiBwzB,EAASC,GAAQhd,QAASzW,GAAiBwzB,EAASC,GAAQ/c,YAHjE,KAKrB,CAAC4c,EAAsB1hC,IAEpB8hC,EAAepsC,mBAAQ,kBAAMisC,EAAUI,OAAOP,GAAgBO,OAAOT,KAAc,CACvFE,EACAF,EACAK,IAGF,OAAOjsC,mBAAQ,WAEb,IAAMssC,EAAQF,EAAar2B,QAA0C,SAAC1Y,EAAD,GAA6B,IAAD,mBAApBwc,EAAoB,KAAZC,EAAY,KACzFyK,EAAS1K,EAAO6d,YAAY5d,GAC5BjS,EAAM0c,EAAM,UAAM1K,EAAO5rB,QAAb,YAAwB6rB,EAAO7rB,SAA/B,UAA8C6rB,EAAO7rB,QAArD,YAAgE4rB,EAAO5rB,SACzF,OAAIoP,EAAKwK,KACTxK,EAAKwK,GAAO0c,EAAS,CAAC1K,EAAQC,GAAU,CAACA,EAAQD,IAD3Bxc,IAGrB,IAEH,OAAOwE,OAAOC,KAAKwqC,GAAO3kC,KAAI,SAACE,GAAD,OAASykC,EAAMzkC,QAC5C,CAACukC,ImEzOsBG,GACpBC,EAAgCxsC,mBACpC,kBAAM2rC,EAAkBhkC,KAAI,SAAC/Z,GAAD,MAAa,CAAE+qC,eAAgB/e,GAAmBhsB,GAASA,eACvF,CAAC+9C,IAR0B,EAaqBnwB,GAAoC,OACpFzhB,QADoF,IACpFA,SAAWtB,EAJWuH,mBAAQ,kBAAMwsC,EAA8B7kC,KAAI,SAAC8kC,GAAD,OAAWA,EAAM9T,oBAAiB,CACxG6T,KAX2B,mBAatBE,EAbsB,KAaLC,EAbK,KAmBvBC,EAA8B5sC,mBAClC,kBACEwsC,EAA8Bl0C,QAAO,kBAAGqgC,EAAH,EAAGA,eAAH,iBACnC+T,EAAgB/T,EAAe1qC,gBADI,aACnC,EAAyCyX,YAAY,UAEzD,CAAC8mC,EAA+BE,IAG5BG,EAAU3V,GAAS0V,EAA4BjlC,KAAI,qBAAG/Z,WACtDk/C,EACJH,IAAiC,OAAPE,QAAO,IAAPA,OAAA,EAAAA,EAAS/zC,QAAS8zC,EAA4B9zC,SAAxE,OAAkF+zC,QAAlF,IAAkFA,OAAlF,EAAkFA,EAAS7oC,MAAK,SAAC+oC,GAAD,OAAaA,MAEzGC,EAA0BH,EAAQllC,KAAI,0CAAoBrP,QAAO,SAAC20C,GAAD,OAA4B/2B,QAAQ+2B,MAE3G,OACE,mCACE,eAACxN,GAAD,WACE,eAAC,GAAD,WACE,cAAC0F,GAAD,CAASlF,YAAa,IACtB,cAAC,GAAD,CAAY39B,MAAM,GAAG2d,YAAY,QAGnC,qBAAKxhB,UAAU,aAAf,SACE,cAAC,IAAD,CAAQ5B,GAAG,mBAAmB+0B,GAAIrpB,IAAMuxB,GAAG,WAA3C,SACE,cAAC,GAAD,CAAgBv1B,cAAe,IAA/B,+BAGJ,cAAC+E,GAAD,CAAYC,IAAI,KAAKC,QAAQ,SAA7B,SACE,cAAC,IAAD,UACE,eAACF,GAAD,CAAYC,IAAI,OAAOzB,MAAO,CAAE2D,MAAO,QAAvC,UACE,cAACgD,GAAD,CAAYnD,QAAQ,QAApB,SACE,cAAC,KAAD,CAAOxD,MAAO,CAAExI,MAAM,QAAtB,SACE,cAAC,GAAD,CAAgBiF,cAAe,IAA/B,gCAUFxK,EAME+yC,EACF,cAACnvB,GAAD,CAAWrS,QAAQ,OAAnB,SACE,cAAC,KAAD,CAAMhM,MAAM,eAAekM,UAAU,SAArC,SACE,cAAC+D,GAAD,2BAGqB,OAAvBy9B,QAAuB,IAAvBA,OAAA,EAAAA,EAAyBl0C,QAAS,EACpC,mCACGk0C,EAAwBrlC,KAAI,SAACslC,GAAD,OAC3B,cAACxF,GAAD,CAAsD1Y,KAAMke,GAArCA,EAAOtU,eAAe1qC,cAIjD,cAAC0vB,GAAD,CAAWrS,QAAQ,OAAO7M,UAAU,YAApC,SACE,cAAC,KAAD,CAAMa,MAAM,eAAekM,UAAU,SAArC,SACE,cAAC,GAAD,CAAgBjH,cAAe,IAA/B,qCApBJ,cAACoZ,GAAD,CAAWrS,QAAQ,OAAnB,SACE,cAAC,KAAD,CAAMhM,MAAM,eAAekM,UAAU,SAArC,2DAwBJ,gCACE,eAAC,KAAD,CAAM7I,SAAS,OAAOmF,MAAO,CAAEwD,QAAS,mBAAqBhM,MAAM,OAAnE,UACGoC,GAAgB,IAAK,gCAAiC,IACvD,cAAC4G,GAAD,CAAoBzL,GAAG,mBAAmBi9B,GAAG,QAA7C,SACGp4B,GAAgB,IAAK,mBAG1B,cAAC,KAAD,CAAMiB,SAAS,OAAOmF,MAAO,CAAEwD,QAAS,kBAAmBhM,MAAO,QAAlE,yGAYhB,IAAM4lC,GAAU3nC,UAAOC,IAAV,mF,4BCpHN,SAAS0vC,KACd,OAAOzwC,aAAwC,SAAAjB,GAAK,OAAIA,EAAM2xC,QCRhE,I,SAoBelO,GApB6B,SAAAnlC,GAC1C,IAAM4H,EAAkB/B,eAD2B,EAET3F,cAAlCD,EAF2C,EAE3CA,QAASmlC,EAFkC,EAElCA,SAAUC,EAFwB,EAExBA,WASnBC,EAA0BC,cAPd,SAACtpC,GACnB,OACSmpC,EADW,kBAAhBnpC,EACcupC,KAEFC,QAG4CJ,EAAYplC,GAAlEqlC,sBAER,OACE,cAAC,KAAD,yBAAQxgC,QAASwgC,GAA2BtlC,GAA5C,aACG4H,EAAgB,IAAK,qBClBtB0rC,GAAmB7vC,UAAOmhB,MAAV,g9DAgBR,qBAAGxU,QACJ,qBAAGA,QAKH,qBAAG1T,MAAkBC,OAAOyV,oBAU3B,qBAAGhC,QACJ,qBAAGA,QAIH,qBAAG1T,MAAkBC,OAAOyV,oBAU3B,qBAAGhC,QACJ,qBAAGA,QAGH,qBAAG1T,MAAkBC,OAAOyV,oBAYjC,qBAAG1V,MAAkBC,OAAO42C,eAC5B,qBAAG72C,MAAkBC,OAAO0V,YAQ5B,qBAAG3V,MAAkBC,OAAO42C,eAC5B,qBAAG72C,MAAkBC,OAAO0V,YAUlB,qBAAG3V,MAAkBC,OAAO42C,eAI5B,qBAAG72C,MAAkBC,OAAO42C,eAG5B,qBAAG72C,MAAkBC,OAAO0V,YAa/B,SAASmhC,GAAT,GAAiG,IAA/El0C,EAA8E,EAA9EA,MAAOusB,EAAuE,EAAvEA,SAAuE,IAA7D4X,WAA6D,MAAvD,EAAuD,MAApD/K,YAAoD,MAA7C,EAA6C,MAA1C+a,WAA0C,MAApC,IAAoC,MAA/BrjC,YAA+B,MAAxB,GAAwB,EACvGsjC,EAAiBtwC,uBACrB,SAAAlE,GACE2sB,EAASnuB,SAASwB,EAAE0P,OAAOtP,UAE7B,CAACusB,IAGH,OACE,cAACynB,GAAD,CACEljC,KAAMA,EACNub,KAAK,QACLrsB,MAAOA,EACP0O,MAAO,CAAE2D,MAAO,MAAO0C,WAAY,GAAIuJ,YAAa,GAAIpM,QAAS,UACjEqa,SAAU6nB,EACVC,kBAAgB,eAChBjb,KAAMA,EACN+K,IAAKA,EACLgQ,IAAKA,ICrFX,IAAMG,GAAcnwC,UAAOC,IAAV,kGACK,qBAAGhH,MAAkBC,OAAOovC,eAK5C8H,GAAOpwC,UAAOC,IAAV,6EAKK,SAASowC,GAAT,GAKwD,IAAD,0BAJpE7xC,EAIoE,EAJpEA,QAIoE,IAHpEuX,MACEq0B,OAAUC,EAEwD,EAFxDA,YAAaC,EAE2C,EAF3CA,YAGlB1Q,EAD6D,UACpC/b,GAAYwsB,UADwB,aACRnvC,EAA1C2+B,EADkD,UACGhc,GAAYysB,UADf,aAC+BpvC,EAD/B,EAE9BsS,eAA9BhR,EAF4D,EAE5DA,QAASuQ,EAFmD,EAEnDA,QAAS8d,EAF0C,EAE1CA,QAF0C,EAG3CpoB,mBAAQ,iBAAM,CAAC02B,GAAgBS,EAAW7sB,GAAUosB,GAAgBU,EAAW9sB,MAAW,CACjH6sB,EACAC,EACA9sB,IANkE,mBAG7DuP,EAH6D,KAGrDC,EAHqD,KAS9DtjB,EAAQ0D,qBAAWsQ,gBAT2C,EAY3B0iC,KAAjC3T,EAZ4D,EAY5DA,iBAAkBC,EAZ0C,EAY1CA,WAZ0C,EHtC/D,SACLrC,EACAC,GAUC,IAAD,YAC6BrsB,eAArBhR,EADR,EACQA,QAASuQ,EADjB,EACiBA,QADjB,EAGyC4iC,KAAjC3T,EAHR,EAGQA,iBAAkBC,EAH1B,EAG0BA,WAH1B,EAMiB5B,GAAQT,EAAWC,GAA3BrI,EANT,oBASMgL,EAAwB1d,GAAgB,OAACtiB,QAAD,IAACA,SAAWtB,EAAW,QAACs2B,QAAD,IAACA,OAAD,EAACA,EAAM4J,iBACtEkV,EAAsC,OAAG9T,QAAH,IAAGA,OAAH,EAAGA,EAAqB,iBAAGhL,QAAH,IAAGA,GAAH,UAAGA,EAAM4J,sBAAT,aAAG,EAAsB1qC,eAAzB,QAAoC,IAVxG,EAYyB,CAACyoC,GAAgBS,EAAW7sB,GAAUosB,GAAgBU,EAAW9sB,IAAnFuP,EAZP,KAYeC,EAZf,KAaMlsB,GAAM,oBACT0jB,KAAM60B,WAAatsB,GADV,eAETvI,KAAM80B,WAAatsB,GAFV,eAGTxI,KAAMw8B,UAHG,OAGS/e,QAHT,IAGSA,OAHT,EAGSA,EAAM4J,gBAHf,GAON6M,EAAcD,GAAc,OAACxW,QAAD,IAACA,OAAD,EAACA,EAAM4J,gBACnCoV,EACJhf,GACAyW,GACAqI,GACAh0B,GAEApU,KAAK2hC,mBAAmB5B,EAAY7/B,IAAKkoC,EAAcloC,KACnD,IAAIyW,KAAYvC,EAAQkV,EAAKsY,kBAAkBxtB,EAAQ2rB,EAAaqI,GAAe,GAAOloC,UAC1FlN,EACAu1C,EACJjf,GACAyW,GACAqI,GACA/zB,GAEArU,KAAK2hC,mBAAmB5B,EAAY7/B,IAAKkoC,EAAcloC,KACnD,IAAIyW,KAAYtC,EAAQiV,EAAKsY,kBAAkBvtB,EAAQ0rB,EAAaqI,GAAe,GAAOloC,UAC1FlN,EACAw1C,GAAuF,oBAC1F38B,KAAM60B,WAAa4H,GADuE,eAE1Fz8B,KAAM80B,WAAa4H,GAFuE,GAKzFE,EAA2B,IAAI5Z,KAAQ,IAAK,OAEhD,GAAIiF,IAAqBjoB,KAAM68B,kBAC7BD,EAAkB,IAAI5Z,KAAQkF,EAAY,YAGvC,GAAID,IAAqBjoB,KAAMw8B,WAClC,UAAI/e,QAAJ,IAAIA,OAAJ,EAAIA,EAAM4J,eAAgB,CACxB,IAAMwP,EAAoBrP,GAAeU,EAAYzK,EAAK4J,gBACtDwP,GAAqB0F,IAAkB1F,EAAkBziC,YAAYmoC,KACvEK,EAAkB,IAAI5Z,KAAQ6T,EAAkBxiC,IAAKkoC,EAAcloC,YAKpE,GAAI/X,EAAO2rC,GAAmB,CAC/B,IAAM4O,EAAoBrP,GAAeU,EAAY5rC,EAAO2rC,IACtD6U,EAAiBH,EAAgB1U,GACnC4O,GAAqBiG,IAAmBjG,EAAkBziC,YAAY0oC,KACxEF,EAAkB,IAAI5Z,KAAQ6T,EAAkBxiC,IAAKyoC,EAAezoC,MAI1E,IAqBIzM,EAKyG,EA1BvGkpC,GAKL,oBACE9wB,KAAM68B,kBAAoBD,GAD5B,eAEE58B,KAAMw8B,UACLD,GAAiBK,GAAmBA,EAAgBxoC,YAAY,KAC5D,IAAI0W,KAAYyxB,EAAch2C,MAAOq2C,EAAgBG,SAASR,EAAcloC,KAAK2oC,eACjF71C,GALP,eAME6Y,KAAM60B,WACLtsB,GAAUq0B,GAAmBA,EAAgBxoC,YAAY,MAAQqoC,EAC7D,IAAI3xB,KAAYvC,EAAQq0B,EAAgBG,SAASN,EAAgBpoC,KAAK2oC,eACtE71C,GATP,eAUE6Y,KAAM80B,WACLtsB,GAAUo0B,GAAmBA,EAAgBxoC,YAAY,MAAQsoC,EAC7D,IAAI5xB,KAAYtC,EAAQo0B,EAAgBG,SAASL,EAAgBroC,KAAK2oC,eACtE71C,GAbP,GAyBD,OARKsB,IACHb,EAAQ,kBAGLkpC,EAAc9wB,KAAMw8B,YAAe1L,EAAc9wB,KAAM60B,aAAgB/D,EAAc9wB,KAAM80B,cAC9FltC,EAAK,UAAGA,SAAH,QAAY,mBAGZ,CAAE61B,OAAMqT,gBAAelpC,SG1DSq1C,CAAkB,OAACpX,QAAD,IAACA,SAAa1+B,EAAd,OAAyB2+B,QAAzB,IAAyBA,SAAa3+B,GAAvFs2B,EAb4D,EAa5DA,KAAMqT,EAbsD,EAatDA,cAAelpC,EAbuC,EAavCA,MACRs1C,EH4DhB,WAGL,IAAMx1B,EAAWC,cASjB,MAAO,CACLsU,YARkBrwB,uBAClB,SAACq/B,EAAc/C,GACbxgB,EAASypB,aAAU,CAAElG,QAAO/C,kBAE9B,CAACxgB,KGrEmCy1B,GAA9BlhB,YACFsV,GAAW3pC,EAfmD,EAkB9BjB,oBAAkB,GAlBY,mBAkB7DgrC,EAlB6D,KAkBhDqG,EAlBgD,OAmB5BrxC,oBAAkB,GAnBU,mBAmB7Dy2C,EAnB6D,KAmB/CC,EAnB+C,OAoB1B12C,oBAAS,GApBiB,oBAoB7D4S,GApB6D,MAoB9C0+B,GApB8C,SAuBxCtxC,mBAAiB,IAvBuB,qBAuB7DggB,GAvB6D,MAuBrDuxB,GAvBqD,SAwBjDnwB,KAAZE,GAxB6D,wBAyB1CR,KAAnB1I,GAzB6D,qBA2B9D+yB,IAAgB,oBACnB9xB,KAAM68B,kBAAoB/L,EAAc9wB,KAAM68B,mBAAmB91B,QAAQ,KACtE,IACA+pB,EAAc9wB,KAAM68B,mBAAmBn+B,SAAS,IAAIskB,KAAQ,IAAK,QACjE,KACA8N,EAAc9wB,KAAM68B,mBAAmBj+B,QAAQ,IAL/B,eAMnBoB,KAAMw8B,UACLvU,IAAqBjoB,KAAMw8B,UAAYtU,EAAvC,oBAAoD4I,EAAc9wB,KAAMw8B,kBAAxE,aAAoD,EAAgCt8B,cAAc,UAAlG,QAAwG,IAPtF,eAQnBF,KAAM60B,WACL5M,IAAqBjoB,KAAM60B,WAAa3M,EAAxC,oBAAqD4I,EAAc9wB,KAAM60B,mBAAzE,aAAqD,EAAiC30B,cAAc,UAApG,QAA0G,IATxF,eAUnBF,KAAM80B,WACL7M,IAAqBjoB,KAAM80B,WAAa5M,EAAxC,oBAAqD4I,EAAc9wB,KAAM80B,mBAAzE,aAAqD,EAAiC50B,cAAc,UAApG,QAA0G,IAXxF,GAchBo9B,GAAW,UAAGxM,EAAc9wB,KAAM68B,0BAAvB,aAAG,EAAwC91B,QAAQ,IAAIic,KAAQ,MAG1Eua,GAAgCC,aAAe,OAAC/f,QAAD,IAACA,GAAD,UAACA,EAAM4J,sBAAP,aAAC,EAAsB1qC,SA5CR,GA+C1BgK,mBAAuE,MA/C7C,qBA+C7D82C,GA/C6D,MA+C9CC,GA/C8C,SAgDhCpF,aAAmBxH,EAAc9wB,KAAMw8B,WAAYjE,MAhDnB,qBAgD7DrG,GAhD6D,MAgDnDC,GAhDmD,oDAiDpE,0CAAA//B,EAAA,yDACOmrC,IAAiB9f,GAAS3G,EADjC,sBACgD,IAAIhW,MAAM,wBAD1D,UAEQ68B,EAAkB7M,EAAc9wB,KAAMw8B,WAF9C,sBAG8B,IAAI17B,MAAM,4BAHxC,uBAKsBy8B,GAAaK,OAAOn1C,GAL1C,OAKQo1C,EALR,OAOQC,EAA+B7a,KAAKiW,KAAKC,KAAKC,MAAQ,KAAQnxB,GAE9D81B,EAAe,CACnB,CAAE1zC,KAAM,OAAQ8pB,KAAM,UACtB,CAAE9pB,KAAM,UAAW8pB,KAAM,UACzB,CAAE9pB,KAAM,UAAW8pB,KAAM,WACzB,CAAE9pB,KAAM,oBAAqB8pB,KAAM,YAE/B6pB,EAAS,CACb3zC,KAAM,YACN2uB,QAAS,IACThgB,UACAilC,kBAAmBxgB,EAAK4J,eAAe1qC,SAEnCuhD,EAAS,CACb,CAAE7zC,KAAM,QAAS8pB,KAAM,WACvB,CAAE9pB,KAAM,UAAW8pB,KAAM,WACzB,CAAE9pB,KAAM,QAAS8pB,KAAM,WACvB,CAAE9pB,KAAM,QAAS8pB,KAAM,WACvB,CAAE9pB,KAAM,WAAY8pB,KAAM,YAEtBra,EAAU,CACdqkC,MAAO11C,EACP21C,QAAS7F,KACTzwC,MAAO61C,EAAgBtpC,IAAIwW,WAC3BgzB,MAAOA,EAAMQ,cACbp2B,SAAU61B,GAENv2C,EAAO+2C,KAAKC,UAAU,CAC1BC,MAAO,CACLT,eACAG,UAEFF,SACAS,YAAa,SACb3kC,YAGFgd,EACG4nB,KAAK,uBAAwB,CAACj2C,EAASlB,IACvCF,KAAKs3C,mBACLt3C,MAAK,SAACu3C,GACLlB,GAAiB,CACfmB,EAAGD,EAAUC,EACbC,EAAGF,EAAUE,EACbx5B,EAAGs5B,EAAUt5B,EACb2C,SAAU61B,OAGbr2C,OAAM,SAACC,GAEU,QAAX,OAADA,QAAC,IAADA,OAAA,EAAAA,EAAGpC,OACL6sC,QA3DR,6CAjDoE,sBAkHpE,IAAMlW,GAAcrwB,uBAClB,SAACq/B,EAAclN,GAEb,OADA2f,GAAiB,MACVR,EAAajS,EAAOlN,KAE7B,CAACmf,IAGG6B,GAAmBnzC,uBAAY,SAACmyB,GAAD,OAAuB9B,GAAYjc,KAAMw8B,UAAWze,KAAM,CAAC9B,KAC1F+iB,GAAmBpzC,uBAAY,SAACmyB,GAAD,OAAuB9B,GAAYjc,KAAM60B,WAAY9W,KAAM,CAAC9B,KAC3FgjB,GAAmBrzC,uBAAY,SAACmyB,GAAD,OAAuB9B,GAAYjc,KAAM80B,WAAY/W,KAAM,CAAC9B,KAG3FuH,GAAiBC,eA/H6C,SAgIrDn4B,KAhIqD,8EAgIpE,wDAAA8G,EAAA,yDACO4G,GAAY8d,GAAYruB,EAD/B,sBAC8C,IAAIqY,MAAM,wBADxD,UAE8Bo+B,EAAyDpO,EAA5E9wB,KAAM60B,YAAkDsK,EAAoBrO,EAAvC9wB,KAAM80B,YAC/CoK,GAAoBC,EAH3B,sBAIU,IAAIr+B,MAAM,4BAJpB,UAMQ83B,EAASjW,aAAkB3pB,EAAS8d,EAASruB,GANrD,oBASKuX,KAAM60B,WAAakE,aAAwBmG,EAAiBngC,IAAiB,IATlF,eAUKiB,KAAM80B,WAAaiE,aAAwBoG,EAAiBpgC,IAAiB,IAF1Ei6B,EARR,EAaOnT,GAAcC,EAbrB,sBAasC,IAAIhlB,MAAM,kBAbhD,UAcQ68B,EAAkB7M,EAAc9wB,KAAMw8B,WAd9C,uBAe8B,IAAI17B,MAAM,4BAfxC,WAiBQs+B,EAAiBtZ,IAAc5xB,KAC/BmrC,EAAmBxZ,IAAc3xB,MAASkrC,EAC1CnG,EAAkBhW,KAAKiW,KAAKC,KAAKC,MAAQ,KAAQnxB,GAElDM,GAAWC,EArBlB,uBAqBgC,IAAI1H,MAAM,kBArB1C,WA0BMoxB,KAAaI,KAAcc,SA1BjC,iBA4BQiM,GACFC,EAAc,CAAC,qBAAsB,mDACrCxb,EAAO,CACLsb,EAAiB72B,EAAO5rB,QAAU6rB,EAAO7rB,QACzCghD,EAAgBtpC,IAAIwW,WACpBmuB,EAAWoG,EAAiBp/B,KAAM60B,WAAa70B,KAAM80B,YAAYjqB,WACjEmuB,EAAWoG,EAAiBp/B,KAAM80B,WAAa90B,KAAM60B,YAAYhqB,WACjEpiB,EACAwwC,KAKFqG,EAAc,CAAC,mBACfxb,EAAO,CACLvb,EAAO5rB,QACP6rB,EAAO7rB,QACPghD,EAAgBtpC,IAAIwW,WACpBmuB,EAAWh5B,KAAM60B,YAAYhqB,WAC7BmuB,EAAWh5B,KAAM80B,YAAYjqB,WAC7BpiB,EACAwwC,IAjDR,2BAsD6B,OAAlBwE,GAtDX,iBAwDQ4B,GACFC,EAAc,CAAC,+BAAgC,6DAC/Cxb,EAAO,CACLsb,EAAiB72B,EAAO5rB,QAAU6rB,EAAO7rB,QACzCghD,EAAgBtpC,IAAIwW,WACpBmuB,EAAWoG,EAAiBp/B,KAAM60B,WAAa70B,KAAM80B,YAAYjqB,WACjEmuB,EAAWoG,EAAiBp/B,KAAM80B,WAAa90B,KAAM60B,YAAYhqB,WACjEpiB,EACAg1C,GAAcx1B,UACd,EACAw1B,GAAcoB,EACdpB,GAAcqB,EACdrB,GAAcn4B,KAKhBg6B,EAAc,CAAC,6BACfxb,EAAO,CACLvb,EAAO5rB,QACP6rB,EAAO7rB,QACPghD,EAAgBtpC,IAAIwW,WACpBmuB,EAAWh5B,KAAM60B,YAAYhqB,WAC7BmuB,EAAWh5B,KAAM80B,YAAYjqB,WAC7BpiB,EACAg1C,GAAcx1B,UACd,EACAw1B,GAAcoB,EACdpB,GAAcqB,EACdrB,GAAcn4B,IArFtB,8BAyFU,IAAIxE,MAAM,kFAzFpB,yBA2F4D6iB,QAAQC,IAChE0b,EAAYjpC,KAAI,SAACwtB,EAAYvT,GAAb,aACd,EAAAsoB,EAAO7U,aAAYF,GAAnB,qBAAkCC,IAC/Bz8B,KAAKu9B,MACLn9B,OAAM,SAACC,GACNC,QAAQC,MAAR,qBAAoC0oB,EAAOuT,EAAYC,EAAMp8B,UAhGvE,WA2FQ63C,EA3FR,QA2GuC,KAL/BC,EAA8BD,EAAiBE,WAAU,SAACC,GAAD,OAC7DzwC,KAAU0wC,YAAYD,OAvG1B,iBA4GI/3C,QAAQC,MAAM,wDA5GlB,+BA8GUi8B,EAAayb,EAAYE,GACzBE,EAAkBH,EAAiBC,GAEzCvH,IAAiB,GAjHrB,UAkHUW,EAAO/U,GAAP,MAAA+U,EAAM,aAAgB9U,GAAhB,QAAsB,CAChCa,SAAU+a,MAETr4C,MAAK,SAACmuB,GAAmC,IAAD,IACvCyiB,IAAiB,GAEjBzU,GAAehO,EAAU,CACvByP,QAAQ,UAAD,iBAAY6L,EAAc9wB,KAAM60B,mBAAhC,aAAY,EAAiC30B,cAAc,GAA3D,mBACL2lB,QADK,IACLA,OADK,EACLA,EAAWrpC,OADN,0BAECs0C,EAAc9wB,KAAM80B,mBAFrB,aAEC,EAAiC50B,cAAc,GAFhD,mBAEsD4lB,QAFtD,IAEsDA,OAFtD,EAEsDA,EAAWtpC,UAG1E07C,GAAU1iB,EAASvc,SAEpBxR,OAAM,SAACC,GACNuwC,IAAiB,GAEjBtwC,QAAQC,MAAMF,MAnItB,6CAhIoE,sBAwQpE,SAASsf,KAAe,IAAD,IACrB,OACE,eAAChP,GAAD,CAAYC,IAAI,KAAKzB,MAAO,CAAEuD,UAAW,QAAzC,UACE,eAACoD,GAAD,CAAYH,MAAM,WAAlB,UACE,cAAC,KAAD,CAAM3L,SAAS,OAAf,mBAAuBy/B,EAAc9wB,KAAM60B,mBAA3C,aAAuB,EAAiC30B,cAAc,KACtE,eAAC5C,GAAD,CAAUrF,IAAI,MAAd,UACE,cAAC2N,GAAD,CAAc3R,SAAU4xB,EAAWjtB,KAAK,SACxC,cAAC,KAAD,CAAMvH,SAAS,OAAOmF,MAAO,CAAEqG,WAAY,QAA3C,gBACGgpB,QADH,IACGA,OADH,EACGA,EAAWrpC,eAIlB,cAAC8gB,GAAD,UACE,cAAC,KAAD,CAAM1E,KAAK,KAAK5K,MAAO9I,EAAMC,OAAO4R,eAEtC,eAACoG,GAAD,CAAYH,MAAM,WAAlB,UACE,cAAC,KAAD,CAAM3L,SAAS,OAAf,mBAAuBy/B,EAAc9wB,KAAM80B,mBAA3C,aAAuB,EAAiC50B,cAAc,KACtE,eAAC5C,GAAD,CAAUrF,IAAI,MAAd,UACE,cAAC2N,GAAD,CAAc3R,SAAU6xB,EAAWltB,KAAK,SACxC,cAAC,KAAD,CAAMvH,SAAS,OAAOmF,MAAO,CAAEqG,WAAY,QAA3C,gBACGipB,QADH,IACGA,OADH,EACGA,EAAWtpC,eAKlB,cAAC,KAAD,CAAMm9C,OAAK,EAAC3rC,MAAM,aAAakM,UAAU,OAAOF,QAAQ,aAAaxD,MAAO,CAAEojC,UAAW,UAAzF,0EAEI76B,GAAkB,IAFtB,wCASN,SAASkI,KAAe,IAAD,EACrB,OACE,qCACE,eAAC9J,GAAD,WACE,eAAC,KAAD,CAAMnP,MAAM,aAAZ,gCAAkC63B,QAAlC,IAAkCA,OAAlC,EAAkCA,EAAWrpC,OAA7C,mBAAuDspC,QAAvD,IAAuDA,OAAvD,EAAuDA,EAAWtpC,QAAlE,aACA,eAAC8gB,GAAD,WACE,cAACoe,GAAD,CAAoBC,UAAWkK,EAAWjK,UAAWkK,EAAWvK,QAAM,IACtE,cAAC,KAAD,oBAAOuV,EAAc9wB,KAAMw8B,kBAA3B,aAAO,EAAgCt8B,cAAc,WAGxDud,GACC,qCACE,eAACtgB,GAAD,WACE,cAAC,KAAD,CAAMnP,MAAM,aAAZ,mBACA,eAAC,KAAD,uBACK63B,QADL,IACKA,OADL,EACKA,EAAWrpC,OADhB,MAC2B+rB,EAASkV,EAAKyZ,QAAQ3uB,GAAQrI,cAAc,GAAK,IAD5E,WACkF4lB,QADlF,IACkFA,OADlF,EACkFA,EAAWtpC,aAG/F,eAAC2gB,GAAD,WACE,wBACA,eAAC,KAAD,uBACK2oB,QADL,IACKA,OADL,EACKA,EAAWtpC,OADhB,MAC2BgsB,EAASiV,EAAKyZ,QAAQ1uB,GAAQtI,cAAc,GAAK,IAD5E,WACkF2lB,QADlF,IACkFA,OADlF,EACkFA,EAAWrpC,gBAKnG,cAAC,KAAD,CAAQ2Q,UAAU,aAAa2J,WAAYo7B,KAAaI,KAAcc,UAA8B,OAAlBqK,IAAyBnwC,QAAShC,GAApH,wBAON,IAAMwN,GAAW,6BAAeg4B,EAAc9wB,KAAM60B,mBAAnC,aAAe,EAAiC30B,cAAc,GAA9D,mBACf2lB,QADe,IACfA,OADe,EACfA,EAAWrpC,OADI,0BAETs0C,EAAc9wB,KAAM80B,mBAFX,aAET,EAAiC50B,cAAc,GAFtC,mBAE4C4lB,QAF5C,IAE4CA,OAF5C,EAE4CA,EAAWtpC,QAElEojD,GAAiCh0C,uBACrC,SAAC9D,GACCm0B,GAAYjc,KAAM68B,kBAAmB/0C,EAAM+iB,cAE7C,CAACoR,KAGGojB,GAAmBxZ,IAAc3xB,MAAS4xB,IAAc5xB,KACxDuiC,GAAoB7xB,QACxB5L,IACI6sB,GAAa/e,aAAeue,KAAKrsB,GAAU6sB,IAC1CC,GAAahf,aAAeue,KAAKrsB,GAAU8sB,KAG5C+Z,GAAwBj0C,uBAC5B,SAACqI,GACKsiC,GAAexsB,GAAW9V,KAAcsiC,EAC1C9rC,EAAQ8G,KAAR,kBAAwBwY,GAAW9V,GAAnC,YAAgDqiC,IAEhD7rC,EAAQ8G,KAAR,kBAAwBwY,GAAW9V,GAAnC,YAAgDsiC,MAGpD,CAACD,EAAaC,EAAa9rC,IAEvBq1C,GAAwBl0C,uBAC5B,SAACqI,GACKqiC,GAAevsB,GAAW9V,KAAcqiC,EAC1C7rC,EAAQ8G,KAAR,kBAAwBglC,EAAxB,YAAuCxsB,GAAW9V,KAElDxJ,EAAQ8G,KAAR,kBAAwB+kC,EAAxB,YAAuCvsB,GAAW9V,OAGtD,CAACqiC,EAAaC,EAAa9rC,IAGvB0vC,GAA4BvuC,uBAAY,WAC5CosC,GAAe,GACf0F,GAAiB,MAEb/2B,IACFsV,GAAYjc,KAAM68B,kBAAmB,KAEvC3E,GAAU,MACT,CAACjc,GAAatV,KA1XmD,GC/CvD,SACb7e,EACAusB,GAE0B,IAD1B0rB,EACyB,uDADX,IACW,EACCp5C,oBAAY,kBAAMmB,KADnB,mBAClBk4C,EADkB,KACXC,EADW,KAEnBC,EAAQvuC,mBAERwuC,EAAgBv0C,uBACpB,SAACw0C,GACCH,EAASG,GACLF,EAAMttC,SACR4uB,aAAa0e,EAAMttC,SAErBstC,EAAMttC,QAAU2uB,YAAW,WACzBlN,EAAS+rB,GACTF,EAAMttC,aAAUzL,IACf44C,KAEL,CAACA,EAAa1rB,IAWhB,OARA7vB,qBAAU,WACJ07C,EAAMttC,UACR4uB,aAAa0e,EAAMttC,SACnBstC,EAAMttC,aAAUzL,GAElB84C,EAASn4C,KACR,CAACA,IAEG,CAACk4C,EAAOG,GD6YiDE,CAC9DxvC,OAAO3K,SAAS4qC,EAAc9wB,KAAM68B,mBAAmBj+B,QAAQ,IAC/DghC,IA9XkE,qBA4X7DU,GA5X6D,MA4XnCC,GA5XmC,MAiYpE,OACE,qCACE,eAACpS,GAAD,WACE,cAACkH,GAAD,CAAepb,QAAQ,IACvB,eAAC,GAAD,WACE,cAAC,GAAD,CACE5kB,OAAQs8B,EACRxhC,UAAWgqC,GACX5gC,cAAeA,GACfN,KAAM0N,IAAU,GAChBnN,QAAS,kBACP,cAAC,GAAD,CACExI,MAAM,mBACNb,UAAWgqC,GACXvgC,WAAYoN,GACZrN,cAAesN,MAGnBnO,YAAaA,KAEf,eAACd,GAAD,CAAYC,IAAI,KAAhB,UACE,cAACokC,GAAD,UACE,cAACD,GAAD,UACE,eAACpkC,GAAD,WACE,eAACmF,GAAD,WACE,cAAC,KAAD,qBACA,cAACq3B,GAAD,CACElnC,QAAS,WACP+vC,GAAiBD,IAFrB,SAKGA,EAAe,SAAW,gBAG/B,cAAC,KAAD,CAAMjsC,eAAe,QAArB,SACE,eAAC,KAAD,CAAME,SAAS,OAAf,UAAuBygC,GAAiB9xB,KAAM68B,mBAA9C,UAEAO,GACA,qCACE,cAAC,KAAD,CAAM9rC,GAAG,MAAT,SACE,cAAC0qC,GAAD,CAAQl0C,MAAOw4C,GAA0BjsB,SAAUksB,OAErD,eAAC,KAAD,CAAMpvC,eAAe,eAArB,UACE,cAAC,KAAD,CAAQuH,QAAQ,WAAWE,KAAK,KAAKtL,QAAS,kBAAM2uB,GAAYjc,KAAM68B,kBAAmB,OAAzF,iBAGA,cAAC,KAAD,CAAQnkC,QAAQ,WAAWE,KAAK,KAAKtL,QAAS,kBAAM2uB,GAAYjc,KAAM68B,kBAAmB,OAAzF,iBAGA,cAAC,KAAD,CAAQnkC,QAAQ,WAAWE,KAAK,KAAKtL,QAAS,kBAAM2uB,GAAYjc,KAAM68B,kBAAmB,OAAzF,iBAGA,cAAC,KAAD,CACEnkC,QAAQ,WACRE,KAAK,KACLtL,QAAS,kBAAM2uB,GAAYjc,KAAM68B,kBAAmB,QAHtD,+BAaVO,GACA,qCACE,cAACrlC,GAAD,UACE,cAAC,KAAD,CAAWa,KAAK,KAAK5K,MAAO9I,EAAMC,OAAO4R,eAE3C,cAACslC,GAAD,UACE,cAACD,GAAD,UACE,eAACpkC,GAAD,CAAYC,IAAI,OAAhB,UACE,eAACkF,GAAD,WACE,cAAC,KAAD,CAAM9L,SAAS,OAAf,SAAuBygC,GAAiB9xB,KAAM60B,aAAe,MAC7D,eAACv3B,GAAD,WACE,cAACsI,GAAD,CAAc3R,SAAU4xB,EAAWrvB,MAAO,CAAE4P,YAAa,UACzD,cAAC,KAAD,CAAM/U,SAAS,OAAO9F,GAAG,iCAAzB,gBACGs6B,QADH,IACGA,OADH,EACGA,EAAWrpC,eAIlB,eAAC2gB,GAAD,WACE,cAAC,KAAD,CAAM9L,SAAS,OAAf,SAAuBygC,GAAiB9xB,KAAM80B,aAAe,MAC7D,eAACx3B,GAAD,WACE,cAACsI,GAAD,CAAc3R,SAAU6xB,EAAWtvB,MAAO,CAAE4P,YAAa,UACzD,cAAC,KAAD,CAAM/U,SAAS,OAAO9F,GAAG,iCAAzB,gBACGu6B,QADH,IACGA,OADH,EACGA,EAAWtpC,eAIjBwc,IAAYy9B,IAAqB4I,IAChC,cAACliC,GAAD,CAAY3G,MAAO,CAAErF,eAAgB,YAArC,SACGkuC,GACC,cAACroC,GAAD,CACEwxB,GAAE,kBAAa3C,IAAc3xB,KAAQmxB,KAAKrsB,GAASrc,QAAU25C,EAA3D,YACAxQ,IAAc5xB,KAAQmxB,KAAKrsB,GAASrc,QAAU45C,GAFlD,0BAOEE,GACF,cAACz/B,GAAD,CACEwxB,GAAE,kBACA3C,GAAa/e,aAAe+e,EAAWR,KAAKrsB,IAAY,MAAQs9B,EADhE,YAEExQ,GAAahf,aAAegf,EAAWT,KAAKrsB,IAAY,MAAQu9B,GAHtE,yBAOE,OAEJ,eAMd,eAAC8F,GAAD,CAAM7lC,MAAO,CAAEgqC,cAAe,QAA9B,UACGpD,GACC,qCACE,cAAChgB,GAAD,CACEt1B,MAAOgqC,GAAiB9xB,KAAMw8B,WAC9BvgB,YAAa8iB,GACb1hB,MAAO,WACLpB,GAAYjc,KAAM68B,kBAAmB,QAEvCvf,eAAgBggB,GAChB/f,uBAAqB,EACrBtpB,SAAQ,OAAEwpB,QAAF,IAAEA,OAAF,EAAEA,EAAM4J,eAChB5J,KAAMA,EACNlyB,GAAG,qBAEL,cAACwM,GAAD,UACE,cAAC,KAAD,CAAWa,KAAK,KAAK5K,MAAO9I,EAAMC,OAAO4R,eAE3C,cAACqmB,GAAD,CACEI,aAAW,EACX11B,MAAOgqC,GAAiB9xB,KAAM60B,YAC9B5Y,YAAa+iB,GACb3hB,MAAO,kBAAMpB,GAAYjc,KAAM68B,kBAAmB,QAClDvf,eAAgBggB,GAChBrpC,SAAU4xB,EACV39B,MAAM,SACN8nB,iBAAkB6vB,GAClBt0C,GAAG,4BAEL,cAACwM,GAAD,UACE,cAAC,KAAD,CAAMa,KAAK,KAAK5K,MAAO9I,EAAMC,OAAO4R,eAEtC,cAACqmB,GAAD,CACEI,aAAW,EACX11B,MAAOgqC,GAAiB9xB,KAAM80B,YAC9B7Y,YAAagjB,GACb5hB,MAAO,kBAAMpB,GAAYjc,KAAM68B,kBAAmB,QAClDvf,eAAgBggB,GAChBrpC,SAAU6xB,EACV59B,MAAM,SACN8nB,iBAAkB8vB,GAClBv0C,GAAG,+BAIRkyB,GACC,sBAAKjnB,MAAO,CAAEwD,QAAS,QAAvB,UACE,eAAC,KAAD,CAAM7I,eAAe,gBAAgBG,GAAG,MAAxC,mBAEE,4CACKu0B,QADL,IACKA,OADL,EACKA,EAAWrpC,OADhB,MAC2B+rB,EAASkV,EAAKyZ,QAAQ3uB,GAAQrI,cAAc,GAAK,IAD5E,WACkF4lB,QADlF,IACkFA,OADlF,EACkFA,EAAWtpC,aAG/F,eAAC,KAAD,CAAM2U,eAAe,gBAArB,UACE,wBACA,4CACK20B,QADL,IACKA,OADL,EACKA,EAAWtpC,OADhB,MAC2BgsB,EAASiV,EAAKyZ,QAAQ1uB,GAAQtI,cAAc,GAAK,IAD5E,WACkF2lB,QADlF,IACkFA,OADlF,EACkFA,EAAWrpC,gBAKnG,qBAAKga,MAAO,CAAEiqC,SAAU,YAAxB,SACIh4C,EAGA,eAAC0U,GAAD,WACE,cAAC,KAAD,CACEhQ,UAAU,WACVG,QA1jBgD,4CA2jBhDoL,QAASw5B,KAAaI,KAAcc,UAA8B,OAAlBqK,GAAyB,UAAY,UACrF3mC,SAAUo7B,KAAaI,KAAca,cAAkC,OAAlBsK,GACrD3R,GAAG,MALL,SAOGoG,KAAaI,KAAcC,QAC1B,cAACt0B,GAAD,wBACEi0B,KAAaI,KAAcc,UAA8B,OAAlBqK,GACzC,WAEA,YAGJ,cAAC,KAAD,CACEtwC,UAAU,WACVG,QAAS,WACP0qC,GAAe,IAEjBlhC,UAAWy6B,GAA8B,OAAlBkM,IAA0BvL,KAAaI,KAAcc,SAC5E16B,SACG64B,GAAaT,EAAc9wB,KAAM60B,aAAiB/D,EAAc9wB,KAAM80B,YACnE,SACA,UATR,SAYGltC,GAAS,cA9Bd,cAAC,GAAD,kBAwCX61B,EACC,cAACzlB,GAAD,CAAYxB,MAAO,CAAE8P,SAAU,QAASvM,UAAW,QAAnD,SACE,cAACy7B,GAAD,CAAqBC,cAAegB,GAAmBhZ,KAAMA,MAE7D,QErpBV,IAAMijB,GAAqB,4CAEpB,SAASC,GAAT,GAIsC,IAF/BrkD,EAE8B,EAH1C0lB,MACEq0B,OAAU/5C,OAGZ,IAAKokD,GAAmBl+B,KAAKlmB,GAC3B,OAAO,cAAC,IAAD,CAAUksC,GAAG,UAFoB,MAIXlsC,EAAOoX,MAAM,KAJF,mBAInCioB,EAJmC,KAIxBC,EAJwB,KAM1C,OAAO,cAAC,IAAD,CAAU4M,GAAE,kBAAa7M,EAAb,YAA0BC,KAGhC+kB,ICdTD,GAAqB,4CACpB,SAASE,GAAqCp4C,GAAsD,IAMnGwZ,EADFxZ,EAHFwZ,MACEq0B,OAAUC,YAGYt0B,MAAM0+B,IAChC,cAAI1+B,QAAJ,IAAIA,OAAJ,EAAIA,EAAOxa,QACF,cAAC,IAAD,CAAUghC,GAAE,eAAUxmB,EAAM,GAAhB,YAAsBA,EAAM,MAG1C,cAACo0B,GAAD,eAAkB5tC,IAGpB,SAASq4C,GAA0Br4C,GAA2E,IAAD,EAK9GA,EAHFwZ,MACEq0B,OAAUC,EAHoG,EAGpGA,YAAaC,EAHuF,EAGvFA,YAG3B,OAAID,EAAYp0B,gBAAkBq0B,EAAYr0B,cACrC,cAAC,IAAD,CAAUsmB,GAAE,eAAU8N,KAExB,cAACF,GAAD,eAAkB5tC,I,oBCfrBs4C,GAAsC,CAC1Cj7C,iBAAkB,CAAEP,KAAM,GAAIC,SAAU,IACxCO,oBAAqB,aACrBC,mBAAoB,CAAET,KAAM,GAAIC,SAAU,IAC1CS,sBAAuB,cAGZN,GAAkBE,wBAAck7C,ICpBhCz7C,GAAK,CAAEC,KAAM,KAAMC,SAAU,WA6B7BC,GAAe,CAC1BH,GA7BgB,CAAEC,KAAM,KAAMC,SAAU,8CACxB,CAAED,KAAM,KAAMC,SAAU,kCACtB,CAAED,KAAM,QAASC,SAAU,4BAC3B,CAAED,KAAM,QAASC,SAAU,4BAC7B,CAAED,KAAM,KAAMC,SAAU,cACvB,CAAED,KAAM,MAAOC,SAAU,YAC1B,CAAED,KAAM,KAAMC,SAAU,eACxB,CAAED,KAAM,KAAMC,SAAU,eACxB,CAAED,KAAM,KAAMC,SAAU,WACxB,CAAED,KAAM,KAAMC,SAAU,oDACxB,CAAED,KAAM,KAAMC,SAAU,kCACxB,CAAED,KAAM,KAAMC,SAAU,UACxB,CAAED,KAAM,KAAMC,SAAU,oBACxB,CAAED,KAAM,KAAMC,SAAU,YACxB,CAAED,KAAM,KAAMC,SAAU,sBACxB,CAAED,KAAM,KAAMC,SAAU,sBACxB,CAAED,KAAM,KAAMC,SAAU,UACtB,CAAED,KAAM,QAASC,SAAU,2BAC3B,CAAED,KAAM,QAASC,SAAU,yBAC7B,CAAED,KAAM,KAAMC,SAAU,kBACxB,CAAED,KAAM,KAAMC,SAAU,8CACtB,CAAED,KAAM,QAASC,SAAU,cAC3B,CAAED,KAAM,QAASC,SAAU,WAC7B,CAAED,KAAM,KAAMC,SAAU,kCACxB,CAAED,KAAM,KAAMC,SAAU,gBACxB,CAAED,KAAM,KAAMC,SAAU,gEACxB,CAAED,KAAM,KAAMC,SAAU,yBCKpCw7C,GAAOC,gBAAK,kBAAM,yDAClBC,GAAQD,gBAAK,kBAAM,gEACnBE,GAAUF,gBAAK,kBAAM,gEACrBG,GAAOH,gBAAK,kBAAM,yDAClBI,GAAWJ,gBAAK,kBAAM,mCACtBK,GAAeL,gBAAK,kBAAM,mCAC1BM,GAAQN,gBAAK,kBAAM,kCACnBO,GAAOP,gBAAK,kBAAM,mCAClBQ,GAAUR,gBAAK,kBAAM,yDACrBS,GAAqBT,gBAAK,kBAAM,mCAGtC/xC,IAAUhH,OAAO,CACfy5C,eAAgB,IAChBC,eAAgB,KAGlB,IAAMC,GAAgB,WAGpBp9C,qBAAU,WACRmD,QAAQk6C,KAAO,kBAAM,QACpB,IAEHx9C,IAEAy9C,cACAC,cAV0B,MAYsBp7C,wBAAcQ,GAZpC,mBAYnBtB,EAZmB,KAYDC,EAZC,OAa0Ba,wBAAcQ,GAbxC,mBAanBpB,EAbmB,KAaCC,EAbD,OAccW,mBAAqB,IAdnC,mBAcnBC,EAdmB,KAcLC,EAdK,KAepBm7C,EAAM,UAAM77C,udAAYK,0BACxBP,EAAYC,SAAS,GAAD,OAAIC,udAAYC,8BAGpC67C,EAA2B,CAC/B17C,MAAOy7C,GAGH37C,EAAwB,IAAIC,qBAAmB27C,GAQrDz9C,qBAAU,WAER,IAAMsC,EAAiBnC,aAAaC,QAAQ,0BAC5C,GAAIkC,EAAgB,CAClB,IAAMC,EAVY,SAACD,GACrB,OAAOtB,GAAawB,QAAO,SAACzB,GAC1B,OAAOA,EAASD,OAASwB,KACxB,GAOkBG,CAAcH,GACjChB,EAAoBiB,QAEpBjB,EAAoBT,MAErB,IAEH,IAAM+B,EAAoC,uCAAG,sBAAAgL,EAAA,sDAC3C/L,EACGa,yBAAyBjB,EAAWJ,EAAiBP,UAAM6B,EA3BjD,EA2BoE,KAC9EE,MAAK,SAACC,GACDA,EAAuBC,KAAKC,OAAS,EACvCX,EAAgB,CAAC,UAEjBA,EAAgBS,EAAuBC,SAG1CF,MAAK,kBAAMrB,EAAsBH,MACjC4B,OAAM,SAACG,GACNf,EAAgB,CAAC,UACjBc,QAAQC,MAAMA,MAbyB,2CAAH,qDAwB1C,OAPApD,qBAAU,WACJqB,GACFuB,MAGD,CAACvB,IAGF,cAAC,IAAD,UACE,cAAC,GAAgBgC,SAAjB,CACEC,MAAO,CAAEjC,mBAAkBC,sBAAqBC,qBAAoBC,yBADtE,SAGE,eAAC8M,GAAoBjL,SAArB,CAA8BC,MAAO,CAAElB,eAAcC,mBAArD,UACE,cAAC,KAAD,IACA,cAACq7C,EAAD,IACA,cAAC,EAAD,UACE,cAAC,EAAD,CAAwBn3C,SAAU,cAACo3C,GAAA,EAAD,IAAlC,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO/zC,KAAK,QAAQg0C,OAAK,EAACC,QAAM,EAAhC,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACh0C,KAAK,QAAQk0C,UAAWlI,KACrC,cAAC,IAAD,CAAOhsC,KAAK,OAAOg0C,OAAK,EAACE,UAAWlM,KACpC,cAAC,IAAD,CAAOhoC,KAAK,oBAAoBg0C,OAAK,EAACE,UAAW1B,KACjD,cAAC,IAAD,CAAOxyC,KAAK,iCAAiCg0C,OAAK,EAACE,UAAWzB,KAC9D,cAAC,IAAD,CAAOuB,OAAK,EAACC,QAAM,EAACj0C,KAAK,oCAAoCk0C,UAAWhG,KACxE,cAAC,IAAD,CAAO8F,OAAK,EAACC,QAAM,EAACj0C,KAAK,kBAAkBk0C,UAAW3B,KACtD,cAAC,IAAD,CAAOvyC,KAAK,IAAIg0C,OAAK,EAArB,SACE,cAACrB,GAAD,MAEF,cAAC,IAAD,CAAO3yC,KAAK,SAAZ,SACE,cAAC6yC,GAAD,MAEF,cAAC,IAAD,CAAO7yC,KAAK,SAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,WAAZ,SACE,cAAC8yC,GAAD,MAEF,cAAC,IAAD,CAAO9yC,KAAK,OAAZ,SACE,cAAC+yC,GAAD,MAEF,cAAC,IAAD,CAAO/yC,KAAK,gBAAZ,SACE,cAACizC,GAAD,MAEF,cAAC,IAAD,CAAOe,OAAK,EAACh0C,KAAK,SAAlB,SACE,cAACkzC,GAAD,MAEF,cAAC,IAAD,CAAOlzC,KAAK,aAAZ,SACE,cAACmzC,GAAD,MAEF,cAAC,IAAD,CAAOnzC,KAAK,WAAZ,SACE,cAACozC,GAAD,MAEF,cAAC,IAAD,CAAOpzC,KAAK,eAAZ,SACE,cAACqzC,GAAD,MAGF,cAAC,IAAD,CAAOrzC,KAAK,WAAZ,SACE,cAAC,IAAD,CAAUo6B,GAAG,aAEf,cAAC,IAAD,CAAOp6B,KAAK,SAAZ,SACE,cAAC,IAAD,CAAUo6B,GAAG,aAEf,cAAC,IAAD,CAAOp6B,KAAK,OAAZ,SACE,cAAC,IAAD,CAAUo6B,GAAG,oBAGf,cAAC,IAAD,CAAO8Z,UAAWlB,KAClB,cAAC,IAAD,CAAOkB,UAAWtO,YAIxB,cAAC,GAAD,CAAWuO,WAAY,IACvB,cAAC,EAAD,IACA,cAAC,GAAD,CAAwB9wC,iBAAkB,CAAC,2BAOtC9L,OAAMoG,KAAK61C,I,kDCnLpBY,GAAsBC,YAAoB,WAqBjCC,GApBa,SAAC,GAAkB,IAAhBh8C,EAAe,EAAfA,SAC7B,OACE,cAAC,IAAD,CAAmBi8C,WAAYA,KAA/B,SACE,cAACH,GAAD,CAAqBG,WAAYA,KAAjC,SACE,cAAC,IAAD,CAAUC,MAAOA,KAAjB,SACE,cAAC,KAAD,UACE,cAAC1pC,GAAA,EAAD,UACE,cAAC,EAAD,UACE,cAAC2pC,GAAA,EAAD,UACE,cAAC,KAAD,UAAgBn8C,mBCnB5Bo8C,GAA6B,oBAAqBzvB,SAExD,SAAS0vB,KACP,OAAQD,IAA2D,WAA7BzvB,SAAS2vB,gBAMlC,SAASC,KAA+B,IAAD,EACtBt8C,mBAAkBo8C,MADI,mBAC7CG,EAD6C,KACpCC,EADoC,KAE9CC,EAAWx3C,uBAAY,WAC3Bu3C,EAAWJ,QACV,CAACI,IAWJ,OATA3+C,qBAAU,WACR,GAAKs+C,GAGL,OADAzvB,SAAS4E,iBAAiB,mBAAoBmrB,GACvC,WACL/vB,SAAS6E,oBAAoB,mBAAoBkrB,MAElD,CAACA,IAEGF,E,aCnBM,SAASG,KAAiB,IAAD,EACT5pC,eAArBqd,EAD8B,EAC9BA,QAAS9d,EADqB,EACrBA,QACX0O,EAAWC,cAEX27B,EAAgBL,KAJgB,EAMZt8C,mBAAsE,CAC9FqS,UACAuqC,YAAa,OARuB,mBAM/Br5C,EAN+B,KAMxB4uB,EANwB,KAWhC0qB,EAAsB53C,uBAC1B,SAAC23C,GACCzqB,GAAS,SAACxT,GACR,OAAItM,IAAYsM,EAAEtM,QACa,kBAAlBsM,EAAEi+B,YAAiC,CAAEvqC,UAASuqC,eAClD,CAAEvqC,UAASuqC,YAAatgB,KAAKgZ,IAAIsH,EAAaj+B,EAAEi+B,cAElDj+B,OAGX,CAACtM,EAAS8f,IAIZt0B,qBAAU,WACR,GAAKsyB,GAAY9d,GAAYsqC,EAU7B,OARAxqB,EAAS,CAAE9f,UAASuqC,YAAa,OAEjCzsB,EACG2sB,iBACAp8C,KAAKm8C,GACL/7C,OAAM,SAACG,GAAD,OAAWD,QAAQC,MAAR,kDAAyDoR,GAAWpR,MAExFkvB,EAAQ4sB,GAAG,QAASF,GACb,WACL1sB,EAAQ6sB,eAAe,QAASH,MAEjC,CAAC97B,EAAU1O,EAAS8d,EAAS0sB,EAAqBF,IAErD,IAAMM,EAAiBxiB,GAAYl3B,EAAO,KAO1C,OALA1F,qBAAU,WACHo/C,EAAe5qC,SAAY4qC,EAAeL,aAAgBD,GAC/D57B,EAASm8B,aAAkB,CAAE7qC,QAAS4qC,EAAe5qC,QAASuqC,YAAaK,EAAeL,iBACzF,CAACD,EAAe57B,EAAUk8B,EAAeL,YAAaK,EAAe5qC,UAEjE,K,cC5CM,SAASqqC,KAAiB,IAC/BvsB,EAAYrd,eAAZqd,QACFpP,EAAWC,cACXtD,EAAQlZ,aAAkD,SAACjB,GAAD,OAAWA,EAAMma,MAAMC,SAEjFy+B,EAAkBE,KAElB7oB,EAAYvD,KA+ElB,OArEAzc,GAR8BxO,uBAAY,WACnCm3C,GACLxyC,OAAOC,KAAK6T,GAAOy/B,SAAQ,SAAC1/B,GAAD,OACzBgW,EAAUhW,GAAK3c,OAAM,SAACG,GAAD,OAAWD,QAAQC,MAAM,+BAAgCA,WAE/E,CAACwyB,EAAW2oB,EAAiB1+B,IAGGyS,EAAU,IAAiB,MAG9DtyB,qBAAU,WACR+L,OAAOC,KAAK6T,GAAOy/B,SAAQ,SAAC/uB,GAC1B,IAAMxQ,EAAOF,EAAM0Q,GAEdxQ,EAAK3R,SAAY2R,EAAKyP,kBAAqBzP,EAAK3c,OACnDwyB,EAAUrF,GAASttB,OAAM,SAACG,GAAD,OAAWD,QAAQC,MAAM,4BAA6BA,WAGlF,CAAC8f,EAAU0S,EAAWtD,EAASzS,IAGlC7f,qBAAU,WACR+L,OAAOC,KAAK6T,GAAOy/B,SAAQ,SAAC/uB,GAC1B,IAAMxQ,EAAOF,EAAM0Q,GAEnB,GADAptB,QAAQ6uC,IAAI,SAASjyB,GACjBA,EAAK3R,SAAW2R,EAAKwP,cAAe,CACtC,IAAMgwB,EAAOC,aAAkBz/B,EAAK3R,QAAQomB,QAASzU,EAAKwP,cAAciF,SACxE,OAAQ+qB,GACN,KAAKE,KAAeC,KAClB,MAAM,IAAIpjC,MAAM,8BAClB,KAAKmjC,KAAeE,MACpB,KAAKF,KAAeG,MAGdL,GAFQM,aAAe9/B,EAAK3R,QAAQtW,OAAQioB,EAAKwP,cAAcz3B,SAGjEorB,EAAS0R,aAAiBrE,IAC1BrN,EACE48B,aAAS,CACP/tC,IAAKwe,EACLvb,QAAS,CACP+qC,WAAY,CACVxvB,UACAyvB,QAASjgC,EAAK3R,QACd6xC,QAASlgC,EAAKwP,cACd2wB,MAAM,QAMd/8C,QAAQC,MAAR,sBACiBmtB,EADjB,mJAIF,MAEF,KAAKkvB,KAAeU,MAClBj9B,EACE48B,aAAS,CACP/tC,IAAKwe,EACLvb,QAAS,CACP+qC,WAAY,CACVxvB,UACA2vB,MAAM,EACNF,QAASjgC,EAAK3R,QACd6xC,QAASlgC,EAAKwP,gBAGlB6wB,cAAe,eAM1B,CAACl9B,EAAUrD,IAEP,K,cC7FT,SAASwgC,GAAW5Y,EAAagQ,GAC/B,OALY6I,EAKA7Y,EAAMhJ,KAAK8hB,MAAM9hB,KAAK+hB,SAAW/hB,KAAKgZ,IAAI,EAAGA,EAAMhQ,IAJxD,IAAItI,SAAQ,SAACshB,GAAD,OAAa1jB,WAAW0jB,EAASH,MADtD,IAAcA,EAWP,IAAMI,GAAb,kDACE,aAAe,uCACP,aAFV,uBAAoCpkC,QASvBqkC,GAAb,yIAAoCrkC,Q,qECOpC,WACEwK,EACA85B,EACAC,GAHF,qBAAAjzC,EAAA,+EAQ6CkZ,EAAkBg6B,UACzDF,EAAM/uC,KAAI,SAACkvC,GAAD,MAAS,CAACA,EAAI5oD,QAAS4oD,EAAIC,cAT3C,mCAQKC,EARL,KAQyBC,EARzB,2DAYI/9C,QAAQu8B,KAAK,qCAAb,MAZJ,kBAeMuhB,EAAmBl8C,WAAa87C,GAftC,uBAgBU,IAAIF,GAAe,gCAhB7B,iCAkBS,CAAEz5B,QAASg6B,EAAYnC,YAAakC,EAAmBl8C,aAlBhE,0D,sBAsFe,SAAS85C,KACtB,IAAM37B,EAAWC,cACXzd,EAAQiB,aAA6C,SAACma,GAAD,OAAOA,EAAEqgC,aAE9DC,EAAqBxkB,GAAYl3B,EAAM27C,cAAe,KACtDC,EAAoBC,eAClB/sC,EAAYS,eAAZT,QACFsS,EAAoBC,eACpBy6B,EAAgBr0C,mBAEhBs0C,EAA+Cv3C,mBAAQ,WAC3D,OAtEG,SACLw3C,EACAltC,GAEA,IAAKktC,IAAiBltC,EAAS,MAAO,GACtC,IAAMmtC,EAAYD,EAAaltC,GAC/B,OAAKmtC,EAEE51C,OAAOC,KAAK21C,GAAW1hC,QAAsC,SAAC1Y,EAAMq6C,GACzE,IAAMC,EAAeF,EAAUC,GAW/B,OATAr6C,EAAKq6C,GAAW71C,OAAOC,KAAK61C,GACzBr/C,QAAO,SAACuP,GACP,IAAM+vC,EAAiBpgD,SAASqQ,GAChC,QAAI+vC,GAAkB,IACfD,EAAaC,GAAkB,KAEvC7hC,QAAO,SAAC8hC,EAAa3zC,GACpB,OAAOqwB,KAAKgJ,IAAIsa,EAAargD,SAAS0M,MACrC4zC,KACEz6C,IACN,IAfoB,GAgEd06C,CAAoBb,EAAoB5sC,KAC9C,CAAC4sC,EAAoB5sC,IAElB0tC,EAA+Bh4C,mBAAQ,WAC3C,OA3CG,SACLi4C,EACAV,EACAjtC,EACA8sC,GAEA,OAAK9sC,GAAY8sC,EACDa,EAAY3tC,GAIrBzI,OAAOC,KAAKy1C,GAAej/C,QAAO,SAACo/C,GACxC,IAAME,EAAiBL,EAAcG,GAE/B7+C,EAAOo/C,EAAY3tC,GAASotC,GAElC,IAAK7+C,EAAM,OAAO,EAElB,IAAMq/C,EAAqBd,GAAqBQ,EAAiB,GAGjE,QAAI/+C,EAAKs/C,qBAAuBt/C,EAAKs/C,qBAAuBD,MAGpDr/C,EAAKg8C,aAAeh8C,EAAKg8C,YAAcqD,MAf5Br2C,OAAOC,KAAKy1C,GAHU,GAqClCa,CAAsB58C,EAAMy8C,YAAaV,EAAejtC,EAAS8sC,KACvE,CAAC9sC,EAAS9O,EAAMy8C,YAAaV,EAAeH,IAEzCiB,EAA6Br4C,mBAAQ,kBAAM4vC,KAAKC,UAAUmI,EAA6Bj7B,UAAS,CACpGi7B,IAyEF,OAtEAliD,qBAAU,WAAO,IAAD,EACd,GAAKshD,GAAsB9sC,GAAYsS,EAAvC,CAEA,IAAM07B,EAA6B1I,KAAK5T,MAAMqc,GAC9C,GAAgC,IAA5BC,EAAiBx/C,OAArB,CACA,IAK8D,IALxDy/C,EAAQD,EAAiB3wC,KAAI,SAACE,GAAD,OAAS2wC,aAAa3wC,MAGnD4wC,EC7IK,SAAuB7+C,EAAY8+C,GAChD,GAAIA,EAAe,EAAG,MAAM,IAAItmC,MAAM,8BACtC,GAAIxY,EAAMd,QAAU4/C,EAAc,MAAO,CAAC9+C,GAE1C,IAAM++C,EAAoBpkB,KAAKiW,KAAK5wC,EAAMd,OAAS4/C,GAC7CE,EAAYrkB,KAAKiW,KAAK5wC,EAAMd,OAAS6/C,GAE3C,OAAO,aAAIE,MAAMF,GAAW72C,QAAe6F,KAAI,SAAAouB,GAAE,OAAIn8B,EAAMsmB,MAAM6V,EAAK6iB,EAAW7iB,EAAK6iB,EAAYA,MDsI3EE,CAAWP,EA5HZ,KA8HpB,IAAI,UAAAjB,EAAcpzC,eAAd,eAAuB2wC,eAAgBuC,EACzC,UAAAE,EAAcpzC,eAAd,mBAAuBozC,qBAAvB,SAAsClC,SAAQ,SAACtU,GAAD,OAAOA,OAGvD9nB,EACE+/B,aAAyB,CACvBR,QACAjuC,UACA6tC,oBAAqBf,KAIzBE,EAAcpzC,QAAU,CACtB2wC,YAAauC,EACbE,cAAemB,EAAa9wC,KAAI,SAAC+uC,EAAO90B,GAAW,IAAD,EDlIjD,SACLo3B,EADK,GAGyC,IAE1CC,EAHFC,EAC2C,EAD3CA,EAAGC,EACwC,EADxCA,QAASC,EAC+B,EAD/BA,QAEVC,GAAY,EA6BhB,MAAO,CACLC,QA3Bc,IAAIrkB,QAAJ,uCAAe,WAAOshB,EAASgD,GAAhB,eAAA71C,EAAA,sDAC7Bu1C,EAAkBM,EADW,cAIvB9kC,OAJuB,oBAMVukC,IANU,cAMzBvkC,EANyB,OAOpB4kC,IACH9C,EAAQ9hC,GACR4kC,GAAY,GATW,2DAarBA,EAbqB,0DAgBrBH,GAAK,IAAO,gBAAiBzC,GAhBR,wBAiBvB8C,EAAO,EAAD,IACNF,GAAY,EAlBW,6BAqBzBH,IArByB,yBAuBrB/C,GAAWgD,EAASC,GAvBC,iFAAf,yDA4BdI,OAAQ,WACFH,IACJA,GAAY,EACZJ,EAAgB,IAAIzC,OC6FUiD,EAAM,kB,gDAAMC,CAAW98B,EAAmB85B,EAAOU,KAAoB,CAC/F8B,EAAGpB,IACHqB,QAAS,KACTC,QAAS,OAHHI,EADwC,EACxCA,OAwCR,OAzCgD,EAChCF,QAMb3gD,MAAK,YAA6D,IAAjDq+C,EAAgD,EAAzDh6B,QAAkC28B,EAAuB,EAApC9E,YAC5ByC,EAAcpzC,QAAU,CAAEozC,cAAe,GAAIzC,YAAauC,GAG1D,IAAMwC,EAAoBnB,EAAav4B,MAAM,EAAG0B,GAAO7L,QAAe,SAAC1Y,EAAMq7B,GAAP,OAAgBr7B,EAAOq7B,EAAK5/B,SAAQ,GACpG+gD,EAAmBD,EAAoB5C,EAAWl+C,OAExDkgB,EACE8gC,aAAuB,CACrBxvC,UACA0S,QAASs7B,EACNp4B,MAAM05B,EAAmBC,GACzB9jC,QAA6C,SAAC1Y,EAAMq6C,EAASnlC,GAAO,IAAD,EAElE,OADAlV,EAAKq6C,GAAL,UAAgBV,EAAWzkC,UAA3B,QAAiC,KAC1BlV,IACN,IACLw3C,YAAa8E,QAIlB5gD,OAAM,SAACG,GACFA,aAAiBs9C,GACnBv9C,QAAQC,MAAM,kCAAmCk+C,IAGnDn+C,QAAQC,MAAM,kCAAmCw9C,EAAOpsC,EAASpR,GACjE8f,EACE+gC,aAA8B,CAC5BxB,MAAO7B,EACPpsC,UACA6tC,oBAAqBf,SAItBoC,UAGV,CAAClvC,EAASsS,EAAmB5D,EAAUq/B,EAA4BjB,IAE/D,K,cEjLM,SAASzC,KAAiB,IAAD,IACT5pC,eAArBT,EAD8B,EAC9BA,QAAS8d,EADqB,EACrBA,QAEX4xB,EAAkB3C,eAElBr+B,EAAWC,cACXzd,EAAQiB,aAAgD,SAACma,GAAD,OAAOA,EAAEqjC,gBAGjEA,EAAe3vC,GAAO,UAAG9O,EAAM8O,UAAT,QAA0B,GAGhDsrC,EAAWsE,eAiDjB,OA/CApkD,qBAAU,WACHwU,GAAY8d,GAAY4xB,GAE7Bn4C,OAAOC,KAAKm4C,GACT3hD,QAAO,SAACiS,GAAD,OAvCP,SACLyvC,EACAG,GAEA,GAAIA,EAAGzb,QAAS,OAAO,EACvB,IAAKyb,EAAGC,uBAAwB,OAAO,EACvC,IAAMC,EAAmBL,EAAkBG,EAAGC,uBAC9C,GAAIC,EAAmB,EAAG,OAAO,EACjC,IAAMC,IAAkB,IAAI7P,MAAO8P,UAAYJ,EAAGhc,WAAa,IAAO,GACtE,OAAImc,EAAiB,GAEZD,EAAmB,IAExBC,EAAiB,IAEZD,EAAmB,EAwBNG,CAAYR,EAAiBC,EAAa1vC,OAC3D6qC,SAAQ,SAAC7qC,GACR6d,EACGqyB,sBAAsBlwC,GACtB5R,MAAK,SAAC+lC,GACS,IAAD,EAATA,GACF1lB,EACE0hC,aAAoB,CAClBpwC,UACAC,OACAm0B,QAAS,CACPic,UAAWjc,EAAQic,UACnB9F,YAAanW,EAAQmW,YACrB+F,gBAAiBlc,EAAQkc,gBACzBrzC,KAAMm3B,EAAQn3B,KACdo3B,OAAQD,EAAQC,OAChB7E,GAAI4E,EAAQ5E,GACZ+gB,gBAAiBnc,EAAQmc,gBACzBC,iBAAkBpc,EAAQoc,qBAKhClF,EACE,CACEmF,IAAK,CACHxwC,OACA8E,QAA4B,IAAnBqvB,EAAQC,OACjBpI,QAAO,UAAE0jB,EAAa1vC,UAAf,aAAE,EAAoBgsB,UAGjChsB,IAGFyO,EAASgiC,aAAmB,CAAE1wC,UAASC,OAAMsqC,YAAamF,QAG7DjhD,OAAM,SAACG,GACND,QAAQC,MAAR,4CAAmDqR,GAAQrR,WAGlE,CAACoR,EAAS8d,EAAS6xB,EAAcD,EAAiBhhC,EAAU48B,IAExD,K,QC/EL,aAAc5/C,SACfA,OAAOilD,SAAiBC,4BAA6B,GAGxDllD,OAAOuzB,iBAAiB,SAAS,WAAO,IAAD,EACxB,QAAZ,EAAAtzB,oBAAA,SAAcklD,WAAW,sCAG5BC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,eAAC,GAAD,WACA,qCACI,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,OAEF,cAAC,GAAD,SAGJ32B,SAASC,eAAe,U,iCC9B1B,aAGM22B,EAAsB,CAC1B,CACEC,IAAK,EACLC,SAAU,OACVC,YAAa,CACXvtD,GAAI,6CACJD,GAAI,8CAEN2J,MAAOjK,IAAO0E,MACdqpD,WAAY/tD,IAAO0D,MAErB,CACEkqD,IAAK,EACLC,SAAU,eACVC,YAAa,CACXvtD,GAAI,6CACJD,GAAI,8CAEN2J,MAAOjK,IAAOS,KACdstD,WAAY/tD,IAAO0D,OAIRiqD,O,gLCtBFK,EAAgBC,YAAmB,wB,GAEjCA,EAAf,E,OCaMC,EAAmB,kBAAM,IAAIrR,MAAO8P,WAmC1C,SAASwB,EAAQC,EAAuBC,GACtC,MAAM,GAAN,OAAUD,EAAV,YAA2BC,GAGtB,I,EAAM9xB,EAA0B,CACrC+xB,aAAc,KACdC,iBAAiB,EACjBrjC,gBAAgB,EAChBI,sBAAuB0a,IACvBta,aAAcua,IACdjmC,OAAQ,GACRwrC,MAAO,GACPgjB,UAAWN,IACX13B,WAAW,GAGEi4B,cAAclyB,GAAc,SAAAmyB,GAAO,OAChDA,EACGC,QAAQX,GAAe,SAAApgD,GAGqB,kBAAhCA,EAAM0d,wBACf1d,EAAM0d,sBAAwB0a,KAKE,kBAAvBp4B,EAAM8d,eACf9d,EAAM8d,aAAeua,KAGvBr4B,EAAMghD,2BAA6BV,OAEpCS,QAAQE,KAAoB,SAACjhD,EAAOkhD,GACnClhD,EAAM0gD,aAAeQ,EAAOC,QAAQT,aACpC1gD,EAAM4gD,UAAYN,OAEnBS,QAAQK,KAAuB,SAACphD,EAAOkhD,GACtClhD,EAAM2gD,gBAAkBO,EAAOC,QAAQR,gBACvC3gD,EAAM4gD,UAAYN,OAEnBS,QAAQpb,KAAsB,SAAC3lC,EAAOkhD,GACrClhD,EAAMsd,eAAiB4jC,EAAOC,QAAQ7jC,eACtCtd,EAAM4gD,UAAYN,OAEnBS,QAAQnjC,KAA6B,SAAC5d,EAAOkhD,GAC5ClhD,EAAM0d,sBAAwBwjC,EAAOC,QAAQzjC,sBAC7C1d,EAAM4gD,UAAYN,OAEnBS,QAAQ/iC,KAAoB,SAAChe,EAAOkhD,GACnClhD,EAAM8d,aAAeojC,EAAOC,QAAQrjC,aACpC9d,EAAM4gD,UAAYN,OAEnBS,QAAQv7B,KAAoB,SAACxlB,EAAD,GAA8C,IAAzBmd,EAAwB,EAAnCgkC,QAAWhkC,gBAChDnd,EAAM5N,OAAO+qB,EAAgBrO,SAAW9O,EAAM5N,OAAO+qB,EAAgBrO,UAAY,GACjF9O,EAAM5N,OAAO+qB,EAAgBrO,SAASqO,EAAgB1qB,SAAW0qB,EACjEnd,EAAM4gD,UAAYN,OAEnBS,QAAQ17B,KAAuB,SAACrlB,EAAD,GAA+C,IAAD,IAApCmhD,QAAW1uD,EAAyB,EAAzBA,QAASqc,EAAgB,EAAhBA,QAC5D9O,EAAM5N,OAAO0c,GAAW9O,EAAM5N,OAAO0c,IAAY,UAC1C9O,EAAM5N,OAAO0c,GAASrc,GAC7BuN,EAAM4gD,UAAYN,OAEnBS,QAAQM,KAAmB,SAACrhD,EAAD,GAA6C,IAAxBshD,EAAuB,EAAlCH,QAAWG,eAC/C,GACEA,EAAe3tB,OAAO7kB,UAAYwyC,EAAe1tB,OAAO9kB,SACxDwyC,EAAe3tB,OAAOlhC,UAAY6uD,EAAe1tB,OAAOnhC,QACxD,CAAC,IACMqc,EAAWwyC,EAAe3tB,OAA1B7kB,QACP9O,EAAM49B,MAAM9uB,GAAW9O,EAAM49B,MAAM9uB,IAAY,GAC/C9O,EAAM49B,MAAM9uB,GAASyxC,EAAQe,EAAe3tB,OAAOlhC,QAAS6uD,EAAe1tB,OAAOnhC,UAAY6uD,EAEhGthD,EAAM4gD,UAAYN,OAEnBS,QAAQQ,KAAsB,SAACvhD,EAAD,GAAoE,IAAD,IAAzDmhD,QAAWryC,EAA8C,EAA9CA,QAAS0yC,EAAqC,EAArCA,cAAeC,EAAsB,EAAtBA,cACtEzhD,EAAM49B,MAAM9uB,YAEP9O,EAAM49B,MAAM9uB,GAASyxC,EAAQiB,EAAeC,WAC5CzhD,EAAM49B,MAAM9uB,GAASyxC,EAAQkB,EAAeD,KAErDxhD,EAAM4gD,UAAYN,OAEnBS,QAAQW,KAAW,SAAA1hD,GAClBA,EAAM4oB,WAAY,KAEnBm4B,QAAQY,KAAa,SAAA3hD,GACpBA,EAAM4oB,WAAY,Q,wBC5HlB+F,GAAuB,GAC3BoP,iBAAkBjoB,IAAMG,MACxB+nB,WAAY,IAFe,cAG1BloB,IAAMG,MAAQ,CACb4J,WAAY,KAJa,cAM1B/J,IAAMC,OAAS,CACd8J,WAAY,KAPa,0BAShB,MATgB,GAYdghC,cAAyBlyB,GAAc,SAACmyB,GAAD,OACpDA,EACGC,QACCjgB,KACA,SAAC9gC,EAAD,GAA8F,IAAD,MAAnFmhD,QAAWnjB,EAAwE,EAAxEA,WAAYliB,EAA4D,EAA5DA,UAAWilB,EAAiD,EAAjDA,MAAO9C,EAA0C,EAA1CA,gBAAiBC,EAAyB,EAAzBA,iBAClE,OAAO,EAAP,iBACGpoB,IAAMG,MAAQ,CACb4J,WAAYoe,IAFhB,cAIGnoB,IAAMC,OAAS,CACd8J,WAAYqe,IALhB,iCAOoB6C,GAPpB,2BAQE/C,GARF,0BASEliB,GATF,KAaHilC,QAAQja,KAAgB,SAAC9mC,EAAD,GAAgD,IAEtB,EAFqB,IAArCmhD,QAAWthC,EAA0B,EAA1BA,WAAYkhB,EAAc,EAAdA,MAClD6gB,EAAa7gB,IAAUjrB,IAAMG,MAAQH,IAAMC,OAASD,IAAMG,MAChE,OAAI4J,IAAe7f,EAAM4hD,GAAY/hC,WAE5B,2BACF7f,GADL,OAEE+9B,iBAAkB/9B,EAAM+9B,mBAAqBjoB,IAAMG,MAAQH,IAAMC,OAASD,IAAMG,OAFlF,cAGG8qB,EAAQ,CAAElhB,eAHb,cAIG+hC,EAAa,CAAE/hC,WAAY7f,EAAM+gC,GAAOlhB,aAJ3C,IAQK,2BACF7f,GADL,kBAEG+gC,EAAQ,CAAElhB,mBAGdkhC,QAAQ/Z,KAAkB,SAAChnC,GAAW,IAAD,EACpC,OAAO,2BACFA,GADL,OAEE+9B,iBAAkB/9B,EAAM+9B,mBAAqBjoB,IAAMG,MAAQH,IAAMC,OAASD,IAAMG,OAFlF,cAGGH,IAAMG,MAAQ,CAAE4J,WAAY7f,EAAM8V,IAAMC,QAAQ8J,aAHnD,cAIG/J,IAAMC,OAAS,CAAE8J,WAAY7f,EAAM8V,IAAMG,OAAO4J,aAJnD,OAODkhC,QAAQ9Z,KAAW,SAACjnC,EAAD,GAAgD,IAAD,IAArCmhD,QAAWpgB,EAA0B,EAA1BA,MAAO/C,EAAmB,EAAnBA,WAC9C,OAAO,2BACFh+B,GADL,IAEE+9B,iBAAkBgD,EAClB/C,kBAGH+iB,QAAQ5Z,KAAc,SAACnnC,EAAD,GAAwC,IAAnB8b,EAAkB,EAA7BqlC,QAAWrlC,UAC1C9b,EAAM8b,UAAYA,Q,QCvElB6S,EAA0B,CAC9BoP,iBAAkBjoB,IAAM68B,kBACxB3U,WAAY,KAGC6iB,cAAyBlyB,GAAc,SAAAmyB,GAAO,OAC3DA,EAAQC,QAAQ9Z,KAAW,SAACjnC,EAAD,GAAgD,IAAD,IAArCmhD,QAAWpgB,EAA0B,EAA1BA,MAAO/C,EAAmB,EAAnBA,WACrD,OAAO,2BACFh+B,GADL,IAEE+9B,iBAAkBgD,EAClB/C,qB,mCCKA6jB,EAA8C,CAClDnkD,MAAO,KACPgL,QAAS,KACTohB,iBAAkB,KAClBD,cAAe,MAKX8E,EAA2B,CAC/BmzB,kCAAmCC,IACnC3nC,MAAM,2BACD2nC,IAAsBxnC,QAAqC,SAAC1Y,EAAMgpB,GAEnE,OADAhpB,EAAKgpB,GAAWg3B,EACThgD,IACN,KAJA,kBAKFkpB,IAAyB,CACxBrtB,MAAO,KACPgL,QAASs5C,EACTl4B,iBAAkB,KAClBD,cAAe,QAGnB/O,gBAAiBiQ,KAGJ81B,cAAclyB,GAAc,SAACmyB,GAAD,OACzCA,EACGC,QAAQ5zB,IAAeC,SAAS,SAACptB,EAAD,GAA6C,IAAD,IAAlCmhD,QAAWl0B,EAAuB,EAAvBA,UAAW/S,EAAY,EAAZA,IAC/Dla,EAAMoa,MAAMF,GAAZ,yBACExR,QAAS,KACTmhB,cAAe,MACZ7pB,EAAMoa,MAAMF,IAHjB,IAIE4P,iBAAkBmD,EAClBvvB,MAAO,UAGVqjD,QAAQ5zB,IAAeG,WAAW,SAACttB,EAAD,GAAwD,IAAD,QAA7CmhD,QAAWl0B,EAAkC,EAAlCA,UAAWI,EAAuB,EAAvBA,UAAWnT,EAAY,EAAZA,IACtExR,EAAO,UAAG1I,EAAMoa,MAAMF,UAAf,aAAG,EAAkBxR,QAC5BohB,EAAgB,UAAG9pB,EAAMoa,MAAMF,UAAf,aAAG,EAAkB4P,iBAG3C,GAAIphB,EAAS,CAEX,GADoBoxC,YAAkBpxC,EAAQomB,QAASzB,EAAUyB,WAC7CirB,IAAeC,KAAM,OAChB,OAArBlwB,GAA6BA,IAAqBmD,IACpDjtB,EAAMoa,MAAMF,GAAZ,2BACKla,EAAMoa,MAAMF,IADjB,IAEE4P,iBAAkB,KAClBpsB,MAAO,KACPgL,UACAmhB,cAAewD,UAInBrtB,EAAMoa,MAAMF,GAAZ,2BACKla,EAAMoa,MAAMF,IADjB,IAEE4P,iBAAkB,KAClBpsB,MAAO,KACPgL,QAAS2kB,EACTxD,cAAe,UAIpBk3B,QAAQ5zB,IAAeI,UAAU,SAACvtB,EAAD,GAA2D,IAAD,MAAhDmhD,QAAWjnC,EAAqC,EAArCA,IAAK+S,EAAgC,EAAhCA,UAAWO,EAAqB,EAArBA,cACjE,UAAAxtB,EAAMoa,MAAMF,UAAZ,eAAkB4P,oBAAqBmD,IAK3CjtB,EAAMoa,MAAMF,GAAZ,2BACKla,EAAMoa,MAAMF,IADjB,IAEE4P,iBAAkB,KAClBpsB,MAAO8vB,EACP9kB,QAAS,KACTmhB,cAAe,WAGlBk3B,QAAQ/xB,KAAY,SAAChvB,EAAD,GAA8B,IAAXka,EAAU,EAAnBinC,QAC7BnhD,EAAM8a,gBAAkBZ,EAEnBla,EAAMoa,MAAMF,KACfla,EAAMoa,MAAMF,GAAO2nC,MAGtBd,QAAQkB,KAAS,SAACjiD,EAAD,GAA8B,IAAXka,EAAU,EAAnBinC,QACrBnhD,EAAMoa,MAAMF,KACfla,EAAMoa,MAAMF,GAAO2nC,MAGtBd,QAAQ1xB,KAAY,SAACrvB,EAAD,GAA8B,IAAXka,EAAU,EAAnBinC,QACzBnhD,EAAMoa,MAAMF,WACPla,EAAMoa,MAAMF,GAEjBla,EAAM8a,kBAAoBZ,IAC5Bla,EAAM8a,gBAAkBzU,OAAOC,KAAKtG,EAAMoa,OAAO,OAGpD2mC,QAAQ7xB,KAAkB,SAAClvB,EAAD,GAA8B,IAAD,EAAVka,EAAU,EAAnBinC,QACnC,KAAI,UAACnhD,EAAMoa,MAAMF,UAAb,aAAC,EAAkB2P,eACrB,MAAM,IAAIjT,MAAM,oDAElB5W,EAAMoa,MAAMF,GAAZ,2BACKla,EAAMoa,MAAMF,IADjB,IAEE2P,cAAe,KACfnhB,QAAS1I,EAAMoa,MAAMF,GAAK2P,mBAG7Bk3B,QAAQX,GAAe,SAACpgD,GAEvB,GAAKA,EAAM8hD,mCAGJ,GAAI9hD,EAAM8hD,kCAAmC,CAClD,IAAMI,EAAqBliD,EAAM8hD,kCAAkCvnC,QACjE,SAACa,EAAG+mC,GAAJ,OAAU/mC,EAAEwQ,IAAIu2B,KAChB,IAAIC,KAEAC,EAAoBN,IAAsBxnC,QAAoB,SAACa,EAAG+mC,GAAJ,OAAU/mC,EAAEwQ,IAAIu2B,KAAI,IAAIC,KAE5FL,IAAsBnI,SAAQ,SAAC/uB,GACxBq3B,EAAmBI,IAAIz3B,KAC1B7qB,EAAMoa,MAAMyQ,GAAWg3B,MAI3B7hD,EAAM8hD,kCAAkClI,SAAQ,SAAC/uB,GAC1Cw3B,EAAkBC,IAAIz3B,WAClB7qB,EAAMoa,MAAMyQ,YAjBvB7qB,EAAMoa,MAAQuU,EAAavU,MAC3Bpa,EAAM8a,qBAAkB7d,EAqB1B+C,EAAM8hD,kCAAoCC,U,QClIjClB,cAPwB,CACrCxH,YAAa,GACbkJ,UAAW,GACXC,iBAAiB,EACjBC,kBAAkB,IAGuB,SAAA3B,GAAO,OAChDA,EACGC,QAAQpH,KAAmB,SAAC35C,EAAOkhD,GAAY,IAAD,EACZA,EAAOC,QAAhCryC,EADqC,EACrCA,QAASuqC,EAD4B,EAC5BA,YACyB,kBAA/Br5C,EAAMq5C,YAAYvqC,GAC3B9O,EAAMq5C,YAAYvqC,GAAWuqC,EAE7Br5C,EAAMq5C,YAAYvqC,GAAWiqB,KAAKgZ,IAAIsH,EAAar5C,EAAMq5C,YAAYvqC,OAGxEiyC,QAAQ2B,KAAmB,SAAA1iD,GAC1BA,EAAMwiD,iBAAmBxiD,EAAMwiD,mBAEhCzB,QAAQ4B,KAAoB,SAAA3iD,GAC3BA,EAAMyiD,kBAAoBziD,EAAMyiD,oBAEjC1B,QAAQ3G,KAAU,SAACp6C,EAAD,GAAkE,IAAD,IAAvDmhD,QAAW7xC,EAA4C,EAA5CA,QAASjD,EAAmC,EAAnCA,IAAmC,IAA9BquC,qBAA8B,MAAd,KAAc,EAClF16C,EAAMuiD,WAAal2C,EAAMrM,EAAMuiD,UAAUzlD,QAAO,SAAA8lD,GAAK,OAAIA,EAAMv2C,MAAQA,KAAOrM,EAAMuiD,WAAW1R,OAAO,CACpG,CACExkC,IAAKA,GAAO6gB,cACZ3rB,MAAM,EACN+N,UACAorC,sBAILqG,QAAQ8B,KAAa,SAAC7iD,EAAD,GAAkC,IAAbqM,EAAY,EAAvB80C,QAAW90C,IACzCrM,EAAMuiD,UAAU3I,SAAQ,SAAA7yB,GAClBA,EAAE1a,MAAQA,IACZ0a,EAAExlB,MAAO,Y,QClBJs/C,cAJsB,CACnCpE,YAAa,KAG4B,SAAAqE,GAAO,OAChDA,EACGC,QAAQ+B,KAAuB,SAAC9iD,EAAD,GAAmF,IAAD,MAAxEmhD,QAAWpE,EAA6D,EAA7DA,MAAOjuC,EAAsD,EAAtDA,QAAsD,IAA7C2C,QAA6C,gBAAX,GAAW,GAAlC2qC,sBAAkC,MAAjB,EAAiB,EAC1GH,EAA6Cj8C,EAAM27C,cACrD37C,EAAM27C,cACL37C,EAAM27C,cAAgB,GAC3BM,EAAUntC,GAAV,UAAqBmtC,EAAUntC,UAA/B,QAA2C,GAC3CiuC,EAAMnD,SAAQ,SAAAvxC,GAAS,IAAD,IACd6zC,EAAU6G,YAAU16C,GAC1B4zC,EAAUntC,GAASotC,GAAnB,UAA8BD,EAAUntC,GAASotC,UAAjD,QAA6D,GAC7DD,EAAUntC,GAASotC,GAASE,IAAkB,UAACH,EAAUntC,GAASotC,GAASE,UAA7B,QAAgD,GAAK,QAGtG2E,QACCiC,KACA,SAAChjD,EAAD,GAAmF,IAAD,IAAxEmhD,QAAWryC,EAA6D,EAA7DA,QAASiuC,EAAoD,EAApDA,MAAoD,IAA7CtrC,QAA6C,gBAAX,GAAW,GAAlC2qC,sBAAkC,MAAjB,EAAiB,EAC1EH,EAA6Cj8C,EAAM27C,cACrD37C,EAAM27C,cACL37C,EAAM27C,cAAgB,GAEtBM,EAAUntC,IACfiuC,EAAMnD,SAAQ,SAAAvxC,GACZ,IAAM6zC,EAAU6G,YAAU16C,GACrB4zC,EAAUntC,GAASotC,IACnBD,EAAUntC,GAASotC,GAASE,KAEmB,IAAhDH,EAAUntC,GAASotC,GAASE,UACvBH,EAAUntC,GAASotC,GAASE,GAEnCH,EAAUntC,GAASotC,GAASE,YAKnC2E,QAAQxD,KAA0B,SAACv9C,EAAD,GAAkE,IAAD,MAAvDmhD,QAAWryC,EAA4C,EAA5CA,QAAS6tC,EAAmC,EAAnCA,oBAAqBI,EAAc,EAAdA,MACpF/8C,EAAMy8C,YAAY3tC,GAAlB,UAA6B9O,EAAMy8C,YAAY3tC,UAA/C,QAA2D,GAC3DiuC,EAAMnD,SAAQ,SAAAvxC,GACZ,IAAM6zC,EAAU6G,YAAU16C,GACpBK,EAAU1I,EAAMy8C,YAAY3tC,GAASotC,GAC3C,GAAKxzC,EAIE,CAAC,IAAD,EACL,IAAI,UAACA,EAAQi0C,2BAAT,QAAgC,IAAMA,EAAqB,OAC/D38C,EAAMy8C,YAAY3tC,GAASotC,GAASS,oBAAsBA,OAL1D38C,EAAMy8C,YAAY3tC,GAASotC,GAAW,CACpCS,6BAQPoE,QAAQxC,KAA+B,SAACv+C,EAAD,GAAkE,IAAD,MAAvDmhD,QAAWxE,EAA4C,EAA5CA,oBAAqB7tC,EAAuB,EAAvBA,QAASiuC,EAAc,EAAdA,MACzF/8C,EAAMy8C,YAAY3tC,GAAlB,UAA6B9O,EAAMy8C,YAAY3tC,UAA/C,QAA2D,GAC3DiuC,EAAMnD,SAAQ,SAAAvxC,GACZ,IAAM6zC,EAAU6G,YAAU16C,GACpBK,EAAU1I,EAAMy8C,YAAY3tC,GAASotC,GACtCxzC,GACDA,EAAQi0C,sBAAwBA,WAC3Bj0C,EAAQi0C,oBACfj0C,EAAQrL,KAAO,KACfqL,EAAQ2wC,YAAcsD,SAI3BoE,QAAQzC,KAAwB,SAACt+C,EAAD,GAA4D,IAAD,MAAjDmhD,QAAWryC,EAAsC,EAAtCA,QAAS0S,EAA6B,EAA7BA,QAAS63B,EAAoB,EAApBA,YACtEr5C,EAAMy8C,YAAY3tC,GAAlB,UAA6B9O,EAAMy8C,YAAY3tC,UAA/C,QAA2D,GAC3DzI,OAAOC,KAAKkb,GAASo4B,SAAQ,SAAAsC,GAAY,IAAD,EAChCxzC,EAAU1I,EAAMy8C,YAAY3tC,GAASotC,IACvC,iBAACxzC,QAAD,IAACA,OAAD,EAACA,EAAS2wC,mBAAV,QAAyB,GAAKA,IAClCr5C,EAAMy8C,YAAY3tC,GAASotC,GAAW,CACpC7+C,KAAMmkB,EAAQ06B,GACd7C,yB,SCjGJnK,EAAM,kBAAM,IAAID,MAAO8P,WAqBd8B,cAF+B,IAEH,SAAAC,GAAO,OAChDA,EACGC,QAAQznB,KAAgB,SAACmlB,EAAD,GAA4E,IAAD,QAA1D0C,QAAWryC,EAA+C,EAA/CA,QAAS/C,EAAsC,EAAtCA,KAAMgD,EAAgC,EAAhCA,KAAMi5B,EAA0B,EAA1BA,SAAUjN,EAAgB,EAAhBA,QAClF,aAAI0jB,EAAa3vC,UAAjB,aAAI,EAAwBC,GAC1B,MAAM6H,MAAM,0CAEd,IAAMqsC,EAAG,UAAGxE,EAAa3vC,UAAhB,QAA4B,GACrCm0C,EAAIl0C,GAAQ,CAAEA,OAAMi5B,WAAUjN,UAAShvB,OAAM42B,UAAWuM,KACxDuP,EAAa3vC,GAAWm0C,KAEzBlC,QAAQmC,KAAsB,SAACzE,EAAD,GAA6C,IAAjB3vC,EAAgB,EAA3BqyC,QAAWryC,QACpD2vC,EAAa3vC,KAClB2vC,EAAa3vC,GAAW,OAEzBiyC,QAAQvB,KAAoB,SAACf,EAAD,GAAgE,IAAD,MAA9C0C,QAAWryC,EAAmC,EAAnCA,QAASC,EAA0B,EAA1BA,KAAMsqC,EAAoB,EAApBA,YAChEsF,EAAE,UAAGF,EAAa3vC,UAAhB,aAAG,EAAwBC,GAC9B4vC,IAGAA,EAAGC,uBAGND,EAAGC,uBAAyB7lB,KAAKgZ,IAAIsH,EAAasF,EAAGC,wBAFrDD,EAAGC,uBAAyBvF,MAK/B0H,QAAQ7B,KAAqB,SAACT,EAAD,GAA4D,IAAD,MAA1C0C,QAAWpyC,EAA+B,EAA/BA,KAAMD,EAAyB,EAAzBA,QAASo0B,EAAgB,EAAhBA,QACjEyb,EAAE,UAAGF,EAAa3vC,UAAhB,aAAG,EAAwBC,GAC9B4vC,IAGLA,EAAGzb,QAAUA,EACbyb,EAAGwE,cAAgBjU,W,QCpDnBvgB,EAA0B,CAC9BoP,iBAAkBjoB,IAAM60B,WACxB3M,WAAY,GACZwO,gBAAiB,IAGJqU,cAAyBlyB,GAAc,SAAAmyB,GAAO,OAC3DA,EACGC,QAAQqC,KAAgB,kBAAMz0B,KAC9BoyB,QAAQ9Z,KAAW,SAACjnC,EAAD,GAA6D,IAAD,IAAlDmhD,QAAWpgB,EAAuC,EAAvCA,MAAO/C,EAAgC,EAAhCA,WAC9C,OAD8E,EAApBwM,YAGpDzJ,IAAU/gC,EAAM+9B,iBACX,2BACF/9B,GADL,IAEE+9B,iBAAkBgD,EAClB/C,eAKK,2BACFh+B,GADL,IAEE+9B,iBAAkBgD,EAClB/C,aACAwO,gBAAiBxsC,EAAMg+B,aAIpB,2BACFh+B,GADL,IAEE+9B,iBAAkBgD,EAClB/C,aACAwO,gBAAiB,WCXP6W,eAAK,CAAEC,OADM,CAAC,OAAQ,kBAE1BjmC,KAGhB,IAAMq7B,EAAQ6K,YAAe,CAC3BC,UAAUvnD,EACVwnD,QAAS,CACP9R,OACAxH,OACAsU,eACAhD,YACAiI,cACAvpC,QACAkjB,OACAhgB,OACA0iC,MAAO4D,IACP3iD,OAAQ4iD,IACRx/C,MAAOy/C,IACPC,OAAQC,IACR/kD,QAASglD,IACTC,MAAOC,IACPC,aAAcC,IACdC,MAAOC,OAUEC,EAAiB,kBAAM9mC,eAGrBi7B,O,2KCpDT/pB,EAA2B,CAC/B61B,eAAe,EACfC,WAAW,EACXpnD,KAV2BqnD,IAAUnqC,QAAO,SAACoqC,EAAOx+C,GACpD,OAAO,2BACFw+C,GADL,kBAEGx+C,EAAK9E,GAAK8E,MAEZ,KAQUy+C,EAAaC,YAAY,CACpC1kD,KAAM,QACNwuB,eACAm2B,SAAU,CACRC,WAAY,SAAC/kD,GACXA,EAAMykD,WAAY,GAEpBO,YAAa,SAAChlD,GACZA,EAAMykD,WAAY,EAClBzkD,EAAMwkD,eAAgB,GAExBS,mBAAoB,SAACjlD,EAAOkhD,GAC1BlhD,EAAMwkD,eAAgB,EACtBxkD,EAAMykD,WAAY,EAClBzkD,EAAM3C,KAAK6jD,EAAOC,QAAQ9/C,IAAM6/C,EAAOC,SAEzC+D,oBAAqB,SAACllD,EAAOkhD,GAC3BlhD,EAAMwkD,eAAgB,EACtBxkD,EAAMykD,WAAY,EAClBzkD,EAAM3C,KAAO6jD,EAAOC,Y,EAM0DyD,EAAWO,QAAhFJ,E,EAAAA,WAAYE,E,EAAAA,mBAAoBD,E,EAAAA,YAAaE,E,EAAAA,oBAG/CE,EAAY,SAACC,GAAD,8CAAoB,WAAO7nC,GAAP,eAAAtV,EAAA,sEAEzCsV,EAASunC,KAFgC,SAGtBO,YAAQD,GAHc,OAGnCl/C,EAHmC,OAIzCqX,EAASynC,EAAmB9+C,IAJa,gDAMzCqX,EAASwnC,KANgC,yDAApB,uDAUZO,EAAa,yDAAM,WAAO/nC,GAAP,eAAAtV,EAAA,sEAE5BsV,EAASunC,KAFmB,SAGRS,cAHQ,OAGtBvB,EAHsB,OAI5BzmC,EAAS0nC,EAAoBjB,IAJD,gDAM5BzmC,EAASwnC,KANmB,yDAAN,uDAUXJ,MAAf,S,4sECpEA,oJAcatrB,EAAiB+mB,YAM3B,+BACU6C,EAAuB7C,YAAmC,qCAC1DnB,EAAsBmB,YAIhC,oCACUb,EAAqBa,YAI/B,oC,iCC/BH,oEAAO,IAAMt1B,EAAyB,cAEzBg3B,EAAkC,CAACh3B,I,6WCMnC06B,EAAqB,uCAAG,oCAAAv9C,EAAA,6DAC7Bw9C,EAAeC,IAAY7oD,QAAO,SAACiqB,GAAD,OAAoB,IAAbA,EAAE6+B,UAC3CC,EAAkBH,EAAav5C,KAAI,SAAC25C,GACxC,MAAO,CACLrzD,QAAS+rB,YAAWsnC,EAAW1G,iBAC/Bj/C,KAAM,iBAGJ4lD,EAAgBL,EAAav5C,KAAI,SAAC25C,GACtC,MAAO,CACLrzD,QAAS+rB,YAAWsnC,EAAW1G,iBAC/Bj/C,KAAM,oBAXyB,SAeds7C,YAAUuK,EAAaH,GAfT,cAe7BI,EAf6B,gBAgBhBxK,YAAUuK,EAAaD,GAhBP,cAgB7BG,EAhB6B,yBAkB5BR,EAAav5C,KAAI,SAACg6C,EAAgB//B,GACvC,IAAMggC,EAAaH,EAAO7/B,GACpBxhB,EAAWshD,EAAK9/B,GACtB,MAAO,CACLw/B,OAAQO,EAAeP,OACvBQ,WAAY,IAAIrhD,IAAUqhD,GAAYC,SACtCzhD,SAAU,IAAIG,IAAUH,GAAUyhD,cAxBH,4CAAH,qDA6BrBC,EAAsB,uCAAG,sCAAAp+C,EAAA,6DAC9Bq+C,EAAcZ,IAAY7oD,QAAO,SAACiqB,GAAD,MAAiC,QAA1BA,EAAEy/B,aAAal0D,UACvDm0D,EAAUd,IAAY7oD,QAAO,SAACiqB,GAAD,MAAiC,QAA1BA,EAAEy/B,aAAal0D,UAEnDo0D,EAAmBH,EAAYp6C,KAAI,SAAC25C,GACxC,MAAO,CACLrzD,QAAS+rB,YAAWsnC,EAAWU,aAAa/zD,SAC5C0N,KAAM,YACNgsC,OAAQ,CAAC3tB,YAAWsnC,EAAW1G,sBAI7BuH,EAAgBF,EAAQt6C,KAAI,SAAC25C,GACjC,MAAO,CACLrzD,QAASm0D,cACTzmD,KAAM,YACNgsC,OAAQ,CAAC3tB,YAAWsnC,EAAW1G,sBAhBC,SAoBC3D,YAAUoL,EAASH,GApBpB,cAoB9BI,EApB8B,gBAqBFrL,YAAUsL,EAASJ,GArBjB,cAqB9BK,EArB8B,+CAwB/BT,EAAYp6C,KAAI,SAAC4a,EAAGX,GAAJ,MAAe,CAChCw/B,OAAQ7+B,EAAE6+B,OACVqB,YAAa,IAAIliD,IAAU+hD,EAAuB1gC,IAAQigC,cA1B1B,YA4B/BI,EAAQt6C,KAAI,SAAC4a,EAAGX,GAAJ,MAAe,CAC5Bw/B,OAAQ7+B,EAAE6+B,OACVqB,YAAa,IAAIliD,IAAUiiD,EAAoB5gC,IAAQigC,gBA9BvB,4CAAH,qD,2BCzB7BE,EAAcZ,IAAY7oD,QAAO,SAACiqB,GAAD,MAAiC,QAA1BA,EAAEy/B,aAAal0D,UACvD40D,EAAWvB,IAAY7oD,QAAO,SAACiqB,GAAD,MAAiC,QAA1BA,EAAEy/B,aAAal0D,UACpD60D,EAAiBxB,IAAY7oD,QAAO,SAACiqB,GAAD,OAAoB,IAAbA,EAAE6+B,UAC7CwB,EAAOj1D,cACPk1D,EAAqB,IAAID,EAAKlwD,IAAIs1B,SAAU86B,EAAsCC,eAE3EC,EAAmB,uCAAG,WAAOjpD,GAAP,iBAAA2J,EAAA,6DAC3B60C,EAAQwJ,EAAYp6C,KAAI,SAAC4a,GAAD,MAAQ,CACpCt0B,QAAS+rB,YAAWuI,EAAEy/B,aAAa/zD,SACnC0N,KAAM,YACNgsC,OAAQ,CAAC5tC,EAASigB,YAAWuI,EAAEq4B,sBAJA,SAOR3D,YAAUgM,EAAU1K,GAPZ,cAO3B2K,EAP2B,yBAQ1BnB,EAAYhsC,QACjB,SAACotC,EAAKjjD,EAAM0hB,GAAZ,mBAAC,eAA2BuhC,GAA5B,kBAAkCjjD,EAAKkhD,OAAS,IAAI7gD,IAAU2iD,EAAWthC,IAAQigC,aACjF,KAV+B,2CAAH,sDAcnBuB,EAAiB,uCAAG,WAAOrpD,GAAP,uBAAA2J,EAAA,6DAEzB60C,EAAQwJ,EAAYp6C,KAAI,SAAC4a,GAAD,MAAQ,CACpCt0B,QAAS+rB,YAAWuI,EAAEy/B,aAAa/zD,SACnC0N,KAAM,YACNgsC,OAAQ,CAAC5tC,OALoB,SAOAk9C,YAAUgM,EAAU1K,GAPpB,cAOzB8K,EAPyB,OAQzB9mC,EAAgBwlC,EAAYhsC,QAChC,SAACotC,EAAKjjD,EAAM0hB,GAAZ,mBAAC,eAA2BuhC,GAA5B,kBAAkCjjD,EAAKkhD,OAAS,IAAI7gD,IAAU8iD,EAAiBzhC,IAAQigC,aACvF,IAV6B,SAcNe,EAAKlwD,IAAI4wD,WAAWvpD,GAdd,cAczBwpD,EAdyB,OAezBC,EAAcd,EAAS3sC,QAC3B,SAACotC,EAAKjjD,GAAN,mBAAC,eAAoBijD,GAArB,kBAA2BjjD,EAAKkhD,OAAS,IAAI7gD,IAAUgjD,GAAY1B,aACnE,IAjB6B,6CAoBnBtlC,GAAkBinC,IApBC,4CAAH,sDAuBjBC,EAAsB,uCAAG,WAAO1pD,GAAP,uBAAA2J,EAAA,6DAC9B60C,EAAQoK,EAAeh7C,KAAI,SAAC4a,GAAD,MAAQ,CACvCt0B,QAAS+rB,YAAWuI,EAAEq4B,iBACtBj/C,KAAM,WACNgsC,OAAQ,CAAC5tC,OAJyB,SAMbk9C,YAAUuK,EAAajJ,GANV,cAM9BmL,EAN8B,OAO9BC,EAAiBhB,EAAe5sC,QACpC,SAACotC,EAAKjjD,EAAM0hB,GAAZ,mBAAC,eACIuhC,GADL,kBAEGjjD,EAAKkhD,OAAS,IAAI7gD,IAAUmjD,EAAS9hC,GAAO1F,OAAO0nC,MAAM/B,aAE5D,IAZkC,SAgBOgB,EAAmBl/C,QAAQ+/C,SAAS,IAAK3pD,GAAS8J,OAhBzD,uBAgBpBggD,EAhBoB,EAgB5B3nC,OAhB4B,6CAkBxBynC,GAlBwB,IAkBRG,EAAG,IAAIvjD,IAAUsjD,GAAkBhC,YAlB3B,4CAAH,sDAqBtBkC,EAAuB,uCAAG,WAAOhqD,GAAP,qBAAA2J,EAAA,6DAC/B60C,EAAQoK,EAAeh7C,KAAI,SAAC4a,GAAD,MAAQ,CACvCt0B,QAAS+rB,YAAWuI,EAAEq4B,iBACtBj/C,KAAM,gBACNgsC,OAAQ,CAAC5tC,OAJ0B,SAMnBk9C,YAAUuK,EAAajJ,GANJ,cAM/ByL,EAN+B,OAO/BC,EAAiBtB,EAAe5sC,QACpC,SAACotC,EAAKjjD,EAAM0hB,GAAZ,mBAAC,eACIuhC,GADL,kBAEGjjD,EAAKkhD,OAAS,IAAI7gD,IAAUyjD,EAAIpiC,IAAQigC,aAE3C,IAZmC,SAgBTgB,EAAmBl/C,QAAQugD,YAAY,IAAKnqD,GAAS8J,OAhB5C,cAgB/BsgD,EAhB+B,oDAkBzBF,GAlByB,IAkBTH,EAAG,IAAIvjD,IAAU4jD,GAAetC,YAlBvB,2CAAH,sDChE9B13B,EAA2B,CAAEtxB,KAAK,YAAKsoD,MAEhCiD,EAAa/D,YAAY,CACpC1kD,KAAM,QACNwuB,eACAm2B,SAAU,CACR+D,mBAAoB,SAAC7oD,EAAOkhD,GAC1B,IAAM4H,EAAwB5H,EAAOC,QACrCnhD,EAAM3C,KAAO2C,EAAM3C,KAAK8O,KAAI,SAACzH,GAC3B,IAAMqkD,EAAeD,EAActiD,MAAK,SAACwiD,GAAD,OAAWA,EAAMpD,SAAWlhD,EAAKkhD,UACzE,OAAO,2BAAKlhD,GAASqkD,OAGzBE,iBAAkB,SAACjpD,EAAOkhD,GACxB,IAAMp8C,EAAWo8C,EAAOC,QACxBnhD,EAAM3C,KAAO2C,EAAM3C,KAAK8O,KAAI,SAACzH,GAC3B,IAAMwkD,EAAepkD,EAAS0B,MAAK,SAACwiD,GAAD,OAAWA,EAAMpD,SAAWlhD,EAAKkhD,UACpE,OAAO,2BAAKlhD,GAAZ,IAAkBI,SAAUokD,QAGhCC,oBAAqB,SAACnpD,EAAOkhD,GAAY,IAAD,EACLA,EAAOC,QAAhCpgB,EAD8B,EAC9BA,MAAOnjC,EADuB,EACvBA,MAAOgoD,EADgB,EAChBA,OAChBx/B,EAAQpmB,EAAM3C,KAAKk4C,WAAU,SAACxuB,GAAD,OAAOA,EAAE6+B,SAAWA,KACvD5lD,EAAM3C,KAAK+oB,GAAX,2BAAyBpmB,EAAM3C,KAAK+oB,IAApC,IAA4CthB,SAAS,2BAAM9E,EAAM3C,KAAK+oB,GAAOthB,UAAzB,kBAAoCi8B,EAAQnjC,U,EAMzBgrD,EAAWzD,QAAzE0D,E,EAAAA,mBAAoBI,E,EAAAA,iBAAkBE,E,EAAAA,oBAGxCC,EAA4B,yDAAM,WAAO5rC,GAAP,mBAAAtV,EAAA,sEACnBu9C,IADmB,cACvC4D,EADuC,gBAEjB/C,IAFiB,OAEvCgD,EAFuC,OAIvCC,EAAW5D,IAAYx5C,KAAI,SAACzH,GAChC,IAAM8kD,EAAaH,EAAY7iD,MAAK,SAACwiD,GAAD,OAAWA,EAAMpD,SAAWlhD,EAAKkhD,UAC/D6D,EAAeH,EAAc9iD,MAAK,SAACwiD,GAAD,OAAWA,EAAMpD,SAAWlhD,EAAKkhD,UACzE,OAAO,2BACF4D,GACAC,MAIPjsC,EAASqrC,EAAmBU,IAbiB,2CAAN,uDAgB5BG,EAA0B,SAACnrD,GAAD,8CAAa,WAAOif,GAAP,uBAAAtV,EAAA,sEACzBs/C,EAAoBjpD,GADK,cAC5CmpD,EAD4C,gBAEfE,EAAkBrpD,GAFH,cAE5CorD,EAF4C,gBAGrB1B,EAAuB1pD,GAHF,cAG5C4pD,EAH4C,iBAIrBI,EAAwBhqD,GAJH,QAI5CkqD,EAJ4C,OAM5C3jD,EAAW6gD,IAAYx5C,KAAI,SAACzH,GAAD,MAAW,CAC1CkhD,OAAQlhD,EAAKkhD,OACbgE,UAAWlC,EAAWhjD,EAAKkhD,QAC3BiE,oBAAqBF,EAAqBjlD,EAAKkhD,QAC/C5gD,cAAemjD,EAAezjD,EAAKkhD,QACnC+C,cAAeF,EAAe/jD,EAAKkhD,YAGrCpoC,EAASyrC,EAAiBnkD,IAdwB,4CAAb,uDAiB1BglD,EAAsB,SAAClE,EAAgBrnD,GAAjB,8CAAqC,WAAOif,GAAP,eAAAtV,EAAA,sEAC7Cs/C,EAAoBjpD,GADyB,OAChEmpD,EADgE,OAEtElqC,EAAS2rC,EAAoB,CAAEvD,SAAQ7kB,MAAO,YAAanjC,MAAO8pD,EAAW9B,MAFP,2CAArC,uDAKtBmE,EAAoB,SAACnE,EAAgBrnD,GAAjB,8CAAqC,WAAOif,GAAP,eAAAtV,EAAA,sEACxC0/C,EAAkBrpD,GADsB,OAC9DwiB,EAD8D,OAEpEvD,EAAS2rC,EAAoB,CAAEvD,SAAQ7kB,MAAO,sBAAuBnjC,MAAOmjB,EAAc6kC,MAFtB,2CAArC,uDAKpBoE,EAA0B,SAACpE,EAAgBrnD,GAAjB,8CAAqC,WAAOif,GAAP,eAAAtV,EAAA,sEAC7C+/C,EAAuB1pD,GADsB,OACpE4pD,EADoE,OAE1E3qC,EAAS2rC,EAAoB,CAAEvD,SAAQ7kB,MAAO,gBAAiBnjC,MAAOuqD,EAAevC,MAFX,2CAArC,uDAK1BqE,EAA0B,SAACrE,EAAgBrnD,GAAjB,8CAAqC,WAAOif,GAAP,eAAAtV,EAAA,sEAC7CqgD,EAAwBhqD,GADqB,OACpEkqD,EADoE,OAE1EjrC,EAAS2rC,EAAoB,CAAEvD,SAAQ7kB,MAAO,gBAAiBnjC,MAAO6qD,EAAe7C,MAFX,2CAArC,uDAKxBgD,MAAf,S,o9NCjGA,uGAMO,SAAS/M,IAAsC,IAC5C/sC,EAAYS,cAAZT,QAER,OAAO7N,aAAY,SAACjB,GAAD,OAAqBA,EAAM0jD,YAAYrK,YAAlB,OAA8BvqC,QAA9B,IAA8BA,KAAY,MAsB7E,SAAS4vC,IACd,IAAMlhC,EAAWC,cAEjB,OAAO/b,uBACL,SAAC4N,EAAuBjD,GACtBmR,EAAS48B,YAAS,CAAE9qC,UAASjD,WAE/B,CAACmR,M,qLC3BQ0sC,EAA2B,SAACC,GAAwD,IACpFC,EAA+ED,EAAlF,GAAcE,EAAoEF,EAAvE,GAAoB9E,EAAmD8E,EAAtD,GAAcG,EAAwCH,EAA3C,GAAkBI,EAAyBJ,EAA5B,GAAeK,EAAaL,EAAhB,GAE1E,MAAO,CACLC,OAAQzjD,OAAOyjD,GACfK,OAAQ9jD,OAAO0jD,GACfhF,OAAQ1+C,OAAO0+C,GACfkF,QAAS5jD,OAAO4jD,GAChBD,aACAE,aCZEE,EAAkBC,cAClBC,EAAiBC,cACjBC,EAAa7uD,udAAY8uD,sBAOzBC,EAAW,uCAAG,WAAOv4D,GAAP,qBAAAyV,EAAA,+EAEOqjB,MAAM,GAAD,OAAIu/B,EAAJ,sBAA4Br4D,IAFxC,WAEV64B,EAFU,QAIFE,GAJE,yCAKP,IALO,uBAQgBF,EAASG,OARzB,2BAQRlsB,gBARQ,MAQG,GARH,oBAUTA,GAVS,2DAYT,IAZS,0DAAH,sDAiEF0rD,EAjDC,uCAAG,WAAOx4D,GAAP,yCAAAyV,EAAA,+EAEcwiD,EAAgBviD,QAAQ+iD,cAAcz4D,GAAS4V,OAF7D,UAET6iD,EAFS,gDAKN,CAAEA,gBAAelsD,QAAS,OALpB,uBAQe0rD,EAAgBviD,QAAQgjD,eAAe14D,GAAS4V,OAR/D,cAQT8hD,EARS,SASmDD,EAAyBC,GAAnFC,EATO,EASPA,OAAQK,EATD,EASCA,OAAQpF,EATT,EASSA,OAAQkF,EATjB,EASiBA,QAASD,EAT1B,EAS0BA,WAAYE,EATtC,EASsCA,SATtC,UAUIlF,YAAQD,GAVZ,eAUTl/C,EAVS,iBAWQ6kD,EAAYv4D,GAXpB,WAWT8M,EAXS,QAgBXirD,EAhBW,kCAiBSI,EAAeziD,QAAQijD,WAAWb,GAASliD,OAjBpD,QAiBPjC,EAjBO,OAkBb3G,EAAM4rD,IAAK7kD,MAAK,SAAC8kD,GAAD,OAAaA,EAAQllD,UAAYO,OAAOP,MAGxDmlD,IAAQ5wC,IAAR,kBACaloB,GACX,CACE8M,WACAisD,OAAO,2CAAD,OAA6C/rD,EAAIC,OAAOC,KAEhE,CAAEm0C,OAAQ,sBAAuB2X,QAAQ,EAAMC,QAAS,KA3B7C,eA+BT1sD,EAAU,CACdorD,SACAK,SACApF,SACAkF,UACAhrD,WACA+qD,aACAE,WACA/qD,MACA0G,QAxCa,kBA2CR,CAAE+kD,gBAAelsD,YA3CT,2DA6CR,MA7CQ,0DAAH,sDCrBH2sD,EAAe9G,YAAY,CACtC1kD,KAAM,UACNwuB,aATiC,CACjC61B,eAAe,EACfC,WAAW,EACXyG,eAAe,EACf7tD,KAAM,MAMNynD,SAAU,CACR8G,kBAAmB,SAAC5rD,GAClBA,EAAMykD,WAAY,GAEpBoH,sBAAuB,SAAC7rD,EAAOkhD,GAA+C,IAAD,EACxCA,EAAOC,QAAlCniD,EADmE,EACnEA,QAER,MAAO,CACLwlD,eAAe,EACfC,WAAW,EACXyG,cANyE,EAC1DA,cAMf7tD,KAAM2B,IAGV8sD,mBAAoB,SAAC9rD,GACnBA,EAAMykD,WAAY,EAClBzkD,EAAMwkD,eAAgB,GAExBuH,UAAW,SAAC/rD,EAAOkhD,GACjBlhD,EAAM3C,KAAKotD,QAAUvJ,EAAOC,Y,EAMyDwK,EAAaxG,QAAzFyG,E,EAAAA,kBAAmBC,E,EAAAA,sBAAuBC,E,EAAAA,mBAAoBC,E,EAAAA,UAGhEC,EAAe,SAACv5D,GAAD,8CAAqB,WAAO+qB,GAAP,eAAAtV,EAAA,sEAE7CsV,EAASouC,KAFoC,SAGtBX,EAAWx4D,GAHW,OAGvC64B,EAHuC,OAI7C9N,EAASquC,EAAsBvgC,IAJc,gDAM7C9N,EAASsuC,KANoC,yDAArB,uDAUbH,MAAf,S,iCCrDA,kHASaM,EAAcpH,YAAY,CACrC1kD,KAAM,SACNwuB,aANgC,CAChCtxB,KAAM,IAMNynD,SAAU,CACRz9C,KAAM,SAACrH,EAAoBkhD,GAAkC,IACnDC,EAAYD,EAAZC,QACF+K,EAAalsD,EAAM3C,KAAKk4C,WAAU,SAAC4W,GAAD,OAAWA,EAAM9qD,KAAO6/C,EAAOC,QAAQ9/C,MAG3E6qD,GAAc,GAChBlsD,EAAM3C,KAAK+uD,OAAOF,EAAY,GAGhClsD,EAAM3C,KAAKgvD,QAAQlL,IAErBjgD,OAAQ,SAAClB,EAAoBkhD,GAC3B,IAAMgL,EAAalsD,EAAM3C,KAAKk4C,WAAU,SAAC4W,GAAD,OAAWA,EAAM9qD,KAAO6/C,EAAOC,WAEnE+K,GAAc,GAChBlsD,EAAM3C,KAAK+uD,OAAOF,EAAY,IAGlCI,MAAO,SAACtsD,GACNA,EAAM3C,KAAO,O,EAMoB4uD,EAAY9G,QAApCmH,E,EAAAA,MAAOprD,E,EAAAA,OAAQmG,E,EAAAA,KAEf4kD,MAAf,S,iCCxCA,mf,iCCAA,wDAGaM,EAAQ,CAACtwD,iDAA8BA,iDAA8BA,kDAOnEuwD,IALI,WACjB,IAAMC,EAAc3R,IAAO,EAAGyR,EAAMjvD,OAAS,GAC7C,OAAOivD,EAAME,K,2pJC6FAC,EA7FC,uCAAG,4BAAAxkD,EAAA,sEACEuxB,QAAQC,IACzBizB,IAAYxgD,IAAZ,uCAAgB,WAAOygD,GAAP,qDAAA1kD,EAAA,6DACR2kD,EAAYruC,YAAWouC,EAAW1M,aAClCnD,EAAQ,CAEZ,CACEtqD,QAAS+rB,YAAWouC,EAAWvwD,MAAM5J,SACrC0N,KAAM,YACNgsC,OAAQ,CAAC0gB,IAGX,CACEp6D,QAAS+rB,YAAWouC,EAAWzM,WAAW1tD,SAC1C0N,KAAM,YACNgsC,OAAQ,CAAC0gB,IAGX,CACEp6D,QAASo6D,EACT1sD,KAAM,YACNgsC,OAAQ,CAACob,gBAGX,CACE90D,QAASo6D,EACT1sD,KAAM,eAGR,CACE1N,QAAS+rB,YAAWouC,EAAWvwD,MAAM5J,SACrC0N,KAAM,YAGR,CACE1N,QAAS+rB,YAAWouC,EAAWzM,WAAW1tD,SAC1C0N,KAAM,aAlCI,SA6CJs7C,YAAUqR,EAAO/P,GA7Cb,0CAuCZgQ,EAvCY,KAwCZC,EAxCY,KAyCZC,EAzCY,KA0CZC,EA1CY,KA2CZC,EA3CY,KA4CZC,EA5CY,KAgDRC,EAAe,IAAItoD,IAAUkoD,GAAkBjrD,IAAI,IAAI+C,IAAUmoD,IAGjEI,EAAsB,IAAIvoD,IAAUioD,GACvChrD,IAAI,IAAI+C,IAAU,IAAIwoD,IAAI,KAC1BC,MAAM,IAAIzoD,IAAU,IACpByoD,MAAMH,GAGHI,EAAc,IAAI1oD,IAAUgoD,GAAgB/qD,IAAI,IAAI+C,IAAU,IAAIwoD,IAAIJ,IAAgBK,MAAMH,GAC5FK,EAAmB,IAAI3oD,IAAUioD,GACpChrD,IAAI,IAAI+C,IAAU,IAAIwoD,IAAIH,IAC1BI,MAAMH,GA5DK,UA8DwB5R,YAAUkS,EAAe,CAC7D,CACEl7D,QAAS80D,cACTpnD,KAAM,WACNgsC,OAAQ,CAACygB,EAAW5M,MAEtB,CACEvtD,QAAS80D,cACTpnD,KAAM,qBAtEI,2CA8DP65B,EA9DO,KA8DD4zB,EA9DC,KA0ERC,EAAa,IAAI9oD,IAAUi1B,EAAK6zB,WAAWzF,MAC3C0F,EAAaD,EAAW7rD,IAAI,IAAI+C,IAAU6oD,IA3ElC,6CA8EThB,GA9ES,IA+EZa,YAAaA,EAAYpH,SACzBqH,iBAAkBA,EAAiBrH,SACnCiH,oBAAqBA,EAAoBjH,SACzC0H,kBAAmBL,EAAiB1rD,IAAIyrD,GAAapH,SACrDyH,WAAYA,EAAWzH,SACvB2H,WAAW,GAAD,OAAKH,EAAW7rD,IAAI,KAAK2e,WAAzB,QApFE,4CAAhB,wDAFe,cACXtjB,EADW,yBA0FVA,GA1FU,2CAAH,qDCAH4wD,EAAuB,uCAAG,WAAO1vD,GAAP,qBAAA2J,EAAA,6DAC/BgmD,EAAoB3G,cAEpBxK,EAAQ4P,IAAYxgD,KAAI,SAACgiD,GAE7B,MAAO,CAAE17D,QADiB+rB,YAAW2vC,EAAKjO,aACL//C,KAAM,YAAagsC,OAAQ,CAAC5tC,EAAS2vD,OALvC,SAQPzS,YAAUgM,EAAU1K,GARb,cAQ/BqR,EAR+B,OAS/BC,EAAqBD,EAAgBjiD,KAAI,SAACmiD,GAC9C,OAAO,IAAIvpD,IAAUupD,GAAWjI,YAVG,kBAY9BgI,GAZ8B,2CAAH,sDAevBE,EAA0B,uCAAG,WAAOhwD,GAAP,mBAAA2J,EAAA,6DAClC60C,EAAQ4P,IAAYxgD,KAAI,SAACgiD,GAE7B,MAAO,CACL17D,QAFwB+rB,YAAW2vC,EAAKjO,aAGxC//C,KAAM,YACNgsC,OAAQ,CAAC5tC,OAN2B,SAUTk9C,YAAUgM,EAAU1K,GAVX,cAUlCyR,EAVkC,OAWlCC,EAAsBD,EAAiBriD,KAAI,SAACuiD,GAChD,OAAO,IAAI3pD,IAAU2pD,GAAcrI,YAZG,kBAcjCoI,GAdiC,2CAAH,sDAiB1BE,EAA2B,uCAAG,WAAOpwD,GAAP,qBAAA2J,EAAA,6DACnCgmD,EAAoB3G,cAEpBxK,EAAQ4P,IAAYxgD,KAAI,SAACgiD,GAC7B,MAAO,CACL17D,QAASy7D,EACT/tD,KAAM,WACNgsC,OAAQ,CAACgiB,EAAKnO,IAAKzhD,OAPkB,SAWTk9C,YAAUkS,EAAe5Q,GAXhB,cAWnC6R,EAXmC,OAYnCC,EAAuBD,EAAkBziD,KAAI,SAACnH,GAClD,OAAO,IAAID,IAAUC,EAAc,GAAGojD,MAAM/B,YAbL,kBAelCwI,GAfkC,2CAAH,sDAkB3BC,EAAqB,uCAAG,WAAOvwD,GAAP,qBAAA2J,EAAA,6DAC7BgmD,EAAoB3G,cAEpBxK,EAAQ4P,IAAYxgD,KAAI,SAACgiD,GAC7B,MAAO,CACL17D,QAASy7D,EACT/tD,KAAM,cACNgsC,OAAQ,CAACgiB,EAAKnO,IAAKzhD,OAPY,SAWTk9C,YAAUkS,EAAe5Q,GAXhB,cAW7BgS,EAX6B,OAY7BC,EAAiBD,EAAY5iD,KAAI,SAAC8iD,GACtC,OAAO,IAAIlqD,IAAUkqD,GAAU5I,YAbE,kBAe5B2I,GAf4B,2CAAH,sDC7C5BrgC,EAA2B,CAAEtxB,KAAK,YAAKsvD,MAEhCuC,EAAarK,YAAY,CACpC1kD,KAAM,QACNwuB,eACAm2B,SAAU,CACRqK,mBAAoB,SAACnvD,EAAOkhD,GAC1B,IAAMkO,EAAwBlO,EAAOC,QACrCnhD,EAAM3C,KAAO2C,EAAM3C,KAAK8O,KAAI,SAACgiD,GAC3B,IAAMkB,EAAeD,EAAc5oD,MAAK,SAAC8oD,GAAD,OAAOA,EAAEtP,MAAQmO,EAAKnO,OAC9D,OAAO,2BAAKmO,GAASkB,OAGzBE,gBAAiB,SAACvvD,EAAOkhD,GACYA,EAAOC,QAAlCqO,uBACe5V,SAAQ,SAAC6V,GAAgB,IACtCrpC,EAAUqpC,EAAVrpC,MACRpmB,EAAM3C,KAAK+oB,GAAX,2BAAyBpmB,EAAM3C,KAAK+oB,IAApC,IAA4CthB,SAAU2qD,W,EAOPP,EAAW/J,QAAnDgK,E,EAAAA,mBAAoBI,E,EAAAA,gBAGtBG,EAA4B,yDAAM,WAAOlyC,GAAP,eAAAtV,EAAA,sEACzBwkD,IADyB,OACvC3M,EADuC,OAE7CviC,EAAS2xC,EAAmBpP,IAFiB,2CAAN,uDAI5B4P,EAAyB,SAACpxD,GAAD,8CAAa,WAAOif,GAAP,uBAAAtV,EAAA,sEAChB+lD,EAAwB1vD,GADR,cAC3CqxD,EAD2C,gBAEbrB,EAA2BhwD,GAFd,cAE3CsxD,EAF2C,gBAGhBlB,EAA4BpwD,GAHZ,cAG3CuxD,EAH2C,iBAIlBhB,EAAsBvwD,GAJJ,QAI3CwxD,EAJ2C,OAM3CP,EAAyBI,EAAmBzjD,KAAI,SAAC6jD,EAAe5pC,GACpE,MAAO,CACLA,QACAwjC,UAAWgG,EAAmBxpC,GAC9BsoC,aAAcmB,EAAsBzpC,GACpCphB,cAAe8qD,EAAmB1pC,GAClC6oC,SAAUc,EAAiB3pC,OAI/B5I,EAAS+xC,EAAgB,CAAEC,4BAhBsB,4CAAb,uDAmBvBN,MAAf,S,gCC9DA,0GAEYp5C,EAFZ,S,SAEYA,K,wBAAAA,E,yBAAAA,M,KAKL,IAAMmxB,EAAYoZ,YAAyE,sBACrF+C,EAAiB/C,YAAmB,wB,iCC6ClC4D,IAnDO,CACpB,CACE5iD,GAAI,EACJlB,KAAM,cACNskB,YAAa,gFACb/kB,OAAQ,CACN+L,GAAI,qBACJhI,GAAI,qBACJ9D,GAAI,qBACJiE,IAAK,sBACLqsD,KAAM,oGAER/0D,WAAY,qBACZg1D,UAAW,UACXC,MAAO,EACP1F,OAAQ,GAEV,CACEppD,GAAI,EACJlB,KAAM,oBACNskB,YAAa,wFACb/kB,OAAQ,CACN+L,GAAI,2BACJhI,GAAI,2BACJ9D,GAAI,2BACJiE,IAAK,4BACLqsD,KAAM,0GAER/0D,WAAY,2BACZg1D,UAAW,UACXC,MAAO,EACP1F,OAAQ,GAEV,CACEppD,GAAI,EACJlB,KAAM,iBACNskB,YAAa,sFACb/kB,OAAQ,CACN+L,GAAI,wBACJhI,GAAI,wBACJ9D,GAAI,wBACJiE,IAAK,yBACLqsD,KAAM,uGAER/0D,WAAY,wBACZg1D,UAAW,UACXC,MAAO,EACP1F,OAAQ,K,4sECxBL,IAAK2F,EAAZ,kC,SAAYA,K,sBAAAA,E,YAAAA,E,mBAAAA,M,mMClBN1F,EAAkBC,cAEXrF,EAAO,uCAAG,WAAOD,GAAP,yBAAAn9C,EAAA,+EAOTwiD,EAAgBviD,QAAQkoD,eAAehL,GAAQh9C,OAPtC,uBAGdioD,EAHc,EAGjB,GACGC,EAJc,EAIjB,GACGlG,EALc,EAKjB,GACGmG,EANc,EAMjB,GAEIC,EAAiB/L,IAAUl+C,MAAK,SAACkqD,GAAD,OAAgBA,EAAWrvD,KAAOgkD,KARrD,kBAUZsL,IAAM,GAAIF,EAAgB,CAC/BD,aACArwD,KAAMmwD,EACNH,MAAOI,EACP9F,OAAQJ,KAdS,2DAiBZ,MAjBY,0DAAH,sDAwBP7E,EAAQ,uCAAG,sCAAAt9C,EAAA,sEAEd0oD,EAAYlM,IAAUnqC,QAAO,SAACoqC,EAAOx+C,GACzC,OAAO,2BACFw+C,GADL,kBAEGx+C,EAAK9E,GAAK8E,MAEZ,IAPiB,SAQEukD,EAAgBviD,QAAQ0oD,cAAcxoD,OARxC,OAWpB,IAHMyoD,EARc,OASd/T,EAAQ,GAELhmC,EAAI,EAAGA,GAAK+5C,EAAS/5C,IAC5BgmC,EAAM11C,KAAKqjD,EAAgBviD,QAAQkoD,eAAet5C,GAAG1O,MAZnC,gBAeI0oD,YAAiBhU,GAfrB,cAediU,EAfc,OAgBdC,EAAkBD,EAASz2C,QAAO,SAACoqC,EAAOx+C,EAAMigB,GAAW,IACpDkqC,EAA6DnqD,EAAhE,GAAgBoqD,EAAgDpqD,EAAnD,GAAmBkkD,EAAgClkD,EAAnC,GAAoBqqD,EAAerqD,EAAlB,GAEtD,OAAO,2BACFw+C,GADL,kBAEGv+B,EAAQ,EAAI,CACXjmB,KAAMmwD,EACNH,MAAOxpD,OAAO4pD,GACd9F,OAAQ9jD,OAAO0jD,GACfmG,kBAGH,IA5BiB,kBA8BbG,IAAM,GAAIC,EAAWK,IA9BR,2DAgCb,MAhCa,0DAAH,sD,iCC/BrB,kCASA,IAAMC,EAAwB,CAC5B,CACE7vD,GAAI,YACJ4oB,KAAM,MACNnjB,MAAO,OACPqqD,MAAO,gBAET,CACE9vD,GAAI,YACJ4oB,KAAM,MACNnjB,MAAO,aACPqqD,MAAO,iBAET,CACE9vD,GAAI,YACJ4oB,KAAM,MACNnjB,MAAO,QACPqqD,MAAO,eAET,CACE9vD,GAAI,YACJ4oB,KAAM,MACNnjB,MAAO,UACPqqD,MAAO,iBAET,CACE9vD,GAAI,YACJ4oB,KAAM,MACNnjB,MAAO,SACPqqD,MAAO,kBAET,CACE9vD,GAAI,YACJ4oB,KAAM,MACNnjB,MAAO,QACPqqD,MAAO,eAET,CACE9vD,GAAI,YACJ4oB,KAAM,MACNnjB,MAAO,QACPqqD,MAAO,iBAET,CACE9vD,GAAI,YACJ4oB,KAAM,MACNnjB,MAAO,QACPqqD,MAAO,gBAQEC,EAAc,IAAIC,IAE/BH,EAAUtX,SAAQ,SAAC0X,GACjBF,EAAYz2C,IAAI22C,EAASjwD,GAAIiwD,O,uKC3DzBC,EAAS/E,cACT19C,EAAU9S,SAASC,OAAmC,GAEtD8nC,EAAW,IAAIytB,IAAkB,CAAEC,kBAAmB,CAAC3iD,KAEvDg1B,EAAgB,IAAI4tB,IAAuB,CAC/CC,IAAI,eAAI7iD,EAAUyiD,GAClBK,OAAQ,mCACRC,QAAQ,EACRC,gBAVuB,OAanBC,EAAe,IAAIC,eAAa,CAAEP,kBAAmB,CAAC3iD,KAE/CmjD,GAA4D,mBACtEr3D,IAAes3D,SAAWnuB,GAD4C,cAEtEnpC,IAAeu3D,cAAgBruB,GAFuC,cAGtElpC,IAAeC,IAAMk3D,GAHiD,GAM1D,SAAStZ,EAAWlsB,GACjC,IAAMK,EAAU,IAAIwlC,IAAa7lC,GAEjC,OADAK,EAAQklC,gBAAkB,KACnBllC,I,6FC/BIylC,EAAyB,CACpCvrD,MAAO,yGACP2d,YACE,6CACFjlB,MAAO,sDAGI8yD,EAA0C,CACrD,eAAgB,CACdxrD,MAAO,0BACP2d,YAAa,gDACbjlB,MAAO,uD,wBCLL+yD,EAAaxwD,kBAAOgxB,IAAPhxB,CAAH,oPAKZ,qBAAG/G,MAAkBwQ,aAAa7L,MAKlC,qBAAG3E,MAAkBwQ,aAAaC,MAMhC+mD,EAAW,WAAO,IACdxqD,EAAaC,cAAbD,SACFlJ,EAAeC,cACf0zD,EAAsB3zD,EAAa4zD,GAAG,GACxC,GADwB,WAEpB5zD,EAAaO,WAAWszD,oBAAe11D,EAAW,CACpD21D,sBAAuB,EACvBC,sBAAuB,KAEvBC,EAAWR,EAAWtqD,IAAa,GATpB,6BAUsBqqD,GAAiBS,GAApDhsD,EAVa,EAUbA,MAAO2d,EAVM,EAUNA,YAAajlB,EAVP,EAUOA,MACtBuzD,EAAYN,EAAsB,CAAC3rD,EAAO2rD,GAAqB9tC,KAAK,OAAS7d,EAEnF,OACE,eAAC,IAAD,WACE,gCAAQisD,IACR,sBAAMC,SAAS,WAAW1jD,QAASxI,IACnC,sBAAMksD,SAAS,iBAAiB1jD,QAASmV,IACzC,sBAAMuuC,SAAS,WAAW1jD,QAAS9P,QAc1B0F,IAT8C,SAAC,GAA4B,IAA1B1I,EAAyB,EAAzBA,SAAa8B,EAAY,4BACvF,OACE,qCACE,cAAC,EAAD,IACA,cAACi0D,EAAD,2BAAgBj0D,GAAhB,aAAwB9B,U,iCCnD9B,oBAQey2D,IALI,WAAO,IAAD,EACAv0D,qBAAWi6C,KAClC,MAAO,CAAEua,YAFc,EACfC,KACoBC,YAFL,EACTC,Q,iCCJhB,aAuCetC,IA3BU,SAAChU,GACxB,IACE,IACMuW,EAAQ,IADDnhE,cACUohE,cAEjBC,EAAWzW,EAAM5wC,KAAI,SAAC9D,GAC1B,OAAO,IAAIoxB,SAAQ,SAACshB,EAASgD,GAC3BuV,EAAM1nC,IACJvjB,EAAKorD,QAAQ,IAAI,SAACC,EAAKz6C,GACjBy6C,EACF3V,EAAO2V,GAEP3Y,EAAQ9hC,aASlB,OAFAq6C,EAAMntB,UAEC1M,QAAQC,IAAI85B,GACnB,SACA,OAAO,Q,iCCoKIG,IArMK,CAClB,CACExzD,KAAM,sBACNskB,YAAa,0CACb/kB,OAAQ,CACN+L,GAAI,4BACJhI,GAAI,4BACJ9D,GAAI,4BACJswD,KAAM,qGAER2D,UAAW,IACXxtD,QAAS,IAEX,CACEjG,KAAM,qBACNskB,YAAa,8CACb/kB,OAAQ,CACN+L,GAAI,2BACJhI,GAAI,2BACJ9D,GAAI,2BACJswD,KAAM,uGAER2D,UAAW,IACXxtD,QAAS,IAEX,CACEjG,KAAM,oBACNskB,YAAa,kDACb/kB,OAAQ,CACN+L,GAAI,0BACJhI,GAAI,0BACJ9D,GAAI,0BACJswD,KAAM,qGAER2D,UAAW,IACXxtD,QAAS,IAEX,CACEjG,KAAM,UACNskB,YAAa,+EACb/kB,OAAQ,CACN+L,GAAI,iBACJhI,GAAI,iBACJ9D,GAAI,iBACJswD,KAAM,gGAER4D,MAAO,CACLC,KAAM,gGACNC,IAAK,gGAEPH,UAAW,IACXxtD,QAAS,IAEX,CACEjG,KAAM,SACNskB,YAAa,sEACb/kB,OAAQ,CACN+L,GAAI,gBACJhI,GAAI,gBACJ9D,GAAI,gBACJswD,KAAM,+FAER2D,UAAW,IACXxtD,QAAS,IAEX,CACEjG,KAAM,SACNskB,YAAa,uEACb/kB,OAAQ,CACN+L,GAAI,gBACJhI,GAAI,gBACJ9D,GAAI,gBACJswD,KAAM,8FACN+D,KAAM,mBAERJ,UAAW,IACXxtD,QAAS,GAEX,CACEjG,KAAM,QACNskB,YAAa,kEACb/kB,OAAQ,CACN+L,GAAI,eACJhI,GAAI,eACJ9D,GAAI,eACJswD,KAAM,6FACN+D,KAAM,kBAERJ,UAAW,IACXxtD,QAAS,GAEX,CACEjG,KAAM,SACNskB,YAAa,yEACb/kB,OAAQ,CACN+L,GAAI,gBACJhI,GAAI,gBACJ9D,GAAI,gBACJswD,KAAM,8FACN+D,KAAM,mBAERJ,UAAW,IACXxtD,QAAS,GAEX,CACEjG,KAAM,SACNskB,YAAa,8DACb/kB,OAAQ,CACN+L,GAAI,gBACJhI,GAAI,gBACJ9D,GAAI,gBACJswD,KAAM,8FACN+D,KAAM,mBAERJ,UAAW,IACXxtD,QAAS,GAEX,CACEjG,KAAM,UACNskB,YAAa,yEACb/kB,OAAQ,CACN+L,GAAI,iBACJhI,GAAI,iBACJ9D,GAAI,iBACJswD,KAAM,+FACN+D,KAAM,oBAERJ,UAAW,IACXxtD,QAAS,GAEX,CACEjG,KAAM,WACNskB,YAAa,6EACb/kB,OAAQ,CACN+L,GAAI,kBACJhI,GAAI,kBACJ9D,GAAI,kBACJswD,KAAM,gGACN+D,KAAM,qBAERJ,UAAW,IACXxtD,QAAS,GAEX,CACEjG,KAAM,UACNskB,YAAa,oFACb/kB,OAAQ,CACN+L,GAAI,iBACJhI,GAAI,iBACJ9D,GAAI,iBACJswD,KAAM,+FACN+D,KAAM,oBAERJ,UAAW,IACXxtD,QAAS,GAEX,CACEjG,KAAM,cACNskB,YAAa,oFACb/kB,OAAQ,CACN+L,GAAI,qBACJhI,GAAI,qBACJ9D,GAAI,qBACJswD,KAAM,mGACN+D,KAAM,wBAERJ,UAAW,IACXxtD,QAAS,GAEX,CACEjG,KAAM,WACNskB,YAAa,mFACb/kB,OAAQ,CACN+L,GAAI,kBACJhI,GAAI,kBACJ9D,GAAI,kBACJswD,KAAM,gGACN+D,KAAM,qBAERJ,UAAW,IACXxtD,QAAS,GAEX,CACEjG,KAAM,UACNskB,YAAa,6FACb/kB,OAAQ,CACN+L,GAAI,iBACJhI,GAAI,iBACJ9D,GAAI,iBACJswD,KAAM,+FACN+D,KAAM,oBAERJ,UAAW,IACXxtD,QAAS,K,wIC3LA6tD,EAAY,uCAAG,4BAAA/rD,EAAA,2DACpBqkB,EAAY/xB,OAAuBilD,UADf,wBAGR,GAHQ,kBAKhBlzB,EAASknC,QAAQ,CACrBnkB,OAAQ,0BACRnD,OAAQ,CACN,CACEr9B,QAAQ,KAAD,OANC,IAMc6R,SAAS,KAC/BuzC,UAAW,8BACXC,eAAgB,CACdh0D,KAAM,MACN7N,OAAQ,MACRM,SAAU,IAEZwhE,QAAS7H,IACT8H,kBAAmB,CAAC,oCAjBJ,iCAqBf,GArBe,uCAuBtB52D,QAAQC,MAAR,MAvBsB,mBAwBf,GAxBe,uCA2BxBD,QAAQC,MAAM,gFA3BU,mBA4BjB,GA5BiB,yDAAH,qDCgDVrD,IAxCC,WAAO,IAAD,EACamE,cAAzBklC,EADY,EACZA,SAAUC,EADE,EACFA,WACV2wB,EAAenzD,cAAfmzD,WAmCR,MAAO,CAAEl6D,MAjCKsH,uBAAY,SAAC6yD,GACzB,IAAMC,EAAYvC,IAAiBsC,GAC/BC,EACF9wB,EAAS8wB,EAAD,uCAAY,WAAO92D,GAAP,SAAAwK,EAAA,2DACdxK,aAAiB+2D,KADH,gCAEOR,IAFP,eAIdvwB,EAAS8wB,GAJK,sBAOhBh6D,OAAOC,aAAaklD,WAAWhlD,MAC3B+C,aAAiBg3D,KAA2Bh3D,aAAiBi3D,qBAC/DL,EAAW,iBAAkB,yBAE7B52D,aAAiBk3D,KACjBl3D,aAAiBm3D,KAEbL,aAAqB9C,MACC8C,EACRM,sBAAwB,MAE1CR,EAAW,sBAAuB,4CAElCA,EAAW52D,EAAMyC,KAAMzC,EAAMkS,SApBf,2CAAZ,uDAyBR0kD,EAAW,uBAAwB,mCAGpC,IAEa71D,OAAQklC,K,gCCrD1B,gNAEY7tB,EAFZ,S,SAEYA,K,cAAAA,E,iBAAAA,M,KAKL,IAAMgxB,EAAiBuZ,YAAmD,uBACpErZ,EAAmBqZ,YAAmB,yBACtCpZ,EAAYoZ,YAAmD,kBAC/Dvf,EAAmBuf,YAM7B,yBACUlZ,EAAekZ,YAA2C,sB,iCC4JxD0U,IA3KK,CAClB,CACE1zD,GAAI,OACJ5O,QAAS,6CACT+3D,UAAU,EACVrqD,KAAM,cACN60D,SAAU,+DACVvwC,YACE,gUACFwwC,WAAY,UACZC,WAAY,UACZC,WAAY,eACZC,YAAa,aACbC,WAAY,aACZC,eAAgB,wBAChBvrD,SAAU,gBACVwrD,gBAAiB,6CACjBpI,cAAe,GACf53B,YAAa,OACbigC,mBAAoB,QACpBC,WAAY,aAEd,CACEp0D,GAAI,QACJ5O,QAAS,6CACT+3D,UAAU,EACVrqD,KAAM,qBACN60D,SAAU,yCACVvwC,YACE,mRACFwwC,WAAY,SACZC,WAAY,UACZC,WAAY,kBACZC,YAAa,WACbC,WAAY,WACZC,eAAgB,0BAChBvrD,SAAU,gBACVwrD,gBAAiB,6CACjBpI,cAAe,GACf53B,YAAa,QACbigC,mBAAoB,QACpBC,WAAY,aAEd,CACEp0D,GAAI,QACJ5O,QAAS,6CACT+3D,UAAU,EACVrqD,KAAM,cACN60D,SAAU,wCACVvwC,YACE,6UACFwwC,WAAY,UACZC,WAAY,UACZC,WAAY,gBACZC,YAAa,aACbC,WAAY,WACZC,eAAgB,wBAChBvrD,SAAU,gBACVwrD,gBAAiB,6CACjBpI,cAAe,GACf53B,YAAa,MACbigC,mBAAoB,QACpBC,WAAY,aAEd,CACEp0D,GAAI,UACJ5O,QAAS,6CACT+3D,UAAU,EACVrqD,KAAM,kBACN60D,SAAU,6EACVvwC,YACE,4VACFwwC,WAAY,UACZC,WAAY,UACZC,WAAY,kBACZC,YAAa,WACbC,WAAY,WACZC,eAAgB,6BAChBvrD,SAAU,gBACVwrD,gBAAiB,6CACjBpI,cAAe,GACf53B,YAAa,QACbigC,mBAAoB,QACpBC,WAAY,aAEd,CACEp0D,GAAI,SACJ5O,QAAS,6CACT+3D,UAAU,EACVrqD,KAAM,yBACN60D,SAAU,2CACVvwC,YACE,6ZACFwwC,WAAY,UACZC,WAAY,UACZC,WAAY,oBACZC,YAAa,aACbC,WAAY,WACZC,eAAgB,6BAChBvrD,SAAU,gBACVwrD,gBAAiB,6CACjBpI,cAAe,GACf53B,YAAa,SACbigC,mBAAoB,QACpBC,WAAY,aAEd,CACEp0D,GAAI,QACJ5O,QAAS,6CACT+3D,UAAU,EACVrqD,KAAM,cACN60D,SAAU,qCACVvwC,YACE,yhBACFwwC,WAAY,SACZC,WAAY,UACZC,WAAY,gBACZC,YAAa,aACbC,WAAY,WACZC,eAAgB,0BAChBvrD,SAAU,gBACVwrD,gBAAiB,6CACjBpI,cAAe,GACf53B,YAAa,MACbigC,mBAAoB,QACpBC,WAAY,aAEd,CACEp0D,GAAI,QACJ5O,QAAS,6CACT+3D,UAAU,EACVrqD,KAAM,gBACN60D,SAAU,gCACVvwC,YACE,ySACFwwC,WAAY,UACZC,WAAY,UACZC,WAAY,gBACZC,YAAa,WACbC,WAAY,WACZC,eAAgB,uBAChBvrD,SAAU,gBACVwrD,gBAAiB,6CACjBpI,cAAe,EACf53B,YAAa,QACbigC,mBAAoB,QACpBC,WAAY,aAEd,CACEp0D,GAAI,QACJ5O,QAAS,6CACT+3D,UAAU,EACVrqD,KAAM,cACN60D,SAAU,sBACVvwC,YACE,uHACFwwC,WAAY,UACZC,WAAY,UACZC,WAAY,oBACZC,YAAa,aACbC,WAAY,WACZC,eAAgB,yBAChBvrD,SAAU,gBACVwrD,gBAAiB,6CACjBpI,cAAe,EACf53B,YAAa,QACbigC,mBAAoB,QACpBC,WAAY,e,iCCzKhB,8CAMaC,EAAa7Q,YAAY,CACpC1kD,KAAM,QACNwuB,aAJ+B,CAAErqB,aAAc,EAAGqxD,aAAc,GAKhE7Q,SAAU,CACR8Q,SAAU,SAAC51D,EAAOkhD,GACW,IAAvBlhD,EAAM21D,eACR31D,EAAM21D,aAAezU,EAAOC,SAG9BnhD,EAAMsE,aAAe48C,EAAOC,YAMnByU,EAAaF,EAAWvQ,QAAxByQ,SAEAF,MAAf,S,8MCPaG,EAA0B,uCAAG,WAAOt3D,GAAP,eAAA2J,EAAA,+EAEnBurD,kBAPIx3D,8DASrB65D,cAFyB,IAAD,oMAIRv3D,EAAQyZ,gBANY,cAEhC3a,EAFgC,yBAgB/BA,EAAKggB,KAAKotC,QAhBqB,yDAkB/B,MAlB+B,yDAAH,sDAyB1BsL,EAAe,uCAAG,WAAOx3D,GAAP,eAAA2J,EAAA,sEACK2tD,EAA2Bt3D,GADhC,UACvBy3D,EADuB,gDAIpB,IAJoB,gCAOtBA,EAAoBz7C,QAAO,SAACoqC,EAAOsR,GACxC,IAAMC,EAAe9E,IAAY92C,IAAI27C,EAAUR,YAE/C,MAAM,GAAN,mBACK9Q,GADL,CAEE,CACEtjD,GAAI40D,EAAUR,WACdxrC,KAAMisC,EAAajsC,KACnBx3B,QAASwjE,EAAU50D,GACnByF,MAAOqvD,YAAoBD,GAC3BzxC,YAAa2xC,YAA0BF,GACvC/E,MAAO+E,EAAa/E,MACpB1G,OAAQ9jD,OAAOsvD,EAAUxL,aAG5B,KAtB0B,2CAAH,sDC7Bf4L,EAAmBxR,YAAY,CAC1C1kD,KAAM,eACNwuB,aANqC,CACrCtxB,KAAM,IAMNynD,SAAU,CACRwR,eAAgB,SAACt2D,EAAOkhD,GACtBlhD,EAAM3C,KAAKgK,KAAK65C,EAAOC,UAEzBoV,gBAAiB,SAACv2D,EAAOkhD,GACvBlhD,EAAM3C,KAAN,sBAAiB2C,EAAM3C,MAAvB,YAAgC6jD,EAAOC,WAEzCqV,gBAAiB,SAACx2D,EAAOkhD,GACvBlhD,EAAM3C,KAAO6jD,EAAOC,SAEtBsV,kBAAmB,SAACz2D,GAClBA,EAAM3C,KAAO,O,EAMoEg5D,EAAiBlR,QAAzFmR,E,EAAAA,eAAiCE,G,EAAjBD,gB,EAAiBC,iBAGnCE,G,EAHoDD,kBAGhC,SAACl4D,GAAD,8CAAqB,WAAOif,GAAP,iBAAAtV,EAAA,+EAEvB6tD,EAAgBx3D,GAFO,OAE5C4lD,EAF4C,OAGlD3mC,EAASg5C,EAAgBrS,IAHyB,gDAKlD1mD,QAAQC,MAAR,MACMoJ,EAAQ,8BACd0W,EAASnW,YAAK,CAAEhG,GAAIs1D,oBAAU7vD,GAAQmjB,KAAM2sC,KAAWC,OAAQ/vD,WAPb,yDAArB,wDAWlBuvD,MAAf,S,gwNCnCaS,EAAcC,YAAgC,eAAhB,sBAAgC,8BAAA7uD,EAAA,sEAClDqjB,MAAM,2CAD4C,cACnED,EADmE,gBAErDA,EAASG,OAF4C,cAEnEpuB,EAFmE,yBAKlE,CACL25D,WAAY35D,EAAK25D,WACjB35D,KAAMgJ,OAAOC,KAAKjJ,EAAKA,MAAMkd,QAAO,SAACoqC,EAAOtoD,GAC1C,OAAO,2BACFsoD,GADL,kBAEGtoD,EAAM2b,cAAgBooB,WAAW/iC,EAAKA,KAAKhB,GAAOy4B,WAEpD,MAZoE,4CAgB9DmiC,EAAcpS,YAAY,CACrC1kD,KAAM,SACNwuB,aAzB+B,CAC/B81B,WAAW,EACXyS,YAAa,KACb75D,KAAM,MAuBNynD,SAAU,GACVqS,cAAe,SAACrW,GACdA,EAAQC,QAAQ+V,EAAY1pC,SAAS,SAACptB,GACpCA,EAAMykD,WAAY,KAEpB3D,EAAQC,QAAQ+V,EAAYxpC,WAAW,SAACttB,EAAOkhD,GAC7ClhD,EAAMykD,WAAY,EAClBzkD,EAAMk3D,YAAchW,EAAOC,QAAQ6V,WACnCh3D,EAAM3C,KAAO6jD,EAAOC,QAAQ9jD,WAKnB45D,MAAf,S,swCCtCMte,EAAiBl9C,IAAMC,cAAc,CAAE23D,KAAM,EAAGF,KAAM,IAGtDiE,EAAyB,SAAC,GAAkB,IAAhB56D,EAAe,EAAfA,SAAe,EACvBC,mBAAS,GADc,mBACxC42D,EADwC,KAClCgE,EADkC,OAEvB56D,mBAAS,GAFc,mBAExC02D,EAFwC,KAElCmE,EAFkC,KAkB/C,OAdAh9D,qBAAU,WACR,IAAMi9D,EAAWhnD,YAAW,sBAAC,sBAAArI,EAAA,sDAC3BovD,GAAQ,SAACt1C,GAAD,OAAUA,EAAO,KADE,2CAXX,KAclB,OAAO,kBAAMxR,cAAc+mD,MAC1B,IAEHj9D,qBAAU,WACR,IAAMi9D,EAAWhnD,YAAW,sBAAC,sBAAArI,EAAA,sDAC3BmvD,GAAQ,SAACr1C,GAAD,OAAUA,EAAO,KADE,2CAjBX,KAoBlB,OAAO,kBAAMxR,cAAc+mD,MAC1B,IAEI,cAAC5e,EAAeh7C,SAAhB,CAAyBC,MAAO,CAAEy1D,OAAMF,QAAxC,SAAiD32D,M,gCC1B1D,wEAEYsZ,EAFZ,S,SAEYA,K,sCAAAA,E,sBAAAA,E,wBAAAA,E,yBAAAA,M,KAOL,IAAMmxB,EAAYoZ,YAAmD,uB,iCCT5E,6CAOM13C,EAA4C,CAChDjM,aAAc,GACdC,gBAAiB,cAGNiM,EAAsBlN,wBAAciN,I,sJCR3CpN,EAAY,UAEZyT,EAAevT,IAAMC,cAAc,CAAEkD,OAAQ,KAAMC,YAAa,kBAAM,QAEtE24D,EAAuB,SAAC,GAAkB,IAAhBh7D,EAAe,EAAfA,SAAe,EACjBC,oBAAS,WACnC,IAAMg7D,EAAoBh9D,aAAaC,QAAQa,GAC/C,QAAOk8D,GAAoBrjB,KAAK5T,MAAMi3B,MAHK,mBACtC74D,EADsC,KAC9B84D,EAD8B,KAa7C,OACE,cAAC1oD,EAAarR,SAAd,CAAuBC,MAAO,CAAEgB,SAAQC,YARtB,WAClB64D,GAAU,SAAC3uB,GAET,OADAtuC,aAAaqD,QAAQvC,EAAW64C,KAAKC,WAAWtL,KACxCA,OAKV,SACE,cAAC,gBAAD,CAAiB/tC,MAAO4D,EAAS+4D,KAAOC,KAAxC,SAAgDp7D,Q,iCCvBtD,iEAIA,IAAM+jB,EAAkB,IAAIib,IAAUq8B,GAEvBt3C,O,gHCIR,SAAShR,IACd,IAAMuoD,EAAUC,cACVC,EAAiBD,YAA+BE,KACtD,OAAOH,EAAQ30D,OAAS20D,EAAUE,I,gCCbpC,kZAWO,SAAS37C,EAAUze,GACxB,IACE,OAAO4gB,qBAAW5gB,GAClB,SACA,OAAO,GAIX,IAAMs6D,EAAqD,CACzDxlE,GAAI,GACJC,GAAI,YAGC,SAASuc,EAAeJ,EAAkBzR,EAAc4sB,GAC7D,IAAMkuC,EAAM,kBAAcD,EAAiBppD,IAAYopD,EAAiBt+C,IAAQC,SAApE,eAEZ,OAAQoQ,GACN,IAAK,cACH,MAAM,GAAN,OAAUkuC,EAAV,eAAuB96D,GAEzB,IAAK,QACH,MAAM,GAAN,OAAU86D,EAAV,kBAA0B96D,GAE5B,IAAK,UACL,QACE,MAAM,GAAN,OAAU86D,EAAV,oBAA4B96D,IAM3B,SAASif,EAAe7pB,GAAqC,IAApB2lE,EAAmB,uDAAX,EAChDv3B,EAASxkB,EAAU5pB,GACzB,IAAKouC,EACH,MAAMjqB,MAAM,gCAAD,OAAiCnkB,EAAjC,OAEb,MAAM,GAAN,OAAUouC,EAAOw3B,UAAU,EAAGD,EAAQ,GAAtC,cAA8Cv3B,EAAOw3B,UAAU,GAAKD,IAI/D,SAAS19B,EAAmB98B,GACjC,OAAOA,EAAM06D,IAAIvzD,IAAUgH,KAAK,KAAO6f,IAAI7mB,IAAUgH,KAAK,OAAQ/J,IAAI+C,IAAUgH,KAAK,MAIhF,SAASwsD,EAAqBC,GACnC,OAAO,IAAI1/B,IAAQ7uB,IAAKO,OAAOuuB,KAAKC,MAAMw/B,IAAOvuD,IAAKO,OAAO,MAGxD,SAASqkC,EAAwBjxC,EAAuB66D,GAC7D,GAAIA,EAAW,GAAKA,EAAW,IAC7B,MAAM7hD,MAAM,8BAAD,OAA+B6hD,IAE5C,MAAO,CACLxuD,IAAKyuD,OAAOzuD,IAAK4oC,SAASj1C,EAAMuM,IAAKF,IAAKO,OAAO,IAAQiuD,IAAYxuD,IAAKO,OAAO,MACjFP,IAAKyuD,OAAOzuD,IAAK4oC,SAASj1C,EAAMuM,IAAKF,IAAKO,OAAO,IAAQiuD,IAAYxuD,IAAKO,OAAO,OAe9E,SAASmuD,EAAYlmE,EAAiBmmE,EAAUhsC,EAAuBruB,GAC5E,IAAK8d,EAAU5pB,IAAYA,IAAYomE,IACrC,MAAMjiD,MAAM,gCAAD,OAAiCnkB,EAAjC,OAGb,OAAO,IAAI+5B,IAAS/5B,EAASmmE,EAVxB,SAA6BhsC,EAAuBruB,GACzD,OAAOA,EANF,SAAmBquB,EAAuBruB,GAC/C,OAAOquB,EAAQksC,UAAUv6D,GAASw6D,mBAKjBD,CAAUlsC,EAASruB,GAAWquB,EASbosC,CAAoBpsC,EAASruB,IAI1D,SAASk6B,EAAkBwgC,EAAWrsC,EAAuBruB,GAClE,OAAOo6D,EAAYtqB,IAAgB6qB,IAAiBtsC,EAASruB,GAGxD,SAAS0zB,EAAaknC,GAC3B,OAAOA,EAAOxvD,QAAQ,sBAAuB,QAGxC,SAASsb,EAAcm0C,EAAgCrvD,GAA+B,IAAD,EAC1F,OAAIA,IAAaC,KACV0Q,QAAQ3Q,aAAoB2P,MAApB,UAA6B0/C,EAAcrvD,EAAS+E,gBAApD,aAA6B,EAAkC/E,EAAStX,a,8MCvF5E0jE,EAAsB,SAAC7E,GAClC,OAAQA,EAASrnC,MACf,IAAK,MACH,MAAO,CACL5oB,GAAI,IACJR,SAAS,gBAAD,OAAkBywD,EAASxqD,OACnCzJ,KAAM,CACJ8C,KAAMmxD,EAASxqD,QAGrB,QACE,OAAOwqD,EAASxqD,QAITsvD,EAA4B,SAAC9E,GACxC,OAAQA,EAASrnC,MACf,IAAK,MACH,MAAO,CACL5oB,GAAI,IACJR,SAAS,6CAAD,OAA+CywD,EAASxqD,MAAxD,QACRzJ,KAAM,CACJ8C,KAAMmxD,EAASxqD,QAGrB,QACE,OAAOwqD,EAAS7sC,cAOT40C,EAAmB,uCAAG,WAAO96D,GAAP,uBAAA2J,EAAA,6DAC3BoxD,EAAeC,IAASz8D,QAAO,SAAC08D,GAAD,YAAoCv8D,IAAvBu8D,EAAQ/D,cACpDgE,EAAuBH,EAAantD,KAAI,SAACqtD,GAAD,OAAaA,EAAQ/mE,WAC7DinE,EAAsBC,cAHK,SAMJD,EAAoBvxD,QAC9CyxD,mBAAmBr7D,EAASk7D,GAC5BpxD,OAR8B,cAM3BwxD,EAN2B,gBAWD9I,YAC9B8I,EAAct/C,QAAO,SAACoqC,EAAOmV,EAAa1zC,GACxC,OAAoB,IAAhB0zC,EACI,GAAN,mBAAWnV,GAAX,CAAkB+U,EAAoBvxD,QAAQ4sD,KAAK0E,EAAqBrzC,IAAQ/d,OAG3Es8C,IACN,KAlB4B,cAW3BoV,EAX2B,yBAsB1BA,EAAiBx/C,QAAO,SAACoqC,EAAOqV,GACrC,IAAK5I,IAAY9O,IAAI0X,EAAqBvE,YACxC,OAAO9Q,EAGT,IAAMuR,EAAe9E,IAAY92C,IAAI0/C,EAAqBvE,YAClDhjE,EAAY6mE,EAAa9yD,MAAK,SAACyzD,GAAD,OAAiBA,EAAYxE,aAAeuE,EAAqBvE,cAA/FhjE,QAER,MAAM,GAAN,mBACKkyD,GADL,CAEE,CACElyD,UACA4O,GAAI24D,EAAqBvE,WACzBxrC,KAAM,MACNnjB,MAAOqvD,EAAoBD,GAC3BzxC,YAAa2xC,EAA0BF,GACvC/E,MAAO+E,EAAa/E,MACpB1G,OAAQ9jD,OAAOqzD,EAAqB3P,mBAGvC,KA1C8B,4CAAH,uD,sKClCnB9jD,EAAa,CACxB2zD,GAAI,EACJC,GAAI,EACJC,GAAI,GA+BSC,IA5B+B,SAAC,GAAoC,IAAlC56D,EAAiC,EAAjCA,IAAKy3D,EAA4B,EAA5BA,YAAgB54D,EAAY,uCAC1C7B,oBAAS,GADiC,mBACzEiL,EADyE,KAC5DC,EAD4D,KAExEpJ,EAAYC,cAAZD,QACAS,EAAYC,cAAZD,QACAoH,EAAY3G,EAAZ2G,QACAD,GALwE,OAK/DnH,QAL+D,IAK/DA,IAAW,IAApBmH,KACF2B,EAAoBC,cAmB1B,OAbAzN,qBAAU,WAQJiE,GAAW4H,GAPO,uCAAG,4BAAA+B,EAAA,sEACAJ,EAAkBK,QAAQC,SAAS7J,GAAS8J,OAD5C,OACjBD,EADiB,OAIvBT,IAAeS,GAAWjC,EAAK9E,KAAOkF,EAAWH,IAJ1B,2CAAH,oDAQpBkC,KAED,CAAC/J,EAAS6H,EAASD,EAAM+wD,EAAapvD,EAAmBH,IAErD,cAAC,IAAD,yBAASlI,IAAKA,EAAKy3D,YAAaA,GAAiB54D,GAAjD,IAAwD8J,SAAUV,EAAa4yD,QAjBlE,WAClB,OAAOxyD,EAAkBK,QAAQoyD,UAAU/lB,KAAK,CAAEzoC,KAAMxN,U,8CCzBtDw0B,E,KAAYhxB,QAAOC,IAAV,iNAOX,qBAAGhH,MAAkBwQ,aAAa7L,MAMvBozB,O,iCCff,4IAEA,IAAMynC,EAAiB7N,IAAY7vD,QAAO,SAACqxD,GAAD,OAAUA,EAAKsM,eAAatuD,KAAI,SAACgiD,GAAD,OAAUA,EAAK9xD,MAAM/J,W,uoBCAlF+7C,EAAiB,6CAOjBqsB,EAAM,IAAIhhD,IAAME,IAAQC,QAAS,6CAA8C,GAAI,MAAO,kBAC1F8gD,EAAO,IAAIjhD,IAAME,IAAQC,QAAS,6CAA8C,GAAI,OAAQ,eAC5F+gD,EAAO,IAAIlhD,IAAME,IAAQC,QAAS,6CAA8C,GAAI,OAAQ,cAC5FghD,EAAM,IAAInhD,IACrBE,IAAQC,QACR,6CACA,GACA,MACA,qBAGIihD,GAAyB,mBAC5BlhD,IAAQC,QAAU,CAACshB,IAAKvhB,IAAQC,WADJ,cAE5BD,IAAQE,WAAa,CAACqhB,IAAKvhB,IAAQE,cAFP,GAMlByiB,EAA6C,2BACrDu+B,GADqD,kBAEvDlhD,IAAQC,QAF+C,sBAEjCihD,EAAUlhD,IAAQC,UAFe,CAEL6gD,EAAKC,EAAMC,EAAMC,MAOzD99B,EAA4E,eACtFnjB,IAAQC,QAAU,IAIR+I,EAA+B,2BACvCk4C,GADuC,kBAEzClhD,IAAQC,QAFiC,sBAEnBihD,EAAUlhD,IAAQC,UAFC,CAES6gD,EAAKC,EAAMC,MAInDrqB,EAA4C,2BACpDuqB,GADoD,kBAEtDlhD,IAAQC,QAF8C,sBAEhCihD,EAAUlhD,IAAQC,UAFc,CAEJ6gD,EAAKC,EAAMC,MAGnDvqB,EAAkE,eAC5Ez2B,IAAQC,QAAU,CACjB,CACE,IAAIH,IAAME,IAAQC,QAAS,6CAA8C,GAAI,OAAQ,uBACrF,IAAIH,IAAME,IAAQC,QAAS,6CAA8C,GAAI,OAAQ,gBAEvF,CAAC8gD,EAAMC,GACP,CAACF,EAAKE,KAIG3C,EAAqB,UAGrB7/B,EAA2B,GAE3BC,EAA4B,KAG5B5jB,EAAW,IAAIqkB,IAAQ7uB,IAAKO,OAAO,GAAIP,IAAKO,OAAO,MACnDyuB,EAAYhvB,IAAKO,OAAO,KAExBuwD,EAAoC,IAAIjiC,IAAQ7uB,IAAKO,OAAO,KAAMyuB,GAClE+hC,EAAuC,IAAIliC,IAAQ7uB,IAAKO,OAAO,KAAMyuB,GACrE2P,EAAqC,IAAI9P,IAAQ7uB,IAAKO,OAAO,KAAMyuB,GAEnE0P,EAAgD,IAAI7P,IAAQ7uB,IAAKO,OAAO,KAAOyuB,GAE/EgiC,EAA2C,IAAIniC,IAAQ7uB,IAAKO,OAAO,MAAOyuB,GAG1E7uB,EAAgBH,IAAKixD,aAAajxD,IAAKO,OAAO,IAAKP,IAAKO,OAAO,M,mFC7EtEyD,EAAUlM,kBAAOmD,IAAPnD,CAAH,kGAcEk2C,IARc,WAC3B,OACE,cAAChqC,EAAD,UACE,cAAC,KAAD,Q,iCCdN,YAGM1N,EAAU46D,cAED56D,O,2ICGA66D,EANCr5D,UAAOC,IAAV,yG,yCCgBPq5D,EAAQt5D,kBAAO2R,KAAP3R,CAAH,iDAILu5D,EAAev5D,UAAOC,IAAV,oDAIZu5D,EAAUx5D,UAAOC,IAAV,0GAMPq/B,EAAQt/B,UAAO/D,MAAV,0GACA,qBAAGhD,MAAkBC,OAAOmO,QAqFxBoyD,EA/E2C,SAAC,GAA6C,IAA3C/7D,EAA0C,EAA1CA,IAAKg8D,EAAqC,EAArCA,SAAUC,EAA2B,EAA3BA,UAAWz1D,EAAgB,EAAhBA,UAAgB,EACnExJ,oBAAS,GAD0D,mBAC9FgoD,EAD8F,KACnFkX,EADmF,OAE3El/D,mBAAS,IAFkE,mBAE9FmB,EAF8F,KAEvF6jC,EAFuF,OAG3EhlC,mBAAS,MAHkE,mBAG9FiB,EAH8F,KAGvFgkC,EAHuF,KAI/Fx7B,EAAkB/B,cAChB5F,EAAYC,cAAZD,QACFq9D,EAAyBC,cACvBC,EAAiB36D,cAAjB26D,aAEFC,EAAa,uCAAG,sBAAA7zD,EAAA,kEAEKpW,IAAKkqE,MAAM3/C,UAAUze,GAF1B,gBAKhB8jC,EAASx7B,EAAgB,IAAK,wCALd,sCAOV01D,EAAuBzzD,QAC1B8zD,aAAa19D,EAASX,EAAO69D,EAAS,IACtCjnB,KAAK,CAAEzoC,KAAMxN,IACbi7C,GAAG,WAAW,WACbmiB,GAAa,MAEdniB,GAAG,WAAW,WACbvzC,IACAy1D,IACAI,EAAa,oCAEdtiB,GAAG,SAAS,WACX/7C,QAAQC,MAAMA,GACdgkC,EAAS,0BACTi6B,GAAa,MArBD,yDAyBlBl+D,QAAQC,MAAM,0BAAd,MAzBkB,0DAAH,qDAkCnB,OACE,eAAC,KAAD,CAAOoJ,MAAOZ,EAAgB,IAAK,gBAAiBD,UAAWA,EAA/D,UACE,eAACq1D,EAAD,WACG59D,GACC,cAAC,KAAD,CAAMoG,MAAM,UAAUsD,GAAG,MAAzB,SACG1J,IAGL,eAAC,EAAD,WACE,eAAC,KAAD,WAAOwI,EAAgB,IAAK,gBAA5B,OACA,cAACm1D,EAAD,wBAAe57D,EAAIU,KAAnB,cAEF,eAACkhC,EAAD,CAAOpL,QAAQ,kBAAf,UAAkC/vB,EAAgB,IAAK,qBAAvD,OACA,cAAC,IAAD,CACE7E,GAAG,kBACHlB,KAAK,UACL8pB,KAAK,OACLC,YAAahkB,EAAgB,IAAK,iBAClCtI,MAAOA,EACPusB,SAxBa,SAAC6X,GAA8C,IACnDC,EAAeD,EAAI90B,OAA1BtP,MACR6jC,EAASQ,IAuBHC,UAAWxkC,EACXkP,SAAU63C,OAGd,eAAC8W,EAAD,WACE,cAAC,IAAD,CAAQtrD,MAAM,OAAOzB,QAAQ,YAAYpL,QAAS6C,EAAlD,SACGC,EAAgB,IAAK,YAExB,cAAC,IAAD,CAAQ+J,MAAM,OAAO7M,QAAS24D,EAAenvD,UAAWrO,GAAWkmD,IAAc7mD,EAAjF,SACGsI,EAAgB,IAAK,oBC/F1Bo1D,EAAev5D,UAAOC,IAAV,oDAIZu5D,EAAUx5D,UAAOC,IAAV,0GAuDEk6D,EAjDqC,SAAC,GAA4C,IAA1Cz8D,EAAyC,EAAzCA,IAAKi8D,EAAoC,EAApCA,UAAWpB,EAAyB,EAAzBA,QAASr0D,EAAgB,EAAhBA,UAAgB,EACtDxJ,oBAAS,GAD6C,mBACvF0/D,EADuF,KACzEC,EADyE,KAExFl2D,EAAkB/B,cAChB5F,EAAYC,cAAZD,QAHsF,EAIzD4C,cAA7BmzD,EAJsF,EAItFA,WAAYwH,EAJ0E,EAI1EA,aAEdC,EAAa,uCAAG,sBAAA7zD,EAAA,sDACpBoyD,IACG+B,KAAK,WAAW,WACfD,GAAgB,MAEjBC,KAAK,WAAW,WACfP,EAAa,yBACb71D,IACAy1D,OAEDW,KAAK,SAAS,SAAC3+D,GACdD,QAAQC,MAAM,sBAAuBA,GACrC42D,EAAW,QAAS,0CACpB8H,GAAgB,MAbA,2CAAH,qDAiBnB,OACE,eAAC,KAAD,CAAOt1D,MAAOZ,EAAgB,IAAK,qBAAsBD,UAAWA,EAApE,UACE,cAAC,EAAD,UACE,eAAC,IAAD,CAAMe,WAAW,SAASI,GAAG,MAAMH,eAAe,gBAAlD,UACE,eAAC,KAAD,WAAOf,EAAgB,IAAK,oBAA5B,OACA,cAAC,KAAD,CAAMgB,MAAI,EAAV,uBAAmBzH,EAAIU,KAAvB,wBAGJ,eAAC,EAAD,WACE,cAAC,IAAD,CAAQ8P,MAAM,OAAOzB,QAAQ,YAAYpL,QAAS6C,EAAlD,SACGC,EAAgB,IAAK,YAExB,cAAC,IAAD,CACE+J,MAAM,OACN7M,QAAS24D,EACTnvD,UAAWrO,EACXkmD,UAAW0X,EACXG,QAASH,EAAe,cAAC,IAAD,CAAer4D,MAAM,eAAey4D,MAAI,IAAM,KALxE,SAOGr2D,EAAgB,IAAK,oBC3D1B6sB,EAAYhxB,UAAOC,IAAV,2IACO,qBAAGhH,MAAkBC,OAAOovC,eAO5CmyB,EAAcz6D,UAAOsD,IAAV,oMAWXo3D,EAAc16D,UAAO8xD,MAAV,6DAyCF6I,EApCyB,SAAC,GAA8B,IAA5Bj9D,EAA2B,EAA3BA,IAA2B,IAAtBk9D,eAAsB,SAC5Dj9D,EAAwBD,EAAxBC,OAAQS,EAAgBV,EAAhBU,KAAM0zD,EAAUp0D,EAAVo0D,MAChB+I,EAAe,uBAAmBl9D,EAAO+L,IAE/C,GAAIooD,EAAO,CACT,IAAMgJ,EACJ,eAACJ,EAAD,CAAaK,UAAQ,EAACC,UAAU,EAAOC,MAAI,EAACC,OAAK,EAACC,OAAQN,EAA1D,UACE,wBAAQj5D,IAAKkwD,EAAMC,KAAM7pC,KAAK,eAC9B,wBAAQtmB,IAAKkwD,EAAME,IAAK9pC,KAAK,iBAIjC,OAAO0yC,EACL,mBAAGz+D,KAAMwB,EAAOuwD,KAAM/iD,OAAO,SAASC,IAAI,sBAA1C,SACG0vD,IAGHA,EAIJ,IAAMM,EAAe,cAACX,EAAD,CAAa74D,IAAKi5D,EAAiBh5D,IAAKzD,IAE7D,OACE,cAAC4yB,EAAD,UACG4pC,EACC,mBAAGz+D,KAAMwB,EAAOuwD,KAAM/iD,OAAO,SAASC,IAAI,sBAA1C,SACGgwD,IAGHA,KC9BFC,EAASr7D,kBAAOq5D,EAAPr5D,CAAH,iDAINs7D,EAAgBt7D,kBAAO8B,KAAQwH,MAAM,CAAEmD,QAAS,QAAhCzM,CAAH,gNAabu7D,EAAYv7D,UAAOC,IAAV,8CAqEAu7D,IAjEyB,SAAC,GAAgE,IAAD,EAA7D99D,EAA6D,EAA7DA,IAA6D,IAAxD2I,gBAAwD,aAAtCqzD,gBAAsC,MAA3B,GAA2B,EAAvBnB,EAAuB,EAAvBA,QAASn/C,EAAc,EAAdA,QAAc,EAC1E1e,oBAAS,GADiE,mBAC/F0O,EAD+F,KACvFqyD,EADuF,KAEhGt3D,EAAkB/B,cAChBnF,EAAYC,cAAZD,QACAoH,EAA+B3G,EAA/B2G,QAASjG,EAAsBV,EAAtBU,KAAMskB,EAAgBhlB,EAAhBglB,YACjBg5C,EAAgBhC,EAASn+D,OAAS,EAClCogE,EAAOvyD,EAASwyD,IAAgBC,IAEhCxwD,EAAW,uCAAG,sBAAAlF,EAAA,sDAClBs1D,GAAWryD,GADO,2CAAH,qDAIX0yD,EAAgB,WACpB1iD,KAboG,EAgBrEvT,aAC/B,cAAC,EAAD,CAAkBnI,IAAKA,EAAKg8D,SAAUA,EAAUC,UAAWmC,KADtDC,EAhB+F,sBAmBxEl2D,aAAS,cAAC,EAAD,CAAenI,IAAKA,EAAKi8D,UAAWmC,EAAevD,QAASA,KAA5FyD,EAnB+F,oBAqBtG,OACE,eAAC,IAAD,CAAMvT,SAAUiT,EAAhB,UACE,cAAC,EAAD,CAASh+D,IAAKA,EAAKk9D,QAASc,IAC5B,eAAC,IAAD,WACE,eAACL,EAAD,WACE,cAAC,IAAD,UAAUj9D,IACTs9D,GACC,cAAC,KAAD,CAAKO,SAAO,EAACxvD,QAAQ,YAArB,SACGtI,EAAgB,IAAK,gBAGlB,OAAPlH,QAAO,IAAPA,GAAA,UAAAA,EAASS,WAAT,eAAc2G,WAAYA,GACzB,cAAC,KAAD,CAAK43D,SAAO,EAACxvD,QAAQ,UAArB,SACGtI,EAAgB,IAAK,oBAI3BkC,GACC,cAAC,IAAD,CAAQ6H,MAAM,OAAOd,GAAG,OAAO/L,QAAS26D,EAAxC,SACG73D,EAAgB,IAAK,oBAGzBu3D,GACC,cAAC,IAAD,CAAQxtD,MAAM,OAAOzB,QAAQ,YAAYW,GAAG,OAAO/L,QAAS06D,EAA5D,SACG53D,EAAgB,IAAK,iBAI5B,eAAC,IAAD,CAAY6gB,EAAE,IAAd,UACE,cAACs2C,EAAD,CAAeptD,MAAM,OAAOqsD,QAAS,cAACoB,EAAD,CAAMztD,MAAM,OAAOnM,MAAM,YAAcV,QAASgK,EAArF,SACGlH,EAAgB,IAAK,aAEvBiF,GACC,cAACmyD,EAAD,UACE,cAAC,KAAD,CAAMlnC,GAAG,IAAItyB,MAAM,aAAawI,MAAO,CAAE0D,UAAW,UAApD,SACGyU,c,gCC9Gf,mhBAIajG,EAAa,SAAC/rB,GAGzB,OAAOA,EADSwJ,IACUxJ,EADVwJ,IAC6BxJ,EAFtB,KAKZwrE,EAAiB,WAC5B,OAAOz/C,EAAWpsB,IAAOU,KAAKL,UAEnB80D,EAAuB,WAClC,OAAO/oC,EAAW8C,IAAU48C,aAEjBC,EAAsB,WACjC,OAAO3/C,EAAW8C,IAAU88C,aAEjBxX,EAAiB,WAC5B,OAAOpoC,EAAWpsB,IAAO0D,KAAKrD,UAEnB4rE,EAAoB,WAC/B,OAAO7/C,EAAW8C,IAAUg9C,UAEjBC,EAA0B,WACrC,OAAO//C,EAAW8C,IAAUk9C,aAEjBC,EAA2B,WACtC,OAAOjgD,EAAW8C,IAAUo9C,iBAEjBC,EAA2B,WACtC,OAAOngD,EAAW8C,IAAUs9C,iBAEjBC,EAAyB,WACpC,OAAOrgD,EAAW8C,IAAUw9C,eAEjBC,EAAwB,WACnC,OAAOvgD,EAAW8C,IAAU09C,cAEjBC,EAA2B,WACtC,OAAOzgD,EAAW8C,IAAU49C,iBAEjBC,EAAyB,WACpC,OAAO3gD,EAAW8C,IAAU89C,eAEjBC,EAA+B,WAC1C,OAAO7gD,EAAW8C,IAAUg+C,qBAEjBC,EAAsB,WACjC,OAAO/gD,EAAW8C,IAAUk+C,a,4PC5CvB,SAASC,EAAkBpjE,EAAe43C,EAAgBC,GAC/D,IAAM1b,EAAWnZ,YAAgB,OAAChjB,QAAD,IAACA,OAAD,EAACA,EAAO5J,SAAS,GAE5Cu5B,EAASxnB,mBAAQ,iBAAM,CAACyvC,EAAOC,KAAU,CAACD,EAAOC,IACjD0V,EAAY7wC,YAAoByf,EAAU,YAAaxM,GAAQ/S,OAErE,OAAOzU,mBAAQ,kBAAOnI,GAASutD,EAAY,IAAIhpC,IAAYvkB,EAAOutD,EAAUjpC,iBAAc1jB,IAAY,CACpGZ,EACAutD,IAIW6V,ICJHr3B,E,gCAQL,SAASs3B,EAAyBrjE,EAAasjE,GACpD,IAAMvgD,EAAgBC,YAAiBhjB,GACjCi9B,EAAiBC,cAwBvB,MAAO,CAtBS73B,sBAAW,sBAAC,4BAAAwG,EAAA,sEACCkX,EAAcya,YAAY+lC,QAAQD,EAAoBE,KAAYtiE,OAAM,WACjG,OAAO6hB,EAAcya,YAAY+lC,QAAQD,EAAoBE,QAFrC,cACpBC,EADoB,yBAKnB1gD,EACJwgD,QAAQD,EAAoBE,IAAY,CACvCplC,SAAUC,YAAmBolC,KAE9B3iE,MAAK,SAACmuB,GAIL,OAHAgO,EAAehO,EAAU,CACvByP,QAAQ,2BAEHzP,KAER/tB,OAAM,SAACG,GAEN,MADAD,QAAQsiE,MAAM,0BAA2BriE,GACnCA,MAjBgB,2CAoBzB,CAAC0hB,EAAeugD,KAMd,SAASvxB,EACd4xB,EACA9rB,GACuC,IAC/B31C,EAAYgR,cAAZhR,QACFlC,EAAQ2jE,aAA2Bp/C,IAAco/C,EAAgB3jE,WAAQY,EACzEgjE,EAAmBR,EAAkBpjE,EAAD,OAAQkC,QAAR,IAAQA,SAAWtB,EAAWi3C,GAClEgsB,EAAkBC,YAAqB,OAAC9jE,QAAD,IAACA,OAAD,EAACA,EAAO5J,QAASyhD,GAGxDksB,EAA+B57D,mBAAQ,WAC3C,OAAKw7D,GAAoB9rB,EACrB8rB,EAAgBj2D,WAAaC,IAAco+B,EAAcc,SAExD+2B,EAGEA,EAAiBzrD,SAASwrD,GAC7BE,EACE93B,EAAcC,QACdD,EAAca,aAChBb,EAAcc,SAPYd,EAAci4B,QAHHj4B,EAAci4B,UAWtD,CAACL,EAAiBC,EAAkBC,EAAiBhsB,IAElD90B,EAAgBC,YAAgB,OAAChjB,QAAD,IAACA,OAAD,EAACA,EAAO5J,SACxC6mC,EAAiBC,cAEjBqmC,EAAUl+D,sBAAW,sBAAC,8BAAAwG,EAAA,yDACtBk4D,IAAkBh4B,EAAca,aADV,uBAExBxrC,QAAQC,MAAM,oCAFU,6BAKrBrB,EALqB,uBAMxBoB,QAAQC,MAAM,YANU,6BAUrB0hB,EAVqB,uBAWxB3hB,QAAQC,MAAM,yBAXU,6BAerBsiE,EAfqB,wBAgBxBviE,QAAQC,MAAM,6BAhBU,8BAoBrBw2C,EApBqB,wBAqBxBz2C,QAAQC,MAAM,cArBU,kCAyBtB4iE,GAAW,EAzBW,UA0BClhD,EAAcya,YAAY+lC,QAAQ1rB,EAAS2rB,KAAYtiE,OAAM,WAGtF,OADA+iE,GAAW,EACJlhD,EAAcya,YAAY+lC,QAAQ1rB,EAAS8rB,EAAgB71D,IAAIwW,eA7B9C,eA0BpBm/C,EA1BoB,yBAiCnB1gD,EACJwgD,QAAQ1rB,EAASosB,EAAWN,EAAgB71D,IAAIwW,WAAak/C,IAAY,CACxEplC,SAAUC,YAAmBolC,KAE9B3iE,MAAK,SAACmuB,GACLgO,EAAehO,EAAU,CACvByP,QAAQ,WAAD,OAAailC,EAAgBj2D,SAASzX,QAC7C01C,SAAU,CAAE7oB,aAAc9iB,EAAM5J,QAASyhD,gBAG5C32C,OAAM,SAACG,GAEN,MADAD,QAAQC,MAAM,0BAA2BA,GACnCA,MA7CgB,4CA+CzB,CAAC0iE,EAAe/jE,EAAO+iB,EAAe4gD,EAAiB9rB,EAAS5a,IAEnE,MAAO,CAAC8mC,EAAeR,GAIlB,SAAS73B,EAA4BjvC,GAAqC,IAAtB+b,EAAqB,uDAAH,EACrEmrD,EAAkBx7D,mBACtB,kBAAO1L,EAAQqc,YAA+Brc,EAAO+b,GAAiBiB,IAAMG,YAAShZ,IACrF,CAACnE,EAAO+b,IAEV,OAAOu5B,EAAmB4xB,EAAiB3xB,M,SA3HjCjG,O,qBAAAA,I,+BAAAA,I,qBAAAA,I,wBAAAA,M,gxiBCdZ,2BAUezpC,IANE,WAAO,IAAD,EACWD,qBAAWsQ,KAE3C,MAAO,CAAEpQ,OAHY,EACbA,OAESC,YAHI,EACLA,YAEc7D,MADhB0D,qBAAW6hE,mB,8CCJrBC,E,KAAaz+D,QAAOC,IAAV,4NAaDw+D,O,80FCZTC,GAAoD,mBACvD7mD,IAAQC,QAAU,8CADqC,cAEvDD,IAAQE,WAAa,8CAFkC,G,SCmCnD,SAASjB,EAAwB6nD,GAClBnxD,cAAZT,QAQR,OAAO6xD,EAPHluE,UAOwBmuE,EAASF,GAGhC,SAASC,EAAYluE,EAA6BmmE,GAAyD,IAA/C8H,IAA8C,2DAClFnxD,cAArBqd,EADuG,EACvGA,QAASruB,EAD8F,EAC9FA,QACjB,OAAOiG,mBAAQ,WACb,IAAK/R,IAAYmmE,IAAQhsC,EAAS,OAAO,KACzC,IACE,OAAO+rC,YAAYlmE,EAASmmE,EAAKhsC,EAAS8zC,GAAwBniE,EAAUA,OAAUtB,GACtF,MAAOS,GAEP,OADAD,QAAQC,MAAM,yBAA0BA,GACjC,QAER,CAACjL,EAASmmE,EAAKhsC,EAAS8zC,EAAsBniE,IAG5C,SAASghB,EAAwBJ,EAAuBuhD,GAC7D,OAAOC,EAAYxhD,EAAc0hD,IAAmBH,GAG/C,SAASrhD,EAAiBF,EAAuBuhD,GACtD,OAAOC,EAAYxhD,EAAc04C,EAAW6I,GAGvC,IAAMI,EAAiB,SAACruE,GAC7B,IAAM20D,EAAO2Z,cACb,OAAOv8D,mBAAQ,kBAAMw8D,YAAevuE,EAAS20D,KAAO,CAAC30D,EAAS20D,KAGnD6Z,EAAW,SAACxuE,GACvB,IAAM20D,EAAO2Z,cACb,OAAOv8D,mBAAQ,kBAAM08D,YAAiBzuE,EAAS20D,KAAO,CAAC30D,EAAS20D,KAGrD+Z,EAAU,WACrB,IAAM/Z,EAAO2Z,cACb,OAAOv8D,mBAAQ,kBAAM48D,YAAgBha,KAAO,CAACA,KAGlCia,EAAkB,WAC7B,IAAMja,EAAO2Z,cACb,OAAOv8D,mBAAQ,kBAAM88D,YAAwBla,KAAO,CAACA,KAG1CyU,EAAoB,WAC/B,IAAMzU,EAAO2Z,cACb,OAAOv8D,mBAAQ,kBAAMqmD,YAAyBzD,KAAO,CAACA,KAG3CnoD,EAAa,WACxB,IAAMmoD,EAAO2Z,cACb,OAAOv8D,mBAAQ,kBAAMmmD,YAAmBvD,KAAO,CAACA,KAGrCma,EAAa,WACxB,IAAMna,EAAO2Z,cACb,OAAOv8D,mBAAQ,kBAAMg9D,YAAmBpa,KAAO,CAACA,KAGrCqa,EAAmB,WAC9B,IAAMra,EAAO2Z,cACb,OAAOv8D,mBAAQ,kBAAMk9D,YAAyBta,KAAO,CAACA,KAG3Cua,EAAgB,WAC3B,IAAMva,EAAO2Z,cACb,OAAOv8D,mBAAQ,kBAAMo9D,YAAsBxa,KAAO,CAACA,KAGxCya,EAAc,SAACxgE,GAC1B,IAAM+lD,EAAO2Z,cACb,OAAOv8D,mBAAQ,kBAAMs9D,YAAoBzgE,EAAI+lD,KAAO,CAAC/lD,EAAI+lD,KAG9C2a,EAA4B,WACvC,IAAM3a,EAAO2Z,cACb,OAAOv8D,mBAAQ,kBAAMm1D,YAA0BvS,KAAO,CAACA,KAG5C4a,EAA0B,WACrC,IAAM5a,EAAO2Z,cACb,OAAOv8D,mBAAQ,kBAAMy9D,YAAwB7a,KAAO,CAACA,KAG1C8a,EAAyB,WACpC,IAAM9a,EAAO2Z,cACb,OAAOv8D,mBAAQ,kBAAM29D,YAAuB/a,KAAO,CAACA,KAGzCgb,EAAgC,WAC3C,IAAMhb,EAAO2Z,cACb,OAAOv8D,mBAAQ,kBAAM69D,YAA8Bjb,KAAO,CAACA,KAGhDr/C,EAAuB,WAClC,IAAMq/C,EAAO2Z,cACb,OAAOv8D,mBAAQ,kBAAM89D,YAAqBlb,KAAO,CAACA,KAG7C,SAASjuC,EAAuB1mB,EAA6BiuE,GAClE,OAAOC,EAAYluE,EAAS8vE,EAAyB7B,GAEhD,SAAS16B,EAAgB06B,GAAkD,IACxE5xD,EAAYS,cAAZT,QACR,OAAO6xD,EAAY7xD,EAAUqsB,IAAKrsB,GAASrc,aAAUwK,EAAWulE,EAAU9B,GAGrE,SAASr/C,IAAyC,IAC/CvS,EAAYS,cAAZT,QACR,OAAO6xD,EAAY7xD,GAAW2xD,EAAmB3xD,GAAU2zD,GAAe,GAErE,SAASnvB,EAAgBovB,EAAsBhC,GACpD,OAAOC,EAAY+B,EAAajnC,IAAmBilC,GAG9C,SAASiC,IACd,OAAOhC,EAAYiC,IAAS1E,WAAW,IAAK2E,GAAW,K,g8sGChKzD,oLAuBA,SAASC,EAAYh9D,GACnB,OAAmD,IAA5C,CAAC,SAAU,UAAU2D,eAAe3D,GAG7C,SAASi9D,EAAkBj9D,GACzB,YACQ7I,IAAN6I,GACCu3C,MAAM2lB,QAAQl9D,IAAMA,EAAEghB,OAAM,SAACm8C,GAAD,OAAQH,EAAYG,IAAQ5lB,MAAM2lB,QAAQC,IAAOA,EAAGn8C,MAAMg8C,MAU3F,IAAMI,EAA6B,CAAEtjC,OAAO,EAAOyZ,iBAAap8C,EAAWI,UAAMJ,GAGpEwiB,EAAgC,CAC3C28B,eAAgBE,KAIlB,SAAS6mB,EAAapmB,EAA6BtrC,GAA0C,IACnF3C,EAAYS,cAAZT,QACF2tC,EAAcx7C,aAClB,SAACjB,GAAD,OAAWA,EAAMy7C,UAAUgB,eAEvBj/B,EAAWC,cAEX2lD,EAA6B5+D,mBACjC,4BACE4vC,KAAKC,UAAL,iBACE0I,QADF,IACEA,GADF,UACEA,EACIjgD,QAAO,SAACwoC,GAAD,OAAkB5qB,QAAQ4qB,aAFvC,iBACE,EAEIn5B,IAAI42C,YAHV,aACE,EAGIxhC,cAJN,QAIgB,MAElB,CAACw7B,IA4BH,OAxBAziD,qBAAU,WACR,IAAM+oE,EAAqBjvB,KAAK5T,MAAM4iC,GACtC,GAAKt0D,GAA+B,IAApBu0D,EAAS/lE,OAAzB,CAEA,IAAMy/C,EAAQsmB,EAASl3D,KAAI,SAACE,GAAD,OAAS2wC,YAAa3wC,MASjD,OARAmR,EACEslC,YAAsB,CACpBh0C,UACAiuC,QACAtrC,aAIG,WACL+L,EACEwlC,YAAyB,CACvBl0C,UACAiuC,QACAtrC,iBAIL,CAAC3C,EAAS0O,EAAU/L,EAAS2xD,IAEzB5+D,mBACL,kBAEEu4C,EAAM5wC,KAAgB,SAAC9D,GAAU,IAAD,EAC9B,IAAKyG,IAAYzG,EAAM,OAAO66D,EAE9B,IAAMjqD,EAAM,UAAGwjC,EAAY3tC,UAAf,aAAG,EAAuBi0C,YAAU16C,IAGhD,MAAO,CAAEu3B,OAAO,EAAMviC,MAFH,OAAN4b,QAAM,IAANA,OAAA,EAAAA,EAAQ5b,OAAyB,QAAX,OAAN4b,QAAM,IAANA,OAAA,EAAAA,EAAQ5b,MAAgB4b,EAAO5b,KAAO,KAEvCg8C,YAAW,OAAEpgC,QAAF,IAAEA,OAAF,EAAEA,EAAQogC,kBAErD,CAACoD,EAAaM,EAAOjuC,IAgBzB,IAAMw0D,EAAgC,CAAE1jC,OAAO,EAAO3mB,YAAQhc,EAAWmc,SAAS,EAAOmqD,SAAS,EAAO7lE,OAAO,GAC1G8lE,EAAgC,CAAE5jC,OAAO,EAAM3mB,YAAQhc,EAAWmc,SAAS,EAAMmqD,SAAS,EAAM7lE,OAAO,GAE7G,SAAS+lE,EACPC,EACAC,EACAC,EACAhoB,GAEA,IAAK8nB,EAAY,OAAOJ,EADb,IAEH1jC,EAA6B8jC,EAA7B9jC,MAAOviC,EAAsBqmE,EAAtBrmE,KAAMg8C,EAAgBqqB,EAAhBrqB,YACrB,IAAKzZ,EAAO,OAAO0jC,EACnB,GAAI1jC,IAAUyZ,EAAa,OAAOmqB,EAClC,IAAKG,IAAsBC,IAAahoB,EAAmB,OAAO4nB,EAClE,IAEIvqD,EAFEpF,EAAUxW,GAAQA,EAAKC,OAAS,EAChCimE,GAAU,OAAClqB,QAAD,IAACA,IAAe,GAAKuC,EAErC,GAAI/nC,GAAWxW,EACb,IACE4b,EAAS0qD,EAAkBE,qBAAqBD,EAAUvmE,GAC1D,MAAOK,GAEP,OADAD,QAAQC,MAAM,6BAA8BkmE,EAAUvmE,GAC/C,CACLuiC,OAAO,EACPxmB,SAAS,EACT1b,OAAO,EACP6lE,UACAtqD,UAIN,MAAO,CACL2mB,OAAO,EACPxmB,SAAS,EACTmqD,UACAtqD,SACAvb,OAAQmW,GAIL,SAAS4N,EACd+W,EACAmB,EACAmqC,EACAryD,GAEA,IAAMmyD,EAAWp/D,mBAAQ,+BAAMg0B,QAAN,IAAMA,GAAN,UAAMA,EAAUurC,iBAAhB,aAAM,EAAqBC,YAAYrqC,KAAa,CAACnB,EAAUmB,IAelFnY,EAAU2hD,EAbF3+D,mBACZ,kBACEg0B,GAAYorC,GAAYE,GAAcA,EAAWxmE,OAAS,EACtDwmE,EAAW33D,KAAU,SAAC6f,GACpB,MAAO,CACLv5B,QAAS+lC,EAAS/lC,QAClB6oD,SAAU9iB,EAASurC,UAAUE,mBAAmBL,EAAU53C,OAG9D,KACN,CAAC83C,EAAYtrC,EAAUorC,IAGWnyD,GAE9BmqC,EAAoBC,cAE1B,OAAOr3C,mBAAQ,WACb,OAAOgd,EAAQrV,KAAI,SAAC8M,GAAD,OAAYwqD,EAAYxqD,EAAD,OAASuf,QAAT,IAASA,OAAT,EAASA,EAAUurC,UAAWH,EAAUhoB,QACjF,CAACgoB,EAAUprC,EAAUhX,EAASo6B,IAG5B,SAASt7B,EACdgB,EACAqiD,EACAhqC,EACAmqC,EACAryD,GAEA,IAAMmyD,EAAWp/D,mBAAQ,kBAAMm/D,EAAkBK,YAAYrqC,KAAa,CAACgqC,EAAmBhqC,IACxF2hB,EAA+B92C,mBACnC,kBACEo/D,GAAYb,EAAkBe,GAC1BH,EAAkBM,mBAAmBL,EAAUE,QAC/C7mE,IACN,CAAC6mE,EAAYH,EAAmBC,IAkB5BpiD,EAAU2hD,EAfF3+D,mBACZ,kBACEo/D,GAAYtiD,GAAaA,EAAUhkB,OAAS,GAAKg+C,EAC7Ch6B,EAAUnV,KAAsB,SAAC1Z,GAC/B,OAAOA,GAAW6oD,EACd,CACE7oD,UACA6oD,iBAEFr+C,KAEN,KACN,CAACqkB,EAAWg6B,EAAUsoB,IAGYnyD,GAE9BmqC,EAAoBC,cAE1B,OAAOr3C,mBAAQ,WACb,OAAOgd,EAAQrV,KAAI,SAAC8M,GAAD,OAAYwqD,EAAYxqD,EAAQ0qD,EAAmBC,EAAUhoB,QAC/E,CAACgoB,EAAUpiD,EAASmiD,EAAmB/nB,IAGrC,SAAS7iC,EACdyf,EACAmB,EACA3N,EACAva,GAEA,IAAMmyD,EAAWp/D,mBAAQ,+BAAMg0B,QAAN,IAAMA,GAAN,UAAMA,EAAUurC,iBAAhB,aAAM,EAAqBC,YAAYrqC,KAAa,CAACnB,EAAUmB,IAalF1gB,EAASkqD,EAXD3+D,mBAAgB,WAC5B,OAAOg0B,GAAYorC,GAAYb,EAAkB/2C,GAC7C,CACE,CACEv5B,QAAS+lC,EAAS/lC,QAClB6oD,SAAU9iB,EAASurC,UAAUE,mBAAmBL,EAAU53C,KAG9D,KACH,CAACwM,EAAUorC,EAAU53C,IAEWva,GAAS,GACtCmqC,EAAoBC,cAE1B,OAAOr3C,mBAAQ,WACb,OAAOi/D,EAAYxqD,EAAD,OAASuf,QAAT,IAASA,OAAT,EAASA,EAAUurC,UAAWH,EAAUhoB,KACzD,CAAC3iC,EAAQuf,EAAUorC,EAAUhoB,M,+sBCjNrBsoB,EAAW,WAEtB,OADcjjE,aAAY,SAACjB,GAAD,OAAkBA,EAAM+/C,MAAM1iD,SAI7C8mE,EAAiB,SAACnkB,GAE7B,OADa/+C,aAAY,SAACjB,GAAD,OAAkBA,EAAM+/C,MAAM1iD,KAAKmJ,MAAK,SAAC8oD,GAAD,OAAOA,EAAEtP,MAAQA,SAIvEokB,EAAoB,SAACnkB,GAEhC,OADah/C,aAAY,SAACjB,GAAD,OAAkBA,EAAM+/C,MAAM1iD,KAAKmJ,MAAK,SAAC8oD,GAAD,OAAOA,EAAErP,WAAaA,SAI5EokB,EAAc,SAACrkB,GAC1B,IAAMmO,EAAOgW,EAAenkB,GAE5B,MAAO,CACL4J,UAAWuE,EAAKrpD,SAAW,IAAIC,IAAUopD,EAAKrpD,SAAS8kD,WAAa,IAAI7kD,IAAU,GAClF2pD,aAAcP,EAAKrpD,SAAW,IAAIC,IAAUopD,EAAKrpD,SAAS4pD,cAAgB,IAAI3pD,IAAU,GACxFC,cAAempD,EAAKrpD,SAAW,IAAIC,IAAUopD,EAAKrpD,SAASE,eAAiB,IAAID,IAAU,GAC1FkqD,SAAUd,EAAKrpD,SAAW,IAAIC,IAAUopD,EAAKrpD,SAASmqD,UAAY,IAAIlqD,IAAU,KAMvEV,EAAW,SAAC9F,GAAqB,IACpC20D,EAAgBD,cAAhBC,YACF11C,EAAW+mC,cAQjB,OAPAjqD,qBAAU,WACJiE,GACFif,EAASksC,YAAwBnrD,MAElC,CAACA,EAASif,EAAU01C,IAETjyD,aAAY,SAACjB,GAAD,OAAkBA,EAAMoE,MAAM/G,SAU7C8D,EAAW,WACtB,IAAMqc,EAAW+mC,cAuBjB,OAtBgB//C,mBAAQ,WACtB,IAAM6C,EAAO,SAAC8kD,GAAD,OAAkB3uC,EAAS8mD,YAAUnY,KAElD,MAAO,CACLmI,WAAY,SAACxtD,EAAe2d,GAC1B,OAAOpd,EAAK,CAAEhG,GAAIs1D,oBAAU7vD,GAAQmjB,KAAM2sC,KAAWC,OAAQ/vD,QAAO2d,iBAEtE8/C,UAAW,SAACz9D,EAAe2d,GACzB,OAAOpd,EAAK,CAAEhG,GAAIs1D,oBAAU7vD,GAAQmjB,KAAM2sC,KAAW4N,KAAM19D,QAAO2d,iBAEpEq3C,aAAc,SAACh1D,EAAe2d,GAC5B,OAAOpd,EAAK,CAAEhG,GAAIs1D,oBAAU7vD,GAAQmjB,KAAM2sC,KAAW6N,QAAS39D,QAAO2d,iBAEvEigD,aAAc,SAAC59D,EAAe2d,GAC5B,OAAOpd,EAAK,CAAEhG,GAAIs1D,oBAAU7vD,GAAQmjB,KAAM2sC,KAAW+N,QAAS79D,QAAO2d,iBAEvEpd,OACAnG,OAAQ,SAACG,GAAD,OAAgBmc,EAASonD,YAAYvjE,KAC7CirD,MAAO,kBAAM9uC,EAASqnD,mBAEvB,CAACrnD,KAOOo6B,EAAkB,WAAO,IAC5Br5C,EAAYC,cAAZD,QACFif,EAAW+mC,cAEjBjqD,qBAAU,WACRkjB,EAASwuC,YAAaztD,MACrB,CAACA,EAASif,KAGFve,EAAa,WAAO,IAAD,EAC0CgC,aAAY,SAACjB,GAAD,OAAkBA,EAAMhB,WAApGwlD,EADsB,EACtBA,cAAeC,EADO,EACPA,UAAWpnD,EADJ,EACIA,KAAM6tD,EADV,EACUA,cACxC,MAAO,CAAElsD,QAAS3B,EAAMynE,WAAYtgB,GAAiB0G,EAAe1G,gBAAeC,cAKxEsgB,EAAU,SAAC1jE,GACtB,IAAM8E,EAAalF,aAAY,SAACjB,GAAD,OAAkBA,EAAMikD,MAAM5mD,KAAKgE,MAC5Dmc,EAAW+mC,cAMjB,OAJAjqD,qBAAU,WACRkjB,EAAS4nC,YAAU/jD,MAClB,CAACA,EAAImc,IAEDrX,GAGI6+D,EAAW,WAAO,IAAD,EAC2B/jE,aAAY,SAACjB,GAAD,OAAkBA,EAAMikD,SAAnFO,EADoB,EACpBA,cAAeC,EADK,EACLA,UAAWpnD,EADN,EACMA,KAC5BmgB,EAAW+mC,cAMjB,OAJAjqD,qBAAU,WACRkjB,EAAS+nC,iBACR,CAAC/nC,IAEG,CAAEymC,MAAO5mD,EAAMmnD,gBAAeC,cAK1BwgB,EAAuB,WAAO,IACjC1mE,EAAYC,cAAZD,QACFif,EAAW+mC,cAEjBjqD,qBAAU,WACJiE,GACFif,EAASk5C,YAAkBn4D,MAE5B,CAACA,EAASif,KAGF0nD,EAAkB,WAE7B,OAD+CjkE,aAAY,SAACjB,GAAD,OAAkBA,EAAMmkD,aAAa9mD,SAKrFw6C,EAAoB,WAAO,IAC9Bub,EAAgBH,cAAhBG,YACF51C,EAAW+mC,cAEjBjqD,qBAAU,WACRkjB,EAASs5C,iBACR,CAACt5C,EAAU41C,KAGH+R,EAAkB,WAE7B,OADmClkE,aAAY,SAACjB,GAAD,OAAkBA,EAAM8jD,OAAOzmD,SAInE+nE,EAAiB,SAAC/oE,GAC7B,IAAMynD,EAASqhB,IAEf,OAAKrhB,EAIEA,EAAOznD,EAAM2b,eAHX,MAMEjZ,EAAmB,WAC9B,IAAMkrC,EAAO,IAAIllC,IAAU,GACrBsgE,EAAclB,EAAe,GAC7BmB,EAAcnB,EAAe,GAE7BoB,EAAeD,GAAeA,EAAYvX,kBAAoB,IAAIhpD,IAAU,GAAG/C,IAAIsjE,EAAYvX,mBAAqB9jB,EAG1H,OAFsBo7B,GAAeA,EAAYtX,kBAAoBwX,EAAa/X,MAAM6X,EAAYtX,mBAAqB9jB,GAM9G1lC,EAAW,WACtB,OAAOtD,aAAY,SAACjB,GAAD,OAAkBA,EAAMqkD,W,wJCtN7C,8rBAwCMsU,EAAc,SAAC6M,EAAU/yE,EAAiB20D,GAE9C,OAAO,IADI,OAAGA,QAAH,IAAGA,IAAQl1D,KACLgF,IAAIs1B,SAAUg5C,EAA4B/yE,IAGhDyuE,EAAmB,SAACzuE,EAAiB20D,GAChD,OAAOuR,EAAY8M,EAAUhzE,EAAS20D,IAK3B4Z,EAAiB,SAACvuE,EAAiB20D,GAC9C,OAAOuR,EAAY+M,EAAQjzE,EAAS20D,IAEzB0a,EAAsB,SAACzgE,EAAY+lD,GAC9C,IAAMrpD,EAAS4nD,IAAYn/C,MAAK,SAAC9B,GAAD,OAAUA,EAAKkhD,SAAWvkD,KACpDmkE,EAAMznE,EAAO4nE,eAAiBvV,IAAawV,QAAUC,EAAcC,EACzE,OAAOnN,EAAY6M,EAAKhnD,YAAWzgB,EAAOqhD,iBAAkBgI,IAEjDuS,EAA4B,SAACvS,GACxC,OAAOuR,EAAYuG,EAAgBD,cAA4B7X,IAEpDga,EAAkB,SAACha,GAC9B,OAAOuR,EAAYoN,EAAS9H,cAAkB7W,IAEnCuD,EAAqB,SAACvD,GACjC,OAAOuR,EAAYqN,EAAYvH,cAA4BrX,IAEhDyD,EAA2B,SAACzD,GACvC,OAAOuR,EAAYsN,EAAmBtH,cAA4BvX,IAEvDka,EAA0B,SAACla,GACtC,OAAOuR,EAAYuN,EAAiBrH,cAA0BzX,IAEnD6a,EAA0B,SAAC7a,GACtC,OAAOuR,EAAYwN,EAAiBhH,cAA0B/X,IAEnDoa,EAAqB,SAACpa,GACjC,OAAOuR,EAAYyN,EAAY/H,cAAqBjX,IAEzCsa,EAA2B,SAACta,GACvC,OAAOuR,EAAY0N,EAAkB9H,cAA2BnX,IAErDwa,EAAwB,SAACxa,GACpC,OAAOuR,EAAYuF,EAAY3W,cAAwBH,IAE5C+a,EAAyB,SAAC/a,GACrC,OAAOuR,EAAY2N,EAAgBvH,cAAyB3X,IAEjDib,EAAgC,SAACjb,GAC5C,OAAOuR,EAAY4N,EAAuBlH,cAAgCjY,IAE/Dkb,EAAuB,SAAClb,GACnC,OAAOuR,EAAY6N,EAAcjH,cAAuBnY,K,gCC/F1D,kYAeahG,EAAwBf,YAA2C,8BACnEY,EAAqBZ,YAAwC,2BAC7D1a,EAAuB0a,YAA0C,6BACjEziC,EAA8ByiC,YACzC,oCAEWriC,EAAqBqiC,YAAuC,2BAC5D76B,EAAqB66B,YAAmD,2BACxEh7B,EAAwBg7B,YAAmD,8BAC3EgB,EAAoBhB,YAAiD,0BACrEkB,EAAuBlB,YAClC,6BAEWqB,EAAYrB,YAAmB,kBAC/BsB,EAActB,YAAmB,qB,mNCvBxComB,EAAW,IAAI3tC,IAAQ7uB,IAAKO,OAAO,IAAKP,IAAKO,OAAO,MACpDk8D,EAAsB,IAAI5tC,IAAQ7uB,IAAKO,OAAO,KAAQP,IAAKO,OAAO,MAClEm8D,EAA2BD,EAAoBn8D,SAASk8D,GAGvD,SAASrxD,EACdtc,GAIA,IAAMwc,EAAiBxc,EAEnB4tE,EAAoBn8D,SAClBzR,EAAMo7B,MAAM0J,MAAMrjB,QAChB,SAACqsD,GAAD,OAAoCA,EAAW/zB,SAAS8zB,KACxDD,SAJJzpE,EASE4pE,EAAgC/tE,GAASwc,EAAgBxc,EAAMwb,YAAY/J,SAAS+K,QAAiBrY,EAe3G,MAAO,CAAEoY,sBAZ4BwxD,EACjC,IAAI/tC,IAAJ,OAAY+tC,QAAZ,IAAYA,OAAZ,EAAYA,EAA+BC,UAA3C,OAAsDD,QAAtD,IAAsDA,OAAtD,EAAsDA,EAA+BE,kBACrF9pE,EAU0DqY,cAN5DA,GACAxc,IACCA,EAAMqd,uBAAuByK,IAC1B,IAAIA,IAAY9nB,EAAMqd,YAAY9Z,MAAOiZ,EAAcu9B,SAAS/5C,EAAMqd,YAAYhM,KAAK2oC,UACvFzoC,IAAeC,MAAMgL,EAAcu9B,SAAS/5C,EAAMqd,YAAYhM,KAAK2oC,YAMpE,SAAS39B,EACdrc,EACA+b,GACwC,IAAD,EACjCmyD,EAAMzO,YAAqB1jD,GACjC,OAAO,EAAP,iBACGiB,IAAMG,MADT,OACiBnd,QADjB,IACiBA,OADjB,EACiBA,EAAOmuE,gBAAgBD,IADxC,cAEGlxD,IAAMC,OAFT,OAEkBjd,QAFlB,IAEkBA,OAFlB,EAEkBA,EAAOouE,iBAAiBF,IAF1C,EAMK,SAASzyD,EAAgBD,GAC9B,OAAI,OAACA,QAAD,IAACA,OAAD,EAACA,EAAaE,SAASymD,OACvB,OAAC3mD,QAAD,IAACA,OAAD,EAACA,EAAaE,SAASo0B,OACvB,OAACt0B,QAAD,IAACA,OAAD,EAACA,EAAaE,SAASwmD,OACvB,OAAC1mD,QAAD,IAACA,OAAD,EAACA,EAAaE,SAASumD,MACpB,EADsD,EADG,EADF,EADM,EAO/D,SAASrlD,EAAqB5c,EAAeyuB,GAClD,OAAKzuB,EAGEyuB,EAAQ,UACRzuB,EAAM8wC,eAAe5U,SAAShf,cAAc,GADpC,YAC0Cld,EAAMqd,YAAYpM,SAASzX,OADrE,cAETwG,EAAMod,aAAanM,SAASzX,QAFnB,UAIRwG,EAAM8wC,eAAe5zB,cAAc,GAJ3B,YAIiCld,EAAMod,aAAanM,SAASzX,OAJ7D,cAKTwG,EAAMqd,YAAYpM,SAASzX,QAPxB,K,gCClEX,0PAOMwtC,EAAgB,sBAChBqnC,EAAkB,gBACjB,SAASpkB,EAAU16C,GACxB,IAAKy3B,EAAcxnB,KAAKjQ,EAAK5V,SAC3B,MAAM,IAAImkB,MAAJ,2BAA8BvO,EAAK5V,UAE3C,IAAK00E,EAAgB7uD,KAAKjQ,EAAKizC,UAC7B,MAAM,IAAI1kC,MAAJ,uBAA0BvO,EAAKizC,WAEvC,MAAM,GAAN,OAAUjzC,EAAK5V,QAAf,YAA0B4V,EAAKizC,UAG1B,SAAS0B,EAAad,GAC3B,IAAMkrB,EAAMlrB,EAAQ1yC,MAAM,KAC1B,GAAmB,IAAf49D,EAAI9pE,OACN,MAAM,IAAIsZ,MAAJ,4BAA+BslC,IAEvC,MAAO,CACLzpD,QAAS20E,EAAI,GACb9rB,SAAU8rB,EAAI,IASX,IAAMtkB,EAAwBzC,YACnC,mCAEW2C,EAA2B3C,YACtC,sCAEW9C,EAA2B8C,YACtC,sCAEW9B,EAAgC8B,YAI1C,2CACU/B,EAAyB+B,YAMnC,qC,gHCvDH,sLAGalzB,EAIR,CACHC,QAASizB,YAAa,gCACtB/yB,UAAW+yB,YAAa,kCACxB9yB,SAAU8yB,YAAa,kCAGZnxB,EAAmBmxB,YAAqB,0BACxC4B,EAAU5B,YAAqB,iBAC/BhxB,EAAagxB,YAAqB,oBAClCrxB,EAAaqxB,YAAqB,oBACZA,YAAsB,8B,mMCLnD5E,EAAS,uCAAG,WAAO+pB,EAAYzoB,GAAnB,2BAAA70C,EAAA,6DACVk/C,EAAOj1D,cACPk1E,EAAQ,IAAIjgB,EAAKlwD,IAAIs1B,SAAU86C,EAAqCnJ,eACpEoJ,EAAM,IAAI/rC,IAAUgqC,GAEpBgC,EAAWzqB,EAAM5wC,KAAI,SAAC9D,GAAD,MAAU,CAACA,EAAK5V,QAAQulB,cAAeuvD,EAAItD,mBAAmB57D,EAAKlI,KAAMkI,EAAK8jC,YALzF,SAMak7B,EAAMl/D,QAAQizC,UAAUosB,GAAUn/D,OAN/C,uBAMRmzC,EANQ,EAMRA,WACFgN,EAAMhN,EAAWrvC,KAAI,SAAC9D,EAAM0O,GAAP,OAAawwD,EAAI1D,qBAAqB9mB,EAAMhmC,GAAG5W,KAAMkI,MAPhE,kBASTmgD,GATS,4CAAH,wDAYA/M,O,wJCxBf,6BA+Cet3C,IAvCC,WAAO,IACbzH,EAAiBgC,qBAAWkK,KAA5BlM,aAER,OAAO,SAACqM,EAAuBlI,GAA8C,IAA5BxD,EAA2B,uDAAP,GACnE,GAA4B,IAAxBX,EAAaY,OACf,OAAOuD,EAGT,IAAMmI,EAAmBtM,EAAa8J,MAAK,SAACyC,GAC1C,OAAOA,EAAY5L,KAAK6L,WAAaH,KAGvC,GAAIC,EAAkB,CAAC,IACbI,EAASJ,EAAiB3L,KAA1B+L,KACFq+D,EAAmBr+D,EAAKX,SAAS,KAEvC,GAAIg/D,EAAkB,CACpB,IAAIC,EAAmBt+D,EAGvB,OAAIu+D,kBAAQtqE,GACHwD,GAGTwF,OAAOC,KAAKjJ,GAAMu8C,SAAQ,SAACguB,GACzB,IAAMC,EAAc,IAAIh2C,OAAJ,WAAe+1C,EAAf,KAA2B,KAC/CF,EAAmBA,EAAiB/9D,QAAQk+D,EAAaxqE,EAAKuqE,OAGzDF,GAGT,OAAOt+D,EAGT,OAAOvI,K,sFClBIkgE,IAfC,WAAO,IACbn0C,EAAYpuB,cAAZouB,QACFk7C,EAASrgE,iBAAOmlB,GAFF,EAGInwB,mBAASmwB,EAAU,IAAI96B,IAAK86B,GAAWz6B,eAH3C,mBAGbi1D,EAHa,KAGP2gB,EAHO,KAYpB,OAPAztE,qBAAU,WACJsyB,IAAYk7C,EAAOp/D,UACrBq/D,EAAQn7C,EAAU,IAAI96B,IAAK86B,GAAWz6B,eACtC21E,EAAOp/D,QAAUkkB,KAElB,CAACA,IAEGw6B,I,gCCtBT,sLAoBazN,EAAoB0G,YAAuD,yBAC3EqC,EAAoBrC,YAAmB,yBACvCsC,EAAqBtC,YAAmB,0BACxCjG,EAAWiG,YACtB,gBAEWwC,EAAcxC,YAA8B,oB,gCCzBzD,4KASO,SAAS9mB,IAGL,IAAD,EACqBhqB,cAArBT,EADA,EACAA,QAASvQ,EADT,EACSA,QACXif,EAAWC,cAEjB,OAAO/b,uBACL,SACE4pB,GAEI,IAAD,yDADiG,GAAlGyP,EACC,EADDA,QAASiN,EACR,EADQA,SAEX,GAAKzpC,GACAuQ,EAAL,CAFG,IAIKC,EAASuc,EAATvc,KACR,IAAKA,EACH,MAAM6H,MAAM,8BAEd4G,EAAS8b,YAAe,CAAEvqB,OAAMhD,KAAMxN,EAASuQ,UAASk5B,WAAUjN,gBAEpE,CAACvd,EAAU1O,EAASvQ,IAKjB,SAASukC,IAAgE,IAAD,EACrEh0B,EAAYS,cAAZT,QAEF9O,EAAQiB,aAAgD,SAACma,GAAD,OAAOA,EAAEqjC,gBAEvE,OAAO3vC,GAAO,UAAG9O,EAAM8O,UAAT,QAA0B,GAenC,SAASk0B,EAAoB2b,GAClC,OAAO,IAAI1P,MAAO8P,UAAYJ,EAAGhc,UAAY,MAIxC,SAASw9B,EAAsBhhD,EAAkC+0B,GACtE,IAAMrR,EAAkBC,IACxB,OAAOt+B,mBACL,iBAC0B,kBAAjB2a,GACY,kBAAZ+0B,GACP7tC,OAAOC,KAAKu8B,GAAiBr6B,MAAK,SAACuG,GACjC,IAAM4vC,EAAK9b,EAAgB9zB,GAC3B,IAAK4vC,EAAI,OAAO,EAChB,GAAIA,EAAGzb,QACL,OAAO,EAJiC,IAMlC8E,EAAa2W,EAAb3W,SACR,QAAKA,IACEA,EAASkM,UAAYA,GAAWlM,EAAS7oB,eAAiBA,GAAgB6jB,EAAoB2b,SAEzG,CAAC9b,EAAiBqR,EAAS/0B,M,0SC3DzB6oD,E,kDACJ,WAAYp4D,EAAwBxU,EAAqBiC,GAAiB,IAAD,8BACvE,cAAMuS,IAD4BxU,OAAqC,EAAhBiC,OAAgB,E,sBADhDuZ,QAYrBqxD,EAmBJ,WAAYn5D,EAAiBoL,EAAaguD,GAA2B,IAAD,gCAlBpDC,YAAoB,EAkBgC,KAhBpDr5D,aAgBoD,OAdpDoL,SAcoD,OAZpDmU,UAYoD,OAVpDnqB,UAUoD,OARpDgkE,qBAQoD,OAN5DE,OAAS,EAMmD,KAJ5DC,eAAuD,KAIK,KAF5D/U,MAAqB,GAEuC,KAUpDgV,WAVoD,sBAUvC,8BAAApgE,EAAA,6DAC3BzK,QAAQu8B,KAAK,iBAAkB,EAAKs5B,OAC5BA,EAAU,EAAVA,MACR,EAAKA,MAAQ,GACb,EAAK+U,eAAiB,KAJK,kBAOR98C,MAAM,EAAKrR,IAAK,CAC/Bo1B,OAAQ,OACRi5B,QAAS,CAAE,eAAgB,mBAAoBC,OAAQ,oBACvDC,KAAMr0B,KAAKC,UAAUif,EAAMnnD,KAAI,SAACC,GAAD,OAAUA,EAAKqnD,cAVvB,OAOzBnoC,EAPyB,gEAazBgoC,EAAM1Z,SAAQ,mBAAgBmE,EAAhB,EAAGA,QAAoB,IAAInnC,MAAM,iCAbtB,8BAiBtB0U,EAASE,GAjBa,wBAkBzB8nC,EAAM1Z,SAAQ,mBAAgBmE,EAAhB,EAAGA,QAAoB,IAAIiqB,EAAJ,UAAoB18C,EAAS6X,OAA7B,aAAwC7X,EAASo9C,aAAe,UAlB5E,sDAwBZp9C,EAASG,OAxBG,yEA0BzB6nC,EAAM1Z,SAAQ,mBAAgBmE,EAAhB,EAAGA,QAAoB,IAAInnC,MAAM,qCA1BtB,2BA6Bb08C,EAAM/4C,QAAoC,SAAC1Y,EAAM6G,GAE7D,OADA7G,EAAK6G,EAAQ+qD,QAAQpyD,IAAMqH,EACpB7G,IACN,IAhCwB,kEAVuC,KA8DpD8mE,UAAY,SAC1BlV,EACAtjD,GAEA,EAAKsjD,QAAQA,EAAQnkB,OAAQmkB,EAAQtnB,QAClChvC,MAAK,SAAC8b,GAAD,OAAY9I,EAAS,KAAM,CAAEy4D,QAAS,MAAOvnE,GAAIoyD,EAAQpyD,GAAI4X,cAClE1b,OAAM,SAACG,GAAD,OAAWyS,EAASzS,EAAO,UApE8B,KAuEpD+1D,QAvEoD,uCAuE1C,WACxBnkB,EACAnD,GAFwB,iBAAAjkC,EAAA,yDAIF,kBAAXonC,EAJa,yCAKf,EAAKmkB,QAAQnkB,EAAOA,OAAQA,EAAOnD,SALpB,UAOT,gBAAXmD,EAPoB,qDAQV,EAAKxgC,QAAQ6R,SAAS,MARZ,cAUlBm9B,EAAU,IAAIrkB,SAAQ,SAACshB,EAASgD,GACpC,EAAKuV,MAAMjsD,KAAK,CACdosD,QAAS,CACPmV,QAAS,MACTvnE,GAAI,EAAK+mE,SACT94B,SACAnD,UAEF4O,UACAgD,cAGJ,EAAKsqB,eAAL,UAAsB,EAAKA,sBAA3B,QAA6ChxC,WAAW,EAAKixC,WAAY,EAAKJ,iBAtBtD,kBAuBjBpqB,GAvBiB,2CAvE0C,wDAClEl9C,KAAKkO,QAAUA,EACflO,KAAKsZ,IAAMA,EACX,IAAM2mB,EAAS,IAAItS,IAAIrU,GACvBtZ,KAAKytB,KAAOwS,EAAOxS,KACnBztB,KAAKsD,KAAO28B,EAAO74B,SAEnBpH,KAAKsnE,gBAAL,OAAuBA,QAAvB,IAAuBA,IAAmB,IA2FjCW,EAAb,kDAKE,cAAkE,IAAD,EAAnDz9C,EAAmD,EAAnDA,KAAM09C,EAA6C,EAA7CA,eAA6C,2BAC/DC,YAAUD,GAA+C,IAA7BziE,OAAOC,KAAK8kB,GAAM9tB,OAAc,sDAC5D,cAAM,CAAEm0D,kBAAmBprD,OAAOC,KAAK8kB,GAAMjf,KAAI,SAAC68D,GAAD,OAAeriE,OAAOqiE,SANxDj3E,eAIgD,IAFzDk3E,oBAEyD,EAI/D,EAAKA,eAAiBH,GAAkBniE,OAAON,OAAOC,KAAK8kB,GAAM,IACjE,EAAKr5B,UAAYsU,OAAOC,KAAK8kB,GAAM7Q,QAA+C,SAAC2zB,EAAap/B,GAE9F,OADAo/B,EAAYvnC,OAAOmI,IAAY,IAAIm5D,EAAgBthE,OAAOmI,GAAUsc,EAAKzkB,OAAOmI,KACzEo/B,IACN,IAR4D,EALnE,0CAgBE,WACE,OAAOttC,KAAK7O,UAAU6O,KAAKqoE,kBAjB/B,6DAoBE,uGACS,CAAE18C,SAAU3rB,KAAK7O,UAAU6O,KAAKqoE,gBAAiBn6D,QAASlO,KAAKqoE,eAAgB1qE,QAAS,OADjG,gDApBF,sHAwBE,uGACSqC,KAAK7O,UAAU6O,KAAKqoE,iBAD7B,gDAxBF,qHA4BE,uGACSroE,KAAKqoE,gBADd,gDA5BF,qHAgCE,uGACS,MADT,2CAhCF,8EAoCE,WACE,OAAO,SArCX,GAAsCC,qB,wBC7ItC,SAASC,EAAgBC,GAEvB,OAAOA,EAAWC,eAAe,UAAYD,EAAWnwD,OAASmwD,EAG5D,IAAMzU,EAAb,kDACE,aAAsB,IAAD,8BACnB,gBACKx0D,KAAO,EAAKmpE,YAAYnpE,KAC7B,EAAKyP,QAAU,oDAHI,EADvB,sBAAwCgH,QAQ3B2yD,EAAb,kDACE,aAAsB,IAAD,8BACnB,gBACKppE,KAAO,EAAKmpE,YAAYnpE,KAC7B,EAAKyP,QAAU,iCAHI,EADvB,sBAA8CgH,QAQjCo7C,EAAb,kDACE,WAAYwX,GAAqC,IAAD,8BAC9C,cAAMA,IAEDC,qBAAuB,EAAKA,qBAAqBC,KAA1B,gBAC5B,EAAKC,mBAAqB,EAAKA,mBAAmBD,KAAxB,gBAC1B,EAAKE,sBAAwB,EAAKA,sBAAsBF,KAA3B,gBAC7B,EAAKG,YAAc,EAAKA,YAAYH,KAAjB,gBAN2B,EADlD,sDAUE,SAA2B56D,GACzBlO,KAAKkpE,WAAW,CAAEh7D,UAASyd,SAAU/xB,OAAOuvE,iBAXhD,mCAcE,SAA8BC,GACJ,IAApBA,EAAS1sE,OACXsD,KAAKqpE,iBAELrpE,KAAKkpE,WAAW,CAAEvrE,QAASyrE,EAAS,OAlB1C,yBAsBE,WACEppE,KAAKqpE,mBAvBT,kCA0BE,SAA6BC,GAC3BtpE,KAAKkpE,WAAW,CAAEh7D,QAASo7D,EAAW39C,SAAU/xB,OAAOuvE,iBA3B3D,6DA8BE,uFACOvvE,OAAOuvE,aADd,sBAEU,IAAIpV,EAFd,cAKMn6D,OAAOuvE,aAAavwB,KACtBh/C,OAAOuvE,aAAavwB,GAAG,eAAgB54C,KAAK+oE,oBAC5CnvE,OAAOuvE,aAAavwB,GAAG,kBAAmB54C,KAAKgpE,uBAC/CpvE,OAAOuvE,aAAavwB,GAAG,QAAS54C,KAAKipE,aACrCrvE,OAAOuvE,aAAavwB,GAAG,iBAAkB54C,KAAK6oE,uBAG3CjvE,OAAOuvE,aAAqB5B,aAC9B3tE,OAAOuvE,aAAqBrqB,4BAA6B,GAb9D,kBAmBqBllD,OAAOuvE,aAAav1B,KAAc,uBAAuBr3C,MACxE,SAACisE,GAAD,OAAgBD,EAAgBC,GAAY,MApBlD,OAmBI7qE,EAnBJ,4DAuBgC,OAAxB,KAAenD,KAvBvB,uBAwBY,IAAImuE,EAxBhB,QA0BIY,mBAAQ,EAAO,gEA1BnB,WA8BO5rE,EA9BP,kCAgCoB/D,OAAOuvE,aAAaK,SAASjtE,MAAK,SAACisE,GAAD,OAAgBA,GAAcD,EAAgBC,GAAY,MAhChH,QAgCI7qE,EAhCJ,qDAmCWguB,SAAU/xB,OAAOuvE,cAAkBxrE,EAAU,CAAEA,WAAY,KAnCtE,0DA9BF,sHAoEE,uGACS/D,OAAOuvE,cADhB,2CApEF,qHAwEE,uFACOvvE,OAAOuvE,aADd,sBAEU,IAAIpV,EAFd,gCAOqBn6D,OAAOuvE,aAAav1B,KAAc,eAAer3C,KAAKgsE,GAP3E,OAOIr6D,EAPJ,uDASIq7D,mBAAQ,EAAO,6DATnB,WAYOr7D,EAZP,4CAcuBtU,OAAOuvE,aAAav1B,KAAc,eAAer3C,KAAKgsE,GAd7E,QAcMr6D,EAdN,0DAgBMq7D,mBAAQ,EAAO,gEAhBrB,QAoBE,IAAKr7D,EACH,IACEA,EAAUq6D,EAAiB3uE,OAAOuvE,aAAav1B,KAAiB,CAAElF,OAAQ,iBAC1E,SACA66B,mBAAQ,EAAO,yFAxBrB,OA4BOr7D,IAEDA,EADGtU,OAAOuvE,aAAqBM,SACrBlB,EAAiB3uE,OAAOuvE,aAAqBO,cAAcC,aAGlE/vE,OAAOuvE,aAAqBj7D,SAC5BtU,OAAOuvE,aAAqBS,YAC5BhwE,OAAOuvE,aAAqBU,gBAC5BjwE,OAAOuvE,aAAqBW,UApCrC,kBAwCS57D,GAxCT,iEAxEF,qHAmHE,uFACOtU,OAAOuvE,aADd,sBAEU,IAAIpV,EAFd,gCAOqBn6D,OAAOuvE,aAAav1B,KAAc,gBAAgBr3C,MACjE,SAACisE,GAAD,OAAgBD,EAAgBC,GAAY,MARlD,OAOI7qE,EAPJ,uDAWI4rE,mBAAQ,EAAO,yDAXnB,WAcO5rE,EAdP,4CAgBsB/D,OAAOuvE,aAAaK,SAASjtE,MAAK,SAACisE,GAAD,OAAgBD,EAAgBC,GAAY,MAhBpG,QAgBM7qE,EAhBN,0DAkBM4rE,mBAAQ,EAAO,4DAlBrB,eAsBO5rE,IACHA,EAAU4qE,EAAiB3uE,OAAOuvE,aAAav1B,KAAiB,CAAElF,OAAQ,kBAAmB,IAvBjG,kBA0BS/wC,GA1BT,iEAnHF,8EAgJE,WACM/D,OAAOuvE,cAAgBvvE,OAAOuvE,aAAatwB,iBAC7Cj/C,OAAOuvE,aAAatwB,eAAe,eAAgB74C,KAAK+oE,oBACxDnvE,OAAOuvE,aAAatwB,eAAe,kBAAmB74C,KAAKgpE,uBAC3DpvE,OAAOuvE,aAAatwB,eAAe,QAAS74C,KAAKipE,aACjDrvE,OAAOuvE,aAAatwB,eAAe,iBAAkB74C,KAAK6oE,yBArJhE,iEAyJE,iFACOjvE,OAAOuvE,aADd,0CAEW,GAFX,gCAMkBvvE,OAAOuvE,aAAav1B,KAAc,gBAAgBr3C,MAAK,SAACisE,GACpE,OAAID,EAAgBC,GAAY9rE,OAAS,KAP/C,kGAaW,GAbX,yDAzJF,2DAAkC4rE,qB,SCnB5ByB,EAAane,cACN1/B,EAA2B9wB,UAAS,YAEjD,GAA2B,qBAAhB2uE,EACT,MAAM,IAAI/zD,MAAJ,gEAGD,IAIHmW,EAJS69C,EAAU,IAAI/B,EAAiB,CAC1Cz9C,KAAK,eAAI0B,EAAmB69C,KAIvB,SAAS39C,IAAmC,IAAD,EAEhD,OAAQD,EAAc,UAAGA,SAAH,QAAqB,IAAIqlC,IAAawY,EAAQr+C,UAG/D,IAAMwX,EAAW,IAAIytB,IAAkB,CAC5CC,kBAAmB,CAAC,GAAI,MAMb3tB,GAHM,IAAIkuB,EAAa,CAAEP,kBAAmB,CAAC,MAG7B,IAAIC,IAAuB,CACtDC,IAAI,eAAI7kC,EAAmB69C,GAC3B/Y,OAAQ,mCACRC,QAAQ,EACRC,gBAAiB,QAIO,IAAI+Y,IAAoB,CAChD3wD,IAAKywD,EACLG,QAAS,UACTC,WACE,6K,gCC5CW,KACb7M,WAAY,CACVvrE,GAAI,6CACJD,GAAI,8CAENozE,SAAU,CACRnzE,GAAI,6CACJD,GAAI,8CAEN4rE,QAAS,CACP3rE,GAAI,6CACJD,GAAI,8CAEN8rE,WAAY,CACV7rE,GAAI,6CACJD,GAAI,8CAEN0rE,WAAY,CACV1rE,GAAI,6CACJC,GAAI,8CAEN+rE,eAAgB,CACdhsE,GAAI,6CACJC,GAAI,8CAENisE,eAAgB,CACdlsE,GAAI,6CACJC,GAAI,8CAENmsE,aAAc,CACZpsE,GAAI,6CACJC,GAAI,8CAENqsE,YAAa,CACXtsE,GAAI,6CACJC,GAAI,IAENusE,eAAgB,CACdxsE,GAAI,6CACJC,GAAI,8CAENysE,aAAc,CACZ1sE,GAAI,6CACJC,GAAI,8CAEN2sE,mBAAoB,CAClB5sE,GAAI,6CACJC,GAAI,8CAEN6sE,UAAW,CACT9sE,GAAI,6CACJC,GAAI,gD,gCCnDR,sBAGMyR,EAAsB,CAe1B,CACEwhD,OAAQ,GACRY,aAAcp0D,IAAOS,KACrBm4E,aAAc54E,IAAOsG,KACrB0mD,gBAAiB,CACfzsD,GAAI,6CACJD,GAAI,8CAENizE,aAAcvV,IAAa6a,KAC3BC,SAAS,EACTtX,UAAW,IACXuX,cAAe,SAEjB,CACEvlB,OAAQ,IACRY,aAAcp0D,IAAOI,SACrBw4E,aAAc54E,IAAOW,MACrBqsD,gBAAiB,CACfzsD,GAAI,6CACJD,GAAI,8CAENizE,aAAcvV,IAAa6a,KAC3BC,SAAS,EACTtX,UAAW,IACXuX,cAAe,UAIJ/mE,Q","file":"static/js/main.c32048f5.chunk.js","sourcesContent":["import Web3 from 'web3'\nimport { HttpProviderOptions } from 'web3-core-helpers'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL, { timeout: 10000 } as HttpProviderOptions)\nconst web3NoAccount = new Web3(httpProvider)\n\nconst getWeb3NoAccount = () => {\n  return web3NoAccount\n}\n\nexport { getWeb3NoAccount }\nexport default web3NoAccount\n","const tokens = {\n  bnb: {\n    symbol: 'BNB',\n    projectLink: 'https://www.binance.com/',\n  },\n  bdextest: {\n    symbol: 'BEDEX',\n    address: {\n      56: '0xb45299B023a6F1E0Da134Aa4D886A548BE0B662f',\n      97: '0xb45299B023a6F1E0Da134Aa4D886A548BE0B662f',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  bdex: {\n    symbol: 'BES-DEMO',\n    address: {\n      56: '0x0099fe22b580d45a585d412aceb029135b1a0bd6',\n      97: '0x0099fe22b580d45a585d412aceb029135b1a0bd6',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  cake: {\n    symbol: 'CAKE',\n    address: {\n      56: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n      97: '0xa35062141Fa33BCA92Ce69FeD37D0E8908868AAe',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  cake2: {\n    symbol: 'CAKE',\n    address: {\n      56: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n      97: '0xBb9764A12dacA6d3749C161bC687A7E5E8E3534D',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  txl: {\n    symbol: 'TXL',\n    address: {\n      56: '0x1ffd0b47127fdd4097e54521c9e2c7f0d66aafc5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tixl.org/',\n  },\n  cos: {\n    symbol: 'COS',\n    address: {\n      56: '0x96Dd399F9c3AFda1F194182F71600F1B65946501',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.contentos.io/',\n  },\n  bunny: {\n    symbol: 'BUNNY',\n    address: {\n      56: '0xc9849e6fdb743d08faee3e34dd2d1bc69ea11a51',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakebunny.finance/',\n  },\n  alice: {\n    symbol: 'ALICE',\n    address: {\n      56: '0xac51066d7bec65dc4589368da368b212745d63e8',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.myneighboralice.com/',\n  },\n  for: {\n    symbol: 'FOR',\n    address: {\n      56: '0x658A109C5900BC6d2357c87549B651670E5b0539',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.for.tube/home',\n  },\n  bux: {\n    symbol: 'BUX',\n    address: {\n      56: '0x211ffbe424b90e25a15531ca322adf1559779e45',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://getbux.com/bux-crypto/',\n  },\n  nuls: {\n    symbol: 'NULS',\n    address: {\n      56: '0x8cd6e29d3686d24d3c2018cee54621ea0f89313b',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://www.nuls.io/',\n  },\n  belt: {\n    symbol: 'BELT',\n    address: {\n      56: '0xE0e514c71282b6f4e823703a39374Cf58dc3eA4f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://beta.belt.fi/',\n  },\n  ramp: {\n    symbol: 'RAMP',\n    address: {\n      56: '0x8519ea49c997f50ceffa444d240fb655e89248aa',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://rampdefi.com/',\n  },\n  bfi: {\n    symbol: 'BFI',\n    address: {\n      56: '0x81859801b01764d4f0fa5e64729f5a6c3b91435b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bearn.fi/',\n  },\n  dexe: {\n    symbol: 'DEXE',\n    address: {\n      56: '0x039cb485212f996a9dbb85a9a75d898f94d38da6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dexe.network/',\n  },\n  bel: {\n    symbol: 'BEL',\n    address: {\n      56: '0x8443f091997f06a61670b735ed92734f5628692f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bella.fi/',\n  },\n  tpt: {\n    symbol: 'TPT',\n    address: {\n      56: '0xeca41281c24451168a37211f0bc2b8645af45092',\n      97: '',\n    },\n    decimals: 4,\n    projectLink: 'https://www.tokenpocket.pro/',\n  },\n  watch: {\n    symbol: 'WATCH',\n    address: {\n      56: '0x7a9f28eb62c791422aa23ceae1da9c847cbec9b0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://yieldwatch.net/',\n  },\n  xmark: {\n    symbol: 'xMARK',\n    address: {\n      56: '0x26a5dfab467d4f58fb266648cae769503cec9580',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://benchmarkprotocol.finance/',\n  },\n  bmxx: {\n    symbol: 'bMXX',\n    address: {\n      56: '0x4131b87f74415190425ccd873048c708f8005823',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://multiplier.finance/',\n  },\n  iotx: {\n    symbol: 'IOTX',\n    address: {\n      56: '0x9678e42cebeb63f23197d726b29b1cb20d0064e5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://iotex.io/',\n  },\n  bor: {\n    symbol: 'BOR',\n    address: {\n      56: '0x92d7756c60dcfd4c689290e8a9f4d263b3b32241',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.boringdao.com/',\n  },\n  bopen: {\n    symbol: 'bOPEN',\n    address: {\n      56: '0xf35262a9d427f96d2437379ef090db986eae5d42',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://opendao.io/',\n  },\n  dodo: {\n    symbol: 'DODO',\n    address: {\n      56: '0x67ee3cb086f8a16f34bee3ca72fad36f7db929e2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dodoex.io/',\n  },\n  swingby: {\n    symbol: 'SWINGBY',\n    address: {\n      56: '0x71de20e0c4616e7fcbfdd3f875d568492cbe4739',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swingby.network/',\n  },\n  bry: {\n    symbol: 'BRY',\n    address: {\n      56: '0xf859bf77cbe8699013d6dbc7c2b926aaf307f830',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://berrydata.co/',\n  },\n  zee: {\n    symbol: 'ZEE',\n    address: {\n      56: '0x44754455564474a89358b2c2265883df993b12f0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://zeroswap.io/',\n  },\n  swgb: {\n    symbol: 'SWGb',\n    address: {\n      56: '0xe40255c5d7fa7ceec5120408c78c787cecb4cfdb',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swirgepay.com/',\n  },\n  sfp: {\n    symbol: 'SFP',\n    address: {\n      56: '0xd41fdb03ba84762dd66a0af1a6c8540ff1ba5dfb',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.safepal.io/',\n  },\n  lina: {\n    symbol: 'LINA',\n    address: {\n      56: '0x762539b45a1dcce3d36d080f74d1aed37844b878',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://linear.finance/',\n  },\n  lit: {\n    symbol: 'LIT',\n    address: {\n      56: '0xb59490ab09a0f526cc7305822ac65f2ab12f9723',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.litentry.com/',\n  },\n  hget: {\n    symbol: 'HGET',\n    address: {\n      56: '0xc7d8d35eba58a0935ff2d5a33df105dd9f071731',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.hedget.com/',\n  },\n  bdo: {\n    symbol: 'BDO',\n    address: {\n      56: '0x190b589cf9fb8ddeabbfeae36a813ffb2a702454',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bdollar.fi/',\n  },\n  egld: {\n    symbol: 'EGLD',\n    address: {\n      56: '0xbf7c81fff98bbe61b40ed186e4afd6ddd01337fe',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://elrond.com/',\n  },\n  ust: {\n    symbol: 'UST',\n    address: {\n      56: '0x23396cf899ca06c4472205fc903bdb4de249d6fc',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  wsote: {\n    symbol: 'wSOTE',\n    address: {\n      56: '0x541e619858737031a1244a5d0cd47e5ef480342c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://soteria.finance/#/',\n  },\n  front: {\n    symbol: 'FRONT',\n    address: {\n      56: '0x928e55dab735aa8260af3cedada18b5f70c72f1b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://frontier.xyz/',\n  },\n  helmet: {\n    symbol: 'Helmet',\n    address: {\n      56: '0x948d2a81086a075b3130bac19e4c6dee1d2e3fe8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.helmet.insure/',\n  },\n  btcst: {\n    symbol: 'BTCST',\n    address: {\n      56: '0x78650b139471520656b9e7aa7a5e9276814a38e9',\n      97: '',\n    },\n    decimals: 17,\n    projectLink: 'https://www.1-b.tc/',\n  },\n  bscx: {\n    symbol: 'BSCX',\n    address: {\n      56: '0x5ac52ee5b2a633895292ff6d8a89bb9190451587',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bscex.org/',\n  },\n  ten: {\n    symbol: 'TEN',\n    address: {\n      56: '0xdff8cb622790b7f92686c722b02cab55592f152c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tenet.farm/',\n  },\n  balbt: {\n    symbol: 'bALBT',\n    address: {\n      56: '0x72faa679e1008ad8382959ff48e392042a8b06f7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://allianceblock.io/',\n  },\n  asr: {\n    symbol: 'ASR',\n    address: {\n      56: '0x80d5f92c2c8c682070c95495313ddb680b267320',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  atm: {\n    symbol: 'ATM',\n    address: {\n      56: '0x25e9d05365c867e59c1904e7463af9f312296f9e',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  og: {\n    symbol: 'OG',\n    address: {\n      56: '0xf05e45ad22150677a017fbd94b84fbb63dc9b44c',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  reef: {\n    symbol: 'REEF',\n    address: {\n      56: '0xf21768ccbc73ea5b6fd3c687208a7c2def2d966e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://reef.finance/',\n  },\n  ditto: {\n    symbol: 'DITTO',\n    address: {\n      56: '0x233d91a0713155003fc4dce0afa871b508b3b715',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://ditto.money/',\n  },\n  juv: {\n    symbol: 'JUV',\n    address: {\n      56: '0xc40c9a843e1c6d01b7578284a9028854f6683b1b',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  psg: {\n    symbol: 'PSG',\n    address: {\n      56: '0xbc5609612b7c44bef426de600b5fd1379db2ecf1',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  vai: {\n    symbol: 'VAI',\n    address: {\n      56: '0x4bd17003473389a42daf6a0a729f6fdb328bbbd7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  wbnb: {\n    symbol: 'wBNB',\n    address: {\n      56: '0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c',\n      97: '0xae13d989dac2f0debff460ac112a837c89baa7cd',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  blink: {\n    symbol: 'BLINK',\n    address: {\n      56: '0x63870a18b6e42b01ef1ad8a2302ef50b7132054f',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://blink.wink.org',\n  },\n  unfi: {\n    symbol: 'UNFI',\n    address: {\n      56: '0x728c5bac3c3e370e372fc4671f9ef6916b814d8b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unifiprotocol.com',\n  },\n  twt: {\n    symbol: 'TWT',\n    address: {\n      56: '0x4b0f1812e5df2a09796481ff14017e6005508003',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://trustwallet.com/',\n  },\n  hard: {\n    symbol: 'HARD',\n    address: {\n      56: '0xf79037f6f6be66832de4e7516be52826bc3cbcc4',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://hard.kava.io',\n  },\n  broobee: {\n    symbol: 'bROOBEE',\n    address: {\n      56: '0xe64f5cb844946c1f102bd25bbd87a5ab4ae89fbe',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://roobee.io/',\n  },\n  stax: {\n    symbol: 'STAX',\n    address: {\n      56: '0x0da6ed8b13214ff28e9ca979dd37439e8a88f6c4',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'http://stablexswap.com/',\n  },\n  nar: {\n    symbol: 'NAR',\n    address: {\n      56: '0xa1303e6199b319a891b79685f0537d289af1fc83',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://narwhalswap.org/',\n  },\n  nya: {\n    symbol: 'NYA',\n    address: {\n      56: '0xbfa0841f7a90c4ce6643f651756ee340991f99d5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://nyanswop.org/',\n  },\n  ctk: {\n    symbol: 'CTK',\n    address: {\n      56: '0xa8c2b8eec3d368c0253ad3dae65a5f2bbb89c929',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.certik.foundation/',\n  },\n  inj: {\n    symbol: 'INJ',\n    address: {\n      56: '0xa2b726b1145a4773f68593cf171187d8ebe4d495',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://injectiveprotocol.com/',\n  },\n  sxp: {\n    symbol: 'SXP',\n    address: {\n      56: '0x47bead2563dcbf3bf2c9407fea4dc236faba485a',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swipe.io/',\n  },\n  alpha: {\n    symbol: 'ALPHA',\n    address: {\n      56: '0xa1faa113cbe53436df28ff0aee54275c13b40975',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://alphafinance.io/',\n  },\n  xvs: {\n    symbol: 'XVS',\n    address: {\n      56: '0xcf6bb5389c92bdda8a3747ddb454cb7a64626c63',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  sushi: {\n    symbol: 'SUSHI',\n    address: {\n      56: '0x947950bcc74888a40ffa2593c5798f11fc9124c4',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://sushi.com/',\n  },\n  comp: {\n    symbol: 'COMP',\n    address: {\n      56: '0x52ce071bd9b1c4b00a0b92d298c512478cad67e8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://compound.finance/',\n  },\n  syrup: {\n    symbol: 'SYRUP',\n    address: {\n      56: '0x009cF7bC57584b7998236eff51b98A168DceA9B0',\n      97: '0xfE1e507CeB712BDe086f3579d2c03248b2dB77f9',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  bifi: {\n    symbol: 'BIFI',\n    address: {\n      56: '0xca3f508b8e4dd382ee878a314789373d80a5190a',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://beefy.finance/',\n  },\n  dusk: {\n    symbol: 'DUSK',\n    address: {\n      56: '0xb2bd0749dbe21f623d9baba856d3b0f0e1bfec9c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dusk.network/',\n  },\n  busd: {\n    symbol: 'BUSD',\n    address: {\n      56: '0xe9e7cea3dedca5984780bafc599bd69add087d56',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.paxos.com/busd/',\n  },\n  eth: {\n    symbol: 'ETH',\n    address: {\n      56: '0x2170ed0880ac9a755fd29b2688956bd959f933f8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ethereum.org/en/',\n  },\n  beth: {\n    symbol: 'BETH',\n    address: {\n      56: '0x250632378e573c6be1ac2f97fcdf00515d0aa91b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ethereum.org/en/eth2/beacon-chain/',\n  },\n  mamzn: {\n    symbol: 'mAMZN',\n    address: {\n      56: '0x3947B992DC0147D2D89dF0392213781b04B25075',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mgoogl: {\n    symbol: 'mGOOGL',\n    address: {\n      56: '0x62D71B23bF15218C7d2D7E48DBbD9e9c650B173f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mnflx: {\n    symbol: 'mNFLX',\n    address: {\n      56: '0xa04F060077D90Fe2647B61e4dA4aD1F97d6649dc',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mtsla: {\n    symbol: 'mTSLA',\n    address: {\n      56: '0xF215A127A196e3988C09d052e16BcFD365Cd7AA3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  ltc: {\n    symbol: 'LTC',\n    address: {\n      56: '0x4338665cbb7b2485a8855a139b75d5e34ab0db94',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://litecoin.org/',\n  },\n  usdc: {\n    symbol: 'USDC',\n    address: {\n      56: '0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.centre.io/usdc',\n  },\n  dai: {\n    symbol: 'DAI',\n    address: {\n      56: '0x1af3f329e8be154074d8769d1ffa4ee058b1dbc3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'http://www.makerdao.com/',\n  },\n  ada: {\n    symbol: 'ADA',\n    address: {\n      56: '0x3ee2200efb3400fabb9aacf31297cbdd1d435d47',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://www.cardano.org/',\n  },\n  band: {\n    symbol: 'BAND',\n    address: {\n      56: '0xad6caeb32cd2c308980a548bd0bc5aa4306c6c18',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bandprotocol.com/',\n  },\n  dot: {\n    symbol: 'DOT',\n    address: {\n      56: '0x7083609fce4d1d8dc0c979aab8c869ea2c873402',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://polkadot.network/',\n  },\n  eos: {\n    symbol: 'EOS',\n    address: {\n      56: '0x56b6fb708fc5732dec1afc8d8556423a2edccbd6',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://eos.io/',\n  },\n  link: {\n    symbol: 'LINK',\n    address: {\n      56: '0xf8a0bf9cf54bb92f17374d9e9a321e6a111a51bd',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://chain.link/',\n  },\n  usdt: {\n    symbol: 'USDT',\n    address: {\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n      56: '0x55d398326f99059ff775485246999027b3197955',\n    },\n    decimals: 18,\n    projectLink: 'https://tether.to/',\n  },\n  btcb: {\n    symbol: 'BTCB',\n    address: {\n      56: '0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bitcoin.org/',\n  },\n  xrp: {\n    symbol: 'XRP',\n    address: {\n      56: '0x1d2f0da169ceb9fc7b3144628db156f3f6c60dbe',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://ripple.com/xrp/',\n  },\n  atom: {\n    symbol: 'ATOM',\n    address: {\n      56: '0x0eb3a705fc54725037cc9e008bdede697f62f335',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://cosmos.network/',\n  },\n  yfii: {\n    symbol: 'YFII',\n    address: {\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n      56: '0x7f70642d88cf1c4a3a7abb072b53b929b653eda5',\n    },\n    decimals: 18,\n    projectLink: 'https://dfi.money/#/',\n  },\n  xtz: {\n    symbol: 'XTZ',\n    address: {\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n      56: '0x16939ef78684453bfdfb47825f8a5f714f12623a',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tezos.com/',\n  },\n  bch: {\n    symbol: 'BCH',\n    address: {\n      56: '0x8ff795a6f4d97e7887c79bea79aba5cc76444adf',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'http://bch.info/',\n  },\n  yfi: {\n    symbol: 'YFI',\n    address: {\n      56: '0x88f1a5ae2a3bf98aeaf342d26b30a79438c9142e',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://yearn.finance/',\n  },\n  uni: {\n    symbol: 'UNI',\n    address: {\n      56: '0xbf5140a22578168fd562dccf235e5d43a02ce9b1',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://uniswap.org/',\n  },\n  fil: {\n    symbol: 'FIL',\n    address: {\n      56: '0x0d8ce2a99bb6e3b7db580ed848240e4a0f9ae153',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://filecoin.io/',\n  },\n  bake: {\n    symbol: 'BAKE',\n    address: {\n      56: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n      97: '0x86812472c8DB520315380Bac447F1626CD971e8d',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bakeryswap.org/',\n  },\n  burger: {\n    symbol: 'BURGER',\n    address: {\n      56: '0xae9269f27437f0fcbc232d39ec814844a51d6b8f',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://burgerswap.org/',\n  },\n  bdigg: {\n    symbol: 'bDIGG',\n    address: {\n      56: '0x5986d5c77c65e5801a5caa4fae80089f870a71da',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://badger.finance/',\n  },\n  bbadger: {\n    symbol: 'bBadger',\n    address: {\n      56: '0x1f7216fdb338247512ec99715587bb97bbf96eae',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://badger.finance/',\n  },\n  trade: {\n    symbol: 'TRADE',\n    address: {\n      56: '0x7af173f350d916358af3e218bdf2178494beb748',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unitrade.app/',\n  },\n  pnt: {\n    symbol: 'PNT',\n    address: {\n      56: '0x7a1da9f49224ef98389b071b8a3294d1cc5e3e6a',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ptokens.io/',\n  },\n  mir: {\n    symbol: 'MIR',\n    address: {\n      56: '0x5b6dcf557e2abe2323c48445e8cc948910d8c2c9',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  pbtc: {\n    symbol: 'pBTC',\n    address: {\n      56: '0xed28a457a5a76596ac48d87c0f577020f6ea1c4c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ptokens.io/',\n  },\n  lto: {\n    symbol: 'LTO',\n    address: {\n      56: '0x857b222fc79e1cbbf8ca5f78cb133d1b7cf34bbd',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ltonetwork.com/',\n  },\n  pcws: {\n    symbol: 'pCWS',\n    address: {\n      56: '0xbcf39f0edda668c58371e519af37ca705f2bfcbd',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://game.seascape.network/',\n  },\n  zil: {\n    symbol: 'ZIL',\n    address: {\n      56: '0xb86abcb37c3a4b64f74f59301aff131a1becc787',\n      97: '',\n    },\n    decimals: 12,\n    projectLink: 'https://www.zilliqa.com/',\n  },\n  lien: {\n    symbol: 'LIEN',\n    address: {\n      56: '0x5d684adaf3fcfe9cfb5cede3abf02f0cdd1012e3',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://lien.finance/',\n  },\n  swth: {\n    symbol: 'SWTH',\n    address: {\n      56: '0x250b211EE44459dAd5Cd3bCa803dD6a7EcB5d46C',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://switcheo.network/',\n  },\n  dft: {\n    symbol: 'DFT',\n    address: {\n      56: '0x42712dF5009c20fee340B245b510c0395896cF6e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.dfuture.com/home',\n  },\n  gum: {\n    symbol: 'GUM',\n    address: {\n      56: '0xc53708664b99DF348dd27C3Ac0759d2DA9c40462',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://gourmetgalaxy.io/',\n  },\n  dego: {\n    symbol: 'DEGO',\n    address: {\n      56: '0x3fda9383a84c05ec8f7630fe10adf1fac13241cc',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bsc.dego.finance/home',\n  },\n  nrv: {\n    symbol: 'NRV',\n    address: {\n      56: '0x42f6f551ae042cbe50c739158b4f0cac0edb9096',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://nerve.fi/',\n  },\n  easy: {\n    symbol: 'EASY',\n    address: {\n      56: '0x7c17c8bed8d14bacce824d020f994f4880d6ab3b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://easyfi.network/',\n  },\n  oddz: {\n    symbol: 'ODDZ',\n    address: {\n      56: '0xcd40f2670cf58720b694968698a5514e924f742d',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://oddz.fi/',\n  },\n  hoo: {\n    symbol: 'HOO',\n    address: {\n      56: '0xe1d1f66215998786110ba0102ef558b22224c016',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://hoo.com/',\n  },\n  apys: {\n    symbol: 'APYS',\n    address: {\n      56: '0x37dfACfaeDA801437Ff648A1559d73f4C40aAcb7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://apyswap.com/',\n  },\n  bondly: {\n    symbol: 'BONDLY',\n    address: {\n      56: '0x96058f8c3e16576d9bd68766f3836d9a33158f89',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bondly.finance/',\n  },\n  tko: {\n    symbol: 'TKO',\n    address: {\n      56: '0x9f589e3eabe42ebc94a44727b3f3531c0c877809',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tokocrypto.com/',\n  },\n  itam: {\n    symbol: 'ITAM',\n    address: {\n      56: '0x04c747b40be4d535fc83d09939fb0f626f32800b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://itam.network/',\n  },\n  arpa: {\n    symbol: 'ARPA',\n    address: {\n      56: '0x6f769e65c14ebd1f68817f5f1dcdb61cfa2d6f7e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://arpachain.io/',\n  },\n}\n\nexport default tokens\n","import { useEffect } from 'react'\nimport { connectorLocalStorageKey, ConnectorNames } from '@luckyswap/uikit'\nimport useAuth from 'hooks/useAuth'\n\nconst useEagerConnect = () => {\n  const { login } = useAuth()\n\n  useEffect(() => {\n    const connectorId = window.localStorage.getItem(connectorLocalStorageKey) as ConnectorNames\n\n    // Disable eager connect for BSC Wallet. Currently the BSC Wallet extension does not inject BinanceChain\n    // into the Window object in time causing it to throw an error\n    // TODO: Figure out an elegant way to listen for when the BinanceChain object is ready\n    if (connectorId && connectorId !== ConnectorNames.BSC) {\n      login(connectorId)\n    }\n  }, [login])\n}\n\nexport default useEagerConnect\n","import { createGlobalStyle } from 'styled-components'\n// eslint-disable-next-line import/no-unresolved\nimport { PancakeTheme } from '@luckyswap/uikit/dist/theme'\n\ndeclare module 'styled-components' {\n  /* eslint-disable @typescript-eslint/no-empty-interface */\n  export interface DefaultTheme extends PancakeTheme {}\n}\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    font-family: 'Kanit', sans-serif;\n  }\n  body {\n    background-color: ${({ theme }) => theme.colors.background};\n\n    img {\n      height: auto;\n      max-width: 100%;\n    }\n  }\n`\n\nexport default GlobalStyle\n","export const EN = { code: 'en', language: 'English' }\nexport const AR = { code: 'ar', language: 'العربية' }\nexport const BN = { code: 'bn', language: 'বাংলা' }\nexport const ZHCN = { code: 'zh-CN', language: '简体中文' }\nexport const ZHTW = { code: 'zh-TW', language: '繁體中文' }\nexport const NL = { code: 'nl', language: 'Nederlands' }\nexport const FIL = { code: 'fil', language: 'Filipino' }\nexport const FI = { code: 'fi', language: 'Suomalainen' }\nexport const FR = { code: 'fr', language: 'Français' }\nexport const DE = { code: 'de', language: 'Deutsch' }\nexport const EL = { code: 'el', language: 'Ελληνικά' }\nexport const HI = { code: 'hi', language: 'हिंदी' }\nexport const HU = { code: 'hu', language: 'Magyar' }\nexport const ID = { code: 'id', language: 'Bahasa Indonesia' }\nexport const IT = { code: 'it', language: 'Italiano' }\nexport const JA = { code: 'ja', language: '日本語' }\nexport const KO = { code: 'ko', language: '한국어' }\nexport const PL = { code: 'pl', language: 'Polski' }\nexport const PTPT = { code: 'pt-PT', language: 'Português (Portugal)' }\nexport const PTBR = { code: 'pt-BR', language: 'Português (Brazil)' }\nexport const RO = { code: 'ro', language: 'Română' }\nexport const RU = { code: 'ru', language: 'Русский' }\nexport const ESES = { code: 'es-ES', language: 'Español' }\nexport const SVSE = { code: 'sv-SE', language: 'Svenska' }\nexport const TA = { code: 'ta', language: 'தமிழ்' }\nexport const TR = { code: 'tr', language: 'Türkçe' }\nexport const UK = { code: 'uk', language: 'Українська' }\nexport const VI = { code: 'vi', language: 'Tiếng Việt' }\n\nexport const allLanguages = [\n  EN,\n  AR,\n  BN,\n  ZHCN,\n  ZHTW,\n  NL,\n  FIL,\n  FI,\n  DE,\n  FR,\n  EL,\n  HI,\n  HU,\n  ID,\n  IT,\n  JA,\n  KO,\n  PL,\n  PTPT,\n  PTBR,\n  RO,\n  RU,\n  ESES,\n  SVSE,\n  TA,\n  TR,\n  UK,\n  VI,\n]\n","import React, { useState, useEffect } from 'react'\nimport { StringTranslations } from '@crowdin/crowdin-api-client'\nimport { TranslationsContext } from 'contexts/Localisation/translationsContext'\nimport { allLanguages, EN } from 'config/localisation/languageCodes'\n\nconst CACHE_KEY = 'pancakeSwapLanguage'\n\nexport interface LangType {\n  code: string\n  language: string\n}\n\nexport interface LanguageState {\n  selectedLanguage: LangType\n  setSelectedLanguage: (langObject: LangType) => void\n  translatedLanguage: LangType\n  setTranslatedLanguage: React.Dispatch<React.SetStateAction<LangType>>\n}\n\nconst LanguageContext = React.createContext({\n  selectedLanguage: EN,\n  setSelectedLanguage: () => undefined,\n  translatedLanguage: EN,\n  setTranslatedLanguage: () => undefined,\n} as LanguageState)\n\nconst fileId = 8\nconst projectId = parseInt(process.env.REACT_APP_CROWDIN_PROJECTID)\nconst stringTranslationsApi = new StringTranslations({\n  token: process.env.REACT_APP_CROWDIN_APIKEY,\n})\n\nconst fetchTranslationsForSelectedLanguage = (selectedLanguage) => {\n  return stringTranslationsApi.listLanguageTranslations(projectId, selectedLanguage.code, undefined, fileId, 400)\n}\n\nconst LanguageContextProvider = ({ children }) => {\n  const [selectedLanguage, setSelectedLanguage] = useState<any>(null)\n  const [translatedLanguage, setTranslatedLanguage] = useState<any>(EN)\n  const [translations, setTranslations] = useState<Array<any>>([])\n\n  const getStoredLang = (storedLangCode: string) => {\n    return allLanguages.filter((language) => {\n      return language.code === storedLangCode\n    })[0]\n  }\n\n  useEffect(() => {\n    const storedLangCode = localStorage.getItem(CACHE_KEY)\n    if (storedLangCode) {\n      const storedLang = getStoredLang(storedLangCode)\n      setSelectedLanguage(storedLang)\n    } else {\n      setSelectedLanguage(EN)\n    }\n  }, [])\n\n  useEffect(() => {\n    if (selectedLanguage) {\n      fetchTranslationsForSelectedLanguage(selectedLanguage)\n        .then((translationApiResponse) => {\n          if (translationApiResponse.data.length < 1) {\n            setTranslations([])\n          } else {\n            setTranslations(translationApiResponse.data)\n          }\n        })\n        .then(() => setTranslatedLanguage(selectedLanguage))\n        .catch((e) => {\n          setTranslations([])\n          console.error('Error while loading translations', e)\n        })\n    }\n  }, [selectedLanguage])\n\n  const handleLanguageSelect = (langObject: LangType) => {\n    setSelectedLanguage(langObject)\n    localStorage.setItem(CACHE_KEY, langObject.code)\n  }\n\n  return (\n    <LanguageContext.Provider\n      value={{ selectedLanguage, setSelectedLanguage: handleLanguageSelect, translatedLanguage, setTranslatedLanguage }}\n    >\n      <TranslationsContext.Provider value={{ translations, setTranslations }}>{children}</TranslationsContext.Provider>\n    </LanguageContext.Provider>\n  )\n}\n\nexport { LanguageContext, LanguageContextProvider }\n","import { MenuEntry, menuStatus } from '@luckyswap/uikit'\n\nconst config: MenuEntry[] = [\n  {\n    label: 'Home',\n    icon: 'HomeIcon',\n    href: '/',\n    calloutClass: 'style-color',\n  },\n  {\n    label: 'Trade',\n    icon: 'TradeIcon',\n    calloutClass: 'style-color',\n    items: [\n      {\n        label: 'Exchange',\n        href: '/swap',\n        calloutClass: 'style-color',\n      },\n      {\n        label: 'Liquidity',\n        href: '/pool',\n        calloutClass: 'style-color',\n      },\n    ],\n  },\n  {\n    label: 'Farms',\n    icon: 'FarmIcon',\n    href: '/farms',\n    calloutClass: 'style-color',\n  },\n  {\n    label: 'Pools',\n    icon: 'PoolIcon',\n    href: '/pools',\n    calloutClass: 'style-color',\n  },\n  {\n    label: 'Info',\n    icon: 'InfoIcon',\n    calloutClass: 'style-color',\n    items: [\n      {\n        label: 'Overview',\n        href: '#',\n        calloutClass: 'style-color',\n      },\n      {\n        label: 'Tokens',\n        href: '#',\n        calloutClass: 'style-color',\n      },\n      {\n        label: 'Pairs',\n        href: '#',\n        calloutClass: 'style-color',\n      },\n      {\n        label: 'Accounts',\n        href: '#',\n        calloutClass: 'style-color',\n      },\n    ],\n  },\n  {\n    label: 'IFO',\n    icon: 'IfoIcon',\n    href: '#',\n    calloutClass: 'style-color',\n  },\n]\n\nexport default config\n","import React, { useContext } from 'react'\nimport { Menu as UikitMenu } from '@luckyswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { allLanguages } from 'config/localisation/languageCodes'\nimport { LanguageContext } from 'contexts/Localisation/languageContext'\nimport useTheme from 'hooks/useTheme'\nimport useAuth from 'hooks/useAuth'\nimport { usePriceCakeBusd, useProfile } from 'state/hooks'\nimport config from './config'\n\nconst Menu = (props) => {\n  const { account } = useWeb3React()\n  const { login, logout } = useAuth()\n  const { selectedLanguage, setSelectedLanguage } = useContext(LanguageContext)\n  const { isDark, toggleTheme } = useTheme()\n  const cakePriceUsd = usePriceCakeBusd()\n  const { profile } = useProfile()\n\n  return (\n    <UikitMenu\n      account={account}\n      login={login}\n      logout={logout}\n      isDark={isDark}\n      toggleTheme={toggleTheme}\n      currentLang={selectedLanguage && selectedLanguage.code}\n      langs={allLanguages}\n      setLang={setSelectedLanguage}\n      cakePriceUsd={cakePriceUsd.toNumber()}\n      links={config}\n      profile={{\n        username: profile?.username,\n        image: profile?.nft ? `/images/nfts/${profile.nft?.images.sm}` : undefined,\n        profileLink: '/profile',\n        noProfileLink: '/profile',\n        showPip: !profile?.username,\n      }}\n      {...props}\n    />\n  )\n}\n\nexport default Menu\n","import React, { Suspense, SuspenseProps } from 'react'\n\ninterface State {\n  hasError: boolean\n}\n\nclass SuspenseWithChunkError extends React.Component<SuspenseProps, State> {\n  constructor(props) {\n    super(props)\n    this.state = { hasError: false }\n  }\n\n  static getDerivedStateFromError() {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true }\n  }\n\n  componentDidCatch(error) {\n    const isJsChunkLoadError = error.name === 'ChunkLoadError'\n    const isCssChunkLoadError = error.code === 'CSS_CHUNK_LOAD_FAILED'\n    const isChunkLoadError = isJsChunkLoadError || isCssChunkLoadError\n\n    // Save a flag on the window object indicating that we have already had a chunk error.\n    // This prevents infinite reloads\n    const isRecoveringFromChunkError = !!window.history.state?.isRecoveringFromChunkError\n\n    // If was a chunk load error, refresh the page\n    if (isChunkLoadError && !isRecoveringFromChunkError) {\n      const nextState = { ...window.history.state, isRecoveringFromChunkError: true }\n      window.history.replaceState(nextState, '')\n      window.location.reload()\n      return\n    }\n\n    throw error\n  }\n\n  render() {\n    const { hasError } = this.state\n    const { fallback } = this.props\n\n    if (hasError) {\n      return fallback\n    }\n\n    return <Suspense {...this.props} />\n  }\n}\n\nexport default SuspenseWithChunkError\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { ToastContainer, Toast } from '@luckyswap/uikit'\nimport { useToast } from 'state/hooks'\nimport { State } from 'state/types'\n\nconst ToastListener = () => {\n  const toasts: Toast[] = useSelector((state: State) => state.toasts.data)\n  const { remove } = useToast()\n\n  const handleRemove = (id: string) => remove(id)\n\n  return <ToastContainer toasts={toasts} onRemove={handleRemove} />\n}\n\nexport default ToastListener\n","import React, { useState, useCallback } from 'react'\nimport { FallingBunnies, FallingBunniesProps, useKonamiCheatCode } from '@luckyswap/uikit'\n\nconst EasterEgg: React.FC<FallingBunniesProps> = (props) => {\n  const [show, setShow] = useState(false)\n  const startFalling = useCallback(() => setShow(true), [setShow])\n  useKonamiCheatCode(startFalling)\n\n  if (show) {\n    return (\n      <div onAnimationEnd={() => setShow(false)}>\n        <FallingBunnies {...props} />\n      </div>\n    )\n  }\n  return null\n}\n\nexport default React.memo(EasterEgg)\n","import React, { useState }  from 'react'\nimport styled from 'styled-components'\nimport { Button, Row, Col, TabContent, TabPane, Nav, NavItem, NavLink, Card, CardTitle, CardText } from 'reactstrap';\nimport classnames from 'classnames';\n// import { Row, Col } from 'antd'\n\n\nfunction PoolCards() {\n  const [activeTab, setActiveTab] = useState('1');\n\n  const toggle = tab => {\n    if(activeTab !== tab) setActiveTab(tab);\n  }\n\n  return (\n    <>\n      <div>\n        <Nav tabs>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: activeTab === '1' })}\n              onClick={() => { toggle('1'); }}\n            >\n              Hot\n            </NavLink>\n          </NavItem>\n\n          <NavItem>\n            <NavLink\n              className={classnames({ active: activeTab === '2' })}\n              onClick={() => { toggle('2'); }}\n            >\n              Earn\n            </NavLink>\n          </NavItem>\n\n          <NavItem>\n            <NavLink\n              className={classnames({ active: activeTab === '3' })}\n              onClick={() => { toggle('3'); }}\n            >\n              Staking\n            </NavLink>\n          </NavItem>\n\n          <NavItem>\n            <NavLink\n              className={classnames({ active: activeTab === '4' })}\n              onClick={() => { toggle('4'); }}\n            >\n              Others\n            </NavLink>\n          </NavItem>\n\n          <NavItem>\n            <NavLink\n              className={classnames({ active: activeTab === '5' })}\n              onClick={() => { toggle('5'); }}\n            >\n              Earn NFT\n            </NavLink>\n          </NavItem>\n\n          <NavItem>\n            <NavLink\n              className={classnames({ active: activeTab === '6' })}\n              onClick={() => { toggle('6'); }}\n            >\n              NFT Staking\n            </NavLink>\n          </NavItem>\n\n          <NavItem>\n            <NavLink\n              className={classnames({ active: activeTab === '7' })}\n              onClick={() => { toggle('7'); }}\n            >\n              Ended\n            </NavLink>\n          </NavItem>\n        </Nav>\n        <TabContent activeTab={activeTab}>\n          <TabPane tabId=\"1\">    \n          <PoolCard>\n            <Row xs=\"1\" sm=\"2\" md=\"4\">\n              <Col>\n                <BoxPool>\n                  <HeadLine>\n                    <span>Premium</span>\n                  </HeadLine>\n                  <figure>\n                    <img src=\"../images/lucky-logo.png\" alt=\"\"/>\n                  </figure>\n\n                  <CardContent>\n                    <Title>LuckySwap</Title>\n\n                    <FlexSpace>\n                      <ContentLeft>Deposit:</ContentLeft>\n                      <ContentRight>LuckySwap</ContentRight>\n                    </FlexSpace>\n\n                    <FlexSpace>\n                      <ContentLeft>Earn:</ContentLeft>\n                      <ContentRight>TLM</ContentRight>\n                    </FlexSpace>\n\n                    <FlexSpace>\n                      <ContentLeft>ROI:</ContentLeft>\n                      <ContentRight>2.38%</ContentRight>\n                    </FlexSpace>\n                  </CardContent>\n\n                  <Boxbtn>\n                    <Button color=\"primary\">Select</Button>\n                  </Boxbtn>\n                </BoxPool>\n              </Col>\n\n              <Col>\n                <BoxPool>\n                  <HeadLine>\n                    <span>Premium</span>\n                  </HeadLine>\n\n                  <figure>\n                    <img src=\"../images/lucky-logo.png\" alt=\"\"/>\n                  </figure>\n\n                  <CardContent>\n                    <Title>LuckySwap</Title>\n\n                    <FlexSpace>\n                      <ContentLeft>Deposit:</ContentLeft>\n                      <ContentRight>LuckySwap</ContentRight>\n                    </FlexSpace>\n\n                    <FlexSpace>\n                      <ContentLeft>Earn:</ContentLeft>\n                      <ContentRight>TLM</ContentRight>\n                    </FlexSpace>\n\n                    <FlexSpace>\n                      <ContentLeft>ROI:</ContentLeft>\n                      <ContentRight>2.38%</ContentRight>\n                    </FlexSpace>\n                  </CardContent>\n\n                  <Boxbtn>\n                    <Button color=\"primary\">Select</Button>\n                  </Boxbtn>\n                </BoxPool>\n              </Col>\n\n              <Col>\n                <BoxPool>\n                  <HeadLine>\n                    <span>Premium</span>\n                  </HeadLine>\n                  <figure>\n                    <img src=\"../images/lucky-logo.png\" alt=\"\"/>\n                  </figure>\n\n                  <CardContent>\n                    <Title>LuckySwap</Title>\n\n                    <FlexSpace>\n                      <ContentLeft>Deposit:</ContentLeft>\n                      <ContentRight>LuckySwap</ContentRight>\n                    </FlexSpace>\n\n                    <FlexSpace>\n                      <ContentLeft>Earn:</ContentLeft>\n                      <ContentRight>TLM</ContentRight>\n                    </FlexSpace>\n\n                    <FlexSpace>\n                      <ContentLeft>ROI:</ContentLeft>\n                      <ContentRight>2.38%</ContentRight>\n                    </FlexSpace>\n                  </CardContent>\n\n                  <Boxbtn>\n                    <Button color=\"primary\">Select</Button>\n                  </Boxbtn>\n                </BoxPool>\n              </Col>\n\n              <Col>\n                <BoxPool>\n                  <HeadLine>\n                    <span>Premium</span>\n                  </HeadLine>\n                  <figure>\n                    <img src=\"../images/lucky-logo.png\" alt=\"\"/>\n                  </figure>\n\n                  <CardContent>\n                    <Title>LuckySwap</Title>\n\n                    <FlexSpace>\n                      <ContentLeft>Deposit:</ContentLeft>\n                      <ContentRight>LuckySwap</ContentRight>\n                    </FlexSpace>\n\n                    <FlexSpace>\n                      <ContentLeft>Earn:</ContentLeft>\n                      <ContentRight>TLM</ContentRight>\n                    </FlexSpace>\n\n                    <FlexSpace>\n                      <ContentLeft>ROI:</ContentLeft>\n                      <ContentRight>2.38%</ContentRight>\n                    </FlexSpace>\n                  </CardContent>\n\n                  <Boxbtn>\n                    <Button color=\"primary\">Select</Button>\n                  </Boxbtn>\n                </BoxPool>\n              </Col>\n\n              <Col>\n                <BoxPool>\n                  <HeadLine>\n                    <span>Premium</span>\n                  </HeadLine>\n                  <figure>\n                    <img src=\"../images/lucky-logo.png\" alt=\"\"/>\n                  </figure>\n\n                  <CardContent>\n                    <Title>LuckySwap</Title>\n\n                    <FlexSpace>\n                      <ContentLeft>Deposit:</ContentLeft>\n                      <ContentRight>LuckySwap</ContentRight>\n                    </FlexSpace>\n\n                    <FlexSpace>\n                      <ContentLeft>Earn:</ContentLeft>\n                      <ContentRight>TLM</ContentRight>\n                    </FlexSpace>\n\n                    <FlexSpace>\n                      <ContentLeft>ROI:</ContentLeft>\n                      <ContentRight>2.38%</ContentRight>\n                    </FlexSpace>\n                  </CardContent>\n\n                  <Boxbtn>\n                    <Button color=\"primary\">Select</Button>\n                  </Boxbtn>\n                </BoxPool>\n              </Col>\n\n              <Col>\n                <BoxPool>\n                  <HeadLine>\n                    <span>Premium</span>\n                  </HeadLine>\n                  <figure>\n                    <img src=\"../images/lucky-logo.png\" alt=\"\"/>\n                  </figure>\n\n                  <CardContent>\n                    <Title>LuckySwap</Title>\n\n                    <FlexSpace>\n                      <ContentLeft>Deposit:</ContentLeft>\n                      <ContentRight>LuckySwap</ContentRight>\n                    </FlexSpace>\n\n                    <FlexSpace>\n                      <ContentLeft>Earn:</ContentLeft>\n                      <ContentRight>TLM</ContentRight>\n                    </FlexSpace>\n\n                    <FlexSpace>\n                      <ContentLeft>ROI:</ContentLeft>\n                      <ContentRight>2.38%</ContentRight>\n                    </FlexSpace>\n                  </CardContent>\n\n                  <Boxbtn>\n                    <Button color=\"primary\">Select</Button>\n                  </Boxbtn>\n                </BoxPool>\n              </Col>\n\n              <Col>\n                <BoxPool>\n                  <HeadLine>\n                    <span>Premium</span>\n                  </HeadLine>\n                  <figure>\n                    <img src=\"../images/lucky-logo.png\" alt=\"\"/>\n                  </figure>\n\n                  <CardContent>\n                    <Title>LuckySwap</Title>\n\n                    <FlexSpace>\n                      <ContentLeft>Deposit:</ContentLeft>\n                      <ContentRight>LuckySwap</ContentRight>\n                    </FlexSpace>\n\n                    <FlexSpace>\n                      <ContentLeft>Earn:</ContentLeft>\n                      <ContentRight>TLM</ContentRight>\n                    </FlexSpace>\n\n                    <FlexSpace>\n                      <ContentLeft>ROI:</ContentLeft>\n                      <ContentRight>2.38%</ContentRight>\n                    </FlexSpace>\n                  </CardContent>\n\n                  <Boxbtn>\n                    <Button color=\"primary\">Select</Button>\n                  </Boxbtn>\n                </BoxPool>\n              </Col>\n\n              <Col>\n                <BoxPool>\n                  <HeadLine>\n                    <span>Premium</span>\n                  </HeadLine>\n                  <figure>\n                    <img src=\"../images/lucky-logo.png\" alt=\"\"/>\n                  </figure>\n\n                  <CardContent>\n                    <Title>LuckySwap</Title>\n\n                    <FlexSpace>\n                      <ContentLeft>Deposit:</ContentLeft>\n                      <ContentRight>LuckySwap</ContentRight>\n                    </FlexSpace>\n\n                    <FlexSpace>\n                      <ContentLeft>Earn:</ContentLeft>\n                      <ContentRight>TLM</ContentRight>\n                    </FlexSpace>\n\n                    <FlexSpace>\n                      <ContentLeft>ROI:</ContentLeft>\n                      <ContentRight>2.38%</ContentRight>\n                    </FlexSpace>\n                  </CardContent>\n\n                  <Boxbtn>\n                    <Button color=\"primary\">Select</Button>\n                  </Boxbtn>\n                </BoxPool>\n              </Col>\n\n              <Col>\n                <BoxPool>\n                  <HeadLine>\n                    <span>Premium</span>\n                  </HeadLine>\n                  <figure>\n                    <img src=\"../images/lucky-logo.png\" alt=\"\"/>\n                  </figure>\n\n                  <CardContent>\n                    <Title>LuckySwap</Title>\n\n                    <FlexSpace>\n                      <ContentLeft>Deposit:</ContentLeft>\n                      <ContentRight>LuckySwap</ContentRight>\n                    </FlexSpace>\n\n                    <FlexSpace>\n                      <ContentLeft>Earn:</ContentLeft>\n                      <ContentRight>TLM</ContentRight>\n                    </FlexSpace>\n\n                    <FlexSpace>\n                      <ContentLeft>ROI:</ContentLeft>\n                      <ContentRight>2.38%</ContentRight>\n                    </FlexSpace>\n                  </CardContent>\n\n                  <Boxbtn>\n                    <Button color=\"primary\">Select</Button>\n                  </Boxbtn>\n                </BoxPool>\n              </Col>\n\n              <Col>\n                <BoxPool>\n                  <HeadLine>\n                    <span>Premium</span>\n                  </HeadLine>\n                  <figure>\n                    <img src=\"../images/lucky-logo.png\" alt=\"\"/>\n                  </figure>\n\n                  <CardContent>\n                    <Title>LuckySwap</Title>\n\n                    <FlexSpace>\n                      <ContentLeft>Deposit:</ContentLeft>\n                      <ContentRight>LuckySwap</ContentRight>\n                    </FlexSpace>\n\n                    <FlexSpace>\n                      <ContentLeft>Earn:</ContentLeft>\n                      <ContentRight>TLM</ContentRight>\n                    </FlexSpace>\n\n                    <FlexSpace>\n                      <ContentLeft>ROI:</ContentLeft>\n                      <ContentRight>2.38%</ContentRight>\n                    </FlexSpace>\n                  </CardContent>\n\n                  <Boxbtn>\n                    <Button color=\"primary\">Select</Button>\n                  </Boxbtn>\n                </BoxPool>\n              </Col>\n            </Row>\n          </PoolCard>\n          </TabPane>\n\n          <TabPane tabId=\"2\">\n            <PoolCard>\n              <Row xs=\"1\" sm=\"2\" md=\"4\">\n                <Col>\n                  <BoxPool>\n                    <HeadLine>\n                      <span>Premium</span>\n                    </HeadLine>\n                    <figure>\n                      <img src=\"../images/lucky-logo.png\" alt=\"\"/>\n                    </figure>\n\n                    <CardContent>\n                      <Title>LuckySwap</Title>\n\n                      <FlexSpace>\n                        <ContentLeft>Deposit:</ContentLeft>\n                        <ContentRight>LuckySwap</ContentRight>\n                      </FlexSpace>\n\n                      <FlexSpace>\n                        <ContentLeft>Earn:</ContentLeft>\n                        <ContentRight>TLM</ContentRight>\n                      </FlexSpace>\n\n                      <FlexSpace>\n                        <ContentLeft>ROI:</ContentLeft>\n                        <ContentRight>2.38%</ContentRight>\n                      </FlexSpace>\n                    </CardContent>\n\n                    <Boxbtn>\n                      <Button color=\"primary\">Select</Button>\n                    </Boxbtn>\n                  </BoxPool>\n                </Col>\n\n                <Col>\n                  <BoxPool>\n                    <HeadLine>\n                      <span>Premium</span>\n                    </HeadLine>\n                    <figure>\n                      <img src=\"../images/lucky-logo.png\" alt=\"\"/>\n                    </figure>\n\n                    <CardContent>\n                      <Title>LuckySwap</Title>\n\n                      <FlexSpace>\n                        <ContentLeft>Deposit:</ContentLeft>\n                        <ContentRight>LuckySwap</ContentRight>\n                      </FlexSpace>\n\n                      <FlexSpace>\n                        <ContentLeft>Earn:</ContentLeft>\n                        <ContentRight>TLM</ContentRight>\n                      </FlexSpace>\n\n                      <FlexSpace>\n                        <ContentLeft>ROI:</ContentLeft>\n                        <ContentRight>2.38%</ContentRight>\n                      </FlexSpace>\n                    </CardContent>\n\n                    <Boxbtn>\n                      <Button color=\"primary\">Select</Button>\n                    </Boxbtn>\n                  </BoxPool>\n                </Col>\n\n                <Col>\n                  <BoxPool>\n                    <HeadLine>\n                      <span>Premium</span>\n                    </HeadLine>\n                    <figure>\n                      <img src=\"../images/lucky-logo.png\" alt=\"\"/>\n                    </figure>\n\n                    <CardContent>\n                      <Title>LuckySwap</Title>\n\n                      <FlexSpace>\n                        <ContentLeft>Deposit:</ContentLeft>\n                        <ContentRight>LuckySwap</ContentRight>\n                      </FlexSpace>\n\n                      <FlexSpace>\n                        <ContentLeft>Earn:</ContentLeft>\n                        <ContentRight>TLM</ContentRight>\n                      </FlexSpace>\n\n                      <FlexSpace>\n                        <ContentLeft>ROI:</ContentLeft>\n                        <ContentRight>2.38%</ContentRight>\n                      </FlexSpace>\n                    </CardContent>\n\n                    <Boxbtn>\n                      <Button color=\"primary\">Select</Button>\n                    </Boxbtn>\n                  </BoxPool>\n                </Col>\n\n                <Col>\n                  <BoxPool>\n                    <HeadLine>\n                      <span>Premium</span>\n                    </HeadLine>\n                    <figure>\n                      <img src=\"../images/lucky-logo.png\" alt=\"\"/>\n                    </figure>\n\n                    <CardContent>\n                      <Title>LuckySwap</Title>\n\n                      <FlexSpace>\n                        <ContentLeft>Deposit:</ContentLeft>\n                        <ContentRight>LuckySwap</ContentRight>\n                      </FlexSpace>\n\n                      <FlexSpace>\n                        <ContentLeft>Earn:</ContentLeft>\n                        <ContentRight>TLM</ContentRight>\n                      </FlexSpace>\n\n                      <FlexSpace>\n                        <ContentLeft>ROI:</ContentLeft>\n                        <ContentRight>2.38%</ContentRight>\n                      </FlexSpace>\n                    </CardContent>\n\n                    <Boxbtn>\n                      <Button color=\"primary\">Select</Button>\n                    </Boxbtn>\n                  </BoxPool>\n                </Col>\n\n                <Col>\n                  <BoxPool>\n                    <HeadLine>\n                      <span>Premium</span>\n                    </HeadLine>\n                    <figure>\n                      <img src=\"../images/lucky-logo.png\" alt=\"\"/>\n                    </figure>\n\n                    <CardContent>\n                      <Title>LuckySwap</Title>\n\n                      <FlexSpace>\n                        <ContentLeft>Deposit:</ContentLeft>\n                        <ContentRight>LuckySwap</ContentRight>\n                      </FlexSpace>\n\n                      <FlexSpace>\n                        <ContentLeft>Earn:</ContentLeft>\n                        <ContentRight>TLM</ContentRight>\n                      </FlexSpace>\n\n                      <FlexSpace>\n                        <ContentLeft>ROI:</ContentLeft>\n                        <ContentRight>2.38%</ContentRight>\n                      </FlexSpace>\n                    </CardContent>\n\n                    <Boxbtn>\n                      <Button color=\"primary\">Select</Button>\n                    </Boxbtn>\n                  </BoxPool>\n                </Col>\n\n                <Col>\n                  <BoxPool>\n                    <HeadLine>\n                      <span>Premium</span>\n                    </HeadLine>\n                    <figure>\n                      <img src=\"../images/lucky-logo.png\" alt=\"\"/>\n                    </figure>\n\n                    <CardContent>\n                      <Title>LuckySwap</Title>\n\n                      <FlexSpace>\n                        <ContentLeft>Deposit:</ContentLeft>\n                        <ContentRight>LuckySwap</ContentRight>\n                      </FlexSpace>\n\n                      <FlexSpace>\n                        <ContentLeft>Earn:</ContentLeft>\n                        <ContentRight>TLM</ContentRight>\n                      </FlexSpace>\n\n                      <FlexSpace>\n                        <ContentLeft>ROI:</ContentLeft>\n                        <ContentRight>2.38%</ContentRight>\n                      </FlexSpace>\n                    </CardContent>\n\n                    <Boxbtn>\n                      <Button color=\"primary\">Select</Button>\n                    </Boxbtn>\n                  </BoxPool>\n                </Col>\n              </Row>\n            </PoolCard>\n          </TabPane>\n        \n          <TabPane tabId=\"3\">\n            <PoolCard>\n              <Row xs=\"1\" sm=\"2\" md=\"4\">\n                <Col>\n                  <BoxPool>\n                    <HeadLine>\n                      <span>Premium</span>\n                    </HeadLine>\n                    <figure>\n                      <img src=\"../images/lucky-logo.png\" alt=\"\"/>\n                    </figure>\n\n                    <CardContent>\n                      <Title>LuckySwap</Title>\n\n                      <FlexSpace>\n                        <ContentLeft>Deposit:</ContentLeft>\n                        <ContentRight>LuckySwap</ContentRight>\n                      </FlexSpace>\n\n                      <FlexSpace>\n                        <ContentLeft>Earn:</ContentLeft>\n                        <ContentRight>TLM</ContentRight>\n                      </FlexSpace>\n\n                      <FlexSpace>\n                        <ContentLeft>ROI:</ContentLeft>\n                        <ContentRight>2.38%</ContentRight>\n                      </FlexSpace>\n                    </CardContent>\n\n                    <Boxbtn>\n                      <Button color=\"primary\">Select</Button>\n                    </Boxbtn>\n                  </BoxPool>\n                </Col>\n\n                <Col>\n                  <BoxPool>\n                    <HeadLine>\n                      <span>Premium</span>\n                    </HeadLine>\n                    <figure>\n                      <img src=\"../images/lucky-logo.png\" alt=\"\"/>\n                    </figure>\n\n                    <CardContent>\n                      <Title>LuckySwap</Title>\n\n                      <FlexSpace>\n                        <ContentLeft>Deposit:</ContentLeft>\n                        <ContentRight>LuckySwap</ContentRight>\n                      </FlexSpace>\n\n                      <FlexSpace>\n                        <ContentLeft>Earn:</ContentLeft>\n                        <ContentRight>TLM</ContentRight>\n                      </FlexSpace>\n\n                      <FlexSpace>\n                        <ContentLeft>ROI:</ContentLeft>\n                        <ContentRight>2.38%</ContentRight>\n                      </FlexSpace>\n                    </CardContent>\n\n                    <Boxbtn>\n                      <Button color=\"primary\">Select</Button>\n                    </Boxbtn>\n                  </BoxPool>\n                </Col>\n\n                <Col>\n                  <BoxPool>\n                    <HeadLine>\n                      <span>Premium</span>\n                    </HeadLine>\n                    <figure>\n                      <img src=\"../images/lucky-logo.png\" alt=\"\"/>\n                    </figure>\n\n                    <CardContent>\n                      <Title>LuckySwap</Title>\n\n                      <FlexSpace>\n                        <ContentLeft>Deposit:</ContentLeft>\n                        <ContentRight>LuckySwap</ContentRight>\n                      </FlexSpace>\n\n                      <FlexSpace>\n                        <ContentLeft>Earn:</ContentLeft>\n                        <ContentRight>TLM</ContentRight>\n                      </FlexSpace>\n\n                      <FlexSpace>\n                        <ContentLeft>ROI:</ContentLeft>\n                        <ContentRight>2.38%</ContentRight>\n                      </FlexSpace>\n                    </CardContent>\n\n                    <Boxbtn>\n                      <Button color=\"primary\">Select</Button>\n                    </Boxbtn>\n                  </BoxPool>\n                </Col>\n\n                <Col>\n                  <BoxPool>\n                    <HeadLine>\n                      <span>Premium</span>\n                    </HeadLine>\n                    <figure>\n                      <img src=\"../images/lucky-logo.png\" alt=\"\"/>\n                    </figure>\n\n                    <CardContent>\n                      <Title>LuckySwap</Title>\n\n                      <FlexSpace>\n                        <ContentLeft>Deposit:</ContentLeft>\n                        <ContentRight>LuckySwap</ContentRight>\n                      </FlexSpace>\n\n                      <FlexSpace>\n                        <ContentLeft>Earn:</ContentLeft>\n                        <ContentRight>TLM</ContentRight>\n                      </FlexSpace>\n\n                      <FlexSpace>\n                        <ContentLeft>ROI:</ContentLeft>\n                        <ContentRight>2.38%</ContentRight>\n                      </FlexSpace>\n                    </CardContent>\n\n                    <Boxbtn>\n                      <Button color=\"primary\">Select</Button>\n                    </Boxbtn>\n                  </BoxPool>\n                </Col>\n\n                <Col>\n                  <BoxPool>\n                    <HeadLine>\n                      <span>Premium</span>\n                    </HeadLine>\n                    <figure>\n                      <img src=\"../images/lucky-logo.png\" alt=\"\"/>\n                    </figure>\n\n                    <CardContent>\n                      <Title>LuckySwap</Title>\n\n                      <FlexSpace>\n                        <ContentLeft>Deposit:</ContentLeft>\n                        <ContentRight>LuckySwap</ContentRight>\n                      </FlexSpace>\n\n                      <FlexSpace>\n                        <ContentLeft>Earn:</ContentLeft>\n                        <ContentRight>TLM</ContentRight>\n                      </FlexSpace>\n\n                      <FlexSpace>\n                        <ContentLeft>ROI:</ContentLeft>\n                        <ContentRight>2.38%</ContentRight>\n                      </FlexSpace>\n                    </CardContent>\n\n                    <Boxbtn>\n                      <Button color=\"primary\">Select</Button>\n                    </Boxbtn>\n                  </BoxPool>\n                </Col>\n              </Row>\n            </PoolCard>\n          </TabPane>\n\n          <TabPane tabId=\"4\">\n            <PoolCard>\n              <Row xs=\"1\" sm=\"2\" md=\"4\">\n              <Col>\n                  <BoxPool>\n                    <HeadLine>\n                      <span>Premium</span>\n                    </HeadLine>\n                    <figure>\n                      <img src=\"../images/lucky-logo.png\" alt=\"\"/>\n                    </figure>\n\n                    <CardContent>\n                      <Title>LuckySwap</Title>\n\n                      <FlexSpace>\n                        <ContentLeft>Deposit:</ContentLeft>\n                        <ContentRight>LuckySwap</ContentRight>\n                      </FlexSpace>\n\n                      <FlexSpace>\n                        <ContentLeft>Earn:</ContentLeft>\n                        <ContentRight>TLM</ContentRight>\n                      </FlexSpace>\n\n                      <FlexSpace>\n                        <ContentLeft>ROI:</ContentLeft>\n                        <ContentRight>2.38%</ContentRight>\n                      </FlexSpace>\n                    </CardContent>\n\n                    <Boxbtn>\n                      <Button color=\"primary\">Select</Button>\n                    </Boxbtn>\n                  </BoxPool>\n                </Col>\n\n                <Col>\n                  <BoxPool>\n                    <HeadLine>\n                      <span>Premium</span>\n                    </HeadLine>\n                    <figure>\n                      <img src=\"../images/lucky-logo.png\" alt=\"\"/>\n                    </figure>\n\n                    <CardContent>\n                      <Title>LuckySwap</Title>\n\n                      <FlexSpace>\n                        <ContentLeft>Deposit:</ContentLeft>\n                        <ContentRight>LuckySwap</ContentRight>\n                      </FlexSpace>\n\n                      <FlexSpace>\n                        <ContentLeft>Earn:</ContentLeft>\n                        <ContentRight>TLM</ContentRight>\n                      </FlexSpace>\n\n                      <FlexSpace>\n                        <ContentLeft>ROI:</ContentLeft>\n                        <ContentRight>2.38%</ContentRight>\n                      </FlexSpace>\n                    </CardContent>\n\n                    <Boxbtn>\n                      <Button color=\"primary\">Select</Button>\n                    </Boxbtn>\n                  </BoxPool>\n                </Col>\n\n                <Col>\n                  <BoxPool>\n                    <HeadLine>\n                      <span>Premium</span>\n                    </HeadLine>\n                    <figure>\n                      <img src=\"../images/lucky-logo.png\" alt=\"\"/>\n                    </figure>\n\n                    <CardContent>\n                      <Title>LuckySwap</Title>\n\n                      <FlexSpace>\n                        <ContentLeft>Deposit:</ContentLeft>\n                        <ContentRight>LuckySwap</ContentRight>\n                      </FlexSpace>\n\n                      <FlexSpace>\n                        <ContentLeft>Earn:</ContentLeft>\n                        <ContentRight>TLM</ContentRight>\n                      </FlexSpace>\n\n                      <FlexSpace>\n                        <ContentLeft>ROI:</ContentLeft>\n                        <ContentRight>2.38%</ContentRight>\n                      </FlexSpace>\n                    </CardContent>\n\n                    <Boxbtn>\n                      <Button color=\"primary\">Select</Button>\n                    </Boxbtn>\n                  </BoxPool>\n                </Col>\n\n                <Col>\n                  <BoxPool>\n                    <HeadLine>\n                      <span>Premium</span>\n                    </HeadLine>\n                    <figure>\n                      <img src=\"../images/lucky-logo.png\" alt=\"\"/>\n                    </figure>\n\n                    <CardContent>\n                      <Title>LuckySwap</Title>\n\n                      <FlexSpace>\n                        <ContentLeft>Deposit:</ContentLeft>\n                        <ContentRight>LuckySwap</ContentRight>\n                      </FlexSpace>\n\n                      <FlexSpace>\n                        <ContentLeft>Earn:</ContentLeft>\n                        <ContentRight>TLM</ContentRight>\n                      </FlexSpace>\n\n                      <FlexSpace>\n                        <ContentLeft>ROI:</ContentLeft>\n                        <ContentRight>2.38%</ContentRight>\n                      </FlexSpace>\n                    </CardContent>\n\n                    <Boxbtn>\n                      <Button color=\"primary\">Select</Button>\n                    </Boxbtn>\n                  </BoxPool>\n                </Col>\n              </Row>\n            </PoolCard>\n          </TabPane>\n        \n          <TabPane tabId=\"5\">\n            <PoolCard>\n              <Row xs=\"1\" sm=\"2\" md=\"4\">\n              <Col>\n                  <BoxPool>\n                    <HeadLine>\n                      <span>Premium</span>\n                    </HeadLine>\n                    <figure>\n                      <img src=\"../images/lucky-logo.png\" alt=\"\"/>\n                    </figure>\n\n                    <CardContent>\n                      <Title>LuckySwap</Title>\n\n                      <FlexSpace>\n                        <ContentLeft>Deposit:</ContentLeft>\n                        <ContentRight>LuckySwap</ContentRight>\n                      </FlexSpace>\n\n                      <FlexSpace>\n                        <ContentLeft>Earn:</ContentLeft>\n                        <ContentRight>TLM</ContentRight>\n                      </FlexSpace>\n\n                      <FlexSpace>\n                        <ContentLeft>ROI:</ContentLeft>\n                        <ContentRight>2.38%</ContentRight>\n                      </FlexSpace>\n                    </CardContent>\n\n                    <Boxbtn>\n                      <Button color=\"primary\">Select</Button>\n                    </Boxbtn>\n                  </BoxPool>\n                </Col>\n\n                <Col>\n                  <BoxPool>\n                    <HeadLine>\n                      <span>Premium</span>\n                    </HeadLine>\n                    <figure>\n                      <img src=\"../images/lucky-logo.png\" alt=\"\"/>\n                    </figure>\n\n                    <CardContent>\n                      <Title>LuckySwap</Title>\n\n                      <FlexSpace>\n                        <ContentLeft>Deposit:</ContentLeft>\n                        <ContentRight>LuckySwap</ContentRight>\n                      </FlexSpace>\n\n                      <FlexSpace>\n                        <ContentLeft>Earn:</ContentLeft>\n                        <ContentRight>TLM</ContentRight>\n                      </FlexSpace>\n\n                      <FlexSpace>\n                        <ContentLeft>ROI:</ContentLeft>\n                        <ContentRight>2.38%</ContentRight>\n                      </FlexSpace>\n                    </CardContent>\n\n                    <Boxbtn>\n                      <Button color=\"primary\">Select</Button>\n                    </Boxbtn>\n                  </BoxPool>\n                </Col>\n\n                <Col>\n                  <BoxPool>\n                    <HeadLine>\n                      <span>Premium</span>\n                    </HeadLine>\n                    <figure>\n                      <img src=\"../images/lucky-logo.png\" alt=\"\"/>\n                    </figure>\n\n                    <CardContent>\n                      <Title>LuckySwap</Title>\n\n                      <FlexSpace>\n                        <ContentLeft>Deposit:</ContentLeft>\n                        <ContentRight>LuckySwap</ContentRight>\n                      </FlexSpace>\n\n                      <FlexSpace>\n                        <ContentLeft>Earn:</ContentLeft>\n                        <ContentRight>TLM</ContentRight>\n                      </FlexSpace>\n\n                      <FlexSpace>\n                        <ContentLeft>ROI:</ContentLeft>\n                        <ContentRight>2.38%</ContentRight>\n                      </FlexSpace>\n                    </CardContent>\n\n                    <Boxbtn>\n                      <Button color=\"primary\">Select</Button>\n                    </Boxbtn>\n                  </BoxPool>\n                </Col>\n\n                <Col>\n                  <BoxPool>\n                    <HeadLine>\n                      <span>Premium</span>\n                    </HeadLine>\n                    <figure>\n                      <img src=\"../images/lucky-logo.png\" alt=\"\"/>\n                    </figure>\n\n                    <CardContent>\n                      <Title>LuckySwap</Title>\n\n                      <FlexSpace>\n                        <ContentLeft>Deposit:</ContentLeft>\n                        <ContentRight>LuckySwap</ContentRight>\n                      </FlexSpace>\n\n                      <FlexSpace>\n                        <ContentLeft>Earn:</ContentLeft>\n                        <ContentRight>TLM</ContentRight>\n                      </FlexSpace>\n\n                      <FlexSpace>\n                        <ContentLeft>ROI:</ContentLeft>\n                        <ContentRight>2.38%</ContentRight>\n                      </FlexSpace>\n                    </CardContent>\n\n                    <Boxbtn>\n                      <Button color=\"primary\">Select</Button>\n                    </Boxbtn>\n                  </BoxPool>\n                </Col>\n\n                <Col>\n                  <BoxPool>\n                    <HeadLine>\n                      <span>Premium</span>\n                    </HeadLine>\n                    <figure>\n                      <img src=\"../images/lucky-logo.png\" alt=\"\"/>\n                    </figure>\n\n                    <CardContent>\n                      <Title>LuckySwap</Title>\n\n                      <FlexSpace>\n                        <ContentLeft>Deposit:</ContentLeft>\n                        <ContentRight>LuckySwap</ContentRight>\n                      </FlexSpace>\n\n                      <FlexSpace>\n                        <ContentLeft>Earn:</ContentLeft>\n                        <ContentRight>TLM</ContentRight>\n                      </FlexSpace>\n\n                      <FlexSpace>\n                        <ContentLeft>ROI:</ContentLeft>\n                        <ContentRight>2.38%</ContentRight>\n                      </FlexSpace>\n                    </CardContent>\n\n                    <Boxbtn>\n                      <Button color=\"primary\">Select</Button>\n                    </Boxbtn>\n                  </BoxPool>\n                </Col>\n              </Row>\n            </PoolCard>\n          </TabPane>\n        \n          <TabPane tabId=\"6\">\n            <PoolCard>\n              <Row xs=\"1\" sm=\"2\" md=\"4\">\n              <Col>\n                  <BoxPool>\n                    <HeadLine>\n                      <span>Premium</span>\n                    </HeadLine>\n                    <figure>\n                      <img src=\"../images/lucky-logo.png\" alt=\"\"/>\n                    </figure>\n\n                    <CardContent>\n                      <Title>LuckySwap</Title>\n\n                      <FlexSpace>\n                        <ContentLeft>Deposit:</ContentLeft>\n                        <ContentRight>LuckySwap</ContentRight>\n                      </FlexSpace>\n\n                      <FlexSpace>\n                        <ContentLeft>Earn:</ContentLeft>\n                        <ContentRight>TLM</ContentRight>\n                      </FlexSpace>\n\n                      <FlexSpace>\n                        <ContentLeft>ROI:</ContentLeft>\n                        <ContentRight>2.38%</ContentRight>\n                      </FlexSpace>\n                    </CardContent>\n\n                    <Boxbtn>\n                      <Button color=\"primary\">Select</Button>\n                    </Boxbtn>\n                  </BoxPool>\n                </Col>\n\n                <Col>\n                  <BoxPool>\n                    <HeadLine>\n                      <span>Premium</span>\n                    </HeadLine>\n                    <figure>\n                      <img src=\"../images/lucky-logo.png\" alt=\"\"/>\n                    </figure>\n\n                    <CardContent>\n                      <Title>LuckySwap</Title>\n\n                      <FlexSpace>\n                        <ContentLeft>Deposit:</ContentLeft>\n                        <ContentRight>LuckySwap</ContentRight>\n                      </FlexSpace>\n\n                      <FlexSpace>\n                        <ContentLeft>Earn:</ContentLeft>\n                        <ContentRight>TLM</ContentRight>\n                      </FlexSpace>\n\n                      <FlexSpace>\n                        <ContentLeft>ROI:</ContentLeft>\n                        <ContentRight>2.38%</ContentRight>\n                      </FlexSpace>\n                    </CardContent>\n\n                    <Boxbtn>\n                      <Button color=\"primary\">Select</Button>\n                    </Boxbtn>\n                  </BoxPool>\n                </Col>\n\n                <Col>\n                  <BoxPool>\n                    <HeadLine>\n                      <span>Premium</span>\n                    </HeadLine>\n                    <figure>\n                      <img src=\"../images/lucky-logo.png\" alt=\"\"/>\n                    </figure>\n\n                    <CardContent>\n                      <Title>LuckySwap</Title>\n\n                      <FlexSpace>\n                        <ContentLeft>Deposit:</ContentLeft>\n                        <ContentRight>LuckySwap</ContentRight>\n                      </FlexSpace>\n\n                      <FlexSpace>\n                        <ContentLeft>Earn:</ContentLeft>\n                        <ContentRight>TLM</ContentRight>\n                      </FlexSpace>\n\n                      <FlexSpace>\n                        <ContentLeft>ROI:</ContentLeft>\n                        <ContentRight>2.38%</ContentRight>\n                      </FlexSpace>\n                    </CardContent>\n\n                    <Boxbtn>\n                      <Button color=\"primary\">Select</Button>\n                    </Boxbtn>\n                  </BoxPool>\n                </Col>\n              </Row>\n            </PoolCard>\n          </TabPane>\n        \n          <TabPane tabId=\"7\">\n            <PoolCard>\n              <Row xs=\"1\" sm=\"2\" md=\"4\">\n              <Col>\n                  <BoxPool>\n                    <HeadLine>\n                      <span>Premium</span>\n                    </HeadLine>\n                    <figure>\n                      <img src=\"../images/lucky-logo.png\" alt=\"\"/>\n                    </figure>\n\n                    <CardContent>\n                      <Title>LuckySwap</Title>\n\n                      <FlexSpace>\n                        <ContentLeft>Deposit:</ContentLeft>\n                        <ContentRight>LuckySwap</ContentRight>\n                      </FlexSpace>\n\n                      <FlexSpace>\n                        <ContentLeft>Earn:</ContentLeft>\n                        <ContentRight>TLM</ContentRight>\n                      </FlexSpace>\n\n                      <FlexSpace>\n                        <ContentLeft>ROI:</ContentLeft>\n                        <ContentRight>2.38%</ContentRight>\n                      </FlexSpace>\n                    </CardContent>\n\n                    <Boxbtn>\n                      <Button color=\"primary\">Select</Button>\n                    </Boxbtn>\n                  </BoxPool>\n                </Col>\n\n                <Col>\n                  <BoxPool>\n                    <HeadLine>\n                      <span>Premium</span>\n                    </HeadLine>\n                    <figure>\n                      <img src=\"../images/lucky-logo.png\" alt=\"\"/>\n                    </figure>\n\n                    <CardContent>\n                      <Title>LuckySwap</Title>\n\n                      <FlexSpace>\n                        <ContentLeft>Deposit:</ContentLeft>\n                        <ContentRight>LuckySwap</ContentRight>\n                      </FlexSpace>\n\n                      <FlexSpace>\n                        <ContentLeft>Earn:</ContentLeft>\n                        <ContentRight>TLM</ContentRight>\n                      </FlexSpace>\n\n                      <FlexSpace>\n                        <ContentLeft>ROI:</ContentLeft>\n                        <ContentRight>2.38%</ContentRight>\n                      </FlexSpace>\n                    </CardContent>\n\n                    <Boxbtn>\n                      <Button color=\"primary\">Select</Button>\n                    </Boxbtn>\n                  </BoxPool>\n                </Col>\n\n                <Col>\n                  <BoxPool>\n                    <HeadLine>\n                      <span>Premium</span>\n                    </HeadLine>\n                    <figure>\n                      <img src=\"../images/lucky-logo.png\" alt=\"\"/>\n                    </figure>\n\n                    <CardContent>\n                      <Title>LuckySwap</Title>\n\n                      <FlexSpace>\n                        <ContentLeft>Deposit:</ContentLeft>\n                        <ContentRight>LuckySwap</ContentRight>\n                      </FlexSpace>\n\n                      <FlexSpace>\n                        <ContentLeft>Earn:</ContentLeft>\n                        <ContentRight>TLM</ContentRight>\n                      </FlexSpace>\n\n                      <FlexSpace>\n                        <ContentLeft>ROI:</ContentLeft>\n                        <ContentRight>2.38%</ContentRight>\n                      </FlexSpace>\n                    </CardContent>\n\n                    <Boxbtn>\n                      <Button color=\"primary\">Select</Button>\n                    </Boxbtn>\n                  </BoxPool>\n                </Col>\n\n                <Col>\n                  <BoxPool>\n                    <HeadLine>\n                      <span>Premium</span>\n                    </HeadLine>\n                    <figure>\n                      <img src=\"../images/lucky-logo.png\" alt=\"\"/>\n                    </figure>\n\n                    <CardContent>\n                      <Title>LuckySwap</Title>\n\n                      <FlexSpace>\n                        <ContentLeft>Deposit:</ContentLeft>\n                        <ContentRight>LuckySwap</ContentRight>\n                      </FlexSpace>\n\n                      <FlexSpace>\n                        <ContentLeft>Earn:</ContentLeft>\n                        <ContentRight>TLM</ContentRight>\n                      </FlexSpace>\n\n                      <FlexSpace>\n                        <ContentLeft>ROI:</ContentLeft>\n                        <ContentRight>2.38%</ContentRight>\n                      </FlexSpace>\n                    </CardContent>\n\n                    <Boxbtn>\n                      <Button color=\"primary\">Select</Button>\n                    </Boxbtn>\n                  </BoxPool>\n                </Col>\n\n                <Col>\n                  <BoxPool>\n                    <HeadLine>\n                      <span>Premium</span>\n                    </HeadLine>\n                    <figure>\n                      <img src=\"../images/lucky-logo.png\" alt=\"\"/>\n                    </figure>\n\n                    <CardContent>\n                      <Title>LuckySwap</Title>\n\n                      <FlexSpace>\n                        <ContentLeft>Deposit:</ContentLeft>\n                        <ContentRight>LuckySwap</ContentRight>\n                      </FlexSpace>\n\n                      <FlexSpace>\n                        <ContentLeft>Earn:</ContentLeft>\n                        <ContentRight>TLM</ContentRight>\n                      </FlexSpace>\n\n                      <FlexSpace>\n                        <ContentLeft>ROI:</ContentLeft>\n                        <ContentRight>2.38%</ContentRight>\n                      </FlexSpace>\n                    </CardContent>\n\n                    <Boxbtn>\n                      <Button color=\"primary\">Select</Button>\n                    </Boxbtn>\n                  </BoxPool>\n                </Col>\n              </Row>\n            </PoolCard>\n          </TabPane>\n        \n        </TabContent>\n    </div>\n  </>\n  )\n}\n\n\nconst PoolCard = styled.div``\n\nconst HeadLine = styled.div`\n  background: linear-gradient(90deg, rgba(239,186,12,1) 0%, rgba(251,219,59,1) 100%);\n  width: 100%;\n  padding: 10px 0;\n  position: absolute;\n  left: 0;\n  top: 0;\n  text-align: center;\n  color: #212529;\n  font-size: 16px;\n  font-weight: 700;\n  text-transform: uppercase;\n`\n\nconst BoxPool = styled.div`\n  background-color: #333442;\n  border-radius: 6px;\n  padding: 24px 15px 15px;\n  margin-bottom: 20px;\n  position: relative;\n  overflow: hidden;\n  box-shadow: rgb(43 44 58) -2px 2px 0px 0px, rgb(38 39 47) -2px 5px 11px 1px;\n\n  figure {\n    background-color: #212628;\n    box-shadow: 0px 0px 12px rgba(0, 0, 0, 0.5);\n    border-radius: 4px;\n    width: 78px;\n    height: 78px;\n    display: flex;\n    margin: 28px auto 0 auto;\n    padding: 10px;\n  }\n`\n\nconst CardContent = styled.div`\n  margin-top: 40px;\n  margin-bottom: 20px;\n`\n\nconst Title = styled.div`\n  color: #fff;\n  font-size: 16px;\n  line-height: 12px;\n  font-weight: 600;\n  text-align: center;\n  margin-bottom: 25px;\n`\n\nconst FlexSpace = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 15px;\n`\n\nconst ContentLeft = styled.div`\n  color: #979797;\n  text-align: left;\n`\n\nconst ContentRight = styled.div`\n  color: #fff;\n  font-size: 14px;\n  font-weight: 700;\n  text-align: right;\n`\n\nconst Boxbtn = styled.div`\n  text-align: center;\n  border-top: 1px solid #D8D8D8;\n  padding-top: 15px;\n\n  button {\n    background: #01A8E1;\n    font-weight: 600;\n  }\n`\n\nexport default PoolCards\n","import React, { useState, useMemo } from 'react'\nimport { Route, useRouteMatch } from 'react-router-dom'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { useWeb3React } from '@web3-react/core'\nimport { Heading } from '@luckyswap/uikit'\nimport orderBy from 'lodash/orderBy'\nimport partition from 'lodash/partition'\nimport useI18n from 'hooks/useI18n'\nimport { usePools, useBlock } from 'state/hooks'\nimport FlexLayout from 'components/layout/Flex'\nimport Page from 'components/layout/Page'\nimport Coming from './components/Coming'\nimport PoolCard from './components/PoolCard'\nimport PoolTabButtons from './components/PoolTabButtons'\nimport Divider from './components/Divider'\nimport PoolItem from './components/PoolCards'\n\nconst Farm: React.FC = () => {\n  const { path } = useRouteMatch()\n  const TranslateString = useI18n()\n  const { account } = useWeb3React()\n  const pools = usePools(account)\n  const { currentBlock } = useBlock()\n  const [stakedOnly, setStakedOnly] = useState(false)\n\n  const [finishedPools, openPools] = useMemo(\n    () => partition(pools, (pool) => pool.isFinished || currentBlock > pool.endBlock),\n    [currentBlock, pools],\n  )\n  const stakedOnlyPools = useMemo(\n    () => openPools.filter((pool) => pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)),\n    [openPools],\n  )\n\n  return (\n    <Page>\n      {/* <Hero>\n        <div>\n          <Heading as=\"h1\" size=\"xxl\" mb=\"16px\" color=\"#2b2c3a\">\n            {TranslateString(738, 'Syrup Pool')}\n          </Heading>\n          <ul className=\"list\">\n            <li color=\"#fda558\">{TranslateString(580, 'Stake BDEX to earn new tokens.')}</li>\n            <li color=\"#fda558\">{TranslateString(486, 'You can unstake at any time.')}</li>\n            <li color=\"#fda558\">{TranslateString(406, 'Rewards are calculated per block.')}</li>\n          </ul>\n        </div>\n        <img src=\"/images/syrup.png\" alt=\"SYRUP POOL icon\" width={410} height={191} />\n      </Hero> */}\n      {/* <PoolTabButtons stakedOnly={stakedOnly} setStakedOnly={setStakedOnly} /> */}\n      {/* <Divider /> */}\n      <PoolItem />\n      <FlexLayout>\n        {/* <Route exact path={`${path}`}>\n          <>\n            {stakedOnly\n              ? orderBy(stakedOnlyPools, ['sortOrder']).map((pool) => <PoolCard key={pool.sousId} pool={pool} />)\n              : orderBy(openPools, ['sortOrder']).map((pool) => <PoolCard key={pool.sousId} pool={pool} />)}\n            <Coming />\n          </>\n        </Route> */}\n        {/* <Route path={`${path}/history`}>\n          {orderBy(finishedPools, ['sortOrder']).map((pool) => (\n            <PoolCard key={pool.sousId} pool={pool} />\n          ))}\n        </Route> */}\n        \n      </FlexLayout>\n    </Page>\n  )\n}\n\nconst Hero = styled.div`\n  align-items: center;\n  color: ${({ theme }) => theme.colors.primary};\n  display: grid;\n  grid-gap: 32px;\n  grid-template-columns: 1fr;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 250px;\n  padding: 48px 0;\n  ul {\n    margin: 0;\n    padding: 0;\n    list-style-type: none;\n    font-size: 16px;\n    li {\n      margin-bottom: 4px;\n    }\n  }\n  img {\n    height: auto;\n    max-width: 100%;\n  }\n  @media (min-width: 576px) {\n    grid-template-columns: 1fr 1fr;\n    margin: 0;\n    max-width: none;\n  }\n`\n\nexport default Farm\n","import React, { useEffect } from 'react'\nimport styled from 'styled-components'\nimport confetti from 'canvas-confetti'\nimport { Modal, Text, Button, Flex, InjectedModalProps } from '@luckyswap/uikit'\nimport history from 'routerHistory'\nimport { delay } from 'lodash'\nimport useI18n from 'hooks/useI18n'\nimport nftList from 'config/constants/nfts'\nimport { Nft } from 'config/constants/types'\nimport { useProfile } from 'state/hooks'\nimport { Profile } from 'state/types'\nimport { teamNftMap } from './NftCard/EasterNftCard'\n\nconst NftImage = styled.img`\n  border-radius: 50%;\n  height: 128px;\n  margin-bottom: 24px;\n  width: 128px;\n`\n\nconst showConfetti = () => {\n  confetti({\n    resize: true,\n    particleCount: 200,\n    startVelocity: 30,\n    gravity: 0.5,\n    spread: 350,\n    origin: {\n      x: 0.5,\n      y: 0.3,\n    },\n  })\n}\n\nconst getClaimableNft = (profile: Profile): Nft => {\n  if (!profile) {\n    return null\n  }\n\n  if (!profile.team) {\n    return null\n  }\n\n  const bunnyId = Object.keys(teamNftMap).find((mapBunnyId) => teamNftMap[mapBunnyId] === profile.team.id)\n  return nftList.find((nft) => nft.bunnyId === Number(bunnyId))\n}\n\nconst NftGiveawayModal: React.FC<InjectedModalProps> = ({ onDismiss }) => {\n  const TranslateString = useI18n()\n  const { profile } = useProfile()\n  const nft = getClaimableNft(profile)\n\n  // This is required because the modal exists outside the Router\n  const handleClick = () => {\n    onDismiss()\n    history.push('/collectibles')\n  }\n\n  useEffect(() => {\n    delay(showConfetti, 100)\n  }, [])\n\n  return (\n    <Modal title={TranslateString(999, 'Congratulations!')} onDismiss={onDismiss}>\n      <Flex flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\">\n        {nft && <NftImage src={`/images/nfts/${nft.images.md}`} />}\n        <Text bold color=\"secondary\" fontSize=\"24px\" mb=\"24px\">\n          {TranslateString(999, 'You won a collectible!')}\n        </Text>\n        <Button onClick={handleClick}>{TranslateString(999, 'Claim now')}</Button>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default NftGiveawayModal\n","import React, { useEffect, useRef, useState } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport { useWeb3React } from '@web3-react/core'\nimport { useModal } from '@luckyswap/uikit'\nimport { useProfile } from 'state/hooks'\nimport { useEasterNftContract } from 'hooks/useContract'\nimport NftGiveawayModal from './NftGiveawayModal'\n\ninterface GlobalCheckClaimStatusProps {\n  excludeLocations: string[]\n}\n\n/**\n * This is represented as a component rather than a hook because we need to keep it\n * inside the Router.\n *\n * TODO: Put global checks in redux or make a generic area to house global checks\n */\nconst GlobalCheckClaimStatus: React.FC<GlobalCheckClaimStatusProps> = ({ excludeLocations }) => {\n  const hasDisplayedModal = useRef(false)\n  const [isClaimable, setIsClaimable] = useState(false)\n  const [onPresentGiftModal] = useModal(<NftGiveawayModal />)\n  const easterNftContract = useEasterNftContract()\n  const { profile } = useProfile()\n  const { account } = useWeb3React()\n  const { pathname } = useLocation()\n\n  // Check claim status\n  useEffect(() => {\n    const fetchClaimStatus = async () => {\n      const canClaim = await easterNftContract.methods.canClaim(account).call()\n      setIsClaimable(canClaim)\n    }\n\n    // Wait until we have a profile\n    if (account && profile) {\n      fetchClaimStatus()\n    }\n  }, [easterNftContract, account, profile, setIsClaimable])\n\n  // Check if we need to display the modal\n  useEffect(() => {\n    const matchesSomeLocations = excludeLocations.some((location) => pathname.includes(location))\n\n    if (isClaimable && !matchesSomeLocations && !hasDisplayedModal.current) {\n      onPresentGiftModal()\n      hasDisplayedModal.current = true\n    }\n  }, [pathname, isClaimable, excludeLocations, hasDisplayedModal, onPresentGiftModal])\n\n  // Reset the check flag when account changes\n  useEffect(() => {\n    hasDisplayedModal.current = false\n  }, [account, hasDisplayedModal])\n\n  return null\n}\n\nexport default GlobalCheckClaimStatus\n","import React, { createContext } from 'react'\n\ninterface TranslationState {\n  translations: Array<any>\n  setTranslations: React.Dispatch<React.SetStateAction<Array<any>>>\n}\n\nconst defaultTranslationState: TranslationState = {\n  translations: [],\n  setTranslations: (): void => undefined,\n}\n\nexport const TranslationsContext = createContext(defaultTranslationState as TranslationState)\n\nexport default TranslationsContext\n","import { useContext } from 'react'\nimport { TranslationsContext } from '../hooks/TranslationsContext'\n\nconst variableRegex = /%(.*?)%/\n\nconst replaceDynamicString = (foundTranslation: string, fallback: string) => {\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const stringToReplace = variableRegex.exec(foundTranslation)![0]\n  const indexToReplace = foundTranslation.split(' ').indexOf(stringToReplace)\n  const fallbackValueAtIndex = fallback.split(' ')[indexToReplace]\n  return foundTranslation.replace(stringToReplace, fallbackValueAtIndex)\n}\n\nexport const getTranslation = (translations: Array<any>, translationId: number, fallback: string) => {\n  const foundTranslation = translations.find((translation) => {\n    return translation.data.stringId === translationId\n  })\n  if (foundTranslation) {\n    const translatedString = foundTranslation.data.text\n    const includesVariable = translatedString.includes('%')\n    if (includesVariable) {\n      return replaceDynamicString(translatedString, fallback)\n    }\n    return translatedString\n  }\n  return fallback\n}\n\nexport const TranslateString = (translationId: number, fallback: string) => {\n  const { translations } = useContext(TranslationsContext)\n  if (translations[0] === 'error') {\n    return fallback\n  }\n  if (translations.length > 0) {\n    return getTranslation(translations, translationId, fallback)\n  }\n  return null\n}\n","import { CurrencyAmount, ETHER, JSBI } from '@beswap/sdk'\nimport { MIN_ETH } from '../constants'\n\n/**\n * Given some token amount, return the max that can be spent of it\n * @param currencyAmount to return max of\n */\nexport function maxAmountSpend(currencyAmount?: CurrencyAmount): CurrencyAmount | undefined {\n  if (!currencyAmount) return undefined\n  if (currencyAmount.currency === ETHER) {\n    if (JSBI.greaterThan(currencyAmount.raw, MIN_ETH)) {\n      return CurrencyAmount.ether(JSBI.subtract(currencyAmount.raw, MIN_ETH))\n    }\n    return CurrencyAmount.ether(JSBI.BigInt(0))\n  }\n  return currencyAmount\n}\n\nexport default maxAmountSpend\n","import React from 'react'\nimport styled, { css } from 'styled-components'\nimport { animated, useTransition } from 'react-spring'\nimport { DialogOverlay, DialogContent } from '@reach/dialog'\nimport { isMobile } from 'react-device-detect'\nimport '@reach/dialog/styles.css'\nimport { transparentize } from 'polished'\n\nconst AnimatedDialogOverlay = animated(DialogOverlay)\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst StyledDialogOverlay = styled(AnimatedDialogOverlay)`\n  &[data-reach-dialog-overlay] {\n    z-index: 2;\n    background-color: transparent;\n    overflow: hidden;\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    background-color: rgba(0, 0, 0, 0.3);\n  }\n`\n\nconst AnimatedDialogContent = animated(DialogContent)\n// destructure to not pass custom props to Dialog DOM element\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst StyledDialogContent = styled(({ minHeight, maxHeight, mobile, isOpen, ...rest }) => (\n  <AnimatedDialogContent {...rest} />\n)).attrs({\n  'aria-label': 'dialog',\n})`\n  &[data-reach-dialog-content] {\n    margin: 0 0 2rem 0;\n    background-color: #343646;\n    box-shadow: 0 4px 8px 0 ${transparentize(0.95, '#191326')};\n    padding: 0px;\n    width: 80%;\n    overflow: hidden;\n\n    align-self: ${({ mobile }) => (mobile ? 'flex-end' : 'center')};\n\n    max-width: 420px;\n    ${({ maxHeight }) =>\n      maxHeight &&\n      css`\n        max-height: ${maxHeight}vh;\n      `}\n    ${({ minHeight }) =>\n      minHeight &&\n      css`\n        min-height: ${minHeight}vh;\n      `}\n    @media (max-width: 768px) {\n      min-height: 65vh;\n    }\n\n    display: flex;\n    border-radius: 20px;\n\n    ${({ theme }) => theme.mediaQueries.lg} {\n      width: 65vw;\n    }\n    ${({ theme }) => theme.mediaQueries.sm} {\n      width: 85vw;\n    }\n  }\n`\n\ninterface ModalProps {\n  isOpen: boolean\n  onDismiss: () => void\n  minHeight?: number | false\n  maxHeight?: number\n  initialFocusRef?: React.RefObject<any>\n  children?: React.ReactNode\n}\n\nexport default function Modal({\n  isOpen,\n  onDismiss,\n  minHeight = false,\n  maxHeight = 50,\n  initialFocusRef,\n  children,\n}: ModalProps) {\n  const fadeTransition = useTransition(isOpen, null, {\n    config: { duration: 200 },\n    from: { opacity: 0 },\n    enter: { opacity: 1 },\n    leave: { opacity: 0 },\n  })\n\n  return (\n    <>\n      {fadeTransition.map(\n        ({ item, key, props }:any) =>\n          item && (\n            <StyledDialogOverlay key={key} style={props} onDismiss={onDismiss} initialFocusRef={initialFocusRef}>\n              <StyledDialogContent\n                aria-label=\"dialog content\"\n                minHeight={minHeight}\n                maxHeight={maxHeight}\n                mobile={isMobile}\n              >\n                {/* prevents the automatic focusing of inputs on mobile by the reach dialog */}\n                {/* eslint-disable */}\n                {!initialFocusRef && isMobile ? <div tabIndex={1} /> : null}\n                {/* eslint-enable */}\n                {children}\n              </StyledDialogContent>\n            </StyledDialogOverlay>\n          )\n      )}\n    </>\n  )\n}\n","import React, { HTMLProps, useCallback } from 'react'\nimport { Link } from 'react-router-dom'\nimport styled, { keyframes } from 'styled-components'\n\n// A button that triggers some onClick result, but looks like a link.\nexport const LinkStyledButton = styled.button<{ disabled?: boolean }>`\n  border: none;\n  text-decoration: none;\n  background: none;\n\n  cursor: ${({ disabled }) => (disabled ? 'default' : 'pointer')};\n  color: ${({ theme, disabled }) => (disabled ? theme.colors.textSubtle : theme.colors.primary)};\n  font-weight: 500;\n\n  :hover {\n    text-decoration: ${({ disabled }) => (disabled ? null : 'underline')};\n  }\n\n  :focus {\n    outline: none;\n    text-decoration: ${({ disabled }) => (disabled ? null : 'underline')};\n  }\n\n  :active {\n    text-decoration: none;\n  }\n`\n\n// An internal link from the react-router-dom library that is correctly styled\nexport const StyledInternalLink = styled(Link)`\n  text-decoration: none;\n  cursor: pointer;\n  color: ${({ theme }) => theme.colors.primary};\n  font-weight: 500;\n\n  :hover {\n    text-decoration: underline;\n  }\n\n  :focus {\n    outline: none;\n    text-decoration: underline;\n  }\n\n  :active {\n    text-decoration: none;\n  }\n`\n\nconst StyledLink = styled.a`\n  text-decoration: none;\n  cursor: pointer;\n  color: ${({ theme }) => theme.colors.primary};\n  font-weight: 500;\n\n  :hover {\n    text-decoration: underline;\n  }\n\n  :focus {\n    outline: none;\n    text-decoration: underline;\n  }\n\n  :active {\n    text-decoration: none;\n  }\n`\n\n/**\n * Outbound link that handles firing google analytics events\n */\nexport function ExternalLink({\n  target = '_blank',\n  href,\n  rel = 'noopener noreferrer',\n  ...rest\n}: Omit<HTMLProps<HTMLAnchorElement>, 'as' | 'ref' | 'onClick'> & { href: string }) {\n  const handleClick = useCallback(\n    (event: React.MouseEvent<HTMLAnchorElement>) => {\n      if (!(target === '_blank' || event.ctrlKey || event.metaKey)) {\n        event.preventDefault()\n      }\n    },\n    [target]\n  )\n  return <StyledLink target={target} rel={rel} href={href} onClick={handleClick} {...rest} />\n}\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`\n\nexport const Spinner = styled.img`\n  animation: 2s ${rotate} linear infinite;\n  width: 16px;\n  height: 16px;\n`\n","import styled from 'styled-components'\n\nconst Column = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\nexport const ColumnCenter = styled(Column)`\n  width: 100%;\n  align-items: center;\n`\n\nexport const AutoColumn = styled.div<{\n  gap?: 'sm' | 'md' | 'lg' | string\n  justify?: 'stretch' | 'center' | 'start' | 'end' | 'flex-start' | 'flex-end' | 'space-between'\n}>`\n  display: grid;\n  grid-auto-rows: auto;\n  grid-row-gap: ${({ gap }) => (gap === 'sm' && '8px') || (gap === 'md' && '12px') || (gap === 'lg' && '24px') || gap};\n  justify-items: ${({ justify }) => justify && justify};\n`\n\nexport default Column\n","import React, { ReactNode } from 'react'\nimport styled from 'styled-components'\nimport { Heading, IconButton, CloseIcon } from '@luckyswap/uikit'\nimport { AutoColumn, ColumnCenter } from '../Column'\n\n\nexport const Wrapper = styled.div`\n  width: 100%;\n  overflow-y: auto;\n`\nexport const Section = styled(AutoColumn)`\n  padding: 24px;\n`\n\nexport const ConfirmedIcon = styled(ColumnCenter)`\n  padding: 40px 0;\n`\n\nexport const BottomSection = styled(Section)`\n  background-color: #343646;\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n`\n\n/**\n * TODO: Remove this when modal system from the UI Kit is implemented\n */\nconst StyledContentHeader = styled.div`\n  align-items: center;\n  display: flex;\n\n  & > ${Heading} {\n    flex: 1;\n  }\n`\n\ntype ContentHeaderProps = {\n  children: ReactNode\n  onDismiss: () => void\n}\n\nexport const ContentHeader = ({ children, onDismiss }: ContentHeaderProps) => (\n  <StyledContentHeader>\n    <Heading>{children}</Heading>\n    <IconButton onClick={onDismiss} variant=\"text\">\n      <CloseIcon color=\"primary\" />\n    </IconButton>\n  </StyledContentHeader>\n)\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text } from '@luckyswap/uikit'\nimport { Spinner } from '../Shared'\nimport { AutoColumn } from '../Column'\nimport { Wrapper, Section, ConfirmedIcon, ContentHeader } from './helpers'\n\ntype ConfirmationPendingContentProps = { onDismiss: () => void; pendingText: string }\n\nconst CustomLightSpinner = styled(Spinner)<{ size: string }>`\n  height: ${({ size }) => size};\n  width: ${({ size }) => size};\n`\n\nconst ConfirmationPendingContent = ({ onDismiss, pendingText }: ConfirmationPendingContentProps) => {\n  return (\n    <Wrapper>\n      <Section>\n        <ContentHeader onDismiss={onDismiss}>Waiting for confirmation</ContentHeader>\n        <ConfirmedIcon>\n          <CustomLightSpinner src=\"/images/blue-loader.svg\" alt=\"loader\" size=\"90px\" />\n        </ConfirmedIcon>\n        <AutoColumn gap=\"12px\" justify=\"center\">\n          <AutoColumn gap=\"12px\" justify=\"center\">\n            <Text fontSize=\"14px\">\n              <strong>{pendingText}</strong>\n            </Text>\n          </AutoColumn>\n          <Text fontSize=\"14px\">Confirm this transaction in your wallet</Text>\n        </AutoColumn>\n      </Section>\n    </Wrapper>\n  )\n}\n\nexport default ConfirmationPendingContent\n","import { ChainId } from '@beswap/sdk'\nimport React, { useContext } from 'react'\nimport { ThemeContext } from 'styled-components'\nimport { Button, LinkExternal } from '@luckyswap/uikit'\nimport { ArrowUpCircle } from 'react-feather'\nimport { AutoColumn } from '../Column'\nimport { getBscScanLink } from '../../../utils'\nimport { Wrapper, Section, ConfirmedIcon, ContentHeader } from './helpers'\n\ntype TransactionSubmittedContentProps = {\n  onDismiss: () => void\n  hash: string | undefined\n  chainId: ChainId\n}\n\nconst TransactionSubmittedContent = ({ onDismiss, chainId, hash }: TransactionSubmittedContentProps) => {\n  const theme = useContext(ThemeContext)\n\n  return (\n    <Wrapper>\n      <Section>\n        <ContentHeader onDismiss={onDismiss}>Transaction submitted</ContentHeader>\n        <ConfirmedIcon>\n          <ArrowUpCircle strokeWidth={0.5} size={97} color={theme.colors.primary} />\n        </ConfirmedIcon>\n        <AutoColumn gap=\"8px\" justify=\"center\">\n          {chainId && hash && (\n            <LinkExternal href={getBscScanLink(chainId, hash, 'transaction')}>View on BscScan</LinkExternal>\n          )}\n          <Button onClick={onDismiss} mt=\"20px\" className=\"btn-supply\">\n            Close\n          </Button>\n        </AutoColumn>\n      </Section>\n    </Wrapper>\n  )\n}\n\nexport default TransactionSubmittedContent\n","import React from 'react'\nimport Modal from '../Modal'\nimport { useActiveWeb3React } from '../../../hooks'\nimport ConfirmationPendingContent from './ConfirmationPendingContent'\nimport TransactionSubmittedContent from './TransactionSubmittedContent'\n\ninterface ConfirmationModalProps {\n  isOpen: boolean\n  onDismiss: () => void\n  hash: string | undefined\n  content: () => React.ReactNode\n  attemptingTxn: boolean\n  pendingText: string\n}\n\nconst TransactionConfirmationModal = ({\n  isOpen,\n  onDismiss,\n  attemptingTxn,\n  hash,\n  pendingText,\n  content\n}: ConfirmationModalProps) => {\n  const { chainId } = useActiveWeb3React()\n\n  if (!chainId) return null\n\n  // confirmation screen\n  return (\n    <Modal isOpen={isOpen} onDismiss={onDismiss} maxHeight={90}>\n      {attemptingTxn ? (\n        <ConfirmationPendingContent onDismiss={onDismiss} pendingText={pendingText} />\n      ) : hash ? (\n        <TransactionSubmittedContent chainId={chainId} hash={hash} onDismiss={onDismiss} />\n      ) : (\n        content()\n      )}\n    </Modal>\n  )\n}\n\nexport default TransactionConfirmationModal\n","import React from 'react'\nimport { Wrapper, Section, BottomSection, ContentHeader } from './helpers'\n\ntype ConfirmationModalContentProps = {\n  title: string\n  onDismiss: () => void\n  topContent: () => React.ReactNode\n  bottomContent: () => React.ReactNode\n}\n\nconst ConfirmationModalContent = ({ title, bottomContent, onDismiss, topContent }: ConfirmationModalContentProps) => {\n  return (\n    <Wrapper>\n      <Section>\n        <ContentHeader onDismiss={onDismiss}>{title}</ContentHeader>\n        {topContent()}\n      </Section>\n      <BottomSection gap=\"12px\">{bottomContent()}</BottomSection>\n    </Wrapper>\n  )\n}\n\nexport default ConfirmationModalContent\n","import React, { useContext } from 'react'\nimport { ThemeContext } from 'styled-components'\nimport { Button, Text } from '@luckyswap/uikit'\nimport { AlertTriangle } from 'react-feather'\nimport { AutoColumn } from '../Column'\nimport { Wrapper, Section, BottomSection, ContentHeader } from './helpers'\n\ntype TransactionErrorContentProps = { message: string; onDismiss: () => void }\n\nconst TransactionErrorContent = ({ message, onDismiss }: TransactionErrorContentProps) => {\n  const theme = useContext(ThemeContext)\n  return (\n    <Wrapper>\n      <Section>\n        <ContentHeader onDismiss={onDismiss}>Error</ContentHeader>\n        <AutoColumn style={{ marginTop: 20, padding: '2rem 0' }} gap=\"24px\" justify=\"center\">\n          <AlertTriangle color={theme.colors.failure} style={{ strokeWidth: 1.5 }} size={64} />\n          <Text fontSize=\"16px\" color=\"failure\" style={{ textAlign: 'center', width: '85%' }}>\n            {message}\n          </Text>\n        </AutoColumn>\n      </Section>\n      <BottomSection gap=\"12px\">\n        <Button onClick={onDismiss}>Dismiss</Button>\n      </BottomSection>\n    </Wrapper>\n  )\n}\n\nexport default TransactionErrorContent\n","import TransactionConfirmationModal from './TransactionConfirmationModal'\n\nexport { default as ConfirmationModalContent } from './ConfirmationModalContent'\nexport { default as ConfirmationPendingContent } from './ConfirmationPendingContent'\nexport { default as TransactionErrorContent } from './TransactionErrorContent'\nexport { default as TransactionSubmittedContent } from './TransactionSubmittedContent'\n\nexport default TransactionConfirmationModal\n","import { useEffect, useRef } from 'react'\n\nexport default function useInterval(callback: () => void, delay: null | number, leading = true) {\n  const savedCallback = useRef<() => void>()\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback\n  }, [callback])\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      const { current } = savedCallback\n      if (current) {\n        current()\n      }\n    }\n\n    if (delay !== null) {\n      if (leading) tick()\n      const id = setInterval(tick, delay)\n      return () => clearInterval(id)\n    }\n    return undefined\n  }, [delay, leading])\n}\n","import { Placement } from '@popperjs/core'\nimport { transparentize } from 'polished'\nimport React, { useCallback, useState } from 'react'\nimport { usePopper } from 'react-popper'\nimport styled from 'styled-components'\nimport Portal from '@reach/portal'\nimport useInterval from 'hooks/useInterval'\n\nconst PopoverContainer = styled.div<{ show: boolean }>`\n  z-index: 9999;\n\n  visibility: ${(props) => (props.show ? 'visible' : 'hidden')};\n  opacity: ${(props) => (props.show ? 1 : 0)};\n  transition: visibility 150ms linear, opacity 150ms linear;\n\n  background: ${({ theme }) => theme.colors.invertedContrast};\n  border: 1px solid ${({ theme }) => theme.colors.tertiary};\n  box-shadow: 0 4px 8px 0 ${transparentize(0.9, '#2F80ED')};\n  color: ${({ theme }) => theme.colors.textSubtle};\n  border-radius: 8px;\n`\n\nconst ReferenceElement = styled.div`\n  display: inline-block;\n`\n\nconst Arrow = styled.div`\n  width: 8px;\n  height: 8px;\n  z-index: 9998;\n\n  ::before {\n    position: absolute;\n    width: 8px;\n    height: 8px;\n    z-index: 9998;\n\n    content: '';\n    border: 1px solid ${({ theme }) => theme.colors.tertiary};\n    transform: rotate(45deg);\n    background: ${({ theme }) => theme.colors.invertedContrast};\n  }\n\n  &.arrow-top {\n    bottom: -5px;\n    ::before {\n      border-top: none;\n      border-left: none;\n    }\n  }\n\n  &.arrow-bottom {\n    top: -5px;\n    ::before {\n      border-bottom: none;\n      border-right: none;\n    }\n  }\n\n  &.arrow-left {\n    right: -5px;\n\n    ::before {\n      border-bottom: none;\n      border-left: none;\n    }\n  }\n\n  &.arrow-right {\n    left: -5px;\n    ::before {\n      border-right: none;\n      border-top: none;\n    }\n  }\n`\n\nexport interface PopoverProps {\n  content: React.ReactNode\n  show: boolean\n  children: React.ReactNode\n  placement?: Placement\n}\n\nexport default function Popover({ content, show, children, placement = 'auto' }: PopoverProps) {\n  const [referenceElement, setReferenceElement] = useState<HTMLDivElement | null>(null)\n  const [popperElement, setPopperElement] = useState<HTMLDivElement | null>(null)\n  const [arrowElement, setArrowElement] = useState<HTMLDivElement | null>(null)\n  const { styles, update, attributes } = usePopper(referenceElement, popperElement, {\n    placement,\n    strategy: 'fixed',\n    modifiers: [\n      { name: 'offset', options: { offset: [8, 8] } },\n      { name: 'arrow', options: { element: arrowElement } },\n    ],\n  })\n  const updateCallback = useCallback(() => {\n    if (update) {\n      update()\n    }\n  }, [update])\n  useInterval(updateCallback, show ? 100 : null)\n\n  return (\n    <>\n      <ReferenceElement ref={setReferenceElement as any}>{children}</ReferenceElement>\n      <Portal>\n        <PopoverContainer show={show} ref={setPopperElement as any} style={styles.popper} {...attributes.popper}>\n          {content}\n          <Arrow\n            className={`arrow-${attributes.popper?.['data-popper-placement'] ?? ''}`}\n            ref={setArrowElement as any}\n            style={styles.arrow}\n            {...attributes.arrow}\n          />\n        </PopoverContainer>\n      </Portal>\n    </>\n  )\n}\n","import React, { useCallback, useState } from 'react'\nimport styled from 'styled-components'\nimport Popover, { PopoverProps } from '../Popover'\n\nconst TooltipContainer = styled.div`\n  width: 228px;\n  padding: 0.6rem 1rem;\n  line-height: 150%;\n  font-weight: 400;\n  color: #000;\n`\n\ninterface TooltipProps extends Omit<PopoverProps, 'content'> {\n  text: string\n}\n\nexport default function Tooltip({ text, ...rest }: TooltipProps) {\n  return <Popover content={<TooltipContainer>{text}</TooltipContainer>} {...rest} />\n}\n\nexport function MouseoverTooltip({ children, ...rest }: Omit<TooltipProps, 'show'>) {\n  const [show, setShow] = useState(false)\n  const open = useCallback(() => setShow(true), [setShow])\n  const close = useCallback(() => setShow(false), [setShow])\n  return (\n    <Tooltip {...rest} show={show}>\n      <div onMouseEnter={open} onMouseLeave={close}>\n        {children}\n      </div>\n    </Tooltip>\n  )\n}\n","import React, { useCallback, useState } from 'react'\nimport { HelpCircle as Question } from 'react-feather'\nimport styled from 'styled-components'\nimport Tooltip from '../Tooltip'\n\nconst QuestionWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0.2rem;\n  border: none;\n  outline: none;\n  cursor: default;\n  border-radius: 36px;\n  background-color: transparent;\n  // color: ${({ theme }) => theme.colors.textSubtle};\n  color: #fff;\n\n  :hover,\n  :focus {\n    opacity: 0.7;\n  }\n`\n\nexport default function QuestionHelper({ text }: { text: string }) {\n  const [show, setShow] = useState<boolean>(false)\n\n  const open = useCallback(() => setShow(true), [setShow])\n  const close = useCallback(() => setShow(false), [setShow])\n\n  return (\n    <span style={{ marginLeft: 4 }}>\n      <Tooltip text={text} show={show}>\n        <QuestionWrapper onClick={open} onMouseEnter={open} onMouseLeave={close}>\n          <Question size={16} />\n        </QuestionWrapper>\n      </Tooltip>\n    </span>\n  )\n}\n","import styled from 'styled-components'\nimport { Box } from 'rebass/styled-components'\n\nconst Row = styled(Box)<{ align?: string; padding?: string; border?: string; borderRadius?: string }>`\n  width: 100%;\n  display: flex;\n  padding: 0;\n  align-items: ${({ align }) => (align || 'center')};\n  padding: ${({ padding }) => padding};\n  border: ${({ border }) => border};\n  border-radius: ${({ borderRadius }) => borderRadius};\n`\n\nexport const RowBetween = styled(Row)`\n  justify-content: space-between;\n`\n\nexport const RowFlat = styled.div`\n  display: flex;\n  align-items: flex-end;\n`\n\nexport const AutoRow = styled(Row)<{ gap?: string; justify?: string }>`\n  flex-wrap: wrap;\n  margin: ${({ gap }) => gap && `-${gap}`};\n  justify-content: ${({ justify }) => justify && justify};\n\n  & > * {\n    margin: ${({ gap }) => gap} !important;\n  }\n`\n\nexport const RowFixed = styled(Row)<{ gap?: string; justify?: string }>`\n  width: fit-content;\n  margin: ${({ gap }) => gap && `-${gap}`};\n`\n\nexport default Row\n","import { transparentize } from 'polished'\nimport React from 'react'\nimport { AlertTriangle } from 'react-feather'\nimport { Text } from '@luckyswap/uikit'\nimport styled, { css } from 'styled-components'\nimport { AutoColumn } from '../Column'\n\nexport const Wrapper = styled.div`\n  position: relative;\n`\n\nexport const ArrowWrapper = styled.div<{ clickable: boolean }>`\n  padding: 2px;\n\n  ${({ clickable }) =>\n    clickable\n      ? css`\n          :hover {\n            cursor: pointer;\n            opacity: 0.8;\n          }\n        `\n      : null}\n`\n\nexport const SectionBreak = styled.div`\n  height: 1px;\n  width: 100%;\n  background-color: ${({ theme }) => theme.colors.tertiary};\n`\n\nexport const BottomGrouping = styled.div`\n  margin-top: 1rem;\n`\n\nexport const ErrorText = styled(Text)<{ severity?: 0 | 1 | 2 | 3 | 4 }>`\n  color: ${({ theme, severity }) =>\n    severity === 3 || severity === 4\n      ? theme.colors.failure\n      : severity === 2\n      ? theme.colors.binance\n      : severity === 1\n      ? theme.colors.text\n      : theme.colors.success};\n`\n\nexport const StyledBalanceMaxMini = styled.button`\n  height: 22px;\n  width: 22px;\n  // background-color: ${({ theme }) => theme.colors.invertedContrast};\n  background-color: transparent;\n  border: none;\n  border-radius: 50%;\n  padding: 0.2rem;\n  font-size: 0.875rem;\n  font-weight: 400;\n  margin-left: 0.4rem;\n  cursor: pointer;\n  color: ${({ theme }) => theme.colors.textSubtle};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  float: right;\n\n  :hover {\n    background-color: red;\n  }\n  :focus {\n    background-color: ${({ theme }) => theme.colors.tertiary};\n    outline: none;\n  }\n`\n\n// styles\nexport const Dots = styled.span`\n  &::after {\n    display: inline-block;\n    animation: ellipsis 1.25s infinite;\n    content: '.';\n    width: 1em;\n    text-align: left;\n  }\n  @keyframes ellipsis {\n    0% {\n      content: '.';\n    }\n    33% {\n      content: '..';\n    }\n    66% {\n      content: '...';\n    }\n  }\n`\n\nconst SwapCallbackErrorInner = styled.div`\n  background-color: ${({ theme }) => transparentize(0.9, theme.colors.failure)};\n  border-radius: 1rem;\n  display: flex;\n  align-items: center;\n  font-size: 0.825rem;\n  width: 100%;\n  padding: 3rem 1.25rem 1rem 1rem;\n  margin-top: -2rem;\n  color: ${({ theme }) => theme.colors.failure};\n  z-index: -1;\n  \n  p {\n    padding: 0;\n    margin: 0;\n    font-weight: 500;\n  }\n`\n\nconst SwapCallbackErrorInnerAlertTriangle = styled.div`\n  background-color: ${({ theme }) => transparentize(0.9, theme.colors.failure)};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 12px;\n  border-radius: 12px;\n  min-width: 48px;\n  height: 48px;\n`\n\nexport function SwapCallbackError({ error }: { error: string }) {\n  return (\n    <SwapCallbackErrorInner>\n      <SwapCallbackErrorInnerAlertTriangle>\n        <AlertTriangle size={24} />\n      </SwapCallbackErrorInnerAlertTriangle>\n      <p>{error}</p>\n    </SwapCallbackErrorInner>\n  )\n}\n\nexport const SwapShowAcceptChanges = styled(AutoColumn)`\n  background-color: ${({ theme }) => transparentize(0.9, theme.colors.primary)};\n  color: ${({ theme }) => theme.colors.primary};\n  padding: 0.5rem;\n  border-radius: 12px;\n  margin-top: 8px;\n`\n","import { Percent } from '@beswap/sdk'\nimport React from 'react'\nimport { ONE_BIPS } from '../../../constants'\nimport { warningSeverity } from '../../../utils/prices'\nimport { ErrorText } from './styleds'\n\n/**\n * Formatted version of price impact text with warning colors\n */\nexport default function FormattedPriceImpact({ priceImpact }: { priceImpact?: Percent }) {\n  return (\n    <ErrorText fontSize=\"14px\" severity={warningSeverity(priceImpact)}>\n      {priceImpact ? (priceImpact.lessThan(ONE_BIPS) ? '<0.01%' : `${priceImpact.toFixed(2)}%`) : '-'}\n    </ErrorText>\n  )\n}\n","import { Trade, TradeType } from '@beswap/sdk'\nimport React, { useMemo, useState } from 'react'\nimport { Text , Button } from '@luckyswap/uikit'\nimport { Repeat } from 'react-feather'\n\nimport { Field } from 'state/swap/actions'\nimport {\n  computeSlippageAdjustedAmounts,\n  computeTradePriceBreakdown,\n  formatExecutionPrice,\n  warningSeverity\n} from 'utils//prices'\nimport { AutoColumn } from '../Column'\nimport QuestionHelper from '../QuestionHelper'\nimport { AutoRow, RowBetween, RowFixed } from '../Row'\nimport FormattedPriceImpact from './FormattedPriceImpact'\nimport { StyledBalanceMaxMini, SwapCallbackError } from './styleds'\n\nexport default function SwapModalFooter({\n  trade,\n  onConfirm,\n  allowedSlippage,\n  swapErrorMessage,\n  disabledConfirm\n}: {\n  trade: Trade\n  allowedSlippage: number\n  onConfirm: () => void\n  swapErrorMessage: string | undefined\n  disabledConfirm: boolean\n}) {\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n  const slippageAdjustedAmounts = useMemo(() => computeSlippageAdjustedAmounts(trade, allowedSlippage), [\n    allowedSlippage,\n    trade\n  ])\n  const { priceImpactWithoutFee, realizedLPFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\n  const severity = warningSeverity(priceImpactWithoutFee)\n\n  return (\n    <>\n      <AutoColumn gap=\"0px\">\n        <RowBetween align=\"center\">\n          <Text fontSize=\"14px\">Price</Text>\n          <Text\n            fontSize=\"14px\"\n            style={{\n              justifyContent: 'center',\n              alignItems: 'center',\n              display: 'flex',\n              textAlign: 'right',\n              paddingLeft: '8px',\n              fontWeight: 500\n            }}\n          >\n            {formatExecutionPrice(trade, showInverted)}\n            <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\n              <Repeat size={14} />\n            </StyledBalanceMaxMini>\n          </Text>\n        </RowBetween>\n\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">\n              {trade.tradeType === TradeType.EXACT_INPUT ? 'Minimum received' : 'Maximum sold'}\n            </Text>\n            <QuestionHelper text=\"Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.\" />\n          </RowFixed>\n          <RowFixed>\n            <Text fontSize=\"14px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4) ?? '-'\n                : slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4) ?? '-'}\n            </Text>\n            <Text fontSize=\"14px\" marginLeft=\"4px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? trade.outputAmount.currency.symbol\n                : trade.inputAmount.currency.symbol}\n            </Text>\n          </RowFixed>\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">Price Impact</Text>\n            <QuestionHelper text=\"The difference between the market price and your price due to trade size.\" />\n          </RowFixed>\n          <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">Liquidity Provider Fee</Text>\n            <QuestionHelper text=\"For each trade a 0.2% fee is paid. 0.17% goes to liquidity providers and 0.03% goes to the Luckyswap treasury.\" />\n          </RowFixed>\n          <Text fontSize=\"14px\">\n            {realizedLPFee ? `${realizedLPFee?.toSignificant(6)  } ${  trade.inputAmount.currency.symbol}` : '-'}\n          </Text>\n        </RowBetween>\n      </AutoColumn>\n\n      <AutoRow>\n        <Button\n        className=\"btn-supply\"\n          onClick={onConfirm}\n          disabled={disabledConfirm}\n          variant={severity > 2 ? 'danger' : 'primary'}\n          mt=\"10px\"\n          id=\"confirm-swap-or-send\"\n        >\n          {severity > 2 ? 'Swap Anyway' : 'Confirm Swap'}\n        </Button>\n\n        {swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n      </AutoRow>\n    </>\n  )\n}\n","import CID from 'cids'\nimport { getCodec, rmPrefix } from 'multicodec'\nimport { decode, toB58String } from 'multihashes'\n\nexport function hexToUint8Array(hex: string): Uint8Array {\n  hex = hex.startsWith('0x') ? hex.substr(2) : hex\n  if (hex.length % 2 !== 0) throw new Error('hex must have length that is multiple of 2')\n  const arr = new Uint8Array(hex.length / 2)\n  for (let i = 0; i < arr.length; i++) {\n    arr[i] = parseInt(hex.substr(i * 2, 2), 16)\n  }\n  return arr\n}\n\nconst UTF_8_DECODER = new TextDecoder()\n\n/**\n * Returns the URI representation of the content hash for supported codecs\n * @param contenthash to decode\n */\nexport default function contenthashToUri(contenthash: string): string {\n  const buff = hexToUint8Array(contenthash)\n  const codec = getCodec(buff as Buffer) // the typing is wrong for @types/multicodec\n  switch (codec) {\n    case 'ipfs-ns': {\n      const data = rmPrefix(buff as Buffer)\n      const cid = new CID(data)\n      return `ipfs://${toB58String(cid.multihash)}`\n    }\n    case 'ipns-ns': {\n      const data = rmPrefix(buff as Buffer)\n      const cid = new CID(data)\n      const multihash = decode(cid.multihash)\n      if (multihash.name === 'identity') {\n        return `ipns://${UTF_8_DECODER.decode(multihash.digest).trim()}`\n      } \n        return `ipns://${toB58String(cid.multihash)}`\n      \n    }\n    default:\n      throw new Error(`Unrecognized codec: ${codec}`)\n  }\n}\n","const ENS_NAME_REGEX = /^(([a-zA-Z0-9]+\\.)+)eth(\\/.*)?$/\n\nexport function parseENSAddress(ensAddress: string): { ensName: string; ensPath: string | undefined } | undefined {\n  const match = ensAddress.match(ENS_NAME_REGEX)\n  if (!match) return undefined\n  return { ensName: `${match[1].toLowerCase()}eth`, ensPath: match[3] }\n}\n\nexport default parseENSAddress\n","/**\n * Given a URI that may be ipfs, ipns, http, or https protocol, return the fetch-able http(s) URLs for the same content\n * @param uri to convert to fetch-able http url\n */\nexport default function uriToHttp(uri: string): string[] {\n  const protocol = uri.split(':')[0].toLowerCase()\n  switch (protocol) {\n    case 'https':\n      return [uri]\n    case 'http':\n      return [`https${  uri.substr(4)}`, uri]\n    case 'ipfs':\n      const hash = uri.match(/^ipfs:(\\/\\/)?(.*)$/i)?.[2]\n      return [`https://cloudflare-ipfs.com/ipfs/${hash}/`, `https://ipfs.io/ipfs/${hash}/`]\n    case 'ipns':\n      const name = uri.match(/^ipns:(\\/\\/)?(.*)$/i)?.[2]\n      return [`https://cloudflare-ipfs.com/ipns/${name}/`, `https://ipfs.io/ipns/${name}/`]\n    default:\n      return []\n  }\n}\n","/**\n * Returns true if the string value is zero in hex\n * @param hexNumberString\n */\nexport default function isZero(hexNumberString: string) {\n  return /^0x0*$/.test(hexNumberString)\n}\n","import { useMemo } from 'react'\nimport contenthashToUri from 'utils/contenthashToUri'\nimport { parseENSAddress } from 'utils/parseENSAddress'\nimport uriToHttp from 'utils/uriToHttp'\nimport useENSContentHash from './useENSContentHash'\n\nexport default function useHttpLocations(uri: string | undefined): string[] {\n  const ens = useMemo(() => (uri ? parseENSAddress(uri) : undefined), [uri])\n  const resolvedContentHash = useENSContentHash(ens?.ensName)\n  return useMemo(() => {\n    if (ens) {\n      return resolvedContentHash.contenthash ? uriToHttp(contenthashToUri(resolvedContentHash.contenthash)) : []\n    } \n      return uri ? uriToHttp(uri) : []\n    \n  }, [ens, resolvedContentHash.contenthash, uri])\n}\n","import { namehash } from 'ethers/lib/utils'\nimport { useMemo } from 'react'\nimport { useSingleCallResult } from '../state/multicall/hooks'\nimport isZero from '../utils/isZero'\nimport { useENSRegistrarContract, useENSResolverContract } from './useContract'\n\n/**\n * Does a lookup for an ENS name to find its contenthash.\n */\nexport default function useENSContentHash(ensName?: string | null): { loading: boolean; contenthash: string | null } {\n  const ensNodeArgument = useMemo(() => {\n    if (!ensName) return [undefined]\n    try {\n      return ensName ? [namehash(ensName)] : [undefined]\n    } catch (error) {\n      return [undefined]\n    }\n  }, [ensName])\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddressResult = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n  const resolverAddress = resolverAddressResult.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddress && isZero(resolverAddress) ? undefined : resolverAddress,\n    false\n  )\n  const contenthash = useSingleCallResult(resolverContract, 'contenthash', ensNodeArgument)\n\n  return {\n    contenthash: contenthash.result?.[0] ?? null,\n    loading: resolverAddressResult.loading || contenthash.loading\n  }\n}\n","import { ChainId, Token } from '@beswap/sdk'\nimport { Tags, TokenInfo, TokenList } from '@uniswap/token-lists'\nimport { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { AppState } from '../index'\n\ntype TagDetails = Tags[keyof Tags]\nexport interface TagInfo extends TagDetails {\n  id: string\n}\n\n/**\n * Token instances created from token info.\n */\nexport class WrappedTokenInfo extends Token {\n  public readonly tokenInfo: TokenInfo\n\n  public readonly tags: TagInfo[]\n\n  constructor(tokenInfo: TokenInfo, tags: TagInfo[]) {\n    super(tokenInfo.chainId, tokenInfo.address, tokenInfo.decimals, tokenInfo.symbol, tokenInfo.name)\n    this.tokenInfo = tokenInfo\n    this.tags = tags\n  }\n\n  public get logoURI(): string | undefined {\n    return this.tokenInfo.logoURI\n  }\n}\n\nexport type TokenAddressMap = Readonly<{ [chainId in ChainId]: Readonly<{ [tokenAddress: string]: WrappedTokenInfo }> }>\n\n/**\n * An empty result, useful as a default.\n */\nconst EMPTY_LIST: TokenAddressMap = {\n  [ChainId.MAINNET]: {},\n  [ChainId.BSCTESTNET]: {}\n}\n\nconst listCache: WeakMap<TokenList, TokenAddressMap> | null =\n  typeof WeakMap !== 'undefined' ? new WeakMap<TokenList, TokenAddressMap>() : null\n\nexport function listToTokenMap(list: TokenList): TokenAddressMap {\n  const result = listCache?.get(list)\n  if (result) return result\n\n  const map = list.tokens.reduce<TokenAddressMap>(\n    (tokenMap, tokenInfo) => {\n      const tags: TagInfo[] =\n        tokenInfo.tags\n          ?.map(tagId => {\n            if (!list.tags?.[tagId]) return undefined\n            return { ...list.tags[tagId], id: tagId }\n          })\n          ?.filter((x): x is TagInfo => Boolean(x)) ?? []\n      const token = new WrappedTokenInfo(tokenInfo, tags)\n      if (tokenMap[token.chainId][token.address] !== undefined) throw Error('Duplicate tokens.')\n      return {\n        ...tokenMap,\n        [token.chainId]: {\n          ...tokenMap[token.chainId],\n          [token.address]: token\n        }\n      }\n    },\n    { ...EMPTY_LIST }\n  )\n  listCache?.set(list, map)\n  return map\n}\n\nexport function useTokenList(url: string | undefined): TokenAddressMap {\n  const lists = useSelector<AppState, AppState['lists']['byUrl']>(state => state.lists.byUrl)\n  return useMemo(() => {\n    if (!url) return EMPTY_LIST\n    const current = lists[url]?.current\n    if (!current) return EMPTY_LIST\n    try {\n      return listToTokenMap(current)\n    } catch (error) {\n      console.error('Could not show token list due to error', error)\n      return EMPTY_LIST\n    }\n  }, [lists, url])\n}\n\nexport function useSelectedListUrl(): string | undefined {\n  return useSelector<AppState, AppState['lists']['selectedListUrl']>(state => state.lists.selectedListUrl)\n}\n\nexport function useSelectedTokenList(): TokenAddressMap {\n  return useTokenList(useSelectedListUrl())\n}\n\nexport function useSelectedListInfo(): { current: TokenList | null; pending: TokenList | null; loading: boolean } {\n  const selectedUrl = useSelectedListUrl()\n  const listsByUrl = useSelector<AppState, AppState['lists']['byUrl']>(state => state.lists.byUrl)\n  const list = selectedUrl ? listsByUrl[selectedUrl] : undefined\n  return {\n    current: list?.current ?? null,\n    pending: list?.pendingUpdate ?? null,\n    loading: list?.loadingRequestId !== null\n  }\n}\n\n// returns all downloaded current lists\nexport function useAllLists(): TokenList[] {\n  const lists = useSelector<AppState, AppState['lists']['byUrl']>(state => state.lists.byUrl)\n\n  return useMemo(\n    () =>\n      Object.keys(lists)\n        .map(url => lists[url].current)\n        .filter((l): l is TokenList => Boolean(l)),\n    [lists]\n  )\n}\n","import React, { useState } from 'react'\nimport { HelpCircle } from 'react-feather'\n\nconst BAD_SRCS: { [tokenAddress: string]: true } = {}\n\nexport interface LogoProps {\n  alt?: string\n  style?: any\n  className?: string\n  srcs: string[]\n}\n\n/**\n * Renders an image by sequentially trying a list of URIs, and then eventually a fallback triangle alert\n */\nexport default function Logo({ srcs, alt, ...rest }: LogoProps) {\n  const [, refresh] = useState<number>(0)\n\n  const src: string | undefined = srcs.find((s) => !BAD_SRCS[s])\n\n  if (src) {\n    return (\n      <img\n        {...rest}\n        alt={alt}\n        src={src}\n        onError={() => {\n          if (src) BAD_SRCS[src] = true\n          refresh((i) => i + 1)\n        }}\n      />\n    )\n  }\n\n  return <HelpCircle {...rest} />\n}\n","import styled from 'styled-components'\nimport Logo from '../Logo'\n\nconst CoinLogo = styled(Logo)<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n`\n\nexport default CoinLogo\n","import { Currency, ETHER, Token } from '@beswap/sdk'\nimport React, { useMemo } from 'react'\nimport styled from 'styled-components'\nimport useHttpLocations from 'hooks/useHttpLocations'\nimport { WrappedTokenInfo } from 'state/lists/hooks'\nimport Logo from '../Logo'\nimport CoinLogo from '../pancake/CoinLogo'\n\nconst getTokenLogoURL = (address: string) =>\n  `https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/smartchain/assets/${address}/logo.png`\n\nconst StyledBnbLogo = styled.img<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n  box-shadow: 0px 6px 10px rgba(0, 0, 0, 0.075);\n  border-radius: 24px;\n`\n\nconst StyledLogo = styled(Logo)<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n`\n\nexport default function CurrencyLogo({\n  currency,\n  size = '24px',\n  style,\n}: {\n  currency?: Currency\n  size?: string\n  style?: React.CSSProperties\n}) {\n  const uriLocations = useHttpLocations(currency instanceof WrappedTokenInfo ? currency.logoURI : undefined)\n\n  const srcs: string[] = useMemo(() => {\n    if (currency === ETHER) return []\n\n    if (currency instanceof Token) {\n      if (currency instanceof WrappedTokenInfo) {\n        return [...uriLocations, `/images/coins/${currency?.symbol ?? 'token'}.png`, getTokenLogoURL(currency.address)]\n      }\n\n      return [`/images/coins/${currency?.symbol ?? 'token'}.png`, getTokenLogoURL(currency.address)]\n    }\n    return []\n  }, [currency, uriLocations])\n\n  if (currency === ETHER) {\n    return <StyledBnbLogo src=\"/images/coins/bnb.png\" size={size} style={style} />\n  }\n\n  return (currency as any)?.symbol ? (\n    <CoinLogo size={size} srcs={srcs} alt={`${currency?.symbol ?? 'token'} logo`} style={style} />\n  ) : (\n    <StyledLogo size={size} srcs={srcs} alt={`${currency?.symbol ?? 'token'} logo`} style={style} />\n  )\n}\n","import React, { useContext, useMemo } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\nimport { Trade, TradeType } from '@beswap/sdk'\nimport { Button, Text } from '@luckyswap/uikit'\nimport { ArrowDown, AlertTriangle } from 'react-feather'\nimport { Field } from 'state/swap/actions'\nimport { isAddress, shortenAddress } from 'utils/'\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown, warningSeverity } from 'utils//prices'\nimport { AutoColumn } from '../Column'\nimport CurrencyLogo from '../CurrencyLogo'\nimport { RowBetween, RowFixed } from '../Row'\nimport { SwapShowAcceptChanges } from './styleds'\n\nconst PriceInfoText = styled(Text)`\n  font-style: italic;\n  line-height: 1.3;\n\n  span {\n    color: ${({ theme }) => theme.colors.primary};\n    font-weight: 600;\n  }\n`\n\nexport default function SwapModalHeader({\n  trade,\n  allowedSlippage,\n  recipient,\n  showAcceptChanges,\n  onAcceptChanges,\n}: {\n  trade: Trade\n  allowedSlippage: number\n  recipient: string | null\n  showAcceptChanges: boolean\n  onAcceptChanges: () => void\n}) {\n  const slippageAdjustedAmounts = useMemo(() => computeSlippageAdjustedAmounts(trade, allowedSlippage), [\n    trade,\n    allowedSlippage,\n  ])\n  const { priceImpactWithoutFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  const theme = useContext(ThemeContext)\n\n  return (\n    <AutoColumn gap=\"md\" style={{ marginTop: '20px' }}>\n      <RowBetween align=\"flex-end\">\n        <RowFixed gap=\"0px\">\n          <CurrencyLogo currency={trade.inputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\n          <Text\n            fontSize=\"24px\"\n            color={showAcceptChanges && trade.tradeType === TradeType.EXACT_OUTPUT ? theme.colors.primary : 'text'}\n          >\n            {trade.inputAmount.toSignificant(6)}\n          </Text>\n        </RowFixed>\n        <RowFixed gap=\"0px\">\n          <Text fontSize=\"24px\" style={{ marginLeft: '10px', fontWeight: 500 }}>\n            {trade.inputAmount.currency.symbol}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      <RowFixed>\n        <ArrowDown size=\"16\" color={theme.colors.textSubtle} style={{ marginLeft: '4px', minWidth: '16px' }} />\n      </RowFixed>\n      <RowBetween align=\"flex-end\">\n        <RowFixed gap=\"0px\">\n          <CurrencyLogo currency={trade.outputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\n          <Text\n            fontSize=\"24px\"\n            style={{ marginLeft: '10px', fontWeight: 500 }}\n            color={\n              priceImpactSeverity > 2\n                ? theme.colors.failure\n                : showAcceptChanges && trade.tradeType === TradeType.EXACT_INPUT\n                ? theme.colors.primary\n                : 'text'\n            }\n          >\n            {trade.outputAmount.toSignificant(6)}\n          </Text>\n        </RowFixed>\n        <RowFixed gap=\"0px\">\n          <Text fontSize=\"24px\" style={{ marginLeft: '10px', fontWeight: 500 }}>\n            {trade.outputAmount.currency.symbol}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      {showAcceptChanges ? (\n        <SwapShowAcceptChanges justify=\"flex-start\" gap=\"0px\">\n          <RowBetween>\n            <RowFixed>\n              <AlertTriangle size={20} style={{ marginRight: '8px', minWidth: 24 }} />\n              <Text color=\"primary\"> Price Updated</Text>\n            </RowFixed>\n            <Button onClick={onAcceptChanges}>Accept</Button>\n          </RowBetween>\n        </SwapShowAcceptChanges>\n      ) : null}\n      <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '16px 0 0' }}>\n        {trade.tradeType === TradeType.EXACT_INPUT ? (\n          <PriceInfoText>\n            {`Output is estimated. You will receive at least `}\n            <span>\n              {slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(6)} {trade.outputAmount.currency.symbol}\n            </span>\n            {' or the transaction will revert.'}\n          </PriceInfoText>\n        ) : (\n          <PriceInfoText>\n            {`Input is estimated. You will sell at most `}\n            <span>\n              {slippageAdjustedAmounts[Field.INPUT]?.toSignificant(6)} {trade.inputAmount.currency.symbol}\n            </span>\n            {' or the transaction will revert.'}\n          </PriceInfoText>\n        )}\n      </AutoColumn>\n      {recipient !== null ? (\n        <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '16px 0 0' }}>\n          <Text>\n            Output will be sent to{' '}\n            <b title={recipient}>{isAddress(recipient) ? shortenAddress(recipient) : recipient}</b>\n          </Text>\n        </AutoColumn>\n      ) : null}\n    </AutoColumn>\n  )\n}\n","import { currencyEquals, Trade } from '@beswap/sdk'\nimport React, { useCallback, useMemo } from 'react'\nimport TransactionConfirmationModal, {\n  ConfirmationModalContent,\n  TransactionErrorContent\n} from '../TransactionConfirmationModal'\nimport SwapModalFooter from './SwapModalFooter'\nimport SwapModalHeader from './SwapModalHeader'\n\n/**\n * Returns true if the trade requires a confirmation of details before we can submit it\n * @param tradeA trade A\n * @param tradeB trade B\n */\nfunction tradeMeaningfullyDiffers(tradeA: Trade, tradeB: Trade): boolean {\n  return (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\n    !tradeA.inputAmount.equalTo(tradeB.inputAmount) ||\n    !currencyEquals(tradeA.outputAmount.currency, tradeB.outputAmount.currency) ||\n    !tradeA.outputAmount.equalTo(tradeB.outputAmount)\n  )\n}\n\nexport default function ConfirmSwapModal({\n  trade,\n  originalTrade,\n  onAcceptChanges,\n  allowedSlippage,\n  onConfirm,\n  onDismiss,\n  recipient,\n  swapErrorMessage,\n  isOpen,\n  attemptingTxn,\n  txHash\n}: {\n  isOpen: boolean\n  trade: Trade | undefined\n  originalTrade: Trade | undefined\n  attemptingTxn: boolean\n  txHash: string | undefined\n  recipient: string | null\n  allowedSlippage: number\n  onAcceptChanges: () => void\n  onConfirm: () => void\n  swapErrorMessage: string | undefined\n  onDismiss: () => void\n}) {\n  const showAcceptChanges = useMemo(\n    () => Boolean(trade && originalTrade && tradeMeaningfullyDiffers(trade, originalTrade)),\n    [originalTrade, trade]\n  )\n\n  const modalHeader = useCallback(() => {\n    return trade ? (\n      <SwapModalHeader\n        trade={trade}\n        allowedSlippage={allowedSlippage}\n        recipient={recipient}\n        showAcceptChanges={showAcceptChanges}\n        onAcceptChanges={onAcceptChanges}\n      />\n    ) : null\n  }, [allowedSlippage, onAcceptChanges, recipient, showAcceptChanges, trade])\n\n  const modalBottom = useCallback(() => {\n    return trade ? (\n      <SwapModalFooter\n        onConfirm={onConfirm}\n        trade={trade}\n        disabledConfirm={showAcceptChanges}\n        swapErrorMessage={swapErrorMessage}\n        allowedSlippage={allowedSlippage}\n      />\n    ) : null\n  }, [allowedSlippage, onConfirm, showAcceptChanges, swapErrorMessage, trade])\n\n  // text to show while loading\n  const pendingText = `Swapping ${trade?.inputAmount?.toSignificant(6)} ${\n    trade?.inputAmount?.currency?.symbol\n  } for ${trade?.outputAmount?.toSignificant(6)} ${trade?.outputAmount?.currency?.symbol}`\n\n  const confirmationContent = useCallback(\n    () =>\n      swapErrorMessage ? (\n        <TransactionErrorContent onDismiss={onDismiss} message={swapErrorMessage} />\n      ) : (\n        <ConfirmationModalContent\n          title=\"Confirm Swap\"\n          onDismiss={onDismiss}\n          topContent={modalHeader}\n          bottomContent={modalBottom}\n        />\n      ),\n    [onDismiss, modalBottom, modalHeader, swapErrorMessage]\n  )\n\n  return (\n    <TransactionConfirmationModal\n      isOpen={isOpen}\n      onDismiss={onDismiss}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      content={confirmationContent}\n      pendingText={pendingText}\n    />\n  )\n}\n","import { ChainId, Pair, Token } from '@beswap/sdk'\nimport flatMap from 'lodash.flatmap'\nimport { useCallback, useMemo } from 'react'\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux'\nimport { BASES_TO_TRACK_LIQUIDITY_FOR, PINNED_PAIRS } from '../../constants'\n\nimport { useActiveWeb3React } from '../../hooks'\n// eslint-disable-next-line import/no-cycle\nimport { useAllTokens } from '../../hooks/Tokens'\nimport { AppDispatch, AppState } from '../index'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  removeSerializedToken,\n  SerializedPair,\n  SerializedToken,\n  updateUserDarkMode,\n  updateUserDeadline,\n  updateUserExpertMode,\n  updateUserSlippageTolerance,\n  muteAudio,\n  unmuteAudio,\n} from './actions'\nimport { setThemeCache } from '../../utils/theme'\n\nfunction serializeToken(token: Token): SerializedToken {\n  return {\n    chainId: token.chainId,\n    address: token.address,\n    decimals: token.decimals,\n    symbol: token.symbol,\n    name: token.name,\n  }\n}\n\nfunction deserializeToken(serializedToken: SerializedToken): Token {\n  return new Token(\n    serializedToken.chainId,\n    serializedToken.address,\n    serializedToken.decimals,\n    serializedToken.symbol,\n    serializedToken.name\n  )\n}\n\nexport function useIsDarkMode(): boolean {\n  const { userDarkMode, matchesDarkMode } = useSelector<\n    AppState,\n    { userDarkMode: boolean | null; matchesDarkMode: boolean }\n  >(\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    ({ user: { matchesDarkMode, userDarkMode } }) => ({\n      userDarkMode,\n      matchesDarkMode,\n    }),\n    shallowEqual\n  )\n  return userDarkMode === null ? matchesDarkMode : userDarkMode\n}\n\nexport function useDarkModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const { userDarkMode } = useSelector<AppState, { userDarkMode: boolean | null }>(\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    ({ user: { userDarkMode } }) => ({\n      userDarkMode,\n    }),\n    shallowEqual\n  )\n  const darkMode = useIsDarkMode()\n\n  const toggleSetDarkMode = useCallback(() => {\n    setThemeCache(!userDarkMode)\n    dispatch(updateUserDarkMode({ userDarkMode: !userDarkMode }))\n  }, [userDarkMode, dispatch])\n\n  return [darkMode, toggleSetDarkMode]\n}\n\nexport function useAudioModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const audioPlay = useSelector<AppState, AppState['user']['audioPlay']>((state) => state.user.audioPlay)\n  const toggleSetAudioMode = useCallback(() => {\n    if (audioPlay) {\n      dispatch(muteAudio())\n    } else {\n      dispatch(unmuteAudio())\n    }\n  }, [audioPlay, dispatch])\n\n  return [audioPlay, toggleSetAudioMode]\n}\n\nexport function useIsExpertMode(): boolean {\n  return useSelector<AppState, AppState['user']['userExpertMode']>((state) => state.user.userExpertMode)\n}\n\nexport function useExpertModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const expertMode = useIsExpertMode()\n\n  const toggleSetExpertMode = useCallback(() => {\n    dispatch(updateUserExpertMode({ userExpertMode: !expertMode }))\n  }, [expertMode, dispatch])\n\n  return [expertMode, toggleSetExpertMode]\n}\n\nexport function useUserSlippageTolerance(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userSlippageTolerance = useSelector<AppState, AppState['user']['userSlippageTolerance']>((state) => {\n    return state.user.userSlippageTolerance\n  })\n\n  const setUserSlippageTolerance = useCallback(\n    (slippageTolerance: number) => {\n      dispatch(updateUserSlippageTolerance({ userSlippageTolerance: slippageTolerance }))\n    },\n    [dispatch]\n  )\n\n  return [userSlippageTolerance, setUserSlippageTolerance]\n}\n\nexport function useUserDeadline(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userDeadline = useSelector<AppState, AppState['user']['userDeadline']>((state) => {\n    return state.user.userDeadline\n  })\n\n  const setUserDeadline = useCallback(\n    (deadline: number) => {\n      dispatch(updateUserDeadline({ userDeadline: deadline }))\n    },\n    [dispatch]\n  )\n\n  return [userDeadline, setUserDeadline]\n}\n\nexport function useAddUserToken(): (token: Token) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (token: Token) => {\n      dispatch(addSerializedToken({ serializedToken: serializeToken(token) }))\n    },\n    [dispatch]\n  )\n}\n\nexport function useRemoveUserAddedToken(): (chainId: number, address: string) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (chainId: number, address: string) => {\n      dispatch(removeSerializedToken({ chainId, address }))\n    },\n    [dispatch]\n  )\n}\n\nexport function useUserAddedTokens(): Token[] {\n  const { chainId } = useActiveWeb3React()\n  const serializedTokensMap = useSelector<AppState, AppState['user']['tokens']>(({ user: { tokens } }) => tokens)\n\n  return useMemo(() => {\n    if (!chainId) return []\n    return Object.values(serializedTokensMap[chainId as ChainId] ?? {}).map(deserializeToken)\n  }, [serializedTokensMap, chainId])\n}\n\nfunction serializePair(pair: Pair): SerializedPair {\n  return {\n    token0: serializeToken(pair.token0),\n    token1: serializeToken(pair.token1),\n  }\n}\n\nexport function usePairAdder(): (pair: Pair) => void {\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (pair: Pair) => {\n      dispatch(addSerializedPair({ serializedPair: serializePair(pair) }))\n    },\n    [dispatch]\n  )\n}\n\n/**\n * Given two tokens return the liquidity token that represents its liquidity shares\n * @param tokenA one of the two tokens\n * @param tokenB the other token\n */\nexport function toV2LiquidityToken([tokenA, tokenB]: [Token, Token]): Token {\n  return new Token(tokenA.chainId, Pair.getAddress(tokenA, tokenB), 18, 'BSCS-LP', 'BSCS LPs')\n}\n\n/**\n * Returns all the pairs of tokens that are tracked by the user for the current chain ID.\n */\nexport function useTrackedTokenPairs(): [Token, Token][] {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  // pinned pairs\n  const pinnedPairs = useMemo(() => (chainId ? PINNED_PAIRS[chainId] ?? [] : []), [chainId])\n\n  // pairs for every token against every base\n  const generatedPairs: [Token, Token][] = useMemo(\n    () =>\n      chainId\n        ? flatMap(Object.keys(tokens), (tokenAddress) => {\n            const token = tokens[tokenAddress]\n            // for each token on the current chain,\n            return (\n              // loop though all bases on the current chain\n              (BASES_TO_TRACK_LIQUIDITY_FOR[chainId] ?? [])\n                // to construct pairs of the given token with each base\n                .map((base) => {\n                  if (base.address === token.address) {\n                    return null\n                  }\n                  return [base, token]\n                })\n                .filter((p): p is [Token, Token] => p !== null)\n            )\n          })\n        : [],\n    [tokens, chainId]\n  )\n\n  // pairs saved by users\n  const savedSerializedPairs = useSelector<AppState, AppState['user']['pairs']>(({ user: { pairs } }) => pairs)\n\n  const userPairs: [Token, Token][] = useMemo(() => {\n    if (!chainId || !savedSerializedPairs) return []\n    const forChain = savedSerializedPairs[chainId]\n    if (!forChain) return []\n\n    return Object.keys(forChain).map((pairId) => {\n      return [deserializeToken(forChain[pairId].token0), deserializeToken(forChain[pairId].token1)]\n    })\n  }, [savedSerializedPairs, chainId])\n\n  const combinedList = useMemo(() => userPairs.concat(generatedPairs).concat(pinnedPairs), [\n    generatedPairs,\n    pinnedPairs,\n    userPairs,\n  ])\n\n  return useMemo(() => {\n    // dedupes pairs of tokens in the combined list\n    const keyed = combinedList.reduce<{ [key: string]: [Token, Token] }>((memo, [tokenA, tokenB]) => {\n      const sorted = tokenA.sortsBefore(tokenB)\n      const key = sorted ? `${tokenA.address}:${tokenB.address}` : `${tokenB.address}:${tokenA.address}`\n      if (memo[key]) return memo\n      memo[key] = sorted ? [tokenA, tokenB] : [tokenB, tokenA]\n      return memo\n    }, {})\n\n    return Object.keys(keyed).map((key) => keyed[key])\n  }, [combinedList])\n}\n","import { parseBytes32String } from '@ethersproject/strings'\nimport { Currency, ETHER, Token, currencyEquals } from '@beswap/sdk'\nimport { useMemo } from 'react'\nimport { useSelectedTokenList } from '../state/lists/hooks'\nimport { NEVER_RELOAD, useSingleCallResult } from '../state/multicall/hooks'\n// eslint-disable-next-line import/no-cycle\nimport { useUserAddedTokens } from '../state/user/hooks'\nimport { isAddress } from '../utils'\n\nimport { useActiveWeb3React } from './index'\nimport { useBytes32TokenContract, useTokenContract } from './useContract'\n\nexport function useAllTokens(): { [address: string]: Token } {\n  const { chainId } = useActiveWeb3React()\n  const userAddedTokens = useUserAddedTokens()\n  const allTokens = useSelectedTokenList()\n\n  return useMemo(() => {\n    if (!chainId) return {}\n    return (\n      userAddedTokens\n        // reduce into all ALL_TOKENS filtered by the current chain\n        .reduce<{ [address: string]: Token }>(\n          (tokenMap, token) => {\n            tokenMap[token.address] = token\n            return tokenMap\n          },\n          // must make a copy because reduce modifies the map, and we do not\n          // want to make a copy in every iteration\n          { ...allTokens[chainId] }\n        )\n    )\n  }, [chainId, userAddedTokens, allTokens])\n}\n\n// Check if currency is included in custom list from user storage\nexport function useIsUserAddedToken(currency: Currency): boolean {\n  const userAddedTokens = useUserAddedTokens()\n  return !!userAddedTokens.find((token) => currencyEquals(currency, token))\n}\n\n// parse a name or symbol from a token response\nconst BYTES32_REGEX = /^0x[a-fA-F0-9]{64}$/\nfunction parseStringOrBytes32(str: string | undefined, bytes32: string | undefined, defaultValue: string): string {\n  return str && str.length > 0\n    ? str\n    : bytes32 && BYTES32_REGEX.test(bytes32)\n    ? parseBytes32String(bytes32)\n    : defaultValue\n}\n\n// undefined if invalid or does not exist\n// null if loading\n// otherwise returns the token\nexport function useToken(tokenAddress?: string): Token | undefined | null {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  const address = isAddress(tokenAddress)\n\n  const tokenContract = useTokenContract(address || undefined, false)\n  const tokenContractBytes32 = useBytes32TokenContract(address || undefined, false)\n  const token: Token | undefined = address ? tokens[address] : undefined\n\n  const tokenName = useSingleCallResult(token ? undefined : tokenContract, 'name', undefined, NEVER_RELOAD)\n  const tokenNameBytes32 = useSingleCallResult(\n    token ? undefined : tokenContractBytes32,\n    'name',\n    undefined,\n    NEVER_RELOAD\n  )\n  const symbol = useSingleCallResult(token ? undefined : tokenContract, 'symbol', undefined, NEVER_RELOAD)\n  const symbolBytes32 = useSingleCallResult(token ? undefined : tokenContractBytes32, 'symbol', undefined, NEVER_RELOAD)\n  const decimals = useSingleCallResult(token ? undefined : tokenContract, 'decimals', undefined, NEVER_RELOAD)\n\n  return useMemo(() => {\n    if (token) return token\n    if (!chainId || !address) return undefined\n    if (decimals.loading || symbol.loading || tokenName.loading) return null\n    if (decimals.result) {\n      return new Token(\n        chainId,\n        address,\n        decimals.result[0],\n        parseStringOrBytes32(symbol.result?.[0], symbolBytes32.result?.[0], 'UNKNOWN'),\n        parseStringOrBytes32(tokenName.result?.[0], tokenNameBytes32.result?.[0], 'Unknown Token')\n      )\n    }\n    return undefined\n  }, [\n    address,\n    chainId,\n    decimals.loading,\n    decimals.result,\n    symbol.loading,\n    symbol.result,\n    symbolBytes32.result,\n    token,\n    tokenName.loading,\n    tokenName.result,\n    tokenNameBytes32.result,\n  ])\n}\n\nexport function useCurrency(currencyId: string | undefined): Currency | null | undefined {\n  const isETH = currencyId?.toUpperCase() === 'ETH'\n  const token = useToken(isETH ? undefined : currencyId)\n  return isETH ? ETHER : token\n}\n","import { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount } from '@beswap/sdk'\nimport { useMemo } from 'react'\nimport ERC20_INTERFACE from '../../constants/abis/erc20'\nimport { useAllTokens } from '../../hooks/Tokens'\nimport { useActiveWeb3React } from '../../hooks'\nimport { useMulticallContract } from '../../hooks/useContract'\nimport { isAddress } from '../../utils'\nimport { useSingleContractMultipleData, useMultipleContractSingleData } from '../multicall/hooks'\n\n/**\n * Returns a map of the given addresses to their eventually consistent ETH balances.\n */\nexport function useETHBalances(\n  uncheckedAddresses?: (string | undefined)[]\n): { [address: string]: CurrencyAmount | undefined } {\n  const multicallContract = useMulticallContract()\n\n  const addresses: string[] = useMemo(\n    () =>\n      uncheckedAddresses\n        ? uncheckedAddresses\n            .map(isAddress)\n            .filter((a): a is string => a !== false)\n            .sort()\n        : [],\n    [uncheckedAddresses]\n  )\n\n  const results = useSingleContractMultipleData(\n    multicallContract,\n    'getEthBalance',\n    addresses.map(address => [address])\n  )\n\n  return useMemo(\n    () =>\n      addresses.reduce<{ [address: string]: CurrencyAmount }>((memo, address, i) => {\n        const value = results?.[i]?.result?.[0]\n        if (value) memo[address] = CurrencyAmount.ether(JSBI.BigInt(value.toString()))\n        return memo\n      }, {}),\n    [addresses, results]\n  )\n}\n\n/**\n * Returns a map of token addresses to their eventually consistent token balances for a single account.\n */\nexport function useTokenBalancesWithLoadingIndicator(\n  address?: string,\n  tokens?: (Token | undefined)[]\n): [{ [tokenAddress: string]: TokenAmount | undefined }, boolean] {\n  const validatedTokens: Token[] = useMemo(\n    () => tokens?.filter((t?: Token): t is Token => isAddress(t?.address) !== false) ?? [],\n    [tokens]\n  )\n\n  const validatedTokenAddresses = useMemo(() => validatedTokens.map(vt => vt.address), [validatedTokens])\n\n  const balances = useMultipleContractSingleData(validatedTokenAddresses, ERC20_INTERFACE, 'balanceOf', [address])\n\n  const anyLoading: boolean = useMemo(() => balances.some(callState => callState.loading), [balances])\n\n  return [\n    useMemo(\n      () =>\n        address && validatedTokens.length > 0\n          ? validatedTokens.reduce<{ [tokenAddress: string]: TokenAmount | undefined }>((memo, token, i) => {\n              const value = balances?.[i]?.result?.[0]\n              const amount = value ? JSBI.BigInt(value.toString()) : undefined\n              if (amount) {\n                memo[token.address] = new TokenAmount(token, amount)\n              }\n              return memo\n            }, {})\n          : {},\n      [address, validatedTokens, balances]\n    ),\n    anyLoading\n  ]\n}\n\nexport function useTokenBalances(\n  address?: string,\n  tokens?: (Token | undefined)[]\n): { [tokenAddress: string]: TokenAmount | undefined } {\n  return useTokenBalancesWithLoadingIndicator(address, tokens)[0]\n}\n\n// get the balance for a single token/account combo\nexport function useTokenBalance(account?: string, token?: Token): TokenAmount | undefined {\n  const tokenBalances = useTokenBalances(account, [token])\n  if (!token) return undefined\n  return tokenBalances[token.address]\n}\n\nexport function useCurrencyBalances(\n  account?: string,\n  currencies?: (Currency | undefined)[]\n): (CurrencyAmount | undefined)[] {\n  const tokens = useMemo(() => currencies?.filter((currency): currency is Token => currency instanceof Token) ?? [], [\n    currencies\n  ])\n\n  const tokenBalances = useTokenBalances(account, tokens)\n  const containsETH: boolean = useMemo(() => currencies?.some(currency => currency === ETHER) ?? false, [currencies])\n  const ethBalance = useETHBalances(containsETH ? [account] : [])\n\n  return useMemo(\n    () =>\n      currencies?.map(currency => {\n        if (!account || !currency) return undefined\n        if (currency instanceof Token) return tokenBalances[currency.address]\n        if (currency === ETHER) return ethBalance[account]\n        return undefined\n      }) ?? [],\n    [account, currencies, ethBalance, tokenBalances]\n  )\n}\n\nexport function useCurrencyBalance(account?: string, currency?: Currency): CurrencyAmount | undefined {\n  return useCurrencyBalances(account, [currency])[0]\n}\n\n// mimics useAllBalances\nexport function useAllTokenBalances(): { [tokenAddress: string]: TokenAmount | undefined } {\n  const { account } = useActiveWeb3React()\n  const allTokens = useAllTokens()\n  const allTokensArray = useMemo(() => Object.values(allTokens ?? {}), [allTokens])\n  const balances = useTokenBalances(account ?? undefined, allTokensArray)\n  return balances ?? {}\n}\n","import { useEffect, useState } from 'react'\n\n/**\n * Returns the last value of type T that passes a filter function\n * @param value changing value\n * @param filterFn function that determines whether a given value should be considered for the last value\n */\nexport default function useLast<T>(\n  value: T | undefined | null,\n  filterFn?: (value: T | null | undefined) => boolean\n): T | null | undefined {\n  const [last, setLast] = useState<T | null | undefined>(filterFn && filterFn(value) ? value : undefined)\n  useEffect(() => {\n    setLast((prev) => {\n      const shouldUse: boolean = filterFn ? filterFn(value) : true\n      if (shouldUse) return value\n      return prev\n    })\n  }, [filterFn, value])\n  return last\n}\n\nfunction isDefined<T>(x: T | null | undefined): x is T {\n  return x !== null && x !== undefined\n}\n\n/**\n * Returns the last truthy value of type T\n * @param value changing value\n */\nexport function useLastTruthy<T>(value: T | undefined | null): T | null | undefined {\n  return useLast(value, isDefined)\n}\n","import styled from 'styled-components'\n\nconst Card = styled.div<any>`\n  width: 100%;\n  border-radius: 16px;\n  padding: 1.25rem;\n  padding: ${({ padding }) => padding};\n  border: ${({ border }) => border};\n  border-radius: ${({ borderRadius }) => borderRadius};\n`\nexport default Card\n\nexport const LightCard = styled(Card)`\n  border: 1px solid ${({ theme }) => theme.colors.invertedContrast};\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\n`\n\nexport const GreyCard = styled(Card)`\n  background-color: ${({ theme }) => theme.colors.tertiary};\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport useHttpLocations from 'hooks/useHttpLocations'\n\nimport Logo from '../Logo'\n\nconst StyledListLogo = styled(Logo)<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n`\n\nexport default function ListLogo({\n  logoURI,\n  style,\n  size = '24px',\n  alt\n}: {\n  logoURI: string\n  size?: string\n  style?: React.CSSProperties\n  alt?: string\n}) {\n  const srcs: string[] = useHttpLocations(logoURI)\n\n  return <StyledListLogo alt={alt} size={size} srcs={srcs} style={style} />\n}\n","import React from 'react'\nimport { Text } from '@luckyswap/uikit'\nimport { ChainId, Currency, currencyEquals, ETHER, Token } from '@beswap/sdk'\nimport styled from 'styled-components'\n\nimport { SUGGESTED_BASES } from '../../../constants'\nimport { AutoColumn } from '../Column'\nimport QuestionHelper from '../QuestionHelper'\nimport { AutoRow } from '../Row'\nimport CurrencyLogo from '../CurrencyLogo'\n\nconst BaseWrapper = styled.div<{ disable?: boolean }>`\n  border: 1px solid ${({ theme, disable }) => (disable ? 'transparent' : theme.colors.tertiary)};\n  border-radius: 10px;\n  display: flex;\n  padding: 6px;\n\n  align-items: center;\n  :hover {\n    cursor: ${({ disable }) => !disable && 'pointer'};\n    background-color: ${({ theme, disable }) => !disable && theme.colors.invertedContrast};\n  }\n\n  background-color: ${({ theme, disable }) => disable && theme.colors.tertiary};\n  opacity: ${({ disable }) => disable && '0.4'};\n`\n\nexport default function CommonBases({\n  chainId,\n  onSelect,\n  selectedCurrency\n}: {\n  chainId?: ChainId\n  selectedCurrency?: Currency | null\n  onSelect: (currency: Currency) => void\n}) {\n  return (\n    <AutoColumn gap=\"md\">\n      <AutoRow>\n        <Text fontSize=\"14px\">Common bases</Text>\n        <QuestionHelper text=\"These tokens are commonly paired with other tokens.\" />\n      </AutoRow>\n      <AutoRow gap=\"4px\">\n        <BaseWrapper\n          onClick={() => {\n            if (!selectedCurrency || !currencyEquals(selectedCurrency, ETHER)) {\n              onSelect(ETHER)\n            }\n          }}\n          disable={selectedCurrency === ETHER}\n        >\n          <CurrencyLogo currency={ETHER} style={{ marginRight: 8 }} />\n          <Text>BNB</Text>\n        </BaseWrapper>\n        {(chainId ? SUGGESTED_BASES[chainId] : []).map((token: Token) => {\n          const selected = selectedCurrency instanceof Token && selectedCurrency.address === token.address\n          return (\n            <BaseWrapper onClick={() => !selected && onSelect(token)} disable={selected} key={token.address}>\n              <CurrencyLogo currency={token} style={{ marginRight: 8 }} />\n              <Text>{token.symbol}</Text>\n            </BaseWrapper>\n          )\n        })}\n      </AutoRow>\n    </AutoColumn>\n  )\n}\n","import styled from 'styled-components'\nimport { AutoColumn } from '../Column'\nimport { RowBetween, RowFixed } from '../Row'\n\nexport const FadedSpan = styled(RowFixed)`\n  color: ${({ theme }) => theme.colors.primary};\n  font-size: 14px;\n`\n\nexport const PaddedColumn = styled(AutoColumn)`\n  padding: 20px;\n  padding-bottom: 12px;\n`\n\nexport const MenuItem = styled(RowBetween)`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) auto minmax(0, 72px);\n  grid-gap: 16px;\n  cursor: ${({ disabled }) => !disabled && 'pointer'};\n  pointer-events: ${({ disabled }) => disabled && 'none'};\n  :hover {\n    background-color: ${({ theme, disabled }) => !disabled && theme.colors.invertedContrast};\n  }\n  opacity: ${({ disabled, selected }) => (disabled || selected ? 0.5 : 1)};\n`\n\nexport const SearchInput = styled.input`\n  position: relative;\n  display: flex;\n  padding: 16px;\n  align-items: center;\n  width: 100%;\n  white-space: nowrap;\n  background: none;\n  border: none;\n  outline: none;\n  border-radius: 20px;\n  color: ${({ theme }) => theme.colors.text};\n  border-style: solid;\n  border: 1px solid ${({ theme }) => theme.colors.tertiary};\n  -webkit-appearance: none;\n\n  font-size: 18px;\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textDisabled};\n  }\n  transition: border 100ms;\n  :focus {\n    border: 1px solid ${({ theme }) => theme.colors.primary};\n    outline: none;\n  }\n`\nexport const Separator = styled.div`\n  width: 100%;\n  height: 1px;\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\n`\n\nexport const SeparatorDark = styled.div`\n  width: 100%;\n  height: 1px;\n  background-color: ${({ theme }) => theme.colors.tertiary};\n`\n","import React from 'react'\n\nimport styled, { keyframes } from 'styled-components'\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`\n\nconst StyledSVG = styled.svg<{ size: string; stroke?: string }>`\n  animation: 2s ${rotate} linear infinite;\n  height: ${({ size }) => size};\n  width: ${({ size }) => size};\n  path {\n    stroke: ${({ stroke, theme }) => stroke ?? theme.colors.primary};\n  }\n`\n\n/**\n * Takes in custom size and stroke for circle color, default to primary color as fill,\n * need ...rest for layered styles on top\n */\nexport default function Loader({ size = '16px', stroke, ...rest }: { size?: string; stroke?: string }) {\n  return (\n    <StyledSVG viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" size={size} stroke={stroke} {...rest}>\n      <path\n        d=\"M12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22C17.5228 22 22 17.5228 22 12C22 9.27455 20.9097 6.80375 19.1414 5\"\n        strokeWidth=\"2.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </StyledSVG>\n  )\n}\n","import { Currency, CurrencyAmount, currencyEquals, ETHER, Token } from '@beswap/sdk'\nimport React, { CSSProperties, MutableRefObject, useCallback, useMemo } from 'react'\nimport { FixedSizeList } from 'react-window'\nimport styled from 'styled-components'\nimport { Text } from '@luckyswap/uikit'\nimport { useActiveWeb3React } from '../../../hooks'\nimport { useSelectedTokenList, WrappedTokenInfo } from '../../../state/lists/hooks'\nimport { useAddUserToken, useRemoveUserAddedToken } from '../../../state/user/hooks'\nimport { useCurrencyBalance } from '../../../state/wallet/hooks'\nimport { LinkStyledButton } from '../Shared'\nimport { useIsUserAddedToken } from '../../../hooks/Tokens'\nimport Column from '../Column'\nimport { RowFixed } from '../Row'\nimport CurrencyLogo from '../CurrencyLogo'\nimport { MouseoverTooltip } from '../Tooltip'\nimport { FadedSpan, MenuItem } from './styleds'\nimport Loader from '../Loader'\nimport { isTokenOnList } from '../../../utils'\n\nfunction currencyKey(currency: Currency): string {\n  return currency instanceof Token ? currency.address : currency === ETHER ? 'ETHER' : ''\n}\n\nconst StyledBalanceText = styled(Text)`\n  white-space: nowrap;\n  overflow: hidden;\n  max-width: 5rem;\n  text-overflow: ellipsis;\n`\n\nconst Tag = styled.div`\n  background-color: ${({ theme }) => theme.colors.tertiary};\n  color: ${({ theme }) => theme.colors.textSubtle};\n  font-size: 14px;\n  border-radius: 4px;\n  padding: 0.25rem 0.3rem 0.25rem 0.3rem;\n  max-width: 6rem;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  justify-self: flex-end;\n  margin-right: 4px;\n`\n\nfunction Balance({ balance }: { balance: CurrencyAmount }) {\n  return <StyledBalanceText title={balance.toExact()}>{balance.toSignificant(4)}</StyledBalanceText>\n}\n\nconst TagContainer = styled.div`\n  display: flex;\n  justify-content: flex-end;\n`\n\nfunction TokenTags({ currency }: { currency: Currency }) {\n  if (!(currency instanceof WrappedTokenInfo)) {\n    return <span />\n  }\n\n  const { tags } = currency\n  if (!tags || tags.length === 0) return <span />\n\n  const tag = tags[0]\n\n  return (\n    <TagContainer>\n      <MouseoverTooltip text={tag.description}>\n        <Tag key={tag.id}>{tag.name}</Tag>\n      </MouseoverTooltip>\n      {tags.length > 1 ? (\n        <MouseoverTooltip\n          text={tags\n            .slice(1)\n            .map(({ name, description }) => `${name}: ${description}`)\n            .join('; \\n')}\n        >\n          <Tag>...</Tag>\n        </MouseoverTooltip>\n      ) : null}\n    </TagContainer>\n  )\n}\n\nfunction CurrencyRow({\n  currency,\n  onSelect,\n  isSelected,\n  otherSelected,\n  style,\n}: {\n  currency: Currency\n  onSelect: () => void\n  isSelected: boolean\n  otherSelected: boolean\n  style: CSSProperties\n}) {\n  const { account, chainId } = useActiveWeb3React()\n  const key = currencyKey(currency)\n  const selectedTokenList = useSelectedTokenList()\n  const isOnSelectedList = isTokenOnList(selectedTokenList, currency)\n  const customAdded = useIsUserAddedToken(currency)\n  const balance = useCurrencyBalance(account ?? undefined, currency)\n\n  const removeToken = useRemoveUserAddedToken()\n  const addToken = useAddUserToken()\n\n  // only show add or remove buttons if not on selected list\n  return (\n    <MenuItem\n      style={style}\n      className={`token-item-${key}`}\n      onClick={() => (isSelected ? null : onSelect())}\n      disabled={isSelected}\n      selected={otherSelected}\n    >\n      <CurrencyLogo currency={currency} size=\"24px\" />\n      <Column>\n        <Text title={currency.name}>{currency.symbol}</Text>\n        <FadedSpan>\n          {!isOnSelectedList && customAdded && !(currency instanceof WrappedTokenInfo) ? (\n            <Text>\n              Added by user\n              <LinkStyledButton\n                onClick={(event) => {\n                  event.stopPropagation()\n                  if (chainId && currency instanceof Token) removeToken(chainId, currency.address)\n                }}\n              >\n                (Remove)\n              </LinkStyledButton>\n            </Text>\n          ) : null}\n          {!isOnSelectedList && !customAdded && !(currency instanceof WrappedTokenInfo) ? (\n            <Text>\n              Found by address\n              <LinkStyledButton\n                onClick={(event) => {\n                  event.stopPropagation()\n                  if (currency instanceof Token) addToken(currency)\n                }}\n              >\n                (Add)\n              </LinkStyledButton>\n            </Text>\n          ) : null}\n        </FadedSpan>\n      </Column>\n      <TokenTags currency={currency} />\n      <RowFixed style={{ justifySelf: 'flex-end' }}>\n        {balance ? <Balance balance={balance} /> : account ? <Loader /> : null}\n      </RowFixed>\n    </MenuItem>\n  )\n}\n\nexport default function CurrencyList({\n  height,\n  currencies,\n  selectedCurrency,\n  onCurrencySelect,\n  otherCurrency,\n  fixedListRef,\n  showETH,\n}: {\n  height: number\n  currencies: Currency[]\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherCurrency?: Currency | null\n  fixedListRef?: MutableRefObject<FixedSizeList | undefined>\n  showETH: boolean\n}) {\n  const itemData = useMemo(() => (showETH ? [Currency.ETHER, ...currencies] : [...currencies]), [currencies, showETH])\n\n  const Row = useCallback(\n    ({ data, index, style }) => {\n      const currency: Currency = data[index]\n      const isSelected = Boolean(selectedCurrency && currencyEquals(selectedCurrency, currency))\n      const otherSelected = Boolean(otherCurrency && currencyEquals(otherCurrency, currency))\n      const handleSelect = () => onCurrencySelect(currency)\n      return (\n        <CurrencyRow\n          style={style}\n          currency={currency}\n          isSelected={isSelected}\n          onSelect={handleSelect}\n          otherSelected={otherSelected}\n        />\n      )\n    },\n    [onCurrencySelect, otherCurrency, selectedCurrency]\n  )\n\n  const itemKey = useCallback((index: number, data: any) => currencyKey(data[index]), [])\n\n  return (\n    <FixedSizeList\n      height={height}\n      ref={fixedListRef as any}\n      width=\"100%\"\n      itemData={itemData}\n      itemCount={itemData.length}\n      itemSize={56}\n      itemKey={itemKey}\n    >\n      {Row}\n    </FixedSizeList>\n  )\n}\n","import { Token } from '@beswap/sdk'\nimport { isAddress } from 'utils/'\n\nexport function filterTokens(tokens: Token[], search: string): Token[] {\n  if (search.length === 0) return tokens\n\n  const searchingAddress = isAddress(search)\n\n  if (searchingAddress) {\n    return tokens.filter((token) => token.address === searchingAddress)\n  }\n\n  const lowerSearchParts = search\n    .toLowerCase()\n    .split(/\\s+/)\n    .filter((s) => s.length > 0)\n\n  if (lowerSearchParts.length === 0) {\n    return tokens\n  }\n\n  const matchesSearch = (s: string): boolean => {\n    const sParts = s\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((str) => str.length > 0)\n\n    return lowerSearchParts.every((p) => p.length === 0 || sParts.some((sp) => sp.startsWith(p) || sp.endsWith(p)))\n  }\n\n  return tokens.filter((token) => {\n    const { symbol, name } = token\n\n    return (symbol && matchesSearch(symbol)) || (name && matchesSearch(name))\n  })\n}\n\nexport default filterTokens\n","import React from 'react'\nimport { Text } from '@luckyswap/uikit'\nimport styled from 'styled-components'\nimport { RowFixed } from '../Row'\n\nexport const FilterWrapper = styled(RowFixed)`\n  padding: 8px;\n  color: ${({ theme }) => theme.colors.text};\n  border-radius: 8px;\n  user-select: none;\n  & > * {\n    user-select: none;\n  }\n  :hover {\n    cursor: pointer;\n  }\n`\n\nexport default function SortButton({\n  toggleSortOrder,\n  ascending\n}: {\n  toggleSortOrder: () => void\n  ascending: boolean\n}) {\n  return (\n    <FilterWrapper onClick={toggleSortOrder}>\n      <Text fontSize=\"14px\">{ascending ? '↑' : '↓'}</Text>\n    </FilterWrapper>\n  )\n}\n","import { Token, TokenAmount } from '@beswap/sdk'\nimport { useMemo } from 'react'\nimport { useAllTokenBalances } from 'state/wallet/hooks'\n\n// compare two token amounts with highest one coming first\nfunction balanceComparator(balanceA?: TokenAmount, balanceB?: TokenAmount) {\n  if (balanceA && balanceB) {\n    return balanceA.greaterThan(balanceB) ? -1 : balanceA.equalTo(balanceB) ? 0 : 1\n  }\n  if (balanceA && balanceA.greaterThan('0')) {\n    return -1\n  }\n  if (balanceB && balanceB.greaterThan('0')) {\n    return 1\n  }\n  return 0\n}\n\nfunction getTokenComparator(balances: {\n  [tokenAddress: string]: TokenAmount | undefined\n}): (tokenA: Token, tokenB: Token) => number {\n  return function sortTokens(tokenA: Token, tokenB: Token): number {\n    // -1 = a is first\n    // 1 = b is first\n\n    // sort by balances\n    const balanceA = balances[tokenA.address]\n    const balanceB = balances[tokenB.address]\n\n    const balanceComp = balanceComparator(balanceA, balanceB)\n    if (balanceComp !== 0) return balanceComp\n\n    if (tokenA.symbol && tokenB.symbol) {\n      // sort by symbol\n      return tokenA.symbol.toLowerCase() < tokenB.symbol.toLowerCase() ? -1 : 1\n    }\n    return tokenA.symbol ? -1 : tokenB.symbol ? -1 : 0\n  }\n}\n\nexport function useTokenComparator(inverted: boolean): (tokenA: Token, tokenB: Token) => number {\n  const balances = useAllTokenBalances()\n  const comparator = useMemo(() => getTokenComparator(balances ?? {}), [balances])\n  return useMemo(() => {\n    if (inverted) {\n      return (tokenA: Token, tokenB: Token) => comparator(tokenA, tokenB) * -1\n    }\n    return comparator\n  }, [inverted, comparator])\n}\n\nexport default useTokenComparator\n","import React from 'react'\nimport useI18n from 'hooks/useI18n'\n\nexport interface TranslatedTextProps {\n  translationId: number\n  children: string\n}\n\nconst TranslatedText = ({ translationId, children }: TranslatedTextProps) => {\n  const TranslateString = useI18n()\n  return <>{TranslateString(translationId, children)}</>\n}\n\nexport default TranslatedText\n","import { Currency, ETHER, Token } from '@beswap/sdk'\nimport React, { KeyboardEvent, RefObject, useCallback, useContext, useEffect, useMemo, useRef, useState } from 'react'\nimport { Text, CloseIcon } from '@luckyswap/uikit'\nimport { useSelector } from 'react-redux'\nimport { useTranslation } from 'react-i18next'\nimport { FixedSizeList } from 'react-window'\nimport { ThemeContext } from 'styled-components'\nimport AutoSizer from 'react-virtualized-auto-sizer'\nimport { useActiveWeb3React } from '../../../hooks'\nimport { AppState } from '../../../state'\nimport { useAllTokens, useToken } from '../../../hooks/Tokens'\nimport { useSelectedListInfo } from '../../../state/lists/hooks'\nimport { LinkStyledButton } from '../Shared'\nimport { isAddress } from '../../../utils'\nimport Card from '../Card'\nimport Column from '../Column'\nimport ListLogo from '../ListLogo'\nimport QuestionHelper from '../QuestionHelper'\nimport Row, { RowBetween } from '../Row'\nimport CommonBases from './CommonBases'\nimport CurrencyList from './CurrencyList'\nimport { filterTokens } from './filtering'\nimport SortButton from './SortButton'\nimport { useTokenComparator } from './sorting'\nimport { PaddedColumn, SearchInput, Separator } from './styleds'\nimport TranslatedText from '../TranslatedText'\nimport { TranslateString } from '../../../utils/translateTextHelpers'\n\ninterface CurrencySearchProps {\n  isOpen: boolean\n  onDismiss: () => void\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherSelectedCurrency?: Currency | null\n  showCommonBases?: boolean\n  onChangeList: () => void\n}\n\nexport function CurrencySearch({\n  selectedCurrency,\n  onCurrencySelect,\n  otherSelectedCurrency,\n  showCommonBases,\n  onDismiss,\n  isOpen,\n  onChangeList,\n}: CurrencySearchProps) {\n  const { t } = useTranslation()\n  const { chainId } = useActiveWeb3React()\n  const theme = useContext(ThemeContext)\n\n  const fixedList = useRef<FixedSizeList>()\n  const [searchQuery, setSearchQuery] = useState<string>('')\n  const [invertSearchOrder, setInvertSearchOrder] = useState<boolean>(false)\n  const allTokens = useAllTokens()\n\n  // if they input an address, use it\n  const isAddressSearch = isAddress(searchQuery)\n  const searchToken = useToken(searchQuery)\n\n  const showETH: boolean = useMemo(() => {\n    const s = searchQuery.toLowerCase().trim()\n    return s === '' || s === 'e' || s === 'et' || s === 'eth'\n  }, [searchQuery])\n\n  const tokenComparator = useTokenComparator(invertSearchOrder)\n\n  const audioPlay = useSelector<AppState, AppState['user']['audioPlay']>((state) => state.user.audioPlay)\n\n  const filteredTokens: Token[] = useMemo(() => {\n    if (isAddressSearch) return searchToken ? [searchToken] : []\n    return filterTokens(Object.values(allTokens), searchQuery)\n  }, [isAddressSearch, searchToken, allTokens, searchQuery])\n\n  const filteredSortedTokens: Token[] = useMemo(() => {\n    if (searchToken) return [searchToken]\n    const sorted = filteredTokens.sort(tokenComparator)\n    const symbolMatch = searchQuery\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((s) => s.length > 0)\n    if (symbolMatch.length > 1) return sorted\n\n    return [\n      ...(searchToken ? [searchToken] : []),\n      // sort any exact symbol matches first\n      ...sorted.filter((token) => token.symbol?.toLowerCase() === symbolMatch[0]),\n      ...sorted.filter((token) => token.symbol?.toLowerCase() !== symbolMatch[0]),\n    ]\n  }, [filteredTokens, searchQuery, searchToken, tokenComparator])\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onCurrencySelect(currency)\n      onDismiss()\n      if (audioPlay) {\n        const audio = document.getElementById('bgMusic') as HTMLAudioElement\n        if (audio) {\n          audio.play()\n        }\n      }\n    },\n    [onDismiss, onCurrencySelect, audioPlay]\n  )\n\n  // clear the input on open\n  useEffect(() => {\n    if (isOpen) setSearchQuery('')\n  }, [isOpen])\n\n  // manage focus on modal show\n  const inputRef = useRef<HTMLInputElement>()\n  const handleInput = useCallback((event) => {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n    fixedList.current?.scrollTo(0)\n  }, [])\n\n  const handleEnter = useCallback(\n    (e: KeyboardEvent<HTMLInputElement>) => {\n      if (e.key === 'Enter') {\n        const s = searchQuery.toLowerCase().trim()\n        if (s === 'eth') {\n          handleCurrencySelect(ETHER)\n        } else if (filteredSortedTokens.length > 0) {\n          if (\n            filteredSortedTokens[0].symbol?.toLowerCase() === searchQuery.trim().toLowerCase() ||\n            filteredSortedTokens.length === 1\n          ) {\n            handleCurrencySelect(filteredSortedTokens[0])\n          }\n        }\n      }\n    },\n    [filteredSortedTokens, handleCurrencySelect, searchQuery]\n  )\n\n  const selectedListInfo = useSelectedListInfo()\n\n  return (\n    <Column style={{ width: '100%', flex: '1 1' }} className=\"column-sl\">\n      <PaddedColumn gap=\"14px\">\n        <RowBetween>\n          <Text className=\"title-select\">\n            <TranslatedText translationId={82}>Select a token</TranslatedText>\n            <QuestionHelper\n              text={TranslateString(\n                130,\n                'Find a token by searching for its name or symbol or by pasting its address below.'\n              )}\n            />\n          </Text>\n          <CloseIcon onClick={onDismiss} />\n        </RowBetween>\n        <SearchInput\n          type=\"text\"\n          id=\"token-search-input\"\n          placeholder={t('Search name or paste address')}\n          value={searchQuery}\n          ref={inputRef as RefObject<HTMLInputElement>}\n          onChange={handleInput}\n          onKeyDown={handleEnter}\n        />\n        {showCommonBases && (\n          <CommonBases chainId={chainId} onSelect={handleCurrencySelect} selectedCurrency={selectedCurrency} />\n        )}\n        <RowBetween>\n          <Text fontSize=\"14px\">\n            <TranslatedText translationId={126}>Token name</TranslatedText>\n          </Text>\n          <SortButton ascending={invertSearchOrder} toggleSortOrder={() => setInvertSearchOrder((iso) => !iso)} />\n        </RowBetween>\n      </PaddedColumn>\n      <Separator />\n\n      <div style={{ flex: '1' }} className=\"box-list-token\">\n        <AutoSizer disableWidth>\n          {({ height }) => (\n            <CurrencyList\n              height={height}\n              showETH={showETH}\n              currencies={filteredSortedTokens}\n              onCurrencySelect={handleCurrencySelect}\n              otherCurrency={otherSelectedCurrency}\n              selectedCurrency={selectedCurrency}\n              fixedListRef={fixedList}\n            />\n          )}\n        </AutoSizer>\n      </div>\n\n      {null && (\n        <>\n          <Separator />\n          <Card>\n            <RowBetween>\n              {selectedListInfo.current ? (\n                <Row>\n                  {selectedListInfo.current.logoURI ? (\n                    <ListLogo\n                      style={{ marginRight: 12 }}\n                      logoURI={selectedListInfo.current.logoURI}\n                      alt={`${selectedListInfo.current.name} list logo`}\n                    />\n                  ) : null}\n                  <Text id=\"currency-search-selected-list-name\" color=\"red\">{selectedListInfo.current.name}</Text>\n                </Row>\n              ) : null}\n              <LinkStyledButton\n                style={{ fontWeight: 500, color: theme.colors.textSubtle, fontSize: 16 }}\n                onClick={onChangeList}\n                id=\"currency-search-change-list-button\"\n              >\n                {selectedListInfo.current ? 'Change' : 'Select a list'}\n              </LinkStyledButton>\n            </RowBetween>\n          </Card>\n        </>\n      )}\n    </Column>\n  )\n}\n\nexport default CurrencySearch\n","import { TokenList } from '@uniswap/token-lists'\nimport schema from '@uniswap/token-lists/src/tokenlist.schema.json'\nimport Ajv from 'ajv'\nimport contenthashToUri from './contenthashToUri'\nimport { parseENSAddress } from './parseENSAddress'\nimport uriToHttp from './uriToHttp'\n\n// bakeryswap defaultTokenJson\nimport { DEFAULT_TOKEN_LIST_URL } from '../constants/lists'\nimport defaultTokenJson from '../constants/token/luckyswap.json'\n\nconst tokenListValidator = new Ajv({ allErrors: true }).compile(schema)\n\n/**\n * Contains the logic for resolving a list URL to a validated token list\n * @param listUrl list url\n * @param resolveENSContentHash resolves an ens name to a contenthash\n */\nexport default async function getTokenList(\n  listUrl: string,\n  resolveENSContentHash: (ensName: string) => Promise<string>\n): Promise<TokenList> {\n  if (listUrl === DEFAULT_TOKEN_LIST_URL) {\n    return defaultTokenJson\n  }\n  const parsedENS = parseENSAddress(listUrl)\n\n  let urls: string[]\n  if (parsedENS) {\n    let contentHashUri\n    try {\n      contentHashUri = await resolveENSContentHash(parsedENS.ensName)\n    } catch (error) {\n      console.error(`Failed to resolve ENS name: ${parsedENS.ensName}`, error)\n      throw new Error(`Failed to resolve ENS name: ${parsedENS.ensName}`)\n    }\n    let translatedUri\n    try {\n      translatedUri = contenthashToUri(contentHashUri)\n    } catch (error) {\n      console.error('Failed to translate contenthash to URI', contentHashUri)\n      throw new Error(`Failed to translate contenthash to URI: ${contentHashUri}`)\n    }\n    urls = uriToHttp(`${translatedUri}${parsedENS.ensPath ?? ''}`)\n  } else {\n    urls = uriToHttp(listUrl)\n  }\n  for (let i = 0; i < urls.length; i++) {\n    const url = urls[i]\n    const isLast = i === urls.length - 1\n    let response\n    try {\n      response = await fetch(url)\n    } catch (error) {\n      console.error('Failed to fetch list', listUrl, error)\n      if (isLast) throw new Error(`Failed to download list ${listUrl}`)\n      // eslint-disable-next-line no-continue\n      continue\n    }\n\n    if (!response.ok) {\n      if (isLast) throw new Error(`Failed to download list ${listUrl}`)\n      // eslint-disable-next-line no-continue\n      continue\n    }\n\n    const json = await response.json()\n    if (!tokenListValidator(json)) {\n      const validationErrors: string =\n        tokenListValidator.errors?.reduce<string>((memo, error) => {\n          const add = `${error.dataPath} ${error.message ?? ''}`\n          return memo.length > 0 ? `${memo}; ${add}` : `${add}`\n        }, '') ?? 'unknown error'\n      throw new Error(`Token list failed validation: ${validationErrors}`)\n    }\n    return json\n  }\n  throw new Error('Unrecognized list URL protocol.')\n}\n","import { Contract } from '@ethersproject/contracts'\nimport { Provider } from '@ethersproject/abstract-provider'\nimport { namehash } from 'ethers/lib/utils'\n\nconst REGISTRAR_ABI = [\n  {\n    constant: true,\n    inputs: [\n      {\n        name: 'node',\n        type: 'bytes32'\n      }\n    ],\n    name: 'resolver',\n    outputs: [\n      {\n        name: 'resolverAddress',\n        type: 'address'\n      }\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  }\n]\nconst REGISTRAR_ADDRESS = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n\nconst RESOLVER_ABI = [\n  {\n    constant: true,\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32'\n      }\n    ],\n    name: 'contenthash',\n    outputs: [\n      {\n        internalType: 'bytes',\n        name: '',\n        type: 'bytes'\n      }\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  }\n]\n\n// cache the resolver contracts since most of them are the public resolver\nfunction resolverContract(resolverAddress: string, provider: Provider): Contract {\n  return new Contract(resolverAddress, RESOLVER_ABI, provider)\n}\n\n/**\n * Fetches and decodes the result of an ENS contenthash lookup on mainnet to a URI\n * @param ensName to resolve\n * @param provider provider to use to fetch the data\n */\nexport default async function resolveENSContentHash(ensName: string, provider: Provider): Promise<string> {\n  const ensRegistrarContract = new Contract(REGISTRAR_ADDRESS, REGISTRAR_ABI, provider)\n  const hash = namehash(ensName)\n  const resolverAddress = await ensRegistrarContract.resolver(hash)\n  return resolverContract(resolverAddress, provider).contenthash(hash)\n}\n","import { nanoid } from '@reduxjs/toolkit'\nimport { ChainId } from '@beswap/sdk'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useCallback } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { getNetworkLibrary, NETWORK_CHAIN_ID } from '../connectors'\nimport { AppDispatch } from '../state'\nimport { fetchTokenList } from '../state/lists/actions'\nimport getTokenList from '../utils/getTokenList'\nimport resolveENSContentHash from '../utils/resolveENSContentHash'\nimport { useActiveWeb3React } from './index'\n\nexport function useFetchListCallback(): (listUrl: string) => Promise<TokenList> {\n  const { chainId, library } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const ensResolver = useCallback(\n    (ensName: string) => {\n      if (!library || chainId !== ChainId.MAINNET) {\n        if (NETWORK_CHAIN_ID === ChainId.MAINNET) {\n          const networkLibrary = getNetworkLibrary()\n          if (networkLibrary) {\n            return resolveENSContentHash(ensName, networkLibrary)\n          }\n        }\n        throw new Error('Could not construct mainnet ENS resolver')\n      }\n      return resolveENSContentHash(ensName, library)\n    },\n    [chainId, library]\n  )\n\n  return useCallback(\n    async (listUrl: string) => {\n      const requestId = nanoid()\n      dispatch(fetchTokenList.pending({ requestId, url: listUrl }))\n      return getTokenList(listUrl, ensResolver)\n        .then((tokenList) => {\n          dispatch(fetchTokenList.fulfilled({ url: listUrl, tokenList, requestId }))\n          return tokenList\n        })\n        .catch((error) => {\n          console.error(`Failed to get list at url ${listUrl}`, error)\n          dispatch(fetchTokenList.rejected({ url: listUrl, requestId, errorMessage: error.message }))\n          throw error\n        })\n    },\n    [dispatch, ensResolver]\n  )\n}\n\nexport default useFetchListCallback\n","import { RefObject, useEffect, useRef } from 'react'\n\nexport function useOnClickOutside<T extends HTMLElement>(\n  node: RefObject<T | undefined>,\n  handler: undefined | (() => void)\n) {\n  const handlerRef = useRef<undefined | (() => void)>(handler)\n  useEffect(() => {\n    handlerRef.current = handler\n  }, [handler])\n\n  useEffect(() => {\n    const handleClickOutside = (e: MouseEvent) => {\n      if (node.current?.contains(e.target as Node) ?? false) {\n        return\n      }\n      if (handlerRef.current) handlerRef.current()\n    }\n\n    document.addEventListener('mousedown', handleClickOutside)\n\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside)\n    }\n  }, [node])\n}\n\nexport default useOnClickOutside\n","import React, { memo, useCallback, useMemo, useRef, useState } from 'react'\nimport { ArrowLeft } from 'react-feather'\nimport { usePopper } from 'react-popper'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Button, Text, ChevronDownIcon, CloseIcon } from '@luckyswap/uikit'\nimport styled from 'styled-components'\nimport { useFetchListCallback } from '../../../hooks/useFetchListCallback'\nimport { useOnClickOutside } from '../../../hooks/useOnClickOutside'\nimport useToggle from '../../../hooks/useToggle'\nimport { AppDispatch, AppState } from '../../../state'\nimport { acceptListUpdate, removeList, selectList } from '../../../state/lists/actions'\nimport { useSelectedListUrl } from '../../../state/lists/hooks'\nimport { ExternalLink, LinkStyledButton } from '../Shared'\nimport listVersionLabel from '../../../utils/listVersionLabel'\nimport { parseENSAddress } from '../../../utils/parseENSAddress'\nimport uriToHttp from '../../../utils/uriToHttp'\nimport Column from '../Column'\nimport ListLogo from '../ListLogo'\nimport QuestionHelper from '../QuestionHelper'\nimport Row, { RowBetween } from '../Row'\nimport { PaddedColumn, SearchInput, Separator, SeparatorDark } from './styleds'\n\nconst UnpaddedLinkStyledButton = styled(LinkStyledButton)`\n  padding: 0;\n  font-size: 1rem;\n  opacity: ${({ disabled }) => (disabled ? '0.4' : '1')};\n`\n\nconst PopoverContainer = styled.div<{ show: boolean }>`\n  z-index: 100;\n  visibility: ${(props) => (props.show ? 'visible' : 'hidden')};\n  opacity: ${(props) => (props.show ? 1 : 0)};\n  transition: visibility 150ms linear, opacity 150ms linear;\n  background: ${({ theme }) => theme.colors.invertedContrast};\n  border: 1px solid ${({ theme }) => theme.colors.tertiary};\n  box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.01), 0px 4px 8px rgba(0, 0, 0, 0.04), 0px 16px 24px rgba(0, 0, 0, 0.04),\n    0px 24px 32px rgba(0, 0, 0, 0.01);\n  color: ${({ theme }) => theme.colors.textSubtle};\n  border-radius: 0.5rem;\n  padding: 1rem;\n  display: grid;\n  grid-template-rows: 1fr;\n  grid-gap: 8px;\n  font-size: 1rem;\n  text-align: left;\n`\n\nconst StyledMenu = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n  border: none;\n`\n\nconst StyledListUrlText = styled.div`\n  max-width: 160px;\n  opacity: 0.6;\n  margin-right: 0.5rem;\n  font-size: 14px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`\n\nfunction ListOrigin({ listUrl }: { listUrl: string }) {\n  const ensName = useMemo(() => parseENSAddress(listUrl)?.ensName, [listUrl])\n  const host = useMemo(() => {\n    if (ensName) return undefined\n    const lowerListUrl = listUrl.toLowerCase()\n    if (lowerListUrl.startsWith('ipfs://') || lowerListUrl.startsWith('ipns://')) {\n      return listUrl\n    }\n    try {\n      const url = new URL(listUrl)\n      return url.host\n    } catch (error) {\n      return undefined\n    }\n  }, [listUrl, ensName])\n  return <>{ensName ?? host}</>\n}\n\nfunction listUrlRowHTMLId(listUrl: string) {\n  return `list-row-${listUrl.replace(/\\./g, '-')}`\n}\n\nconst ListRow = memo(function ListRow({ listUrl, onBack }: { listUrl: string; onBack: () => void }) {\n  const listsByUrl = useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\n  const selectedListUrl = useSelectedListUrl()\n  const dispatch = useDispatch<AppDispatch>()\n  const { current: list, pendingUpdate: pending } = listsByUrl[listUrl]\n\n  const isSelected = listUrl === selectedListUrl\n\n  const [open, toggle] = useToggle(false)\n  const node = useRef<HTMLDivElement>()\n  const [referenceElement, setReferenceElement] = useState<HTMLDivElement | null>()\n  const [popperElement, setPopperElement] = useState<HTMLDivElement>()\n\n  const { styles, attributes } = usePopper(referenceElement, popperElement, {\n    placement: 'auto',\n    strategy: 'fixed',\n    modifiers: [{ name: 'offset', options: { offset: [8, 8] } }],\n  })\n\n  useOnClickOutside(node, open ? toggle : undefined)\n\n  const selectThisList = useCallback(() => {\n    if (isSelected) return\n\n    dispatch(selectList(listUrl))\n    onBack()\n  }, [dispatch, isSelected, listUrl, onBack])\n\n  const handleAcceptListUpdate = useCallback(() => {\n    if (!pending) return\n    dispatch(acceptListUpdate(listUrl))\n  }, [dispatch, listUrl, pending])\n\n  const handleRemoveList = useCallback(() => {\n    if (window.prompt(`Please confirm you would like to remove this list by typing REMOVE`) === `REMOVE`) {\n      dispatch(removeList(listUrl))\n    }\n  }, [dispatch, listUrl])\n\n  if (!list) return null\n\n  return (\n    <Row key={listUrl} align=\"center\" padding=\"16px\" id={listUrlRowHTMLId(listUrl)}>\n      {list.logoURI ? (\n        <ListLogo style={{ marginRight: '1rem' }} logoURI={list.logoURI} alt={`${list.name} list logo`} />\n      ) : (\n        <div style={{ width: '24px', height: '24px', marginRight: '1rem' }} />\n      )}\n      <Column style={{ flex: '1' }}>\n        <Row>\n          <Text bold={isSelected} fontSize=\"16px\" style={{ overflow: 'hidden', textOverflow: 'ellipsis' }}>\n            {list.name}\n          </Text>\n        </Row>\n        <Row\n          style={{\n            marginTop: '4px',\n          }}\n        >\n          <StyledListUrlText title={listUrl}>\n            <ListOrigin listUrl={listUrl} />\n          </StyledListUrlText>\n        </Row>\n      </Column>\n      <StyledMenu ref={node as any}>\n        <div style={{ display: 'inline-block' }} ref={setReferenceElement}>\n          <Button\n            style={{\n              width: '32px',\n              marginRight: '8px',\n            }}\n            onClick={toggle}\n            variant=\"secondary\"\n          >\n            <ChevronDownIcon />\n          </Button>\n        </div>\n\n        {open && (\n          <PopoverContainer show ref={setPopperElement as any} style={styles.popper} {...attributes.popper}>\n            <div>{list && listVersionLabel(list.version)}</div>\n            <SeparatorDark />\n            <ExternalLink href={`https://tokenlists.org/token-list?url=${listUrl}`}>View list</ExternalLink>\n            <UnpaddedLinkStyledButton onClick={handleRemoveList} disabled={Object.keys(listsByUrl).length === 1}>\n              Remove list\n            </UnpaddedLinkStyledButton>\n            {pending && (\n              <UnpaddedLinkStyledButton onClick={handleAcceptListUpdate}>Update list</UnpaddedLinkStyledButton>\n            )}\n          </PopoverContainer>\n        )}\n      </StyledMenu>\n      {isSelected ? (\n        <Button disabled style={{ width: '5rem', minWidth: '5rem' }}>\n          Selected\n        </Button>\n      ) : (\n        <>\n          <Button\n            className=\"select-button\"\n            style={{\n              width: '5rem',\n              minWidth: '4.5rem',\n            }}\n            onClick={selectThisList}\n          >\n            Select\n          </Button>\n        </>\n      )}\n    </Row>\n  )\n})\n\nconst ListContainer = styled.div`\n  flex: 1;\n  overflow: auto;\n`\n\nexport function ListSelect({ onDismiss, onBack }: { onDismiss: () => void; onBack: () => void }) {\n  const [listUrlInput, setListUrlInput] = useState<string>('')\n\n  const dispatch = useDispatch<AppDispatch>()\n  const lists = useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\n  const adding = Boolean(lists[listUrlInput]?.loadingRequestId)\n  const [addError, setAddError] = useState<string | null>(null)\n\n  const handleInput = useCallback((e) => {\n    setListUrlInput(e.target.value)\n    setAddError(null)\n  }, [])\n  const fetchList = useFetchListCallback()\n\n  const handleAddList = useCallback(() => {\n    if (adding) return\n    setAddError(null)\n    fetchList(listUrlInput)\n      .then(() => {\n        setListUrlInput('')\n      })\n      .catch((error) => {\n        setAddError(error.message)\n        dispatch(removeList(listUrlInput))\n      })\n  }, [adding, dispatch, fetchList, listUrlInput])\n\n  const validUrl: boolean = useMemo(() => {\n    return uriToHttp(listUrlInput).length > 0 || Boolean(parseENSAddress(listUrlInput))\n  }, [listUrlInput])\n\n  const handleEnterKey = useCallback(\n    (e) => {\n      if (validUrl && e.key === 'Enter') {\n        handleAddList()\n      }\n    },\n    [handleAddList, validUrl]\n  )\n\n  const sortedLists = useMemo(() => {\n    const listUrls = Object.keys(lists)\n    return listUrls\n      .filter((listUrl) => {\n        return Boolean(lists[listUrl].current)\n      })\n      .sort((u1, u2) => {\n        const { current: l1 } = lists[u1]\n        const { current: l2 } = lists[u2]\n        if (l1 && l2) {\n          return l1.name.toLowerCase() < l2.name.toLowerCase()\n            ? -1\n            : l1.name.toLowerCase() === l2.name.toLowerCase()\n            ? 0\n            : 1\n        }\n        if (l1) return -1\n        if (l2) return 1\n        return 0\n      })\n  }, [lists])\n\n  return (\n    <Column style={{ width: '100%', flex: '1 1' }}>\n      <PaddedColumn>\n        <RowBetween>\n          <div>\n            <ArrowLeft style={{ cursor: 'pointer' }} onClick={onBack} />\n          </div>\n          <Text fontSize=\"20px\">Manage Lists</Text>\n          <CloseIcon onClick={onDismiss} />\n        </RowBetween>\n      </PaddedColumn>\n\n      <Separator />\n\n      <PaddedColumn gap=\"14px\">\n        <Text bold>\n          Add a list{' '}\n          <QuestionHelper text=\"Token lists are an open specification for lists of BEP20 tokens. You can use any token list by entering its URL below. Beware that third party token lists can contain fake or malicious BEP20 tokens.\" />\n        </Text>\n        <Row>\n          <SearchInput\n            type=\"text\"\n            id=\"list-add-input\"\n            placeholder=\"https:// or ipfs:// or ENS name\"\n            value={listUrlInput}\n            onChange={handleInput}\n            onKeyDown={handleEnterKey}\n            style={{ height: '2.75rem', borderRadius: 12, padding: '12px' }}\n          />\n          <Button onClick={handleAddList} style={{ maxWidth: '4em', marginLeft: '1em' }} disabled={!validUrl}>\n            Add\n          </Button>\n        </Row>\n        {addError ? (\n          <Text color=\"failure\" title={addError} style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>\n            {addError}\n          </Text>\n        ) : null}\n      </PaddedColumn>\n\n      <Separator />\n\n      <ListContainer>\n        {sortedLists.map((listUrl) => (\n          <ListRow key={listUrl} listUrl={listUrl} onBack={onBack} />\n        ))}\n      </ListContainer>\n      <Separator />\n\n      <div style={{ padding: '16px', textAlign: 'center' }}>\n        <ExternalLink href=\"https://tokenlists.org\">Browse lists</ExternalLink>\n      </div>\n    </Column>\n  )\n}\n\nexport default ListSelect\n","import { useCallback, useState } from 'react'\n\nexport default function useToggle(initialState = false): [boolean, () => void] {\n  const [state, setState] = useState(initialState)\n  const toggle = useCallback(() => setState((prev) => !prev), [])\n  return [state, toggle]\n}\n","import { Version } from '@uniswap/token-lists'\n\nexport default function listVersionLabel(version: Version): string {\n  return `v${version.major}.${version.minor}.${version.patch}`\n}\n","import { Currency } from '@beswap/sdk'\nimport React, { useCallback, useEffect, useState } from 'react'\nimport useLast from 'hooks/useLast'\nimport { useSelectedListUrl } from 'state/lists/hooks'\nimport Modal from '../Modal'\nimport { CurrencySearch } from './CurrencySearch'\nimport { ListSelect } from './ListSelect'\n\ninterface CurrencySearchModalProps {\n  isOpen: boolean\n  onDismiss: () => void\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherSelectedCurrency?: Currency | null\n  // eslint-disable-next-line react/no-unused-prop-types\n  showCommonBases?: boolean\n}\n\nexport default function CurrencySearchModal({\n  isOpen,\n  onDismiss,\n  onCurrencySelect,\n  selectedCurrency,\n  otherSelectedCurrency,\n}: CurrencySearchModalProps) {\n  const [listView, setListView] = useState<boolean>(false)\n  const lastOpen = useLast(isOpen)\n\n  useEffect(() => {\n    if (isOpen && !lastOpen) {\n      setListView(false)\n    }\n  }, [isOpen, lastOpen])\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onCurrencySelect(currency)\n      onDismiss()\n    },\n    [onDismiss, onCurrencySelect]\n  )\n\n  const handleClickChangeList = useCallback(() => {\n    setListView(true)\n  }, [])\n  const handleClickBack = useCallback(() => {\n    setListView(false)\n  }, [])\n\n  const selectedListUrl = useSelectedListUrl()\n  const noListSelected = !selectedListUrl\n\n  return (\n    <Modal isOpen={isOpen} onDismiss={onDismiss} maxHeight={90} minHeight={listView ? 40 : noListSelected ? 0 : 80}>\n      {listView ? (\n        <ListSelect onDismiss={onDismiss} onBack={handleClickBack} />\n      ) : noListSelected ? (\n        <CurrencySearch\n          isOpen={isOpen}\n          onDismiss={onDismiss}\n          onCurrencySelect={handleCurrencySelect}\n          onChangeList={handleClickChangeList}\n          selectedCurrency={selectedCurrency}\n          otherSelectedCurrency={otherSelectedCurrency}\n          showCommonBases={false}\n        />\n      ) : (\n        <CurrencySearch\n          isOpen={isOpen}\n          onDismiss={onDismiss}\n          onCurrencySelect={handleCurrencySelect}\n          onChangeList={handleClickChangeList}\n          selectedCurrency={selectedCurrency}\n          otherSelectedCurrency={otherSelectedCurrency}\n          showCommonBases={false}\n        />\n      )}\n    </Modal>\n  )\n}\n","import { Currency } from '@beswap/sdk'\nimport React from 'react'\nimport styled from 'styled-components'\nimport CurrencyLogo from '../CurrencyLogo'\n\nconst Wrapper = styled.div<{ margin: boolean; sizeraw: number }>`\n  position: relative;\n  display: flex;\n  flex-direction: row;\n  margin-right: ${({ sizeraw, margin }) => margin && `${(sizeraw / 3 + 8).toString()  }px`};\n`\n\ninterface DoubleCurrencyLogoProps {\n  margin?: boolean\n  size?: number\n  currency0?: Currency\n  currency1?: Currency\n}\n\nconst HigherLogo = styled(CurrencyLogo)`\n  z-index: 2;\n`\nconst CoveredLogo = styled(CurrencyLogo)<{ sizeraw: number }>`\n  position: absolute;\n  left: ${({ sizeraw }) => `${(sizeraw / 2).toString()  }px`};\n`\n\nexport default function DoubleCurrencyLogo({\n  currency0,\n  currency1,\n  size = 16,\n  margin = false\n}: DoubleCurrencyLogoProps) {\n  return (\n    <Wrapper sizeraw={size} margin={margin}>\n      {currency0 && <HigherLogo currency={currency0} size={`${size.toString()  }px`} />}\n      {currency1 && <CoveredLogo currency={currency1} size={`${size.toString()  }px`} sizeraw={size} />}\n    </Wrapper>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { escapeRegExp } from 'utils/'\n\nconst StyledInput = styled.input<{ error?: boolean; fontSize?: string; align?: string }>`\n  color: #fff;\n  width: 0;\n  position: relative;\n  font-weight: 500;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  background-color: #20212B;\n  font-size: 16px;\n  text-align: ${({ align }) => align && align};\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  padding: 10px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  [type='number'] {\n    -moz-appearance: textfield;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textSubtle};\n  }\n`\n\nconst inputRegex = RegExp(`^\\\\d*(?:\\\\\\\\[.])?\\\\d*$`) // match escaped \".\" characters via in a non-capturing group\n\nexport const Input = React.memo(function InnerInput({\n  value,\n  onUserInput,\n  placeholder,\n  ...rest\n}: {\n  value: string | number\n  onUserInput: (input: string) => void\n  error?: boolean\n  fontSize?: string\n  align?: 'right' | 'left'\n} & Omit<React.HTMLProps<HTMLInputElement>, 'ref' | 'onChange' | 'as'>) {\n  const enforcer = (nextUserInput: string) => {\n    if (nextUserInput === '' || inputRegex.test(escapeRegExp(nextUserInput))) {\n      onUserInput(nextUserInput)\n    }\n  }\n\n  return (\n    <StyledInput\n      {...rest}\n      value={value}\n      onChange={(event) => {\n        // replace commas with periods, because uniswap exclusively uses period as the decimal separator\n        enforcer(event.target.value.replace(/,/g, '.'))\n      }}\n      // universal input options\n      inputMode=\"decimal\"\n      title=\"Token Amount\"\n      autoComplete=\"off\"\n      autoCorrect=\"off\"\n      // text-specific options\n      type=\"text\"\n      pattern=\"^[0-9]*[.,]?[0-9]*$\"\n      placeholder={placeholder || '0.0'}\n      minLength={1}\n      maxLength={79}\n      spellCheck=\"false\"\n    />\n  )\n})\n\nexport default Input\n","import React, { useState, useCallback } from 'react'\nimport { Currency, Pair } from '@beswap/sdk'\nimport { Button, ChevronDownIcon, Text } from '@luckyswap/uikit'\nimport styled from 'styled-components'\nimport { darken } from 'polished'\nimport { useCurrencyBalance } from 'state/wallet/hooks'\nimport CurrencySearchModal from '../SearchModal/CurrencySearchModal'\nimport CurrencyLogo from '../CurrencyLogo'\nimport DoubleCurrencyLogo from '../DoubleLogo'\n// import { RowBetween } from '../Row'\nimport { Input as NumericalInput } from '../NumericalInput'\nimport { useActiveWeb3React } from '../../../hooks'\nimport TranslatedText from \"../TranslatedText\"\nimport { TranslateString } from '../../../utils/translateTextHelpers'\n\nconst InputRow = styled.div<{ selected: boolean }>`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  padding: ${({ selected }) => (selected ? '1.2rem 0.75rem 1.2rem 1rem' : '1.2rem 0.75rem 1.2rem 1rem')};\n  color: rgb(248, 133, 33);\n`\n\nconst CurrencySelect = styled.button<{ selected: boolean }>`\n  align-items: center;\n  height: 34px;\n  font-size: 16px;\n  font-weight: 500;\n  background-color: transparent;\n  color: ${({ selected, theme }) => (selected ? theme.colors.text : '#FFFFFF')};\n  border-radius: 12px;\n  outline: none;\n  cursor: pointer;\n  user-select: none;\n  border: none;\n  padding: 0 0.5rem;\n\n  :focus,\n  :hover {\n    background-color: ${({ theme }) => darken(0.05, theme.colors.input)};\n  }\n`\n\nconst LabelRow = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  color: ${({ theme }) => theme.colors.text};\n  font-size: 0.75rem;\n  line-height: 1rem;\n  padding: 0.75rem 1rem 0 1rem;\n  span:hover {\n    cursor: pointer;\n    color: ${({ theme }) => darken(0.2, theme.colors.textSubtle)};\n  }\n`\n\nconst Aligner = styled.span`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`\n\nconst InputPanel = styled.div<{ hideInput?: boolean }>`\n  display: flex;\n  flex-flow: column nowrap;\n  position: relative;\n  border-radius: ${({ hideInput }) => (hideInput ? '8px' : '20px')};\n  background-color: ${({ theme }) => theme.colors.background};\n  z-index: 1;\n`\n\nconst Container = styled.div<{ hideInput: boolean }>`\n  border-radius: 4px;\n  background-color: #292A36;\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n`\n\ninterface CurrencyInputPanelProps {\n  value: string\n  onUserInput: (value: string) => void\n  onMax?: () => void\n  showMaxButton: boolean\n  label?: string\n  onCurrencySelect?: (currency: Currency) => void\n  currency?: Currency | null\n  disableCurrencySelect?: boolean\n  hideBalance?: boolean\n  pair?: Pair | null\n  hideInput?: boolean\n  otherCurrency?: Currency | null\n  id: string\n  showCommonBases?: boolean\n}\n\nexport default function CurrencyInputPanel({\n  value,\n  onUserInput,\n  onMax,\n  showMaxButton,\n  label = TranslateString(132, 'Input'),\n  onCurrencySelect,\n  currency,\n  disableCurrencySelect = false,\n  hideBalance = false,\n  pair = null, // used for double token logo\n  hideInput = false,\n  otherCurrency,\n  id,\n  showCommonBases\n}: CurrencyInputPanelProps) {\n  const [modalOpen, setModalOpen] = useState(false)\n  const { account } = useActiveWeb3React()\n  const selectedCurrencyBalance = useCurrencyBalance(account ?? undefined, currency ?? undefined)\n\n  const handleDismissSearch = useCallback(() => {\n    setModalOpen(false)\n  }, [setModalOpen])\n\n  return (\n    <InputPanel id={id}>\n      <Container hideInput={hideInput}>\n        <InputRow style={hideInput ? { padding: '0', borderRadius: '8px' } : {}} selected={disableCurrencySelect}>\n        \n        <CurrencySelect\n            selected={!!currency}\n            className=\"open-currency-select-button\"\n            onClick={() => {\n              if (!disableCurrencySelect) {\n                setModalOpen(true)\n              }\n            }}\n          >\n            <Aligner>\n              {pair ? (\n                <DoubleCurrencyLogo currency0={pair.token0} currency1={pair.token1} size={16} margin />\n              ) : currency ? (\n                <CurrencyLogo currency={currency} size=\"24px\" style={{ marginRight: '8px' }} />\n              ) : null}\n              {pair ? (\n                <Text>\n                  {pair?.token0.symbol}:{pair?.token1.symbol}\n                </Text>\n              ) : (\n                <Text>\n                  {(currency && currency.symbol && currency.symbol.length > 20\n                    ? `${currency.symbol.slice(0, 4) \n                      }...${ \n                      currency.symbol.slice(currency.symbol.length - 5, currency.symbol.length)}`\n                    : currency?.symbol) || <TranslatedText translationId={82}>Select a currency</TranslatedText>}\n                </Text>\n              )}\n              {!disableCurrencySelect && <ChevronDownIcon />}\n            </Aligner>\n          </CurrencySelect>\n\n          {!hideInput && (\n            <>\n              <NumericalInput\n                className=\"token-amount-input\"\n                value={value}\n                onUserInput={val => {\n                  onUserInput(val)\n                }}\n              />\n            </>\n          )}\n\n        </InputRow>\n      </Container>\n      {!disableCurrencySelect && onCurrencySelect && (\n        <CurrencySearchModal\n          isOpen={modalOpen}\n          onDismiss={handleDismissSearch}\n          onCurrencySelect={onCurrencySelect}\n          selectedCurrency={currency}\n          otherSelectedCurrency={otherCurrency}\n          showCommonBases={showCommonBases}\n        />\n      )}\n    </InputPanel>\n  )\n}\n","import { Trade } from '@beswap/sdk'\nimport React, { Fragment, memo, useContext } from 'react'\nimport { ChevronRight } from 'react-feather'\nimport { Flex, Text } from '@luckyswap/uikit'\nimport { ThemeContext } from 'styled-components'\nimport CurrencyLogo from '../CurrencyLogo'\n\nexport default memo(function SwapRoute({ trade }: { trade: Trade }) {\n  const theme = useContext(ThemeContext)\n  return (\n    <Flex\n      px=\"1rem\"\n      py=\"0.5rem\"\n      my=\"0.5rem\"\n      style={{ border: `1px solid ${theme.colors.tertiary}`, borderRadius: '1rem' }}\n      flexWrap=\"wrap\"\n      justifyContent=\"space-evenly\"\n      alignItems=\"center\"\n    >\n      {trade.route.path.map((token, i, path) => {\n        const isLastItem: boolean = i === path.length - 1\n        return (\n          // eslint-disable-next-line react/no-array-index-key\n          <Fragment key={i}>\n            <Flex my=\"0.5rem\" alignItems=\"center\" style={{ flexShrink: 0 }}>\n              <CurrencyLogo currency={token} size=\"1.5rem\" />\n              <Text fontSize=\"14px\" color=\"text\" ml=\"0.5rem\">\n                {token.symbol}\n              </Text>\n            </Flex>\n            {isLastItem ? null : <ChevronRight color=\"textSubtle\" />}\n          </Fragment>\n        )\n      })}\n    </Flex>\n  )\n})\n","import React from 'react'\nimport { Trade, TradeType } from '@beswap/sdk'\nimport { Card, CardBody, Text } from '@luckyswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport { useUserSlippageTolerance } from 'state/user/hooks'\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown } from 'utils//prices'\nimport { AutoColumn } from '../Column'\nimport QuestionHelper from '../QuestionHelper'\nimport { RowBetween, RowFixed } from '../Row'\nimport FormattedPriceImpact from './FormattedPriceImpact'\nimport { SectionBreak } from './styleds'\nimport SwapRoute from './SwapRoute'\n\nfunction TradeSummary({ trade, allowedSlippage }: { trade: Trade; allowedSlippage: number }) {\n  const { priceImpactWithoutFee, realizedLPFee } = computeTradePriceBreakdown(trade)\n  const isExactIn = trade.tradeType === TradeType.EXACT_INPUT\n  const slippageAdjustedAmounts = computeSlippageAdjustedAmounts(trade, allowedSlippage)\n\n  return (\n    <Card>\n      <CardBody>\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">{isExactIn ? 'Minimum received' : 'Maximum sold'}</Text>\n            <QuestionHelper text=\"Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.\" />\n          </RowFixed>\n          <RowFixed>\n            <Text fontSize=\"14px\">\n              {isExactIn\n                ? `${slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4)} ${trade.outputAmount.currency.symbol}` ??\n                  '-'\n                : `${slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4)} ${trade.inputAmount.currency.symbol}` ??\n                  '-'}\n            </Text>\n          </RowFixed>\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">Price Impact</Text>\n            <QuestionHelper text=\"The difference between the market price and estimated price due to trade size.\" />\n          </RowFixed>\n          <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\n        </RowBetween>\n\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">Liquidity Provider Fee</Text>\n            <QuestionHelper text=\"For each trade a 0.2% fee is paid. 0.17% goes to liquidity providers and 0.03% goes to the Lụckyswap treasury.\" />\n          </RowFixed>\n          <Text fontSize=\"14px\">\n            {realizedLPFee ? `${realizedLPFee.toSignificant(4)} ${trade.inputAmount.currency.symbol}` : '-'}\n          </Text>\n        </RowBetween>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport interface AdvancedSwapDetailsProps {\n  trade?: Trade\n}\n\nexport function AdvancedSwapDetails({ trade }: AdvancedSwapDetailsProps) {\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const showRoute = Boolean(trade && trade.route.path.length > 2)\n\n  return (\n    <AutoColumn gap=\"md\">\n      {trade && (\n        <>\n          <TradeSummary trade={trade} allowedSlippage={allowedSlippage} />\n          {showRoute && (\n            <>\n              <SectionBreak />\n              <AutoColumn style={{ padding: '0 24px' }}>\n                <RowFixed>\n                  <Text fontSize=\"14px\">Route</Text>\n                  <QuestionHelper text=\"Routing through these tokens resulted in the best price for your trade.\" />\n                </RowFixed>\n                <SwapRoute trade={trade} />\n              </AutoColumn>\n            </>\n          )}\n        </>\n      )}\n    </AutoColumn>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useLastTruthy } from 'hooks/useLast'\nimport { AdvancedSwapDetails, AdvancedSwapDetailsProps } from './AdvancedSwapDetails'\n\nconst AdvancedDetailsFooter = styled.div<{ show: boolean }>`\n  padding-top: calc(16px + 2rem);\n  padding-bottom: 20px;\n  margin-top: -2rem;\n  width: 100%;\n  max-width: 400px;\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n  color: ${({ theme }) => theme.colors.textSubtle};\n  z-index: 1;\n  margin: 0 auto;\n\n  transform: ${({ show }) => (show ? 'translateY(0%)' : 'translateY(-100%)')};\n  transition: transform 300ms ease-in-out;\n`\n\nexport default function AdvancedSwapDetailsDropdown({ trade, ...rest }: AdvancedSwapDetailsProps) {\n  const lastTrade = useLastTruthy(trade)\n\n  return (\n    <AdvancedDetailsFooter show={Boolean(trade)}>\n      <AdvancedSwapDetails {...rest} trade={trade ?? lastTrade ?? undefined} />\n    </AdvancedDetailsFooter>\n  )\n}\n","import React from 'react'\nimport { Price } from '@beswap/sdk'\nimport { SyncAltIcon, Text } from '@luckyswap/uikit'\nimport { StyledBalanceMaxMini } from './styleds'\n\ninterface TradePriceProps {\n  price?: Price\n  showInverted: boolean\n  setShowInverted: (showInverted: boolean) => void\n}\n\nexport default function TradePrice({ price, showInverted, setShowInverted }: TradePriceProps) {\n  const formattedPrice = showInverted ? price?.toSignificant(6) : price?.invert()?.toSignificant(6)\n\n  const show = Boolean(price?.baseCurrency && price?.quoteCurrency)\n  const label = showInverted\n    ? `${price?.quoteCurrency?.symbol} per ${price?.baseCurrency?.symbol}`\n    : `${price?.baseCurrency?.symbol} per ${price?.quoteCurrency?.symbol}`\n\n  return (\n    <Text fontSize=\"14px\" style={{ justifyContent: 'center', alignItems: 'center', display: 'flex' }}>\n      {show ? (\n        <>\n          {formattedPrice ?? '-'} {label}\n          <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\n            <SyncAltIcon width=\"20px\" color=\"primary\" />\n          </StyledBalanceMaxMini>\n        </>\n      ) : (\n        '-'\n      )}\n    </Text>\n  )\n}\n","import { Token } from '@beswap/sdk'\nimport { transparentize } from 'polished'\nimport { Button, Text } from '@luckyswap/uikit'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { AlertTriangle } from 'react-feather'\nimport { useActiveWeb3React } from 'hooks'\nimport { useAllTokens } from 'hooks/Tokens'\nimport { getBscScanLink, shortenAddress } from 'utils/'\nimport { ExternalLink } from '../Shared'\nimport CurrencyLogo from '../CurrencyLogo'\nimport Modal from '../Modal'\nimport { AutoRow, RowBetween } from '../Row'\nimport { AutoColumn } from '../Column'\n\nconst Wrapper = styled.div<{ error: boolean }>`\n  background: ${({ theme }) => transparentize(0.6, theme.colors.tertiary)};\n  padding: 0.75rem;\n  border-radius: 20px;\n`\n\nconst WarningContainer = styled.div`\n  max-width: 420px;\n  width: 100%;\n  padding: 1rem;\n  background: rgba(242, 150, 2, 0.05);\n  border: 1px solid #f3841e;\n  border-radius: 20px;\n  overflow: auto;\n`\n\nconst StyledWarningIcon = styled(AlertTriangle)`\n  stroke: ${({ theme }) => theme.colors.failure};\n`\n\ninterface TokenWarningCardProps {\n  token?: Token\n}\n\nfunction TokenWarningCard({ token }: TokenWarningCardProps) {\n  const { chainId } = useActiveWeb3React()\n\n  const tokenSymbol = token?.symbol?.toLowerCase() ?? ''\n  const tokenName = token?.name?.toLowerCase() ?? ''\n\n  const allTokens = useAllTokens()\n\n  const duplicateNameOrSymbol = useMemo(() => {\n    if (!token || !chainId) return false\n\n    return Object.keys(allTokens).some((tokenAddress) => {\n      const userToken = allTokens[tokenAddress]\n      if (userToken.equals(token)) {\n        return false\n      }\n      return userToken.symbol?.toLowerCase() === tokenSymbol || userToken.name?.toLowerCase() === tokenName\n    })\n  }, [token, chainId, allTokens, tokenSymbol, tokenName])\n\n  if (!token) return null\n\n  return (\n    <Wrapper error={duplicateNameOrSymbol}>\n      <AutoRow gap=\"6px\">\n        <AutoColumn gap=\"24px\">\n          <CurrencyLogo currency={token} size=\"16px\" />\n          <div> </div>\n        </AutoColumn>\n        <AutoColumn gap=\"10px\" justify=\"flex-start\">\n          <Text>\n            {token && token.name && token.symbol && token.name !== token.symbol\n              ? `${token.name} (${token.symbol})`\n              : token.name || token.symbol}{' '}\n          </Text>\n          {chainId && (\n            <ExternalLink style={{ fontWeight: 400 }} href={getBscScanLink(chainId, token.address, 'token')}>\n              <Text title={token.address}>{shortenAddress(token.address)} (View on BscScan)</Text>\n            </ExternalLink>\n          )}\n        </AutoColumn>\n      </AutoRow>\n    </Wrapper>\n  )\n}\n\nexport default function TokenWarningModal({\n  isOpen,\n  tokens,\n  onConfirm,\n}: {\n  isOpen: boolean\n  tokens: Token[]\n  onConfirm: () => void\n}) {\n  const [understandChecked, setUnderstandChecked] = useState(false)\n  const toggleUnderstand = useCallback(() => setUnderstandChecked((uc) => !uc), [])\n\n  const handleDismiss = useCallback(() => null, [])\n  return (\n    <Modal isOpen={isOpen} onDismiss={handleDismiss} maxHeight={90}>\n      <WarningContainer className=\"token-warning-container\">\n        <AutoColumn gap=\"lg\">\n          <AutoRow gap=\"6px\">\n            <StyledWarningIcon />\n            <Text color=\"failure\">Token imported</Text>\n          </AutoRow>\n          <Text>\n            Anyone can create an BEP20 token on BSC with <em>any</em> name, including creating fake versions of existing\n            tokens and tokens that claim to represent projects that do not have a token.\n          </Text>\n          <Text>\n            This interface can load arbitrary tokens by token addresses. Please take extra caution and do your research\n            when interacting with arbitrary BEP20 tokens.\n          </Text>\n          <Text>\n            If you purchase an arbitrary token, <strong>you may be unable to sell it back.</strong>\n          </Text>\n          {tokens.map((token) => {\n            return <TokenWarningCard key={token.address} token={token} />\n          })}\n          <RowBetween>\n            <div>\n              <label htmlFor=\"understand-checkbox\" style={{ cursor: 'pointer', userSelect: 'none' }}>\n                <input\n                  id=\"understand-checkbox\"\n                  type=\"checkbox\"\n                  className=\"understand-checkbox\"\n                  checked={understandChecked}\n                  onChange={toggleUnderstand}\n                />{' '}\n                <Text as=\"span\" ml=\"4px\">\n                  I understand\n                </Text>\n              </label>\n            </div>\n            <Button\n              disabled={!understandChecked}\n              variant=\"danger\"\n              style={{ width: '140px' }}\n              className=\"token-dismiss-button\"\n              onClick={() => {\n                onConfirm()\n              }}\n            >\n              Continue\n            </Button>\n          </RowBetween>\n        </AutoColumn>\n      </WarningContainer>\n    </Modal>\n  )\n}\n","import React, { useCallback, useState } from 'react'\nimport styled from 'styled-components'\nimport { Button, Text } from '@luckyswap/uikit'\nimport { AlertTriangle } from 'react-feather'\nimport Modal from '../Modal'\nimport { AutoRow, RowBetween } from '../Row'\nimport { AutoColumn } from '../Column'\n\nconst WarningContainer = styled.div`\n  max-width: 420px;\n  width: 100%;\n  padding: 1rem;\n  background: rgba(242, 150, 2, 0.05);\n  border: 1px solid #f3841e;\n  border-radius: 20px;\n  overflow: auto;\n`\n\nconst StyledWarningIcon = styled(AlertTriangle)`\n  stroke: ${({ theme }) => theme.colors.failure};\n`\n\nexport default function SyrupWarningModal({\n  isOpen,\n  transactionType,\n  onConfirm,\n}: {\n  isOpen: boolean\n  transactionType: string\n  onConfirm: () => void\n}) {\n  const [understandChecked, setUnderstandChecked] = useState(false)\n  const toggleUnderstand = useCallback(() => setUnderstandChecked((uc) => !uc), [])\n\n  const handleDismiss = useCallback(() => null, [])\n  return (\n    <Modal isOpen={isOpen} onDismiss={handleDismiss} maxHeight={90}>\n      <WarningContainer className=\"token-warning-container\">\n        <AutoColumn gap=\"lg\">\n          <AutoRow gap=\"6px\">\n            <StyledWarningIcon />\n            <Text color=\"failure\">Syrup Warning</Text>\n          </AutoRow>\n          {transactionType !== '' && (\n            <>\n              <Text color=\"failure\">\n                Please be careful when <strong>{transactionType}</strong> SYRUP.\n              </Text>\n              <Text color=\"failure\">\n                {transactionType === 'Buying'\n                  ? 'You will not receive CAKE rewards for holding purchased SYRUP.'\n                  : 'You will need to buy back the same amount of SYRUP to be able to convert back to CAKE.'}\n              </Text>\n            </>\n          )}\n          <RowBetween>\n            <div>\n              <label htmlFor=\"understand-checkbox\" style={{ cursor: 'pointer', userSelect: 'none' }}>\n                <input\n                  id=\"understand-checkbox\"\n                  type=\"checkbox\"\n                  className=\"understand-checkbox\"\n                  checked={understandChecked}\n                  onChange={toggleUnderstand}\n                />{' '}\n                <Text as=\"span\">I understand</Text>\n              </label>\n            </div>\n            <Button\n              disabled={!understandChecked}\n              variant=\"danger\"\n              style={{ width: '140px' }}\n              onClick={() => {\n                setUnderstandChecked(false)\n                onConfirm()\n              }}\n            >\n              Continue\n            </Button>\n          </RowBetween>\n        </AutoColumn>\n      </WarningContainer>\n    </Modal>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { transparentize } from 'polished'\nimport { RowBetween } from '../Row'\nimport { AutoColumn } from '../Column'\n\nconst Wrapper = styled(AutoColumn)`\n  margin-top: 1.25rem;\n`\n\nconst Grouping = styled(RowBetween)`\n  width: 50%;\n`\n\nconst Circle = styled.div<{ confirmed?: boolean; disabled?: boolean }>`\n  min-width: 20px;\n  min-height: 20px;\n  background-color: ${({ theme, confirmed, disabled }) =>\n    disabled ? theme.colors.backgroundDisabled : confirmed ? theme.colors.success : theme.colors.primary};\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  line-height: 8px;\n  font-size: 12px;\n  color: ${({ theme, confirmed, disabled }) =>\n    disabled ? theme.colors.text : confirmed ? theme.colors.success : '#FFFFFF'};\n`\n\nconst CircleRow = styled.div`\n  width: calc(100% - 20px);\n  display: flex;\n  align-items: center;\n`\n\nconst Connector = styled.div<{ prevConfirmed?: boolean }>`\n  width: 100%;\n  height: 2px;\n  background-color: ;\n  background: linear-gradient(\n    90deg,\n    ${({ theme, prevConfirmed }) => transparentize(0.5, prevConfirmed ? theme.colors.success : theme.colors.primary)} 0%,\n    ${({ theme, prevConfirmed }) => (prevConfirmed ? theme.colors.primary : theme.colors.backgroundDisabled)} 80%\n  );\n  opacity: 0.6;\n`\n\ninterface ProgressCirclesProps {\n  steps: boolean[]\n}\n\n/**\n * Based on array of steps, create a step counter of circles.\n * A circle can be enabled, disabled, or confirmed. States are derived\n * from previous step.\n *\n * An extra circle is added to represent the ability to swap, add, or remove.\n * This step will never be marked as complete (because no 'txn done' state in body ui).\n *\n * @param steps  array of booleans where true means step is complete\n */\nexport default function ProgressCircles({ steps }: ProgressCirclesProps) {\n  return (\n    <Wrapper justify=\"center\">\n      <Grouping>\n        {steps.map((step, i) => {\n          return (\n            // eslint-disable-next-line react/no-array-index-key\n            <CircleRow key={i}>\n              <Circle confirmed={step} disabled={!steps[i - 1] && i !== 0}>\n                {step ? '✓' : i + 1}\n              </Circle>\n              <Connector prevConfirmed={step} />\n            </CircleRow>\n          )\n        })}\n        <Circle disabled={!steps[steps.length - 1]}>{steps.length + 1}</Circle>\n      </Grouping>\n    </Wrapper>\n  )\n}\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { Contract } from '@ethersproject/contracts'\nimport { JSBI, Percent, Router, SwapParameters, Trade, TradeType } from '@beswap/sdk'\nimport { useMemo } from 'react'\nimport { BIPS_BASE, DEFAULT_DEADLINE_FROM_NOW, INITIAL_ALLOWED_SLIPPAGE } from '../constants'\nimport { useTransactionAdder } from '../state/transactions/hooks'\nimport { calculateGasMargin, getRouterContract, isAddress, shortenAddress } from '../utils'\nimport isZero from '../utils/isZero'\nimport { useActiveWeb3React } from './index'\nimport useENS from './useENS'\n\n enum SwapCallbackState {\n  INVALID,\n  LOADING,\n  VALID,\n}\n\ninterface SwapCall {\n  contract: Contract\n  parameters: SwapParameters\n}\n\ninterface SuccessfulCall {\n  call: SwapCall\n  gasEstimate: BigNumber\n}\n\ninterface FailedCall {\n  call: SwapCall\n  error: Error\n}\n\ntype EstimatedSwapCall = SuccessfulCall | FailedCall\n\n/**\n * Returns the swap calls that can be used to make the trade\n * @param trade trade to execute\n * @param allowedSlippage user allowed slippage\n * @param deadline the deadline for the trade\n * @param recipientAddressOrName\n */\nfunction useSwapCallArguments(\n  trade: Trade | undefined, // trade to execute, required\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\n  deadline: number = DEFAULT_DEADLINE_FROM_NOW, // in seconds from now\n  recipientAddressOrName: string | null // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\n): SwapCall[] {\n  const { account, chainId, library } = useActiveWeb3React()\n\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\n\n  return useMemo(() => {\n    if (!trade || !recipient || !library || !account || !chainId) return []\n\n    const contract: Contract | null = getRouterContract(chainId, library, account)\n    if (!contract) {\n      return []\n    }\n\n    const swapMethods = []\n\n    swapMethods.push(\n      // @ts-ignore\n      Router.swapCallParameters(trade, {\n        feeOnTransfer: false,\n        allowedSlippage: new Percent(JSBI.BigInt(Math.floor(allowedSlippage)), BIPS_BASE),\n        recipient,\n        ttl: deadline,\n      })\n    )\n\n    if (trade.tradeType === TradeType.EXACT_INPUT) {\n      swapMethods.push(\n        // @ts-ignore\n        Router.swapCallParameters(trade, {\n          feeOnTransfer: true,\n          allowedSlippage: new Percent(JSBI.BigInt(Math.floor(allowedSlippage)), BIPS_BASE),\n          recipient,\n          ttl: deadline,\n        })\n      )\n    }\n\n    return swapMethods.map((parameters) => ({ parameters, contract }))\n  }, [account, allowedSlippage, chainId, deadline, library, recipient, trade])\n}\n\n// returns a function that will execute a swap, if the parameters are all valid\n// and the user has approved the slippage adjusted input amount for the trade\nexport function useSwapCallback(\n  trade: Trade | undefined, // trade to execute, required\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\n  deadline: number = DEFAULT_DEADLINE_FROM_NOW, // in seconds from now\n  recipientAddressOrName: string | null // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\n): { state: SwapCallbackState; callback: null | (() => Promise<string>); error: string | null } {\n  const { account, chainId, library } = useActiveWeb3React()\n\n  const swapCalls = useSwapCallArguments(trade, allowedSlippage, deadline, recipientAddressOrName)\n\n  const addTransaction = useTransactionAdder()\n\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\n\n  return useMemo(() => {\n    if (!trade || !library || !account || !chainId) {\n      return { state: SwapCallbackState.INVALID, callback: null, error: 'Missing dependencies' }\n    }\n    if (!recipient) {\n      if (recipientAddressOrName !== null) {\n        return { state: SwapCallbackState.INVALID, callback: null, error: 'Invalid recipient' }\n      }\n      return { state: SwapCallbackState.LOADING, callback: null, error: null }\n    }\n\n    return {\n      state: SwapCallbackState.VALID,\n      callback: async function onSwap(): Promise<string> {\n        const estimatedCalls: EstimatedSwapCall[] = await Promise.all(\n          swapCalls.map((call) => {\n            const {\n              parameters: { methodName, args, value },\n              contract,\n            } = call\n            const options = !value || isZero(value) ? {} : { value }\n\n            return contract.estimateGas[methodName](...args, options)\n              .then((gasEstimate) => {\n                return {\n                  call,\n                  gasEstimate,\n                }\n              })\n              .catch((gasError) => {\n                console.info('Gas estimate failed, trying eth_call to extract error', call)\n\n                return contract.callStatic[methodName](...args, options)\n                  .then((result) => {\n                    console.info('Unexpected successful call after failed estimate gas', call, gasError, result)\n                    return { call, error: new Error('Unexpected issue with estimating the gas. Please try again.') }\n                  })\n                  .catch((callError) => {\n                    console.info('Call threw error', call, callError)\n                    let errorMessage: string\n                    switch (callError.reason) {\n                      case 'UniswapV2Router: INSUFFICIENT_OUTPUT_AMOUNT':\n                      case 'UniswapV2Router: EXCESSIVE_INPUT_AMOUNT':\n                        errorMessage =\n                          'This transaction will not succeed either due to price movement or fee on transfer. Try increasing your slippage tolerance.'\n                        break\n                      default:\n                        errorMessage = `The transaction cannot succeed due to error: ${callError.reason}. This is probably an issue with one of the tokens you are swapping.`\n                    }\n                    return { call, error: new Error(errorMessage) }\n                  })\n              })\n          })\n        )\n\n        // a successful estimation is a bignumber gas estimate and the next call is also a bignumber gas estimate\n        const successfulEstimation = estimatedCalls.find(\n          (el, ix, list): el is SuccessfulCall =>\n            'gasEstimate' in el && (ix === list.length - 1 || 'gasEstimate' in list[ix + 1])\n        )\n\n        if (!successfulEstimation) {\n          const errorCalls = estimatedCalls.filter((call): call is FailedCall => 'error' in call)\n          if (errorCalls.length > 0) throw errorCalls[errorCalls.length - 1].error\n          throw new Error('Unexpected error. Please contact support: none of the calls threw an error')\n        }\n\n        const {\n          call: {\n            contract,\n            parameters: { methodName, args, value },\n          },\n          gasEstimate,\n        } = successfulEstimation\n\n        return contract[methodName](...args, {\n          gasLimit: calculateGasMargin(gasEstimate),\n          ...(value && !isZero(value) ? { value, from: account } : { from: account }),\n        })\n          .then((response: any) => {\n            const inputSymbol = trade.inputAmount.currency.symbol\n            const outputSymbol = trade.outputAmount.currency.symbol\n            const inputAmount = trade.inputAmount.toSignificant(3)\n            const outputAmount = trade.outputAmount.toSignificant(3)\n\n            const base = `Swap ${inputAmount} ${inputSymbol} for ${outputAmount} ${outputSymbol}`\n            const withRecipient =\n              recipient === account\n                ? base\n                : `${base} to ${\n                    recipientAddressOrName && isAddress(recipientAddressOrName)\n                      ? shortenAddress(recipientAddressOrName)\n                      : recipientAddressOrName\n                  }`\n\n            addTransaction(response, {\n              summary: withRecipient,\n            })\n\n            return response.hash\n          })\n          .catch((error: any) => {\n            // if the user rejected the tx, pass this along\n            if (error?.code === 4001) {\n              throw new Error('Transaction rejected.')\n            } else {\n              // otherwise, the error was unexpected and we need to convey that\n              console.error(`Swap failed`, error, methodName, args, value)\n              throw new Error(`Swap failed: ${error.message}`)\n            }\n          })\n      },\n      error: null,\n    }\n  }, [trade, library, account, chainId, recipient, recipientAddressOrName, swapCalls, addTransaction])\n}\n\nexport default useSwapCallback","import { useEffect, useState } from 'react'\n\n// modified from https://usehooks.com/useDebounce/\nexport default function useDebounce<T>(value: T, delay: number): T {\n  const [debouncedValue, setDebouncedValue] = useState<T>(value)\n\n  useEffect(() => {\n    // Update debounced value after delay\n    const handler = setTimeout(() => {\n      setDebouncedValue(value)\n    }, delay)\n\n    // Cancel the timeout if value changes (also on delay change or unmount)\n    // This is how we prevent debounced value from updating if value is changed ...\n    // .. within the delay period. Timeout gets cleared and restarted.\n    return () => {\n      clearTimeout(handler)\n    }\n  }, [value, delay])\n\n  return debouncedValue\n}\n","import { isAddress } from '../utils'\nimport useENSAddress from './useENSAddress'\nimport useENSName from './useENSName'\n\n/**\n * Given a name or address, does a lookup to resolve to an address and name\n * @param nameOrAddress ENS name or address\n */\nexport default function useENS(\n  nameOrAddress?: string | null\n): { loading: boolean; address: string | null; name: string | null } {\n  const validated = isAddress(nameOrAddress)\n  const reverseLookup = useENSName(validated || undefined)\n  const lookup = useENSAddress(nameOrAddress)\n\n  return {\n    loading: reverseLookup.loading || lookup.loading,\n    address: validated || lookup.address,\n    name: reverseLookup.ENSName ? reverseLookup.ENSName : !validated && lookup.address ? nameOrAddress || null : null\n  }\n}\n","import { namehash } from 'ethers/lib/utils'\nimport { useMemo } from 'react'\nimport { useSingleCallResult } from '../state/multicall/hooks'\nimport { isAddress } from '../utils'\nimport isZero from '../utils/isZero'\nimport { useENSRegistrarContract, useENSResolverContract } from './useContract'\nimport useDebounce from './useDebounce'\n\n/**\n * Does a reverse lookup for an address to find its ENS name.\n * Note this is not the same as looking up an ENS name to find an address.\n */\nexport default function useENSName(address?: string): { ENSName: string | null; loading: boolean } {\n  const debouncedAddress = useDebounce(address, 200)\n  const ensNodeArgument = useMemo(() => {\n    if (!debouncedAddress || !isAddress(debouncedAddress)) return [undefined]\n    try {\n      return debouncedAddress ? [namehash(`${debouncedAddress.toLowerCase().substr(2)}.addr.reverse`)] : [undefined]\n    } catch (error) {\n      return [undefined]\n    }\n  }, [debouncedAddress])\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddress = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n  const resolverAddressResult = resolverAddress.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddressResult && !isZero(resolverAddressResult) ? resolverAddressResult : undefined,\n    false\n  )\n  const name = useSingleCallResult(resolverContract, 'name', ensNodeArgument)\n\n  const changed = debouncedAddress !== address\n  return {\n    ENSName: changed ? null : name.result?.[0] ?? null,\n    loading: changed || resolverAddress.loading || name.loading\n  }\n}\n","import { namehash } from 'ethers/lib/utils'\nimport { useMemo } from 'react'\nimport { useSingleCallResult } from '../state/multicall/hooks'\nimport isZero from '../utils/isZero'\nimport { useENSRegistrarContract, useENSResolverContract } from './useContract'\nimport useDebounce from './useDebounce'\n\n/**\n * Does a lookup for an ENS name to find its address.\n */\nexport default function useENSAddress(ensName?: string | null): { loading: boolean; address: string | null } {\n  const debouncedName = useDebounce(ensName, 200)\n  const ensNodeArgument = useMemo(() => {\n    if (!debouncedName) return [undefined]\n    try {\n      return debouncedName ? [namehash(debouncedName)] : [undefined]\n    } catch (error) {\n      return [undefined]\n    }\n  }, [debouncedName])\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddress = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n  const resolverAddressResult = resolverAddress.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddressResult && !isZero(resolverAddressResult) ? resolverAddressResult : undefined,\n    false\n  )\n  const addr = useSingleCallResult(resolverContract, 'addr', ensNodeArgument)\n\n  const changed = debouncedName !== ensName\n  return {\n    address: changed ? null : addr.result?.[0] ?? null,\n    loading: changed || resolverAddress.loading || addr.loading\n  }\n}\n","import { ChainId, Currency, CurrencyAmount, ETHER, Token, TokenAmount, WETH } from '@beswap/sdk'\n\nexport function wrappedCurrency(currency: Currency | undefined, chainId: ChainId | undefined): Token | undefined {\n  // eslint-disable-next-line no-nested-ternary\n  return chainId && currency === ETHER ? WETH[chainId] : currency instanceof Token ? currency : undefined\n}\n\nexport function wrappedCurrencyAmount(\n  currencyAmount: CurrencyAmount | undefined,\n  chainId: ChainId | undefined\n): TokenAmount | undefined {\n  const token = currencyAmount && chainId ? wrappedCurrency(currencyAmount.currency, chainId) : undefined\n  return token && currencyAmount ? new TokenAmount(token, currencyAmount.raw) : undefined\n}\n\nexport function unwrappedToken(token: Token): Currency {\n  if (token.equals(WETH[token.chainId])) return ETHER\n  return token\n}\n","import { TokenAmount, Pair, Currency } from '@beswap/sdk'\nimport { useMemo } from 'react'\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport { Interface } from '@ethersproject/abi'\nimport { useActiveWeb3React } from '../hooks'\n\nimport { useMultipleContractSingleData } from '../state/multicall/hooks'\nimport { wrappedCurrency } from '../utils/wrappedCurrency'\n\nconst PAIR_INTERFACE = new Interface(IUniswapV2PairABI)\n\nexport enum PairState {\n  LOADING,\n  NOT_EXISTS,\n  EXISTS,\n  INVALID\n}\n\nexport function usePairs(currencies: [Currency | undefined, Currency | undefined][]): [PairState, Pair | null][] {\n  const { chainId } = useActiveWeb3React()\n\n  const tokens = useMemo(\n    () =>\n      currencies.map(([currencyA, currencyB]) => [\n        wrappedCurrency(currencyA, chainId),\n        wrappedCurrency(currencyB, chainId)\n      ]),\n    [chainId, currencies]\n  )\n\n  const pairAddresses = useMemo(\n    () =>\n      tokens.map(([tokenA, tokenB]) => {\n        return tokenA && tokenB && !tokenA.equals(tokenB) ? Pair.getAddress(tokenA, tokenB) : undefined\n      }),\n    [tokens]\n  )\n\n  const results = useMultipleContractSingleData(pairAddresses, PAIR_INTERFACE, 'getReserves')\n  return useMemo(() => {\n    return results.map((result, i) => {\n      const { result: reserves, loading } = result\n      const tokenA = tokens[i][0]\n      const tokenB = tokens[i][1]\n\n      if (loading) return [PairState.LOADING, null]\n      if (!tokenA || !tokenB || tokenA.equals(tokenB)) return [PairState.INVALID, null]\n      if (!reserves) return [PairState.NOT_EXISTS, null]\n      const { reserve0, reserve1 } = reserves\n      const [token0, token1] = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA]\n      return [\n        PairState.EXISTS,\n        new Pair(new TokenAmount(token0, reserve0.toString()), new TokenAmount(token1, reserve1.toString()))\n      ]\n    })\n  }, [results, tokens])\n}\n\nexport function usePair(tokenA?: Currency, tokenB?: Currency): [PairState, Pair | null] {\n  return usePairs([[tokenA, tokenB]])[0]\n}\n","import { Currency, CurrencyAmount, Pair, Token, Trade } from '@beswap/sdk'\nimport flatMap from 'lodash.flatmap'\nimport { useMemo } from 'react'\nimport { useActiveWeb3React } from 'hooks'\n\nimport { BASES_TO_CHECK_TRADES_AGAINST, CUSTOM_BASES } from '../constants'\nimport { PairState, usePairs } from '../data/Reserves'\nimport { wrappedCurrency } from '../utils/wrappedCurrency'\n\n\nfunction useAllCommonPairs(currencyA?: Currency, currencyB?: Currency): Pair[] {\n  const { chainId } = useActiveWeb3React()\n\n  // Base tokens for building intermediary trading routes\n  const bases: Token[] = useMemo(() => (chainId ? BASES_TO_CHECK_TRADES_AGAINST[chainId] : []), [chainId])\n\n  // All pairs from base tokens\n  const basePairs: [Token, Token][] = useMemo(\n    () =>\n      flatMap(bases, (base): [Token, Token][] => bases.map((otherBase) => [base, otherBase])).filter(\n        ([t0, t1]) => t0.address !== t1.address\n      ),\n    [bases]\n  )\n\n  const [tokenA, tokenB] = chainId\n    ? [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\n    : [undefined, undefined]\n\n  const allPairCombinations: [Token, Token][] = useMemo(\n    () =>\n      tokenA && tokenB\n        ? [\n            // the direct pair\n            [tokenA, tokenB],\n            // token A against all bases\n            ...bases.map((base): [Token, Token] => [tokenA, base]),\n            // token B against all bases\n            ...bases.map((base): [Token, Token] => [tokenB, base]),\n            // each base against all bases\n            ...basePairs,\n          ]\n            .filter((tokens): tokens is [Token, Token] => Boolean(tokens[0] && tokens[1]))\n            .filter(([t0, t1]) => t0.address !== t1.address)\n            // This filter will remove all the pairs that are not supported by the CUSTOM_BASES settings\n            // This option is currently not used on BSCStation Swap\n            .filter(([t0, t1]) => {\n              if (!chainId) return true\n              const customBases = CUSTOM_BASES[chainId]\n              if (!customBases) return true\n\n              const customBasesA: Token[] | undefined = customBases[t0.address]\n              const customBasesB: Token[] | undefined = customBases[t1.address]\n\n              if (!customBasesA && !customBasesB) return true\n              if (customBasesA && !customBasesA.find((base) => t1.equals(base))) return false\n              if (customBasesB && !customBasesB.find((base) => t0.equals(base))) return false\n\n              return true\n            })\n        : [],\n    [tokenA, tokenB, bases, basePairs, chainId]\n  )\n\n  const allPairs = usePairs(allPairCombinations)\n\n  // only pass along valid pairs, non-duplicated pairs\n  return useMemo(\n    () =>\n      Object.values(\n        allPairs\n          // filter out invalid pairs\n          .filter((result): result is [PairState.EXISTS, Pair] => Boolean(result[0] === PairState.EXISTS && result[1]))\n          // filter out duplicated pairs\n          .reduce<{ [pairAddress: string]: Pair }>((memo, [, curr]) => {\n            memo[curr.liquidityToken.address] = memo[curr.liquidityToken.address] ?? curr\n            return memo\n          }, {})\n      ),\n    [allPairs]\n  )\n}\n\n/**\n * Returns the best trade for the exact amount of tokens in to the given token out\n */\nexport function useTradeExactIn(currencyAmountIn?: CurrencyAmount, currencyOut?: Currency): Trade | null {\n  const allowedPairs = useAllCommonPairs(currencyAmountIn?.currency, currencyOut)\n\n  return useMemo(() => {\n    if (currencyAmountIn && currencyOut && allowedPairs.length > 0) {\n      return (\n        Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: 3, maxNumResults: 1 })[0] ?? null\n      )\n    }\n    return null\n  }, [allowedPairs, currencyAmountIn, currencyOut])\n}\n\n/**\n * Returns the best trade for the token in to the exact amount of token out\n */\nexport function useTradeExactOut(currencyIn?: Currency, currencyAmountOut?: CurrencyAmount): Trade | null {\n  const allowedPairs = useAllCommonPairs(currencyIn, currencyAmountOut?.currency)\n\n  return useMemo(() => {\n    if (currencyIn && currencyAmountOut && allowedPairs.length > 0) {\n      return (\n        Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: 3, maxNumResults: 1 })[0] ??\n        null\n      )\n    }\n    return null\n  }, [allowedPairs, currencyIn, currencyAmountOut])\n}\n","import { parseUnits } from '@ethersproject/units'\nimport { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount, Trade } from '@beswap/sdk'\nimport { ParsedQs } from 'qs'\nimport { useWeb3React } from '@web3-react/core'\n\nimport { useCallback, useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useENS from '../../hooks/useENS'\nimport { useCurrency } from '../../hooks/Tokens'\nimport { useTradeExactIn, useTradeExactOut } from '../../hooks/Trades'\nimport useParsedQueryString from '../../hooks/useParsedQueryString'\nimport { isAddress } from '../../utils'\nimport { AppDispatch, AppState } from '../index'\nimport { useCurrencyBalances } from '../wallet/hooks'\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions'\nimport { SwapState } from './reducer'\n\nimport { useUserSlippageTolerance } from '../user/hooks'\nimport { computeSlippageAdjustedAmounts } from '../../utils/prices'\n\nexport function useSwapState(): AppState['swap'] {\n  return useSelector<AppState, AppState['swap']>((state) => state.swap)\n}\n\nexport function useSwapActionHandlers(): {\n  onCurrencySelection: (field: Field, currency: Currency) => void\n  onSwitchTokens: () => void\n  onUserInput: (field: Field, typedValue: string) => void\n  onChangeRecipient: (recipient: string | null) => void\n} {\n  const dispatch = useDispatch<AppDispatch>()\n  const onCurrencySelection = useCallback(\n    (field: Field, currency: Currency) => {\n      dispatch(\n        selectCurrency({\n          field,\n          currencyId: currency instanceof Token ? currency.address : currency === ETHER ? 'ETH' : '',\n        })\n      )\n    },\n    [dispatch]\n  )\n\n  const onSwitchTokens = useCallback(() => {\n    dispatch(switchCurrencies())\n  }, [dispatch])\n\n  const onUserInput = useCallback(\n    (field: Field, typedValue: string) => {\n      dispatch(typeInput({ field, typedValue }))\n    },\n    [dispatch]\n  )\n\n  const onChangeRecipient = useCallback(\n    (recipient: string | null) => {\n      dispatch(setRecipient({ recipient }))\n    },\n    [dispatch]\n  )\n\n  return {\n    onSwitchTokens,\n    onCurrencySelection,\n    onUserInput,\n    onChangeRecipient,\n  }\n}\n\n// try to parse a user entered amount for a given token\nexport function tryParseAmount(value?: string, currency?: Currency): CurrencyAmount | undefined {\n  if (!value || !currency) {\n    return undefined\n  }\n  try {\n    const typedValueParsed = parseUnits(value, currency.decimals).toString()\n    if (typedValueParsed !== '0') {\n      return currency instanceof Token\n        ? new TokenAmount(currency, JSBI.BigInt(typedValueParsed))\n        : CurrencyAmount.ether(JSBI.BigInt(typedValueParsed))\n    }\n  } catch (error) {\n    // should fail if the user specifies too many decimal places of precision (or maybe exceed max uint?)\n    console.info(`Failed to parse input amount: \"${value}\"`, error)\n  }\n  // necessary for all paths to return a value\n  return undefined\n}\n\nconst BAD_RECIPIENT_ADDRESSES: string[] = [\n  '0xBCfCcbde45cE874adCB698cC183deBcF17952812', // v2 factory\n  '0xf164fC0Ec4E93095b804a4795bBe1e041497b92a', // v2 router 01\n  '0x05fF2B0DB69458A0750badebc4f9e13aDd608C7F', // v2 router 02\n]\n\n/**\n * Returns true if any of the pairs or tokens in a trade have the given checksummed address\n * @param trade to check for the given address\n * @param checksummedAddress address to check in the pairs and tokens\n */\nfunction involvesAddress(trade: Trade, checksummedAddress: string): boolean {\n  return (\n    trade.route.path.some((token) => token.address === checksummedAddress) ||\n    trade.route.pairs.some((pair) => pair.liquidityToken.address === checksummedAddress)\n  )\n}\n\n// from the current swap inputs, compute the best trade and return it.\nexport function useDerivedSwapInfo(): {\n  currencies: { [field in Field]?: Currency }\n  currencyBalances: { [field in Field]?: CurrencyAmount }\n  parsedAmount: CurrencyAmount | undefined\n  v2Trade: Trade | undefined\n  inputError?: string\n} {\n  const { account } = useWeb3React()\n\n  const {\n    independentField,\n    typedValue,\n    [Field.INPUT]: { currencyId: inputCurrencyId },\n    [Field.OUTPUT]: { currencyId: outputCurrencyId },\n    recipient,\n  } = useSwapState()\n\n  const inputCurrency = useCurrency(inputCurrencyId)\n  const outputCurrency = useCurrency(outputCurrencyId)\n  const recipientLookup = useENS(recipient ?? undefined)\n  const to: string | null = (recipient === null ? account : recipientLookup.address) ?? null\n\n  const relevantTokenBalances = useCurrencyBalances(account ?? undefined, [\n    inputCurrency ?? undefined,\n    outputCurrency ?? undefined,\n  ])\n\n  const isExactIn: boolean = independentField === Field.INPUT\n  const parsedAmount = tryParseAmount(typedValue, (isExactIn ? inputCurrency : outputCurrency) ?? undefined)\n\n  const bestTradeExactIn = useTradeExactIn(isExactIn ? parsedAmount : undefined, outputCurrency ?? undefined)\n  const bestTradeExactOut = useTradeExactOut(inputCurrency ?? undefined, !isExactIn ? parsedAmount : undefined)\n\n  const v2Trade = isExactIn ? bestTradeExactIn : bestTradeExactOut\n\n  const currencyBalances = {\n    [Field.INPUT]: relevantTokenBalances[0],\n    [Field.OUTPUT]: relevantTokenBalances[1],\n  }\n\n  const currencies: { [field in Field]?: Currency } = {\n    [Field.INPUT]: inputCurrency ?? undefined,\n    [Field.OUTPUT]: outputCurrency ?? undefined,\n  }\n\n  let inputError: string | undefined\n  if (!account) {\n    inputError = 'Connect Wallet'\n  }\n\n  if (!parsedAmount) {\n    inputError = inputError ?? 'Enter an amount'\n  }\n\n  if (!currencies[Field.INPUT] || !currencies[Field.OUTPUT]) {\n    inputError = inputError ?? 'Select a token'\n  }\n\n  const formattedTo = isAddress(to)\n  if (!to || !formattedTo) {\n    inputError = inputError ?? 'Enter a recipient'\n  } else if (\n    BAD_RECIPIENT_ADDRESSES.indexOf(formattedTo) !== -1 ||\n    (bestTradeExactIn && involvesAddress(bestTradeExactIn, formattedTo)) ||\n    (bestTradeExactOut && involvesAddress(bestTradeExactOut, formattedTo))\n  ) {\n    inputError = inputError ?? 'Invalid recipient'\n  }\n\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const slippageAdjustedAmounts = v2Trade && allowedSlippage && computeSlippageAdjustedAmounts(v2Trade, allowedSlippage)\n\n  // compare input balance to max input based on version\n  const [balanceIn, amountIn] = [\n    currencyBalances[Field.INPUT],\n    slippageAdjustedAmounts ? slippageAdjustedAmounts[Field.INPUT] : null,\n  ]\n\n  if (balanceIn && amountIn && balanceIn.lessThan(amountIn)) {\n    inputError = `Insufficient ${amountIn.currency.symbol} balance`\n  }\n\n  return {\n    currencies,\n    currencyBalances,\n    parsedAmount,\n    v2Trade: v2Trade ?? undefined,\n    inputError,\n  }\n}\n\nfunction parseCurrencyFromURLParameter(urlParam: any): string {\n  if (typeof urlParam === 'string') {\n    const valid = isAddress(urlParam)\n    if (valid) return valid\n    if (urlParam.toUpperCase() === 'ETH') return 'ETH'\n    if (valid === false) return 'ETH'\n  }\n  return 'ETH' ?? ''\n}\n\nfunction parseTokenAmountURLParameter(urlParam: any): string {\n  // eslint-disable-next-line no-restricted-globals\n  return typeof urlParam === 'string' && !isNaN(parseFloat(urlParam)) ? urlParam : ''\n}\n\nfunction parseIndependentFieldURLParameter(urlParam: any): Field {\n  return typeof urlParam === 'string' && urlParam.toLowerCase() === 'output' ? Field.OUTPUT : Field.INPUT\n}\n\nconst ENS_NAME_REGEX = /^[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&/=]*)?$/\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\nfunction validatedRecipient(recipient: any): string | null {\n  if (typeof recipient !== 'string') return null\n  const address = isAddress(recipient)\n  if (address) return address\n  if (ENS_NAME_REGEX.test(recipient)) return recipient\n  if (ADDRESS_REGEX.test(recipient)) return recipient\n  return null\n}\n\nexport function queryParametersToSwapState(parsedQs: ParsedQs): SwapState {\n  let inputCurrency = parseCurrencyFromURLParameter(parsedQs.inputCurrency)\n  let outputCurrency = parseCurrencyFromURLParameter(parsedQs.outputCurrency)\n  if (inputCurrency === outputCurrency) {\n    if (typeof parsedQs.outputCurrency === 'string') {\n      inputCurrency = ''\n    } else {\n      outputCurrency = ''\n    }\n  }\n\n  const recipient = validatedRecipient(parsedQs.recipient)\n\n  return {\n    [Field.INPUT]: {\n      currencyId: inputCurrency,\n    },\n    [Field.OUTPUT]: {\n      currencyId: outputCurrency,\n    },\n    typedValue: parseTokenAmountURLParameter(parsedQs.exactAmount),\n    independentField: parseIndependentFieldURLParameter(parsedQs.exactField),\n    recipient,\n  }\n}\n\n// updates the swap state to use the defaults for a given network\nexport function useDefaultsFromURLSearch():\n  | { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined }\n  | undefined {\n  const { chainId } = useWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const parsedQs = useParsedQueryString()\n  const [result, setResult] = useState<\n    { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined } | undefined\n  >()\n\n  useEffect(() => {\n    if (!chainId) return\n    const parsed = queryParametersToSwapState(parsedQs)\n\n    dispatch(\n      replaceSwapState({\n        typedValue: parsed.typedValue,\n        field: parsed.independentField,\n        inputCurrencyId: parsed[Field.INPUT].currencyId,\n        outputCurrencyId: parsed[Field.OUTPUT].currencyId,\n        recipient: parsed.recipient,\n      })\n    )\n\n    setResult({ inputCurrencyId: parsed[Field.INPUT].currencyId, outputCurrencyId: parsed[Field.OUTPUT].currencyId })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch, chainId])\n\n  return result\n}\n","import { Currency, currencyEquals, ETHER, WETH } from '@beswap/sdk'\nimport { useMemo } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { tryParseAmount } from '../state/swap/hooks'\nimport { useTransactionAdder } from '../state/transactions/hooks'\nimport { useCurrencyBalance } from '../state/wallet/hooks'\n// import { useWeb3React } from './index'\nimport { useWETHContract } from './useContract'\n\nexport enum WrapType {\n  NOT_APPLICABLE,\n  WRAP,\n  UNWRAP\n}\n\nconst NOT_APPLICABLE = { wrapType: WrapType.NOT_APPLICABLE }\n/**\n * Given the selected input and output currency, return a wrap callback\n * @param inputCurrency the selected input currency\n * @param outputCurrency the selected output currency\n * @param typedValue the user input value\n */\nexport default function useWrapCallback(\n  inputCurrency: Currency | undefined,\n  outputCurrency: Currency | undefined,\n  typedValue: string | undefined\n): { wrapType: WrapType; execute?: undefined | (() => Promise<void>); inputError?: string } {\n  const { chainId, account } = useWeb3React()\n  const wethContract = useWETHContract()\n  const balance = useCurrencyBalance(account ?? undefined, inputCurrency)\n  // we can always parse the amount typed as the input currency, since wrapping is 1:1\n  const inputAmount = useMemo(() => tryParseAmount(typedValue, inputCurrency), [inputCurrency, typedValue])\n  const addTransaction = useTransactionAdder()\n\n  return useMemo(() => {\n    if (!wethContract || !chainId || !inputCurrency || !outputCurrency) return NOT_APPLICABLE\n\n    const sufficientBalance = inputAmount && balance && !balance.lessThan(inputAmount)\n\n    if (inputCurrency === ETHER && currencyEquals(WETH[chainId], outputCurrency)) {\n      return {\n        wrapType: WrapType.WRAP,\n        execute:\n          sufficientBalance && inputAmount\n            ? async () => {\n                try {\n                  const txReceipt = await wethContract.deposit({ value: `0x${inputAmount.raw.toString(16)}` })\n                  addTransaction(txReceipt, { summary: `Wrap ${inputAmount.toSignificant(6)} BNB to WBNB` })\n                } catch (error) {\n                  console.error('Could not deposit', error)\n                }\n              }\n            : undefined,\n        inputError: sufficientBalance ? undefined : 'Insufficient ETH balance'\n      }\n    } if (currencyEquals(WETH[chainId], inputCurrency) && outputCurrency === ETHER) {\n      return {\n        wrapType: WrapType.UNWRAP,\n        execute:\n          sufficientBalance && inputAmount\n            ? async () => {\n                try {\n                  const txReceipt = await wethContract.withdraw(`0x${inputAmount.raw.toString(16)}`)\n                  addTransaction(txReceipt, { summary: `Unwrap ${inputAmount.toSignificant(6)} WBNB to BNB` })\n                } catch (error) {\n                  console.error('Could not withdraw', error)\n                }\n              }\n            : undefined,\n        inputError: sufficientBalance ? undefined : 'Insufficient WBNB balance'\n      }\n    } \n      return NOT_APPLICABLE\n    \n  }, [wethContract, chainId, inputCurrency, outputCurrency, inputAmount, balance, addTransaction])\n}\n","import { parse, ParsedQs } from 'qs'\nimport { useMemo } from 'react'\nimport { useLocation } from 'react-router-dom'\n\nexport default function useParsedQueryString(): ParsedQs {\n  const { search } = useLocation()\n  return useMemo(\n    () => (search && search.length > 1 ? parse(search, { parseArrays: false, ignoreQueryPrefix: true }) : {}),\n    [search]\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { Button, Flex, Input, Text } from '@luckyswap/uikit'\nimport { useUserSlippageTolerance } from 'state/user/hooks'\nimport QuestionHelper from '../QuestionHelper'\nimport TranslatedText from '../TranslatedText'\n\nconst MAX_SLIPPAGE = 5000\nconst RISKY_SLIPPAGE_LOW = 50\nconst RISKY_SLIPPAGE_HIGH = 500\n\nconst StyledSlippageToleranceSettings = styled.div`\n  margin-bottom: 16px;\n`\n\nconst Option = styled.div`\n  padding: 0 4px;\n`\n\nconst Options = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n\n  ${Option}:first-child {\n    padding-left: 0;\n  }\n\n  ${Option}:last-child {\n    padding-right: 0;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n  }\n`\n\nconst Label = styled.div`\n  align-items: center;\n  display: flex;\n  margin-bottom: 8px;\n`\n\nconst predefinedValues = [\n  { label: '0.1%', value: 0.1 },\n  { label: '0.5%', value: 0.5 },\n  { label: '1%', value: 1 }\n]\n\nconst SlippageToleranceSettings = () => {\n  const [userSlippageTolerance, setUserslippageTolerance] = useUserSlippageTolerance()\n  const [value, setValue] = useState(userSlippageTolerance / 100)\n  const [error, setError] = useState<string | null>(null)\n\n  const handleChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\n    const { value: inputValue } = evt.target\n    setValue(parseFloat(inputValue))\n  }\n\n  // Updates local storage if value is valid\n  useEffect(() => {\n    try {\n      const rawValue = value * 100\n      if (!Number.isNaN(rawValue) && rawValue > 0 && rawValue < MAX_SLIPPAGE) {\n        setUserslippageTolerance(rawValue)\n        setError(null)\n      } else {\n        setError('Enter a valid slippage percentage')\n      }\n    } catch {\n      setError('Enter a valid slippage percentage')\n    }\n  }, [value, setError, setUserslippageTolerance])\n\n  // Notify user if slippage is risky\n  useEffect(() => {\n    if (userSlippageTolerance < RISKY_SLIPPAGE_LOW) {\n      setError('Your transaction may fail')\n    } else if (userSlippageTolerance > RISKY_SLIPPAGE_HIGH) {\n      setError('Your transaction may be frontrun')\n    }\n  }, [userSlippageTolerance, setError])\n\n  return (\n    <StyledSlippageToleranceSettings>\n      <Label>\n        <Text style={{ fontWeight: 600, color: '#fff' }}>\n          <TranslatedText translationId={88}>Slippage tolerance</TranslatedText>\n        </Text>\n        {/* <QuestionHelper text=\"Your transaction will revert if the price changes unfavorably by more than this percentage.\" /> */}\n      </Label>\n      <Options>\n        <Flex mb={['8px', 0]} mr={[0, '8px']}>\n          {predefinedValues.map(({ label, value: predefinedValue }) => {\n            const handleClick = () => setValue(predefinedValue)\n\n            return (\n              <Option key={predefinedValue}>\n                <Button style={{ color: '#80719c' }} variant={value === predefinedValue ? 'primary' : 'tertiary'} onClick={handleClick}>\n                  {label}\n                </Button>\n              </Option>\n            )\n          })}\n        </Flex>\n        <Flex alignItems=\"center\">\n          <Option>\n            <Input\n              type=\"number\"\n              scale=\"lg\"\n              step={0.1}\n              min={0.1}\n              placeholder=\"5%\"\n              value={value}\n              onChange={handleChange}\n              isWarning={error !== null}\n            />\n          </Option>\n          <Option>\n            <Text fontSize=\"18px\">%</Text>\n          </Option>\n        </Flex>\n      </Options>\n      {error && (\n        <Text mt=\"8px\" color=\"failure\">\n          {error}\n        </Text>\n      )}\n    </StyledSlippageToleranceSettings>\n  )\n}\n\nexport default SlippageToleranceSettings\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { Input, Text } from '@luckyswap/uikit'\nimport { useUserDeadline } from 'state/user/hooks'\nimport QuestionHelper from '../QuestionHelper'\nimport TranslatedText from '../TranslatedText'\n\nconst StyledTransactionDeadlineSetting = styled.div`\n  margin-bottom: 16px;\n`\n\nconst Label = styled.div`\n  align-items: center;\n  display: flex;\n  margin-bottom: 8px;\n`\n\nconst Field = styled.div`\n  align-items: center;\n  display: inline-flex;\n\n  & > ${Input} {\n    max-width: 100px;\n  }\n\n  & > ${Text} {\n    font-size: 14px;\n    margin-left: 8px;\n  }\n`\n\nconst TransactionDeadlineSetting = () => {\n  const [deadline, setDeadline] = useUserDeadline()\n  const [value, setValue] = useState(deadline / 60) // deadline in minutes\n  const [error, setError] = useState<string | null>(null)\n\n  const handleChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\n    const { value: inputValue } = evt.target\n    setValue(parseInt(inputValue, 10))\n  }\n\n  // Updates local storage if value is valid\n  useEffect(() => {\n    try {\n      const rawValue = value * 60\n      if (!Number.isNaN(rawValue) && rawValue > 0) {\n        setDeadline(rawValue)\n        setError(null)\n      } else {\n        setError('Enter a valid deadline')\n      }\n    } catch {\n      setError('Enter a valid deadline')\n    }\n  }, [value, setError, setDeadline])\n\n  return (\n    <StyledTransactionDeadlineSetting>\n      <Label>\n        <Text style={{ fontWeight: 600, color: '#fff' }}>\n          <TranslatedText translationId={90}>Transaction deadline</TranslatedText>\n        </Text>\n        {/* <QuestionHelper text=\"Your transaction will revert if it is pending for more than this long.\" /> */}\n      </Label> \n      <Field>\n        <Input style={{ color: '#fff' }} type=\"number\" step=\"1\" min=\"1\" value={value} onChange={handleChange} />\n        <Text style={{ color: '#fff' }}>Minutes</Text>\n      </Field>\n      {error && (\n        <Text mt=\"8px\" color=\"failure\">\n          {error}\n        </Text>\n      )}\n    </StyledTransactionDeadlineSetting>\n  )\n}\n\nexport default TransactionDeadlineSetting\n","import React from 'react'\nimport { Modal } from '@luckyswap/uikit'\nimport SlippageToleranceSetting from './SlippageToleranceSetting'\nimport TransactionDeadlineSetting from './TransactionDeadlineSetting'\n\ntype SettingsModalProps = {\n  onDismiss?: () => void\n}\n\n// TODO: Fix UI Kit typings\nconst defaultOnDismiss = () => null\n\nconst SettingsModal = ({ onDismiss = defaultOnDismiss }: SettingsModalProps) => {\n  return (\n    <Modal className=\"style-color\" title=\"Settings\" onDismiss={onDismiss}>\n      <SlippageToleranceSetting />\n      <TransactionDeadlineSetting />\n    </Modal>\n  )\n}\n\nexport default SettingsModal\n","import React from 'react'\n\nimport styled, { keyframes } from 'styled-components'\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`\n\nconst StyledSVG = styled.svg<{ size: string; stroke?: string }>`\n  animation: 2s ${rotate} linear infinite;\n  height: ${({ size }) => size};\n  width: ${({ size }) => size};\n  path {\n    stroke: ${({ stroke, theme }) => stroke ?? theme.colors.primary};\n  }\n`\n\n/**\n * Takes in custom size and stroke for circle color, default to primary color as fill,\n * need ...rest for layered styles on top\n */\nexport default function Loader({ size = '16px', stroke, ...rest }: { size?: string; stroke?: string }) {\n  return (\n    <StyledSVG viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" size={size} stroke={stroke} {...rest}>\n      <path\n        d=\"M12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22C17.5228 22 22 17.5228 22 12C22 9.27455 20.9097 6.80375 19.1414 5\"\n        strokeWidth=\"2.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </StyledSVG>\n  )\n}\n","import React, { useMemo } from 'react'\nimport { CheckmarkCircleIcon, ErrorIcon, Flex, LinkExternal, Text, Modal, Button } from '@luckyswap/uikit'\nimport { useActiveWeb3React } from 'hooks'\nimport { getBscScanLink } from 'utils'\nimport { isTransactionRecent, useAllTransactions } from 'state/transactions/hooks'\nimport { TransactionDetails } from 'state/transactions/reducer'\nimport Loader from 'components/Loader'\n\ntype RecentTransactionsModalProps = {\n  onDismiss?: () => void\n}\n\n// TODO: Fix UI Kit typings\nconst defaultOnDismiss = () => null\n\nconst newTransactionsFirst = (a: TransactionDetails, b: TransactionDetails) => b.addedTime - a.addedTime\n\nconst getRowStatus = (sortedRecentTransaction: TransactionDetails) => {\n  const { hash, receipt } = sortedRecentTransaction\n\n  if (!hash) {\n    return { icon: <Loader />, color: 'text' }\n  }\n\n  if (hash && receipt?.status === 1) {\n    return { icon: <CheckmarkCircleIcon color=\"success\" />, color: 'success' }\n  }\n\n  return { icon: <ErrorIcon color=\"failure\" />, color: 'failure' }\n}\n\nconst RecentTransactionsModal = ({ onDismiss = defaultOnDismiss }: RecentTransactionsModalProps) => {\n  const { account, chainId } = useActiveWeb3React()\n  const allTransactions = useAllTransactions()\n\n  // Logic taken from Web3Status/index.tsx line 175\n  const sortedRecentTransactions = useMemo(() => {\n    const txs = Object.values(allTransactions)\n    return txs.filter(isTransactionRecent).sort(newTransactionsFirst)\n  }, [allTransactions])\n\n  return (\n    <Modal title=\"Recent Transactions\" onDismiss={onDismiss}>\n      {!account && (\n        <Flex justifyContent=\"center\" flexDirection=\"column\" alignItems=\"center\">\n          <Text mb=\"8px\" bold>\n            Please connect your wallet to view your recent transactions\n          </Text>\n          <Button variant=\"tertiary\" size=\"sm\" onClick={onDismiss}>\n            Close\n          </Button>\n        </Flex>\n      )}\n      {account && chainId && sortedRecentTransactions.length === 0 && (\n        <Flex justifyContent=\"center\" flexDirection=\"column\" alignItems=\"center\">\n          <Text mb=\"8px\" bold>\n            No recent transactions\n          </Text>\n          <Button variant=\"tertiary\" size=\"sm\" onClick={onDismiss}>\n            Close\n          </Button>\n        </Flex>\n      )}\n      {account &&\n        chainId &&\n        sortedRecentTransactions.map((sortedRecentTransaction) => {\n          const { hash, summary } = sortedRecentTransaction\n          const { icon, color } = getRowStatus(sortedRecentTransaction)\n\n          return (\n            <>\n              <Flex key={hash} alignItems=\"center\" justifyContent=\"space-between\" mb=\"4px\">\n                <LinkExternal href={getBscScanLink(chainId, hash, 'transaction')} color={color}>\n                  {summary ?? hash}\n                </LinkExternal>\n                {icon}\n              </Flex>\n            </>\n          )\n        })}\n    </Modal>\n  )\n}\n\nexport default RecentTransactionsModal\n","import React, { ReactNode } from 'react'\nimport styled from 'styled-components'\nimport { Heading, IconButton, Text, Flex, useModal, CogIcon, Svg } from '@luckyswap/uikit'\nimport SettingsModal from './SettingsModal'\nimport RecentTransactionsModal from './RecentTransactionsModal'\n\ninterface PageHeaderProps {\n  title: ReactNode\n  description?: ReactNode\n  children?: ReactNode\n}\n\nconst HistoryIcon = () => (\n  <Svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n    <path\n      d=\"M13 3C8.03 3 4 7.03 4 12H1L4.89 15.89L4.96 16.03L9 12H6C6 8.13 9.13 5 13 5C16.87 5 20 8.13 20 12C20 15.87 16.87 19 13 19C11.07 19 9.32 18.21 8.06 16.94L6.64 18.36C8.27 19.99 10.51 21 13 21C17.97 21 22 16.97 22 12C22 7.03 17.97 3 13 3ZM12 8V13L16.28 15.54L17 14.33L13.5 12.25V8H12Z\"\n      fill=\"currentColor\"\n    />\n  </Svg>\n)\n\nconst StyledPageHeader = styled.div`\n  padding: 5px;\n`\n\nconst Details = styled.div`\n  flex: 1;\n`\n\nconst PageHeader = ({ title, description, children }: PageHeaderProps) => {\n  const [onPresentSettings] = useModal(<SettingsModal />)\n  const [onPresentRecentTransactions] = useModal(<RecentTransactionsModal />)\n\n  return (\n    <StyledPageHeader>\n      <Flex alignItems=\"center\">\n        <Details>\n          <Heading mb=\"8px\" color=\"#2b2c3a\">{title}</Heading>\n          {description && (\n            <Text color=\"#2b2c3a\" fontSize=\"14px\">\n              {description}\n            </Text>\n          )}\n        </Details>\n       <div className=\"line-icon\">\n        <div className=\"custome-icon\">\n          <IconButton variant=\"text\" onClick={onPresentSettings} title=\"Settings\">\n              <CogIcon width=\"24px\" color=\"currentColor\" />\n            </IconButton>\n        </div>\n       </div>\n        {/* <IconButton variant=\"text\" onClick={onPresentRecentTransactions} title=\"Recent transactions\">\n          <HistoryIcon />\n        </IconButton> */}\n      </Flex>\n      {children && <Text mt=\"16px\">{children}</Text>}\n    </StyledPageHeader>\n  )\n}\n\nexport default PageHeader\n","import React from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { Button, ButtonProps, ConnectorId, useWalletModal } from '@bscsswap/uikit'\nimport { injected, walletconnect } from 'connectors'\nimport useI18n from 'hooks/useI18n'\n\nconst UnlockButton: React.FC<ButtonProps> = (props) => {\n  const TranslateString = useI18n()\n  const { account, activate, deactivate } = useWeb3React()\n\n  const handleLogin = (connectorId: ConnectorId) => {\n    if (connectorId === 'walletconnect') {\n      return activate(walletconnect)\n    }\n    return activate(injected)\n  }\n\n  const { onPresentConnectModal } = useWalletModal(handleLogin, deactivate, account as string)\n\n  return (\n    <Button onClick={onPresentConnectModal} style={{ background: '#10607b66' }} {...props}>\n      {TranslateString(292, 'Unlock Wallet')}\n    </Button>\n  )\n}\n\nexport default UnlockButton\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card } from '@luckyswap/uikit'\n\nexport const BodyWrapper = styled(Card)`\n  position: relative;\n  max-width: 664px;\n  width: 100%;\n  z-index: 5;\n  margin: 0 auto;\n  background-color: #333442;\n  border-radius: 6px;\n  padding: 45px;\n  margin-top: 20px;\n`\n\n/**\n * The styled container element that wraps the content of most pages and the tabs.\n */\nexport default function AppBody({ children }: { children: React.ReactNode }) {\n  return <BodyWrapper className=\"color-orange\">{children}</BodyWrapper>\n}\n","import React, { useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Text } from '@luckyswap/uikit'\nimport useENS from '../../../hooks/useENS'\nimport { useActiveWeb3React } from '../../../hooks'\nimport { ExternalLink } from '../Shared'\nimport { AutoColumn } from '../Column'\nimport { RowBetween } from '../Row'\nimport { getBscScanLink } from '../../../utils'\n\nconst InputPanel = styled.div`\n  display: flex;\n  flex-flow: column nowrap;\n  position: relative;\n  border-radius: 1.25rem;\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\n  z-index: 1;\n  width: 100%;\n`\n\nconst ContainerRow = styled.div<{ error: boolean }>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 1.25rem;\n  border: 1px solid ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.invertedContrast)};\n  transition: border-color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')},\n    color 500ms ${({ error }) => (error ? 'step-end' : 'step-start')};\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\n`\n\nconst InputContainer = styled.div`\n  flex: 1;\n  padding: 1rem;\n`\n\nconst Input = styled.input<{ error?: boolean }>`\n  font-size: 1.25rem;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  width: 0;\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\n  transition: color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')};\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.primary)};\n  overflow: hidden;\n  text-overflow: ellipsis;\n  font-weight: 500;\n  width: 100%;\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textDisabled};\n  }\n  padding: 0px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textDisabled};\n  }\n`\n\nexport default function AddressInputPanel({\n  id,\n  value,\n  onChange,\n}: {\n  id?: string\n  // the typed string value\n  value: string\n  // triggers whenever the typed value changes\n  onChange: (value: string) => void\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  const { address, loading, name } = useENS(value)\n\n  const handleInput = useCallback(\n    (event) => {\n      const input = event.target.value\n      const withoutSpaces = input.replace(/\\s+/g, '')\n      onChange(withoutSpaces)\n    },\n    [onChange]\n  )\n\n  const error = Boolean(value.length > 0 && !loading && !address)\n\n  return (\n    <InputPanel id={id}>\n      <ContainerRow error={error}>\n        <InputContainer>\n          <AutoColumn gap=\"md\">\n            <RowBetween>\n              <Text color=\"textSubtle\" fontWeight={500} fontSize=\"14px\">\n                Recipient\n              </Text>\n              {address && chainId && (\n                <ExternalLink href={getBscScanLink(chainId, name ?? address, 'address')} style={{ fontSize: '14px' }}>\n                  (View on BscScan)\n                </ExternalLink>\n              )}\n            </RowBetween>\n            <Input\n              className=\"recipient-address-input\"\n              type=\"text\"\n              autoComplete=\"off\"\n              autoCorrect=\"off\"\n              autoCapitalize=\"off\"\n              spellCheck=\"false\"\n              placeholder=\"Wallet Address or ENS name\"\n              error={error}\n              pattern=\"^(0x[a-fA-F0-9]{40})$\"\n              onChange={handleInput}\n              value={value}\n            />\n          </AutoColumn>\n        </InputContainer>\n      </ContainerRow>\n    </InputPanel>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Link } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem } from '@luckyswap/uikit'\nimport TranslatedText from '../TranslatedText'\n\nconst StyledNav = styled.div`\n  // margin-bottom: 40px;\n  display: flex;\n  justify-content: flex-start;\n`\n\nconst Nav = ({ activeIndex = 0 } : { activeIndex?: number }) => (\n  <StyledNav className=\"nav-swap\">\n    <BoxNav>\n      <ButtonMenu activeIndex={activeIndex} variant=\"subtle\">\n        <ButtonMenuItem id=\"swap-nav-link\" to=\"/swap\" as={Link}>\n          <TranslatedText translationId={8}>Swap</TranslatedText>\n        </ButtonMenuItem>\n        <ButtonMenuItem id=\"pool-nav-link\" to=\"/pool\" as={Link} className='txt-dark'>\n          <TranslatedText translationId={74}>Liquidity</TranslatedText>\n        </ButtonMenuItem>\n      </ButtonMenu>\n    </BoxNav>\n  </StyledNav>\n)\n\nexport default Nav\n\nconst BoxNav = styled.div`\n  height: 48px;\n`\n","import { CurrencyAmount, JSBI, Token, Trade } from '@beswap/sdk'\nimport { useWeb3React } from '@web3-react/core'\nimport React, { useCallback, useContext, useEffect, useMemo, useState } from 'react'\nimport { ArrowDown } from 'react-feather'\nimport { CardBody, ArrowDownIcon, Button, IconButton, Text } from '@luckyswap/uikit'\nimport styled, { ThemeContext } from 'styled-components'\nimport { INITIAL_ALLOWED_SLIPPAGE } from '../../constants/index'\nimport { TranslateString } from '../../utils/translateTextHelpers'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend'\nimport { computeTradePriceBreakdown, warningSeverity } from '../../utils/prices'\nimport ConfirmSwapModal from '../../components/Swap/swap/ConfirmSwapModal'\nimport CurrencyInputPanel from '../../components/Swap/CurrencyInputPanel'\nimport { AutoRow, RowBetween } from '../../components/Swap/Row'\nimport AdvancedSwapDetailsDropdown from '../../components/Swap/swap/AdvancedSwapDetailsDropdown'\nimport confirmPriceImpactWithoutFee from '../../components/Swap/swap/confirmPriceImpactWithoutFee'\nimport { ArrowWrapper, BottomGrouping, SwapCallbackError, Wrapper } from '../../components/Swap/swap/styleds'\nimport TradePrice from '../../components/Swap/swap/TradePrice'\nimport TokenWarningModal from '../../components/Swap/TokenWarningModal'\nimport SyrupWarningModal from '../../components/Swap/SyrupWarningModal'\nimport ProgressSteps from '../../components/Swap/ProgressSteps'\nimport { useCurrency } from '../../hooks/Tokens'\nimport { ApprovalState, useApproveCallbackFromTrade } from '../../hooks/useApproveCallback'\nimport { useSwapCallback } from '../../hooks/useSwapCallback'\nimport useWrapCallback, { WrapType } from '../../hooks/useWrapCallback'\nimport { Field } from '../../state/swap/actions'\nimport { useDefaultsFromURLSearch, useDerivedSwapInfo, useSwapActionHandlers, useSwapState } from '../../state/swap/hooks'\nimport { useExpertModeManager, useUserDeadline, useUserSlippageTolerance } from '../../state/user/hooks'\nimport { LinkStyledButton } from '../../components/Swap/Shared'\nimport Loader from '../../components/Swap/Loader'\nimport PageHeader from '../../components/Swap/PageHeader'\nimport ConnectWalletButton from '../../components/Swap/ConnectWalletButton'\nimport AppBody from '../AppBody'\nimport AddressInputPanel from '../../components/Swap/AddressInputPanel'\nimport CardNav from '../../components/Swap/CardNav'\nimport Card, { GreyCard } from '../../components/Swap/Card'\nimport { AutoColumn } from '../../components/Swap/Column'\n\nconst Swap = () => {\n  const loadedUrlParams = useDefaultsFromURLSearch()\n\n  // token warning stuff\n  const [loadedInputCurrency, loadedOutputCurrency] = [\n    useCurrency(loadedUrlParams?.inputCurrencyId),\n    useCurrency(loadedUrlParams?.outputCurrencyId),\n  ]\n  const [dismissTokenWarning, setDismissTokenWarning] = useState<boolean>(false)\n  const [isSyrup, setIsSyrup] = useState<boolean>(false)\n  const [syrupTransactionType, setSyrupTransactionType] = useState<string>('')\n  const urlLoadedTokens: Token[] = useMemo(\n    () => [loadedInputCurrency, loadedOutputCurrency]?.filter((c): c is Token => c instanceof Token) ?? [],\n    [loadedInputCurrency, loadedOutputCurrency]\n  )\n  const handleConfirmTokenWarning = useCallback(() => {\n    setDismissTokenWarning(true)\n  }, [])\n\n  const handleConfirmSyrupWarning = useCallback(() => {\n    setIsSyrup(false)\n    setSyrupTransactionType('')\n  }, [])\n\n  const { account } = useWeb3React()\n  const theme = useContext(ThemeContext)\n\n  const [isExpertMode] = useExpertModeManager()\n\n  // get custom setting values for user\n  const [deadline] = useUserDeadline()\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  // swap state\n  const { independentField, typedValue, recipient } = useSwapState()\n  const { v2Trade, currencyBalances, parsedAmount, currencies, inputError: swapInputError } = useDerivedSwapInfo()\n  const { wrapType, execute: onWrap, inputError: wrapInputError } = useWrapCallback(\n    currencies[Field.INPUT],\n    currencies[Field.OUTPUT],\n    typedValue\n  )\n  const showWrap: boolean = wrapType !== WrapType.NOT_APPLICABLE\n  const trade = showWrap ? undefined : v2Trade\n\n  const parsedAmounts = showWrap\n    ? {\n        [Field.INPUT]: parsedAmount,\n        [Field.OUTPUT]: parsedAmount,\n      }\n    : {\n        [Field.INPUT]: independentField === Field.INPUT ? parsedAmount : trade?.inputAmount,\n        [Field.OUTPUT]: independentField === Field.OUTPUT ? parsedAmount : trade?.outputAmount,\n      }\n\n  const { onSwitchTokens, onCurrencySelection, onUserInput, onChangeRecipient } = useSwapActionHandlers()\n  const isValid = !swapInputError\n  const dependentField: Field = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT\n\n  const handleTypeInput = useCallback(\n    (value: string) => {\n      onUserInput(Field.INPUT, value)\n    },\n    [onUserInput]\n  )\n  const handleTypeOutput = useCallback(\n    (value: string) => {\n      onUserInput(Field.OUTPUT, value)\n    },\n    [onUserInput]\n  )\n\n  // modal and loading\n  const [{ showConfirm, tradeToConfirm, swapErrorMessage, attemptingTxn, txHash }, setSwapState] = useState<{\n    showConfirm: boolean\n    tradeToConfirm: Trade | undefined\n    attemptingTxn: boolean\n    swapErrorMessage: string | undefined\n    txHash: string | undefined\n  }>({\n    showConfirm: false,\n    tradeToConfirm: undefined,\n    attemptingTxn: false,\n    swapErrorMessage: undefined,\n    txHash: undefined,\n  })\n\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: showWrap\n      ? parsedAmounts[independentField]?.toExact() ?? ''\n      : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  const route = trade?.route\n  const userHasSpecifiedInputOutput = Boolean(\n    currencies[Field.INPUT] && currencies[Field.OUTPUT] && parsedAmounts[independentField]?.greaterThan(JSBI.BigInt(0))\n  )\n  const noRoute = !route\n\n  // check whether the user has approved the router on the input token\n  const [approval, approveCallback] = useApproveCallbackFromTrade(trade, allowedSlippage)\n\n  // check if user has gone through approval process, used to show two step buttons, reset on token change\n  const [approvalSubmitted, setApprovalSubmitted] = useState<boolean>(false)\n\n  // mark when a user has submitted an approval, reset onTokenSelection for input field\n  useEffect(() => {\n    if (approval === ApprovalState.PENDING) {\n      setApprovalSubmitted(true)\n    }\n  }, [approval, approvalSubmitted])\n\n  const maxAmountInput: CurrencyAmount | undefined = maxAmountSpend(currencyBalances[Field.INPUT])\n  const atMaxAmountInput = Boolean(maxAmountInput && parsedAmounts[Field.INPUT]?.equalTo(maxAmountInput))\n\n  // the callback to execute the swap\n  const { callback: swapCallback, error: swapCallbackError } = useSwapCallback(\n    trade,\n    allowedSlippage,\n    deadline,\n    recipient\n  )\n\n  const { priceImpactWithoutFee } = computeTradePriceBreakdown(trade)\n\n  const handleSwap = useCallback(() => {\n    if (priceImpactWithoutFee && !confirmPriceImpactWithoutFee(priceImpactWithoutFee)) {\n      return\n    }\n    if (!swapCallback) {\n      return\n    }\n    setSwapState((prevState) => ({ ...prevState, attemptingTxn: true, swapErrorMessage: undefined, txHash: undefined }))\n    swapCallback()\n      .then((hash) => {\n        setSwapState((prevState) => ({\n          ...prevState,\n          attemptingTxn: false,\n          swapErrorMessage: undefined,\n          txHash: hash,\n        }))\n      })\n      .catch((error) => {\n        setSwapState((prevState) => ({\n          ...prevState,\n          attemptingTxn: false,\n          swapErrorMessage: error.message,\n          txHash: undefined,\n        }))\n      })\n  }, [priceImpactWithoutFee, swapCallback, setSwapState])\n\n  // errors\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n\n  // warnings on slippage\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  // show approve flow when: no error on inputs, not approved or pending, or approved in current session\n  // never show if price impact is above threshold in non expert mode\n  const showApproveFlow =\n    !swapInputError &&\n    (approval === ApprovalState.NOT_APPROVED ||\n      approval === ApprovalState.PENDING ||\n      (approvalSubmitted && approval === ApprovalState.APPROVED)) &&\n    !(priceImpactSeverity > 3 && !isExpertMode)\n\n  const handleConfirmDismiss = useCallback(() => {\n    setSwapState((prevState) => ({ ...prevState, showConfirm: false }))\n\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onUserInput(Field.INPUT, '')\n    }\n  }, [onUserInput, txHash, setSwapState])\n\n  const handleAcceptChanges = useCallback(() => {\n    setSwapState((prevState) => ({ ...prevState, tradeToConfirm: trade }))\n  }, [trade])\n\n  // This will check to see if the user has selected Syrup to either buy or sell.\n  // If so, they will be alerted with a warning message.\n  const checkForSyrup = useCallback(\n    (selected: string, purchaseType: string) => {\n      if (selected === 'syrup') {\n        setIsSyrup(true)\n        setSyrupTransactionType(purchaseType)\n      }\n    },\n    [setIsSyrup, setSyrupTransactionType]\n  )\n\n  const handleInputSelect = useCallback(\n    (inputCurrency) => {\n      setApprovalSubmitted(false) // reset 2 step UI for approvals\n      onCurrencySelection(Field.INPUT, inputCurrency)\n      if (inputCurrency.symbol.toLowerCase() === 'syrup') {\n        checkForSyrup(inputCurrency.symbol.toLowerCase(), 'Selling')\n      }\n    },\n    [onCurrencySelection, setApprovalSubmitted, checkForSyrup]\n  )\n\n  const handleMaxInput = useCallback(() => {\n    if (maxAmountInput) {\n      onUserInput(Field.INPUT, maxAmountInput.toExact())\n    }\n  }, [maxAmountInput, onUserInput])\n\n  const handleOutputSelect = useCallback(\n    (outputCurrency) => {\n      onCurrencySelection(Field.OUTPUT, outputCurrency)\n      if (outputCurrency.symbol.toLowerCase() === 'syrup') {\n        checkForSyrup(outputCurrency.symbol.toLowerCase(), 'Buying')\n      }\n    },\n    [onCurrencySelection, checkForSyrup]\n  )\n\n  return (\n    <>\n      <TokenWarningModal\n        isOpen={urlLoadedTokens.length > 0 && !dismissTokenWarning}\n        tokens={urlLoadedTokens}\n        onConfirm={handleConfirmTokenWarning}\n      />\n      <SyrupWarningModal\n        isOpen={isSyrup}\n        transactionType={syrupTransactionType}\n        onConfirm={handleConfirmSyrupWarning}\n      />\n      \n      <AppBody>\n        <FlexBox>\n          <CardNav/>\n          <PageHeader title=\"\" description=\"\" />\n        </FlexBox>\n        <Wrapper id=\"swap-page\">\n          <ConfirmSwapModal\n            isOpen={showConfirm}\n            trade={trade}\n            originalTrade={tradeToConfirm}\n            onAcceptChanges={handleAcceptChanges}\n            attemptingTxn={attemptingTxn}\n            txHash={txHash}\n            recipient={recipient}\n            allowedSlippage={allowedSlippage}\n            onConfirm={handleSwap}\n            swapErrorMessage={swapErrorMessage}\n            onDismiss={handleConfirmDismiss}\n          />\n          <CardBody className=\"padding-0\">\n            <AutoColumn gap=\"md\">\n              <CurrencyInputPanel\n                label={\n                  independentField === Field.OUTPUT && !showWrap && trade\n                    ? 'From (estimated)'\n                    : TranslateString(76, 'From')\n                }\n                value={formattedAmounts[Field.INPUT]}\n                showMaxButton={!atMaxAmountInput}\n                currency={currencies[Field.INPUT]}\n                onUserInput={handleTypeInput}\n                onMax={handleMaxInput}\n                onCurrencySelect={handleInputSelect}\n                otherCurrency={currencies[Field.OUTPUT]}\n                id=\"swap-currency-input\"\n              />\n              <AutoColumn justify=\"space-between\">\n                <AutoRow justify={isExpertMode ? 'space-between' : 'center'} style={{ padding: '0 1rem' }}>\n                  <ArrowWrapper className=\"style-position\" clickable>\n                    <IconButton\n                      variant=\"tertiary\"\n                      onClick={() => {\n                        setApprovalSubmitted(false) // reset 2 step UI for approvals\n                        onSwitchTokens()\n                      }}\n                      style={{ borderRadius: '50%' }}\n                      size=\"sm\"\n                    >\n                      <ArrowDownIcon color=\"primary\" width=\"24px\" />\n                    </IconButton>\n                  </ArrowWrapper>\n                  {recipient === null && !showWrap && isExpertMode ? (\n                    <LinkStyledButton id=\"add-recipient-button\" onClick={() => onChangeRecipient('')}>\n                      + Add a send (optional)\n                    </LinkStyledButton>\n                  ) : null}\n                </AutoRow>\n              </AutoColumn>\n              <CurrencyInputPanel\n                value={formattedAmounts[Field.OUTPUT]}\n                onUserInput={handleTypeOutput}\n                label={\n                  independentField === Field.INPUT && !showWrap && trade ? 'To (estimated)' : TranslateString(80, 'To')\n                }\n                showMaxButton={false}\n                currency={currencies[Field.OUTPUT]}\n                onCurrencySelect={handleOutputSelect}\n                otherCurrency={currencies[Field.INPUT]}\n                id=\"swap-currency-output\"\n              />\n\n              {recipient !== null && !showWrap ? (\n                <>\n                  <AutoRow justify=\"space-between\" style={{ padding: '0 1rem' }}>\n                    <ArrowWrapper clickable={false}>\n                      <ArrowDown size=\"16\" color={theme.colors.textSubtle} />\n                    </ArrowWrapper>\n                    <LinkStyledButton id=\"remove-recipient-button\" onClick={() => onChangeRecipient(null)}>\n                      - Remove send\n                    </LinkStyledButton>\n                  </AutoRow>\n                  <AddressInputPanel id=\"recipient\" value={recipient} onChange={onChangeRecipient} />\n                </>\n              ) : null}\n\n              {showWrap ? null : (\n                <Card padding=\".25rem .75rem 0 .75rem\" borderRadius=\"20px\">\n                  <AutoColumn gap=\"4px\">\n                    {Boolean(trade) && (\n                      <RowBetween align=\"center\">\n                        <Text fontSize=\"14px\">Price</Text>\n                        <TradePrice\n                          price={trade?.executionPrice}\n                          showInverted={showInverted}\n                          setShowInverted={setShowInverted}\n                        />\n                      </RowBetween>\n                    )}\n                    {allowedSlippage !== INITIAL_ALLOWED_SLIPPAGE && (\n                      <RowBetween align=\"center\">\n                        <Text fontSize=\"14px\">Slippage Tolerance</Text>\n                        <Text fontSize=\"14px\">{allowedSlippage / 100}%</Text>\n                      </RowBetween>\n                    )}\n                  </AutoColumn>\n                </Card>\n              )}\n            </AutoColumn>\n            <BottomGrouping className=\"bot-btn\">\n              {!account ? (\n                <ConnectWalletButton  />\n              ) : showWrap ? (\n                <Button disabled={Boolean(wrapInputError)} onClick={onWrap} >\n                  {wrapInputError ??\n                    (wrapType === WrapType.WRAP ? 'Wrap' : wrapType === WrapType.UNWRAP ? 'Unwrap' : null)}\n                </Button>\n              ) : noRoute && userHasSpecifiedInputOutput ? (\n                <GreyCard style={{ textAlign: 'center' }}>\n                  <Text mb=\"4px\">Insufficient liquidity for this trade.</Text>\n                </GreyCard>\n              ) : showApproveFlow ? (\n                <RowBetween>\n                  <Button\n                    onClick={approveCallback}\n                    disabled={approval !== ApprovalState.NOT_APPROVED || approvalSubmitted}\n                    style={{ width: '48%' }}\n                    variant={approval === ApprovalState.APPROVED ? 'success' : 'primary'}\n                  >\n                    {approval === ApprovalState.PENDING ? (\n                      <AutoRow gap=\"6px\" justify=\"center\">\n                        Approving <Loader stroke=\"white\" />\n                      </AutoRow>\n                    ) : approvalSubmitted && approval === ApprovalState.APPROVED ? (\n                      'Approved'\n                    ) : (\n                      `Approve ${currencies[Field.INPUT]?.symbol}`\n                    )}\n                  </Button>\n                  <Button\n                    onClick={() => {\n                      if (isExpertMode) {\n                        handleSwap()\n                      } else {\n                        setSwapState({\n                          tradeToConfirm: trade,\n                          attemptingTxn: false,\n                          swapErrorMessage: undefined,\n                          showConfirm: true,\n                          txHash: undefined,\n                        })\n                      }\n                    }}\n                    style={{ width: '48%' }}\n                    id=\"swap-button\"\n                    disabled={\n                      !isValid || approval !== ApprovalState.APPROVED || (priceImpactSeverity > 3 && !isExpertMode)\n                    }\n                    variant={isValid && priceImpactSeverity > 2 ? 'danger' : 'primary'}\n                  >\n                    {priceImpactSeverity > 3 && !isExpertMode\n                      ? `Price Impact High`\n                      : `Swap${priceImpactSeverity > 2 ? ' Anyway' : ''}`}\n                  </Button>\n                </RowBetween>\n              ) : (\n                <Button\n                  onClick={() => {\n                    if (isExpertMode) {\n                      handleSwap()\n                    } else {\n                      setSwapState({\n                        tradeToConfirm: trade,\n                        attemptingTxn: false,\n                        swapErrorMessage: undefined,\n                        showConfirm: true,\n                        txHash: undefined,\n                      })\n                    }\n                  }}\n                  id=\"swap-button\"\n                  disabled={!isValid || (priceImpactSeverity > 3 && !isExpertMode) || !!swapCallbackError}\n                  variant={isValid && priceImpactSeverity > 2 && !swapCallbackError ? 'danger' : 'primary'}\n                >\n                  {swapInputError ||\n                    (priceImpactSeverity > 3 && !isExpertMode\n                      ? `Price Impact Too High`\n                      : `Swap${priceImpactSeverity > 2 ? ' Anyway' : ''}`)}\n                </Button>\n              )}\n              {showApproveFlow && <ProgressSteps steps={[approval === ApprovalState.APPROVED]} />}\n              {isExpertMode && swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n            </BottomGrouping>\n          </CardBody>\n        </Wrapper>\n      </AppBody>\n      <AdvancedSwapDetailsDropdown trade={trade} />\n    </>\n  )\n}\n\nexport default Swap\n\nconst FlexBox = styled.div`\n  display: flex;\n  justify-content: space-between;\n`","import { Percent } from '@beswap/sdk'\nimport { ALLOWED_PRICE_IMPACT_HIGH, PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN } from '../../../constants'\n\n/**\n * Given the price impact, get user confirmation.\n *\n * @param priceImpactWithoutFee price impact of the trade without the fee.\n */\nexport default function confirmPriceImpactWithoutFee(priceImpactWithoutFee: Percent): boolean {\n  if (!priceImpactWithoutFee.lessThan(PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN)) {\n    return (\n      window.prompt(\n        `This swap has a price impact of at least ${PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN.toFixed(\n          0\n        )}%. Please type the word \"confirm\" to continue with this swap.`\n      ) === 'confirm'\n    )\n  } if (!priceImpactWithoutFee.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) {\n    return window.confirm(\n      `This swap has a price impact of at least ${ALLOWED_PRICE_IMPACT_HIGH.toFixed(\n        0\n      )}%. Please confirm that you would like to continue with this swap.`\n    )\n  }\n  return true\n}\n","import React from 'react'\nimport { Redirect, RouteComponentProps } from 'react-router-dom'\n\n// Redirects to swap but only replace the pathname\nexport function RedirectPathToSwapOnly({ location }: RouteComponentProps) {\n  return <Redirect to={{ ...location, pathname: '/swap' }} />\n}\n\nexport default RedirectPathToSwapOnly\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { Token, TokenAmount } from '@beswap/sdk'\nimport { useTokenContract } from '../hooks/useContract'\nimport { useSingleCallResult } from '../state/multicall/hooks'\n\n// returns undefined if input token is undefined, or fails to get token contract,\n// or contract total supply cannot be fetched\nexport function useTotalSupply(token?: Token): TokenAmount | undefined {\n  const contract = useTokenContract(token?.address, false)\n\n  const totalSupply: BigNumber = useSingleCallResult(contract, 'totalSupply')?.result?.[0]\n\n  return token && totalSupply ? new TokenAmount(token, totalSupply.toString()) : undefined\n}\n\nexport default useTotalSupply\n","import { Currency, CurrencyAmount, ETHER, JSBI, Pair, Percent, Price, TokenAmount } from '@beswap/sdk'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { PairState, usePair } from '../../data/Reserves'\nimport { useTotalSupply } from '../../data/TotalSupply'\n\nimport { useActiveWeb3React } from '../../hooks'\nimport { TranslateString } from '../../utils/translateTextHelpers'\nimport { wrappedCurrency, wrappedCurrencyAmount } from '../../utils/wrappedCurrency'\nimport { AppDispatch, AppState } from '../index'\nimport { tryParseAmount } from '../swap/hooks'\nimport { useCurrencyBalances } from '../wallet/hooks'\nimport { Field, typeInput } from './actions'\n\nconst ZERO = JSBI.BigInt(0)\n\nexport function useMintState(): AppState['mint'] {\n  return useSelector<AppState, AppState['mint']>((state) => state.mint)\n}\n\nexport function useDerivedMintInfo(\n  currencyA: Currency | undefined,\n  currencyB: Currency | undefined\n): {\n  dependentField: Field\n  currencies: { [field in Field]?: Currency }\n  pair?: Pair | null\n  pairState: PairState\n  currencyBalances: { [field in Field]?: CurrencyAmount }\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\n  price?: Price\n  noLiquidity?: boolean\n  liquidityMinted?: TokenAmount\n  poolTokenPercentage?: Percent\n  error?: string\n} {\n  const { account, chainId } = useActiveWeb3React()\n\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n\n  const dependentField = independentField === Field.CURRENCY_A ? Field.CURRENCY_B : Field.CURRENCY_A\n\n  // tokens\n  const currencies: { [field in Field]?: Currency } = useMemo(\n    () => ({\n      [Field.CURRENCY_A]: currencyA ?? undefined,\n      [Field.CURRENCY_B]: currencyB ?? undefined,\n    }),\n    [currencyA, currencyB]\n  )\n\n  // pair\n  const [pairState, pair] = usePair(currencies[Field.CURRENCY_A], currencies[Field.CURRENCY_B])\n  const totalSupply = useTotalSupply(pair?.liquidityToken)\n\n  const noLiquidity: boolean =\n    pairState === PairState.NOT_EXISTS || Boolean(totalSupply && JSBI.equal(totalSupply.raw, ZERO))\n\n  // balances\n  const balances = useCurrencyBalances(account ?? undefined, [\n    currencies[Field.CURRENCY_A],\n    currencies[Field.CURRENCY_B],\n  ])\n  const currencyBalances: { [field in Field]?: CurrencyAmount } = {\n    [Field.CURRENCY_A]: balances[0],\n    [Field.CURRENCY_B]: balances[1],\n  }\n\n  // amounts\n  const independentAmount: CurrencyAmount | undefined = tryParseAmount(typedValue, currencies[independentField])\n  const dependentAmount: CurrencyAmount | undefined = useMemo(() => {\n    if (noLiquidity) {\n      if (otherTypedValue && currencies[dependentField]) {\n        return tryParseAmount(otherTypedValue, currencies[dependentField])\n      }\n      return undefined\n    }\n    if (independentAmount) {\n      // we wrap the currencies just to get the price in terms of the other token\n      const wrappedIndependentAmount = wrappedCurrencyAmount(independentAmount, chainId)\n      const [tokenA, tokenB] = [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\n      if (tokenA && tokenB && wrappedIndependentAmount && pair) {\n        const dependentCurrency = dependentField === Field.CURRENCY_B ? currencyB : currencyA\n        const dependentTokenAmount =\n          dependentField === Field.CURRENCY_B\n            ? pair.priceOf(tokenA).quote(wrappedIndependentAmount)\n            : pair.priceOf(tokenB).quote(wrappedIndependentAmount)\n        return dependentCurrency === ETHER ? CurrencyAmount.ether(dependentTokenAmount.raw) : dependentTokenAmount\n      }\n      return undefined\n    }\n    return undefined\n  }, [noLiquidity, otherTypedValue, currencies, dependentField, independentAmount, currencyA, chainId, currencyB, pair])\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const parsedAmounts: { [field in Field]: CurrencyAmount | undefined } = {\n    [Field.CURRENCY_A]: independentField === Field.CURRENCY_A ? independentAmount : dependentAmount,\n    [Field.CURRENCY_B]: independentField === Field.CURRENCY_A ? dependentAmount : independentAmount,\n  }\n\n  const price = useMemo(() => {\n    if (noLiquidity) {\n      const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n      if (currencyAAmount && currencyBAmount) {\n        return new Price(currencyAAmount.currency, currencyBAmount.currency, currencyAAmount.raw, currencyBAmount.raw)\n      }\n      return undefined\n    }\n    const wrappedCurrencyA = wrappedCurrency(currencyA, chainId)\n    return pair && wrappedCurrencyA ? pair.priceOf(wrappedCurrencyA) : undefined\n  }, [chainId, currencyA, noLiquidity, pair, parsedAmounts])\n\n  // liquidity minted\n  const liquidityMinted = useMemo(() => {\n    const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n    const [tokenAmountA, tokenAmountB] = [\n      wrappedCurrencyAmount(currencyAAmount, chainId),\n      wrappedCurrencyAmount(currencyBAmount, chainId),\n    ]\n    if (pair && totalSupply && tokenAmountA && tokenAmountB) {\n      return pair.getLiquidityMinted(totalSupply, tokenAmountA, tokenAmountB)\n    }\n    return undefined\n  }, [parsedAmounts, chainId, pair, totalSupply])\n\n  const poolTokenPercentage = useMemo(() => {\n    if (liquidityMinted && totalSupply) {\n      return new Percent(liquidityMinted.raw, totalSupply.add(liquidityMinted).raw)\n    }\n    return undefined\n  }, [liquidityMinted, totalSupply])\n\n  let error: string | undefined\n  if (!account) {\n    error = 'Connect Wallet'\n  }\n\n  if (pairState === PairState.INVALID) {\n    error = error ?? TranslateString(136, 'Invalid pair')\n  }\n\n  if (!parsedAmounts[Field.CURRENCY_A] || !parsedAmounts[Field.CURRENCY_B]) {\n    error = error ?? TranslateString(84, 'Enter an amount')\n  }\n\n  const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n\n  if (currencyAAmount && currencyBalances?.[Field.CURRENCY_A]?.lessThan(currencyAAmount)) {\n    error = `Insufficient ${currencies[Field.CURRENCY_A]?.symbol} balance`\n  }\n\n  if (currencyBAmount && currencyBalances?.[Field.CURRENCY_B]?.lessThan(currencyBAmount)) {\n    error = `Insufficient ${currencies[Field.CURRENCY_B]?.symbol} balance`\n  }\n\n  return {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n  }\n}\n\nexport function useMintActionHandlers(\n  noLiquidity: boolean | undefined\n): {\n  onFieldAInput: (typedValue: string) => void\n  onFieldBInput: (typedValue: string) => void\n} {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const onFieldAInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeInput({ field: Field.CURRENCY_A, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity]\n  )\n  const onFieldBInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeInput({ field: Field.CURRENCY_B, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity]\n  )\n\n  return {\n    onFieldAInput,\n    onFieldBInput,\n  }\n}\n","import { Currency, ETHER, Token } from '@beswap/sdk'\n\nexport function currencyId(currency: Currency): string {\n  if (currency === ETHER) return 'ETH'\n  if (currency instanceof Token) return currency.address\n  throw new Error('invalid currency')\n}\n\nexport default currencyId\n","import styled from 'styled-components'\n\nconst Pane = styled.div`\n  border: 2px solid ${({ theme }) => theme.colors.borderColor};\n  border-radius: 16px;\n  padding: 16px;\n`\n\nexport default Pane\n","import { Text } from '@luckyswap/uikit'\nimport styled from 'styled-components'\n\nexport const Wrapper = styled.div`\n  position: relative;\n`\n\nexport const ClickableText = styled(Text)`\n  :hover {\n    cursor: pointer;\n  }\n  color: ${({ theme }) => theme.colors.primary};\n`\n\nexport const Dots = styled.span`\n  &::after {\n    display: inline-block;\n    animation: ellipsis 1.25s infinite;\n    content: '.';\n    width: 1em;\n    text-align: left;\n  }\n  @keyframes ellipsis {\n    0% {\n      content: '.';\n    }\n    33% {\n      content: '..';\n    }\n    66% {\n      content: '...';\n    }\n  }\n`\n","import { Currency, CurrencyAmount, Fraction, Percent } from '@beswap/sdk'\nimport React from 'react'\nimport { Button, Text } from '@luckyswap/uikit'\nimport { RowBetween, RowFixed } from '../../components/Swap/Row'\nimport CurrencyLogo from '../../components/Swap/CurrencyLogo'\nimport { Field } from '../../state/mint/actions'\n\nexport function ConfirmAddModalBottom({\n  noLiquidity,\n  price,\n  currencies,\n  parsedAmounts,\n  poolTokenPercentage,\n  onAdd,\n}: {\n  noLiquidity?: boolean\n  price?: Fraction\n  currencies: { [field in Field]?: Currency }\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\n  poolTokenPercentage?: Percent\n  onAdd: () => void\n}) {\n  return (\n    <>\n      <RowBetween>\n        <Text>{currencies[Field.CURRENCY_A]?.symbol} Deposited</Text>\n        <RowFixed>\n          <CurrencyLogo currency={currencies[Field.CURRENCY_A]} style={{ marginRight: '8px' }} />\n          <Text>{parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)}</Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <Text>{currencies[Field.CURRENCY_B]?.symbol} Deposited</Text>\n        <RowFixed>\n          <CurrencyLogo currency={currencies[Field.CURRENCY_B]} style={{ marginRight: '8px' }} />\n          <Text>{parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)}</Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <Text>Rates</Text>\n        <Text>\n          {`1 ${currencies[Field.CURRENCY_A]?.symbol} = ${price?.toSignificant(4)} ${\n            currencies[Field.CURRENCY_B]?.symbol\n          }`}\n        </Text>\n      </RowBetween>\n      <RowBetween style={{ justifyContent: 'flex-end' }}>\n        <Text>\n          {`1 ${currencies[Field.CURRENCY_B]?.symbol} = ${price?.invert().toSignificant(4)} ${\n            currencies[Field.CURRENCY_A]?.symbol\n          }`}\n        </Text>\n      </RowBetween>\n      <RowBetween>\n        <Text>Share of Pool:</Text>\n        <Text>{noLiquidity ? '100' : poolTokenPercentage?.toSignificant(4)}%</Text>\n      </RowBetween>\n      <Button mt=\"20px\" onClick={onAdd} className=\"btn-supply\">\n        {noLiquidity ? 'Create Pool & Supply' : 'Confirm Supply'}\n      </Button>\n    </>\n  )\n}\n\nexport default ConfirmAddModalBottom\n","import React from 'react'\nimport { Currency, Percent, Price } from '@beswap/sdk'\nimport { Text } from '@luckyswap/uikit'\nimport { AutoColumn } from '../../components/Swap/Column'\nimport { AutoRow } from '../../components/Swap/Row'\nimport { ONE_BIPS } from '../../constants'\nimport { Field } from '../../state/mint/actions'\n\nexport function PoolPriceBar({\n  currencies,\n  noLiquidity,\n  poolTokenPercentage,\n  price,\n}: {\n  currencies: { [field in Field]?: Currency }\n  noLiquidity?: boolean\n  poolTokenPercentage?: Percent\n  price?: Price\n}) {\n  return (\n    <AutoColumn gap=\"md\">\n      <AutoRow justify=\"space-around\" gap=\"4px\">\n        <AutoColumn justify=\"center\">\n          <Text>{price?.toSignificant(6) ?? '-'}</Text>\n          <Text fontSize=\"14px\" color=\"textSubtle\" pt={1}>\n            {currencies[Field.CURRENCY_B]?.symbol} per {currencies[Field.CURRENCY_A]?.symbol}\n          </Text>\n        </AutoColumn>\n        <AutoColumn justify=\"center\">\n          <Text>{price?.invert()?.toSignificant(6) ?? '-'}</Text>\n          <Text fontSize=\"14px\" color=\"textSubtle\" pt={1}>\n            {currencies[Field.CURRENCY_A]?.symbol} per {currencies[Field.CURRENCY_B]?.symbol}\n          </Text>\n        </AutoColumn>\n        <AutoColumn justify=\"center\">\n          <Text>\n            {noLiquidity && price\n              ? '100'\n              : (poolTokenPercentage?.lessThan(ONE_BIPS) ? '<0.01' : poolTokenPercentage?.toFixed(2)) ?? '0'}\n            %\n          </Text>\n          <Text fontSize=\"14px\" color=\"textSubtle\" pt={1}>\n            Share of Pool\n          </Text>\n        </AutoColumn>\n      </AutoRow>\n    </AutoColumn>\n  )\n}\n\nexport default PoolPriceBar\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Link as HistoryLink } from 'react-router-dom'\nimport { ArrowLeft } from 'react-feather'\nimport { RowBetween } from '../Row'\nimport QuestionHelper from '../QuestionHelper'\n\nconst Tabs = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  border-radius: 3rem;\n  justify-content: space-evenly;\n`\n\nconst ActiveText = styled.div`\n  font-weight: 500;\n  font-size: 20px;\n`\n\nconst StyledArrowLeft = styled(ArrowLeft)`\n  color: ${({ theme }) => theme.colors.text};\n`\n\nexport function FindPoolTabs() {\n  return (\n    <Tabs>\n      <RowBetween style={{ padding: '1rem' }}>\n        <HistoryLink to=\"/pool\">\n          <StyledArrowLeft />\n        </HistoryLink>\n        <ActiveText>Import Pool</ActiveText>\n        <QuestionHelper text={\"Use this tool to find pairs that don't automatically appear in the interface.\"} />\n      </RowBetween>\n    </Tabs>\n  )\n}\n\nexport function AddRemoveTabs({ adding }: { adding: boolean }) {\n  return (\n    <Tabs>\n      <RowBetween style={{ padding: '1rem' }}>\n        <HistoryLink to=\"/pool\">\n          <StyledArrowLeft />\n        </HistoryLink>\n        <ActiveText>{adding ? 'Add' : 'Remove'} Liquidity</ActiveText>\n        <div></div>\n        {/* <QuestionHelper\n          text={\n            adding\n              ? 'When you add liquidity, you are given pool tokens representing your position. These tokens automatically earn fees proportional to your share of the pool, and can be redeemed at any time.'\n              : 'Removing pool tokens converts your position back into underlying tokens at the current rate, proportional to your share of the pool. Accrued fees are included in the amounts you receive.'\n          }\n        /> */}\n      </RowBetween>\n    </Tabs>\n  )\n}\n","import React, { useState } from 'react'\nimport { JSBI, Pair, Percent } from '@beswap/sdk'\nimport { Button, Card as UIKitCard, CardBody, Text } from '@luckyswap/uikit'\nimport { darken } from 'polished'\nimport { ChevronDown, ChevronUp } from 'react-feather'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { currencyId } from 'utils/currencyId'\nimport { useActiveWeb3React } from 'hooks'\nimport { useTokenBalance } from 'state/wallet/hooks'\nimport { unwrappedToken } from 'utils/wrappedCurrency'\nimport Card from '../Card'\nimport { AutoColumn } from '../Column'\nimport CurrencyLogo from '../CurrencyLogo'\nimport DoubleCurrencyLogo from '../DoubleLogo'\nimport { RowBetween, RowFixed } from '../Row'\nimport { Dots } from '../swap/styleds'\nimport { useTotalSupply } from '../../../data/TotalSupply'\n\nexport const FixedHeightRow = styled(RowBetween)`\n  height: 24px;\n`\n\nexport const HoverCard = styled(Card)`\n  border: 1px solid ${({ theme }) => theme.colors.invertedContrast};\n  :hover {\n    border: 1px solid ${({ theme }) => darken(0.06, theme.colors.invertedContrast)};\n  }\n`\n\ninterface PositionCardProps {\n  pair: Pair\n  // eslint-disable-next-line react/no-unused-prop-types\n  showUnwrapped?: boolean\n}\n\nexport function MinimalPositionCard({ pair, showUnwrapped = false }: PositionCardProps) {\n  const { account } = useActiveWeb3React()\n  const currency0 = showUnwrapped ? pair.token0 : unwrappedToken(pair.token0)\n  const currency1 = showUnwrapped ? pair.token1 : unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  return (\n    <>\n      {userPoolBalance && (\n        <UIKitCard>\n          <CardBody>\n            <AutoColumn gap=\"12px\">\n              <FixedHeightRow>\n                <RowFixed>\n                  <Text style={{ textTransform: 'uppercase', fontWeight: 600 }} fontSize=\"14px\" color=\"textSubtle\">\n                    LP Tokens in your Wallet\n                  </Text>\n                </RowFixed>\n              </FixedHeightRow>\n              <FixedHeightRow onClick={() => setShowMore(!showMore)}>\n                <RowFixed>\n                  <DoubleCurrencyLogo currency0={currency0} currency1={currency1} margin size={20} />\n                  <Text fontSize=\"14px\">\n                    {currency0.symbol}/{currency1.symbol}\n                  </Text>\n                </RowFixed>\n                <RowFixed>\n                  <Text fontSize=\"14px\">{userPoolBalance ? userPoolBalance.toSignificant(4) : '-'}</Text>\n                </RowFixed>\n              </FixedHeightRow>\n              <AutoColumn gap=\"4px\">\n                <FixedHeightRow>\n                  <Text fontSize=\"14px\">{currency0.symbol}:</Text>\n                  {token0Deposited ? (\n                    <RowFixed>\n                      <Text ml=\"6px\" fontSize=\"14px\">\n                        {token0Deposited?.toSignificant(6)}\n                      </Text>\n                    </RowFixed>\n                  ) : (\n                    '-'\n                  )}\n                </FixedHeightRow>\n                <FixedHeightRow>\n                  <Text fontSize=\"14px\">{currency1.symbol}:</Text>\n                  {token1Deposited ? (\n                    <RowFixed>\n                      <Text ml=\"6px\" fontSize=\"14px\">\n                        {token1Deposited?.toSignificant(6)}\n                      </Text>\n                    </RowFixed>\n                  ) : (\n                    '-'\n                  )}\n                </FixedHeightRow>\n              </AutoColumn>\n            </AutoColumn>\n          </CardBody>\n        </UIKitCard>\n      )}\n    </>\n  )\n}\n\nexport default function FullPositionCard({ pair }: PositionCardProps) {\n  const { account } = useActiveWeb3React()\n\n  const currency0 = unwrappedToken(pair.token0)\n  const currency1 = unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\n\n  const poolTokenPercentage =\n    !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\n      : undefined\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  return (\n    <HoverCard>\n      <AutoColumn gap=\"12px\">\n        <FixedHeightRow onClick={() => setShowMore(!showMore)} style={{ cursor: 'pointer' }}>\n          <RowFixed>\n            <DoubleCurrencyLogo currency0={currency0} currency1={currency1} margin size={20} />\n            <Text>{!currency0 || !currency1 ? <Dots>Loading</Dots> : `${currency0.symbol}/${currency1.symbol}`}</Text>\n          </RowFixed>\n          <RowFixed>\n            {showMore ? (\n              <ChevronUp size=\"20\" style={{ marginLeft: '10px' }} />\n            ) : (\n              <ChevronDown size=\"20\" style={{ marginLeft: '10px' }} />\n            )}\n          </RowFixed>\n        </FixedHeightRow>\n        {showMore && (\n          <AutoColumn gap=\"8px\">\n            <FixedHeightRow>\n              <RowFixed>\n                <Text>Pooled {currency0.symbol}:</Text>\n              </RowFixed>\n              {token0Deposited ? (\n                <RowFixed>\n                  <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\n                  <CurrencyLogo size=\"20px\" style={{ marginLeft: '8px' }} currency={currency0} />\n                </RowFixed>\n              ) : (\n                '-'\n              )}\n            </FixedHeightRow>\n\n            <FixedHeightRow>\n              <RowFixed>\n                <Text>Pooled {currency1.symbol}:</Text>\n              </RowFixed>\n              {token1Deposited ? (\n                <RowFixed>\n                  <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\n                  <CurrencyLogo size=\"20px\" style={{ marginLeft: '8px' }} currency={currency1} />\n                </RowFixed>\n              ) : (\n                '-'\n              )}\n            </FixedHeightRow>\n            <FixedHeightRow>\n              <Text>Your pool tokens:</Text>\n              <Text>{userPoolBalance ? userPoolBalance.toSignificant(4) : '-'}</Text>\n            </FixedHeightRow>\n            <FixedHeightRow>\n              <Text>Your pool share:</Text>\n              <Text>{poolTokenPercentage ? `${poolTokenPercentage.toFixed(2)}%` : '-'}</Text>\n            </FixedHeightRow>\n\n            <RowBetween marginTop=\"10px\">\n              <Button className=\"btn-supply\" as={Link} to={`/add/${currencyId(currency0)}/${currencyId(currency1)}`} style={{ width: '48%' }}>\n                Add\n              </Button>\n              <Button\n                className=\"btn-supply\"\n                as={Link}\n                style={{ width: '48%' }}\n                to={`/remove/${currencyId(currency0)}/${currencyId(currency1)}`}\n              >\n                Remove\n              </Button>\n            </RowBetween>\n          </AutoColumn>\n        )}\n      </AutoColumn>\n    </HoverCard>\n  )\n}\n","import React, { useCallback, useState } from 'react'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { Currency, currencyEquals, ETHER, TokenAmount, WETH } from '@beswap/sdk'\nimport { Button, CardBody, AddIcon, Text as UIKitText } from '@luckyswap/uikit'\nimport { RouteComponentProps } from 'react-router-dom'\nimport { PairState } from 'data/Reserves'\nimport { useActiveWeb3React } from 'hooks'\nimport { useCurrency } from 'hooks/Tokens'\nimport { ApprovalState, useApproveCallback } from 'hooks/useApproveCallback'\nimport { Field } from 'state/mint/actions'\nimport { useDerivedMintInfo, useMintActionHandlers, useMintState } from 'state/mint/hooks'\nimport { useTransactionAdder } from 'state/transactions/hooks'\nimport { useIsExpertMode, useUserDeadline, useUserSlippageTolerance } from 'state/user/hooks'\nimport { calculateGasMargin, calculateSlippageAmount, getRouterContract } from 'utils'\nimport { maxAmountSpend } from 'utils/maxAmountSpend'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { currencyId } from 'utils/currencyId'\nimport Pane from '../../components/Swap/Pane'\nimport ConnectWalletButton from '../../components/Swap/ConnectWalletButton'\nimport AppBody from '../AppBody'\nimport { Dots, Wrapper } from '../Pool/styleds'\nimport { ConfirmAddModalBottom } from './ConfirmAddModalBottom'\nimport { PoolPriceBar } from './PoolPriceBar'\nimport { ROUTER_ADDRESS } from '../../constants'\nimport { LightCard } from '../../components/Swap/Card'\nimport { AutoColumn, ColumnCenter } from '../../components/Swap/Column'\nimport TransactionConfirmationModal, { ConfirmationModalContent } from '../../components/Swap/TransactionConfirmationModal'\nimport CardNav from '../../components/Swap/CardNav'\nimport CurrencyInputPanel from '../../components/Swap/CurrencyInputPanel'\nimport DoubleCurrencyLogo from '../../components/Swap/DoubleLogo'\nimport { AddRemoveTabs } from '../../components/Swap/NavigationTabs'\nimport { MinimalPositionCard } from '../../components/Swap/PositionCard'\nimport Row, { RowBetween, RowFlat } from '../../components/Swap/Row'\n\nexport default function AddLiquidity({\n  match: {\n    params: { currencyIdA, currencyIdB },\n  },\n  history,\n}: RouteComponentProps<{ currencyIdA?: string; currencyIdB?: string }>) {\n  console.log('{ currencyIdA, currencyIdB }>>',{ currencyIdA, currencyIdB })\n  const { account, chainId, library } = useActiveWeb3React()\n  const currencyA = useCurrency(currencyIdA)\n  const currencyB = useCurrency(currencyIdB)\n\n  const oneCurrencyIsWETH = Boolean(\n    chainId &&\n      ((currencyA && currencyEquals(currencyA, WETH[chainId])) ||\n        (currencyB && currencyEquals(currencyB, WETH[chainId])))\n  )\n  const expertMode = useIsExpertMode()\n\n  // mint state\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n  const {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n  } = useDerivedMintInfo(currencyA ?? undefined, currencyB ?? undefined)\n  const { onFieldAInput, onFieldBInput } = useMintActionHandlers(noLiquidity)\n\n  const isValid = !error\n\n  // modal and loading\n  const [showConfirm, setShowConfirm] = useState<boolean>(false)\n  const [attemptingTxn, setAttemptingTxn] = useState<boolean>(false) // clicked confirm\n\n  // txn values\n  const [deadline] = useUserDeadline() // custom from users settings\n  const [allowedSlippage] = useUserSlippageTolerance() // custom from users\n  const [txHash, setTxHash] = useState<string>('')\n\n  // get formatted amounts\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: noLiquidity ? otherTypedValue : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  // get the max amounts user can add\n  const maxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmountSpend(currencyBalances[field]),\n      }\n    },\n    {}\n  )\n\n  const atMaxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmounts[field]?.equalTo(parsedAmounts[field] ?? '0'),\n      }\n    },\n    {}\n  )\n\n  // check whether the user has approved the router on the tokens\n  const [approvalA, approveACallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_A], ROUTER_ADDRESS)\n  const [approvalB, approveBCallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_B], ROUTER_ADDRESS)\n\n  const addTransaction = useTransactionAdder()\n\n  async function onAdd() {\n    if (!chainId || !library || !account) return\n    const router = getRouterContract(chainId, library, account)\n\n    const { [Field.CURRENCY_A]: parsedAmountA, [Field.CURRENCY_B]: parsedAmountB } = parsedAmounts\n    if (!parsedAmountA || !parsedAmountB || !currencyA || !currencyB) {\n      return\n    }\n\n    const amountsMin = {\n      [Field.CURRENCY_A]: calculateSlippageAmount(parsedAmountA, noLiquidity ? 0 : allowedSlippage)[0],\n      [Field.CURRENCY_B]: calculateSlippageAmount(parsedAmountB, noLiquidity ? 0 : allowedSlippage)[0],\n    }\n\n    const deadlineFromNow = Math.ceil(Date.now() / 1000) + deadline\n\n    let estimate\n    let method: (...args: any) => Promise<TransactionResponse>\n    let args: Array<string | string[] | number>\n    let value: BigNumber | null\n    if (currencyA === ETHER || currencyB === ETHER) {\n      const tokenBIsETH = currencyB === ETHER\n      estimate = router.estimateGas.addLiquidityETH\n      method = router.addLiquidityETH\n      args = [\n        wrappedCurrency(tokenBIsETH ? currencyA : currencyB, chainId)?.address ?? '', // token\n        (tokenBIsETH ? parsedAmountA : parsedAmountB).raw.toString(), // token desired\n        amountsMin[tokenBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(), // token min\n        amountsMin[tokenBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(), // eth min\n        account,\n        deadlineFromNow,\n      ]\n      value = BigNumber.from((tokenBIsETH ? parsedAmountB : parsedAmountA).raw.toString())\n    } else {\n      estimate = router.estimateGas.addLiquidity\n      method = router.addLiquidity\n      args = [\n        wrappedCurrency(currencyA, chainId)?.address ?? '',\n        wrappedCurrency(currencyB, chainId)?.address ?? '',\n        parsedAmountA.raw.toString(),\n        parsedAmountB.raw.toString(),\n        amountsMin[Field.CURRENCY_A].toString(),\n        amountsMin[Field.CURRENCY_B].toString(),\n        account,\n        deadlineFromNow,\n      ]\n      value = null\n    }\n\n    setAttemptingTxn(true)\n    // const aa = await estimate(...args, value ? { value } : {})\n    await estimate(...args, value ? { value } : {})\n      .then((estimatedGasLimit) =>\n        method(...args, {\n          ...(value ? { value } : {}),\n          gasLimit: calculateGasMargin(estimatedGasLimit),\n        }).then((response) => {\n          setAttemptingTxn(false)\n\n          addTransaction(response, {\n            summary: `Add ${parsedAmounts[Field.CURRENCY_A]?.toSignificant(3)} ${\n              currencies[Field.CURRENCY_A]?.symbol\n            } and ${parsedAmounts[Field.CURRENCY_B]?.toSignificant(3)} ${currencies[Field.CURRENCY_B]?.symbol}`,\n          })\n\n          setTxHash(response.hash)\n        })\n      )\n      .catch((e) => {\n        setAttemptingTxn(false)\n        // we only care if the error is something _other_ than the user rejected the tx\n        if (e?.code !== 4001) {\n          console.error(e)\n        }\n      })\n  }\n\n  const modalHeader = () => {\n    return noLiquidity ? (\n      <AutoColumn gap=\"20px\">\n        <LightCard mt=\"20px\" borderRadius=\"20px\">\n          <RowFlat>\n            <UIKitText fontSize=\"48px\" mr=\"8px\">\n              {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol}`}\n            </UIKitText>\n            <DoubleCurrencyLogo\n              currency0={currencies[Field.CURRENCY_A]}\n              currency1={currencies[Field.CURRENCY_B]}\n              size={30}\n            />\n          </RowFlat>\n        </LightCard>\n      </AutoColumn>\n    ) : (\n      <AutoColumn gap=\"20px\">\n        <RowFlat style={{ marginTop: '20px' }}>\n          <UIKitText fontSize=\"48px\" mr=\"8px\">\n            {liquidityMinted?.toSignificant(6)}\n          </UIKitText>\n          <DoubleCurrencyLogo\n            currency0={currencies[Field.CURRENCY_A]}\n            currency1={currencies[Field.CURRENCY_B]}\n            size={30}\n          />\n        </RowFlat>\n        <Row>\n          <UIKitText fontSize=\"24px\">\n            {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol} Pool Tokens`}\n          </UIKitText>\n        </Row>\n        <UIKitText small textAlign=\"left\" padding=\"8px 0 0 0 \" style={{ fontStyle: 'italic' }}>\n          {`Output is estimated. If the price changes by more than ${\n            allowedSlippage / 100\n          }% your transaction will revert.`}\n        </UIKitText>\n      </AutoColumn>\n    )\n  }\n\n  const modalBottom = () => {\n    return (\n      <ConfirmAddModalBottom\n        price={price}\n        currencies={currencies}\n        parsedAmounts={parsedAmounts}\n        noLiquidity={noLiquidity}\n        onAdd={onAdd}\n        poolTokenPercentage={poolTokenPercentage}\n      />\n    )\n  }\n\n  const pendingText = `Supplying ${parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)} ${\n    currencies[Field.CURRENCY_A]?.symbol\n  } and ${parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)} ${currencies[Field.CURRENCY_B]?.symbol}`\n\n  const handleCurrencyASelect = useCallback(\n    (currA: Currency) => {\n      const newCurrencyIdA = currencyId(currA)\n      if (newCurrencyIdA === currencyIdB) {\n        history.push(`/add/${currencyIdB}/${currencyIdA}`)\n      } else {\n        history.push(`/add/${newCurrencyIdA}/${currencyIdB}`)\n      }\n    },\n    [currencyIdB, history, currencyIdA]\n  )\n  const handleCurrencyBSelect = useCallback(\n    (currB: Currency) => {\n      const newCurrencyIdB = currencyId(currB)\n      if (currencyIdA === newCurrencyIdB) {\n        if (currencyIdB) {\n          history.push(`/add/${currencyIdB}/${newCurrencyIdB}`)\n        } else {\n          history.push(`/add/${newCurrencyIdB}`)\n        }\n      } else {\n        history.push(`/add/${currencyIdA || 'ETH'}/${newCurrencyIdB}`)\n      }\n    },\n    [currencyIdA, history, currencyIdB]\n  )\n\n  const handleDismissConfirmation = useCallback(() => {\n    setShowConfirm(false)\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onFieldAInput('')\n    }\n    setTxHash('')\n  }, [onFieldAInput, txHash])\n  return (\n    <>\n      \n      <AppBody>\n        {/* <CardNav activeIndex={1} /> */}\n\n        <AddRemoveTabs adding />\n        <Wrapper>\n          <TransactionConfirmationModal\n            isOpen={showConfirm}\n            onDismiss={handleDismissConfirmation}\n            attemptingTxn={attemptingTxn}\n            hash={txHash}\n            content={() => (\n              <ConfirmationModalContent\n                title={noLiquidity ? 'You are creating a pool' : 'You will receive'}\n                onDismiss={handleDismissConfirmation}\n                topContent={modalHeader}\n                bottomContent={modalBottom}\n              />\n            )}\n            pendingText={pendingText}\n          />\n          <CardBody>\n            <AutoColumn gap=\"20px\">\n              {noLiquidity && (\n                <ColumnCenter>\n                  <Pane>\n                    <AutoColumn gap=\"12px\">\n                      <UIKitText>You are the first liquidity provider.</UIKitText>\n                      <UIKitText>The ratio of tokens you add will set the price of this pool.</UIKitText>\n                      <UIKitText>Once you are happy with the rate click supply to review.</UIKitText>\n                    </AutoColumn>\n                  </Pane>\n                </ColumnCenter>\n              )}\n              <CurrencyInputPanel\n                value={formattedAmounts[Field.CURRENCY_A]}\n                onUserInput={onFieldAInput}\n                onMax={() => {\n                  onFieldAInput(maxAmounts[Field.CURRENCY_A]?.toExact() ?? '')\n                }}\n                onCurrencySelect={handleCurrencyASelect}\n                showMaxButton={!atMaxAmounts[Field.CURRENCY_A]}\n                currency={currencies[Field.CURRENCY_A]}\n                id=\"add-liquidity-input-tokena\"\n                showCommonBases={false}\n              />\n              <ColumnCenter>\n                <AddIcon color=\"textSubtle\" />\n              </ColumnCenter>\n              <CurrencyInputPanel\n                value={formattedAmounts[Field.CURRENCY_B]}\n                onUserInput={onFieldBInput}\n                onCurrencySelect={handleCurrencyBSelect}\n                onMax={() => {\n                  onFieldBInput(maxAmounts[Field.CURRENCY_B]?.toExact() ?? '')\n                }}\n                showMaxButton={!atMaxAmounts[Field.CURRENCY_B]}\n                currency={currencies[Field.CURRENCY_B]}\n                id=\"add-liquidity-input-tokenb\"\n                showCommonBases={false}\n              />\n              {currencies[Field.CURRENCY_A] && currencies[Field.CURRENCY_B] && pairState !== PairState.INVALID && (\n                <div>\n                  <UIKitText\n                    style={{ textTransform: 'uppercase', fontWeight: 600 }}\n                    color=\"textSubtle\"\n                    fontSize=\"12px\"\n                    mb=\"2px\"\n                  >\n                    {noLiquidity ? 'Initial prices and pool share' : 'Prices and pool share'}\n                  </UIKitText>\n                  <Pane>\n                    <PoolPriceBar\n                      currencies={currencies}\n                      poolTokenPercentage={poolTokenPercentage}\n                      noLiquidity={noLiquidity}\n                      price={price}\n                    />\n                  </Pane>\n                </div>\n              )}\n\n              {!account ? (\n                <ConnectWalletButton  />\n              ) : (\n                <AutoColumn gap=\"md\">\n                  {(approvalA === ApprovalState.NOT_APPROVED ||\n                    approvalA === ApprovalState.PENDING ||\n                    approvalB === ApprovalState.NOT_APPROVED ||\n                    approvalB === ApprovalState.PENDING) &&\n                    isValid && (\n                      <RowBetween>\n                        {approvalA !== ApprovalState.APPROVED && (\n                          <Button\n                            onClick={approveACallback}\n                            disabled={approvalA === ApprovalState.PENDING}\n                            style={{ width: approvalB !== ApprovalState.APPROVED ? '48%' : '100%' }}\n                          >\n                            {approvalA === ApprovalState.PENDING ? (\n                              <Dots>Approving {currencies[Field.CURRENCY_A]?.symbol}</Dots>\n                            ) : (\n                              `Approve ${currencies[Field.CURRENCY_A]?.symbol}`\n                            )}\n                          </Button>\n                        )}\n                        {approvalB !== ApprovalState.APPROVED && (\n                          <Button\n                            onClick={approveBCallback}\n                            disabled={approvalB === ApprovalState.PENDING}\n                            style={{ width: approvalA !== ApprovalState.APPROVED ? '48%' : '100%' }}\n                          >\n                            {approvalB === ApprovalState.PENDING ? (\n                              <Dots>Approving {currencies[Field.CURRENCY_B]?.symbol}</Dots>\n                            ) : (\n                              `Approve ${currencies[Field.CURRENCY_B]?.symbol}`\n                            )}\n                          </Button>\n                        )}\n                      </RowBetween>\n                    )}\n                  <Button\n                    className=\"btn-supply\"\n                    onClick={() => {\n                      if (expertMode) {\n                        onAdd()\n                      } else {\n                        setShowConfirm(true)\n                      }\n                    }}\n                    disabled={!isValid || approvalA !== ApprovalState.APPROVED || approvalB !== ApprovalState.APPROVED}\n                    variant={\n                      !isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B]\n                        ? 'danger'\n                        : 'primary'\n                    }\n                    \n                  >\n                    {error ?? 'Supply'}\n                  </Button>\n                </AutoColumn>\n              )}\n            </AutoColumn>\n          </CardBody>\n        </Wrapper>\n      </AppBody>\n      {pair && !noLiquidity && pairState !== PairState.INVALID ? (\n        <AutoColumn style={{ minWidth: '20rem', marginTop: '1rem' }}>\n          <MinimalPositionCard showUnwrapped={oneCurrencyIsWETH} pair={pair} />\n        </AutoColumn>\n      ) : null}\n    </>\n  )\n}\n","import React, { useContext, useMemo } from 'react'\nimport styled,{ ThemeContext } from 'styled-components'\nimport { Pair } from '@beswap/sdk'\nimport { Button, CardBody, Text } from '@luckyswap/uikit'\nimport { Link } from 'react-router-dom'\nimport { useActiveWeb3React } from 'hooks'\nimport { usePairs } from 'data/Reserves'\nimport { useTokenBalancesWithLoadingIndicator } from 'state/wallet/hooks'\nimport { toV2LiquidityToken, useTrackedTokenPairs } from 'state/user/hooks'\nimport { TranslateString } from 'utils/translateTextHelpers'\n\nimport CardNav from '../../components/Swap/CardNav'\nimport Question from '../../components/Swap/QuestionHelper'\nimport FullPositionCard from '../../components/Swap/PositionCard'\nimport { StyledInternalLink } from '../../components/Swap/Shared'\nimport { LightCard } from '../../components/Swap/Card'\nimport { RowBetween } from '../../components/Swap/Row'\nimport { AutoColumn } from '../../components/Swap/Column'\nimport { Dots } from '../../components/Swap/swap/styleds'\nimport TranslatedText from '../../components/Swap/TranslatedText'\nimport PageHeader from '../../components/Swap/PageHeader'\nimport AppBody from '../AppBody'\n\nexport default function Pool() {\n  const theme = useContext(ThemeContext)\n  const { account } = useActiveWeb3React()\n\n  // fetch the user's balances of all tracked V2 LP tokens\n  const trackedTokenPairs = useTrackedTokenPairs()\n  const tokenPairsWithLiquidityTokens = useMemo(\n    () => trackedTokenPairs.map((tokens) => ({ liquidityToken: toV2LiquidityToken(tokens), tokens })),\n    [trackedTokenPairs]\n  )\n  const liquidityTokens = useMemo(() => tokenPairsWithLiquidityTokens.map((tpwlt) => tpwlt.liquidityToken), [\n    tokenPairsWithLiquidityTokens,\n  ])\n  const [v2PairsBalances, fetchingV2PairBalances] = useTokenBalancesWithLoadingIndicator(\n    account ?? undefined,\n    liquidityTokens\n  )\n\n  // fetch the reserves for all V2 pools in which the user has a balance\n  const liquidityTokensWithBalances = useMemo(\n    () =>\n      tokenPairsWithLiquidityTokens.filter(({ liquidityToken }) =>\n        v2PairsBalances[liquidityToken.address]?.greaterThan('0')\n      ),\n    [tokenPairsWithLiquidityTokens, v2PairsBalances]\n  )\n\n  const v2Pairs = usePairs(liquidityTokensWithBalances.map(({ tokens }) => tokens))\n  const v2IsLoading =\n    fetchingV2PairBalances || v2Pairs?.length < liquidityTokensWithBalances.length || v2Pairs?.some((V2Pair) => !V2Pair)\n\n  const allV2PairsWithLiquidity = v2Pairs.map(([, pair]) => pair).filter((v2Pair): v2Pair is Pair => Boolean(v2Pair))\n\n  return (\n    <>\n      <AppBody>\n        <FlexBox>\n          <CardNav activeIndex={1} />\n          <PageHeader title=\"\" description=\"\" />\n        </FlexBox>\n\n        <div className=\"custom-btn\">\n          <Button id=\"join-pool-button\" as={Link} to=\"/add/ETH\">\n            <TranslatedText translationId={100}>Add Liquidity</TranslatedText>\n          </Button>\n        </div>\n        <AutoColumn gap=\"lg\" justify=\"center\">\n          <CardBody>\n            <AutoColumn gap=\"12px\" style={{ width: '100%' }}>\n              <RowBetween padding=\"0 8px\">\n                <Text  style={{ color:'#fff' }}>\n                  <TranslatedText translationId={102}>Your Liquidity</TranslatedText>\n                </Text>\n                {/* <Question\n                  text={TranslateString(\n                    130,\n                    'When you add liquidity, you are given pool tokens that represent your share. If you don’t see a pool you joined in this list, try importing a pool below.'\n                  )}\n                /> */}\n              </RowBetween>\n\n              {!account ? (\n                <LightCard padding=\"40px\">\n                  <Text color=\"textDisabled\" textAlign=\"center\">\n                    Connect to a wallet to view your liquidity.\n                  </Text>\n                </LightCard>\n              ) : v2IsLoading ? (\n                <LightCard padding=\"40px\">\n                  <Text color=\"textDisabled\" textAlign=\"center\">\n                    <Dots>Loading</Dots>\n                  </Text>\n                </LightCard>\n              ) : allV2PairsWithLiquidity?.length > 0 ? (\n                <>\n                  {allV2PairsWithLiquidity.map((v2Pair) => (\n                    <FullPositionCard key={v2Pair.liquidityToken.address} pair={v2Pair} />\n                  ))}\n                </>\n              ) : (\n                <LightCard padding=\"40px\" className=\"custom-bg\">\n                  <Text color=\"textDisabled\" textAlign=\"center\">\n                    <TranslatedText translationId={104}>No liquidity found.</TranslatedText>\n                  </Text>\n                </LightCard>\n              )}\n\n              <div>\n                <Text fontSize=\"14px\" style={{ padding: '.5rem 0 .5rem 0' }} color=\"#fff\">\n                  {TranslateString(106, \"Don't see a pool you joined?\")}{' '}\n                  <StyledInternalLink id=\"import-pool-link\" to=\"/find\">\n                    {TranslateString(108, 'Import it.')}\n                  </StyledInternalLink>\n                </Text>\n                <Text fontSize=\"14px\" style={{ padding: '.5rem 0 .5rem 0', color: '#fff' }}>\n                  Or, if you staked your FLIP tokens in a farm, unstake them to see them here.\n                </Text>\n              </div>\n            </AutoColumn>\n          </CardBody>\n        </AutoColumn>\n      </AppBody>\n    </>\n  )\n}\n\nconst FlexBox = styled.div`\n  display: flex;\n  justify-content: space-between;\n`\n","import { Currency, CurrencyAmount, JSBI, Pair, Percent, TokenAmount } from '@beswap/sdk'\nimport { useCallback } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { usePair } from '../../data/Reserves'\nimport { useTotalSupply } from '../../data/TotalSupply'\n\nimport { useActiveWeb3React } from '../../hooks'\nimport { wrappedCurrency } from '../../utils/wrappedCurrency'\nimport { AppDispatch, AppState } from '../index'\nimport { tryParseAmount } from '../swap/hooks'\nimport { useTokenBalances } from '../wallet/hooks'\nimport { Field, typeInput } from './actions'\n\nexport function useBurnState(): AppState['burn'] {\n  return useSelector<AppState, AppState['burn']>(state => state.burn)\n}\n\nexport function useDerivedBurnInfo(\n  currencyA: Currency | undefined,\n  currencyB: Currency | undefined\n): {\n  pair?: Pair | null\n  parsedAmounts: {\n    [Field.LIQUIDITY_PERCENT]: Percent\n    [Field.LIQUIDITY]?: TokenAmount\n    [Field.CURRENCY_A]?: CurrencyAmount\n    [Field.CURRENCY_B]?: CurrencyAmount\n  }\n  error?: string\n} {\n  const { account, chainId } = useActiveWeb3React()\n\n  const { independentField, typedValue } = useBurnState()\n\n  // pair + totalsupply\n  const [, pair] = usePair(currencyA, currencyB)\n\n  // balances\n  const relevantTokenBalances = useTokenBalances(account ?? undefined, [pair?.liquidityToken])\n  const userLiquidity: undefined | TokenAmount = relevantTokenBalances?.[pair?.liquidityToken?.address ?? '']\n\n  const [tokenA, tokenB] = [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\n  const tokens = {\n    [Field.CURRENCY_A]: tokenA,\n    [Field.CURRENCY_B]: tokenB,\n    [Field.LIQUIDITY]: pair?.liquidityToken\n  }\n\n  // liquidity values\n  const totalSupply = useTotalSupply(pair?.liquidityToken)\n  const liquidityValueA =\n    pair &&\n    totalSupply &&\n    userLiquidity &&\n    tokenA &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalSupply.raw, userLiquidity.raw)\n      ? new TokenAmount(tokenA, pair.getLiquidityValue(tokenA, totalSupply, userLiquidity, false).raw)\n      : undefined\n  const liquidityValueB =\n    pair &&\n    totalSupply &&\n    userLiquidity &&\n    tokenB &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalSupply.raw, userLiquidity.raw)\n      ? new TokenAmount(tokenB, pair.getLiquidityValue(tokenB, totalSupply, userLiquidity, false).raw)\n      : undefined\n  const liquidityValues: { [Field.CURRENCY_A]?: TokenAmount; [Field.CURRENCY_B]?: TokenAmount } = {\n    [Field.CURRENCY_A]: liquidityValueA,\n    [Field.CURRENCY_B]: liquidityValueB\n  }\n\n  let percentToRemove: Percent = new Percent('0', '100')\n  // user specified a %\n  if (independentField === Field.LIQUIDITY_PERCENT) {\n    percentToRemove = new Percent(typedValue, '100')\n  }\n  // user specified a specific amount of liquidity tokens\n  else if (independentField === Field.LIQUIDITY) {\n    if (pair?.liquidityToken) {\n      const independentAmount = tryParseAmount(typedValue, pair.liquidityToken)\n      if (independentAmount && userLiquidity && !independentAmount.greaterThan(userLiquidity)) {\n        percentToRemove = new Percent(independentAmount.raw, userLiquidity.raw)\n      }\n    }\n  }\n  // user specified a specific amount of token a or b\n  else if (tokens[independentField]) {\n      const independentAmount = tryParseAmount(typedValue, tokens[independentField])\n      const liquidityValue = liquidityValues[independentField]\n      if (independentAmount && liquidityValue && !independentAmount.greaterThan(liquidityValue)) {\n        percentToRemove = new Percent(independentAmount.raw, liquidityValue.raw)\n      }\n    }\n\n  const parsedAmounts: {\n    [Field.LIQUIDITY_PERCENT]: Percent\n    [Field.LIQUIDITY]?: TokenAmount\n    [Field.CURRENCY_A]?: TokenAmount\n    [Field.CURRENCY_B]?: TokenAmount\n  } = {\n    [Field.LIQUIDITY_PERCENT]: percentToRemove,\n    [Field.LIQUIDITY]:\n      userLiquidity && percentToRemove && percentToRemove.greaterThan('0')\n        ? new TokenAmount(userLiquidity.token, percentToRemove.multiply(userLiquidity.raw).quotient)\n        : undefined,\n    [Field.CURRENCY_A]:\n      tokenA && percentToRemove && percentToRemove.greaterThan('0') && liquidityValueA\n        ? new TokenAmount(tokenA, percentToRemove.multiply(liquidityValueA.raw).quotient)\n        : undefined,\n    [Field.CURRENCY_B]:\n      tokenB && percentToRemove && percentToRemove.greaterThan('0') && liquidityValueB\n        ? new TokenAmount(tokenB, percentToRemove.multiply(liquidityValueB.raw).quotient)\n        : undefined\n  }\n\n  let error: string | undefined\n  if (!account) {\n    error = 'Connect Wallet'\n  }\n\n  if (!parsedAmounts[Field.LIQUIDITY] || !parsedAmounts[Field.CURRENCY_A] || !parsedAmounts[Field.CURRENCY_B]) {\n    error = error ?? 'Enter an amount'\n  }\n\n  return { pair, parsedAmounts, error }\n}\n\nexport function useBurnActionHandlers(): {\n  onUserInput: (field: Field, typedValue: string) => void\n} {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const onUserInput = useCallback(\n    (field: Field, typedValue: string) => {\n      dispatch(typeInput({ field, typedValue }))\n    },\n    [dispatch]\n  )\n\n  return {\n    onUserInput\n  }\n}\n","import React from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { Button, ButtonProps, ConnectorId, useWalletModal } from '@bscsswap/uikit'\nimport { injected, walletconnect } from 'connectors'\nimport useI18n from 'hooks/useI18n'\n\nconst UnlockButton: React.FC<ButtonProps> = props => {\n  const TranslateString = useI18n()\n  const { account, activate, deactivate } = useWeb3React()\n\n  const handleLogin = (connectorId: ConnectorId) => {\n    if (connectorId === 'walletconnect') {\n      return activate(walletconnect)\n    }\n    return activate(injected)\n  }\n\n  const { onPresentConnectModal } = useWalletModal(handleLogin, deactivate, account as string)\n\n  return (\n    <Button onClick={onPresentConnectModal} {...props}>\n      {TranslateString(292, 'Unlock Wallet')}\n    </Button>\n  )\n}\n\nexport default UnlockButton\n","import React, { useCallback } from 'react'\nimport styled from 'styled-components'\n\nconst StyledRangeInput = styled.input<{ size: number }>`\n  -webkit-appearance: none; /* Hides the slider so that custom slider can be made */\n  width: 100%; /* Specific width is required for Firefox. */\n  background: transparent; /* Otherwise white in Chrome */\n  cursor: pointer;\n\n  &:focus {\n    outline: none;\n  }\n\n  &::-moz-focus-outer {\n    border: 0;\n  }\n\n  &::-webkit-slider-thumb {\n    -webkit-appearance: none;\n    height: ${({ size }) => size}px;\n    width: ${({ size }) => size}px;\n    background-color: #565a69;\n    border-radius: 100%;\n    border: none;\n    transform: translateY(-50%);\n    color: ${({ theme }) => theme.colors.invertedContrast};\n\n    &:hover,\n    &:focus {\n      box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.1), 0px 4px 8px rgba(0, 0, 0, 0.08), 0px 16px 24px rgba(0, 0, 0, 0.06),\n        0px 24px 32px rgba(0, 0, 0, 0.04);\n    }\n  }\n\n  &::-moz-range-thumb {\n    height: ${({ size }) => size}px;\n    width: ${({ size }) => size}px;\n    background-color: #565a69;\n    border-radius: 100%;\n    border: none;\n    color: ${({ theme }) => theme.colors.invertedContrast};\n\n    &:hover,\n    &:focus {\n      box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.1), 0px 4px 8px rgba(0, 0, 0, 0.08), 0px 16px 24px rgba(0, 0, 0, 0.06),\n        0px 24px 32px rgba(0, 0, 0, 0.04);\n    }\n  }\n\n  &::-ms-thumb {\n    height: ${({ size }) => size}px;\n    width: ${({ size }) => size}px;\n    background-color: #565a69;\n    border-radius: 100%;\n    color: ${({ theme }) => theme.colors.invertedContrast};\n\n    &:hover,\n    &:focus {\n      box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.1), 0px 4px 8px rgba(0, 0, 0, 0.08), 0px 16px 24px rgba(0, 0, 0, 0.06),\n        0px 24px 32px rgba(0, 0, 0, 0.04);\n    }\n  }\n\n  &::-webkit-slider-runnable-track {\n    background: linear-gradient(\n      90deg,\n      ${({ theme }) => theme.colors.primaryDark},\n      ${({ theme }) => theme.colors.tertiary}\n    );\n    height: 2px;\n  }\n\n  &::-moz-range-track {\n    background: linear-gradient(\n      90deg,\n      ${({ theme }) => theme.colors.primaryDark},\n      ${({ theme }) => theme.colors.tertiary}\n    );\n    height: 2px;\n  }\n\n  &::-ms-track {\n    width: 100%;\n    border-color: transparent;\n    color: transparent;\n\n    background: ${({ theme }) => theme.colors.primaryDark};\n    height: 2px;\n  }\n  &::-ms-fill-lower {\n    background: ${({ theme }) => theme.colors.primaryDark};\n  }\n  &::-ms-fill-upper {\n    background: ${({ theme }) => theme.colors.tertiary};\n  }\n`\n\ninterface InputSliderProps {\n  value: number\n  onChange: (value: number) => void\n  step?: number\n  min?: number\n  max?: number\n  size?: number\n}\n\nexport default function Slider({ value, onChange, min = 0, step = 1, max = 100, size = 28 }: InputSliderProps) {\n  const changeCallback = useCallback(\n    e => {\n      onChange(parseInt(e.target.value))\n    },\n    [onChange]\n  )\n\n  return (\n    <StyledRangeInput\n      size={size}\n      type=\"range\"\n      value={value}\n      style={{ width: '90%', marginLeft: 15, marginRight: 15, padding: '15px 0' }}\n      onChange={changeCallback}\n      aria-labelledby=\"input slider\"\n      step={step}\n      min={min}\n      max={max}\n    />\n  )\n}\n","import React, { useCallback, useContext, useMemo, useState } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\nimport { splitSignature } from '@ethersproject/bytes'\nimport { Contract } from '@ethersproject/contracts'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { Currency, currencyEquals, ETHER, Percent, WETH } from '@beswap/sdk'\nimport { Button, Flex, Text } from '@bscsswap/uikit'\nimport { ArrowDown, Plus } from 'react-feather'\nimport { RouteComponentProps } from 'react-router'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { Field } from 'state/burn/actions'\nimport { useBurnActionHandlers, useDerivedBurnInfo, useBurnState} from 'state/burn/hooks'\nimport ConnectWalletButton from '../../components/ConnectWalletButton'\nimport { AutoColumn, ColumnCenter } from '../../components/Swap/Column'\nimport TransactionConfirmationModal, { ConfirmationModalContent } from '../../components/Swap/TransactionConfirmationModal'\nimport CurrencyInputPanel from '../../components/Swap/CurrencyInputPanel'\nimport DoubleCurrencyLogo from '../../components/Swap/DoubleLogo'\nimport { AddRemoveTabs } from '../../components/Swap/NavigationTabs'\nimport { MinimalPositionCard } from '../../components/Swap/PositionCard'\nimport { RowBetween, RowFixed } from '../../components/Swap/Row'\nimport Slider from '../../components/Slider'\nimport CurrencyLogo from '../../components/Swap/CurrencyLogo'\nimport { ROUTER_ADDRESS } from '../../constants'\nimport { useActiveWeb3React } from '../../hooks'\nimport { useCurrency } from '../../hooks/Tokens'\nimport { usePairContract } from '../../hooks/useContract'\nimport { useTransactionAdder } from '../../state/transactions/hooks'\nimport { StyledInternalLink } from '../../components/Swap/Shared'\nimport { calculateGasMargin, calculateSlippageAmount, getRouterContract } from '../../utils'\nimport { currencyId } from '../../utils/currencyId'\nimport useDebouncedChangeHandler from '../../utils/useDebouncedChangeHandler'\nimport { wrappedCurrency } from '../../utils/wrappedCurrency'\nimport AppBody from '../AppBody'\nimport { ClickableText, Wrapper } from '../Pool/styleds'\nimport { useApproveCallback, ApprovalState } from '../../hooks/useApproveCallback'\nimport { Dots } from '../../components/Swap/swap/styleds'\n\nimport { useUserDeadline, useUserSlippageTolerance } from '../../state/user/hooks'\n\nconst OutlineCard = styled.div`\n  border: 1px solid ${({ theme }) => theme.colors.borderColor};\n  border-radius: 16px;\n  padding: 24px;\n`\n\nconst Body = styled.div`\n  padding-left: 24px;\n  padding-right: 24px;\n`\n\nexport default function RemoveLiquidity({\n  history,\n  match: {\n    params: { currencyIdA, currencyIdB },\n  },\n}: RouteComponentProps<{ currencyIdA: string; currencyIdB: string }>) {\n  const [currencyA, currencyB] = [useCurrency(currencyIdA) ?? undefined, useCurrency(currencyIdB) ?? undefined]\n  const { account, chainId, library } = useActiveWeb3React()\n  const [tokenA, tokenB] = useMemo(() => [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)], [\n    currencyA,\n    currencyB,\n    chainId,\n  ])\n\n  const theme = useContext(ThemeContext)\n\n  // burn state\n  const { independentField, typedValue } = useBurnState()\n  const { pair, parsedAmounts, error } = useDerivedBurnInfo(currencyA ?? undefined, currencyB ?? undefined)\n  const { onUserInput: _onUserInput } = useBurnActionHandlers()\n  const isValid = !error\n\n  // modal and loading\n  const [showConfirm, setShowConfirm] = useState<boolean>(false)\n  const [showDetailed, setShowDetailed] = useState<boolean>(false)\n  const [attemptingTxn, setAttemptingTxn] = useState(false) // clicked confirm\n\n  // txn values\n  const [txHash, setTxHash] = useState<string>('')\n  const [deadline] = useUserDeadline()\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const formattedAmounts = {\n    [Field.LIQUIDITY_PERCENT]: parsedAmounts[Field.LIQUIDITY_PERCENT].equalTo('0')\n      ? '0'\n      : parsedAmounts[Field.LIQUIDITY_PERCENT].lessThan(new Percent('1', '100'))\n      ? '<1'\n      : parsedAmounts[Field.LIQUIDITY_PERCENT].toFixed(0),\n    [Field.LIQUIDITY]:\n      independentField === Field.LIQUIDITY ? typedValue : parsedAmounts[Field.LIQUIDITY]?.toSignificant(6) ?? '',\n    [Field.CURRENCY_A]:\n      independentField === Field.CURRENCY_A ? typedValue : parsedAmounts[Field.CURRENCY_A]?.toSignificant(6) ?? '',\n    [Field.CURRENCY_B]:\n      independentField === Field.CURRENCY_B ? typedValue : parsedAmounts[Field.CURRENCY_B]?.toSignificant(6) ?? '',\n  }\n\n  const atMaxAmount = parsedAmounts[Field.LIQUIDITY_PERCENT]?.equalTo(new Percent('1'))\n\n  // pair contract\n  const pairContract: Contract | null = usePairContract(pair?.liquidityToken?.address)\n\n  // allowance handling\n  const [signatureData, setSignatureData] = useState<{ v: number; r: string; s: string; deadline: number } | null>(null)\n  const [approval, approveCallback] = useApproveCallback(parsedAmounts[Field.LIQUIDITY], ROUTER_ADDRESS)\n  async function onAttemptToApprove() {\n    if (!pairContract || !pair || !library) throw new Error('missing dependencies')\n    const liquidityAmount = parsedAmounts[Field.LIQUIDITY]\n    if (!liquidityAmount) throw new Error('missing liquidity amount')\n    // try to gather a signature for permission\n    const nonce = await pairContract.nonces(account)\n\n    const deadlineForSignature: number = Math.ceil(Date.now() / 1000) + deadline\n\n    const EIP712Domain = [\n      { name: 'name', type: 'string' },\n      { name: 'version', type: 'string' },\n      { name: 'chainId', type: 'uint256' },\n      { name: 'verifyingContract', type: 'address' },\n    ]\n    const domain = {\n      name: 'BEDEX-LPs',\n      version: '1',\n      chainId,\n      verifyingContract: pair.liquidityToken.address,\n    }\n    const Permit = [\n      { name: 'owner', type: 'address' },\n      { name: 'spender', type: 'address' },\n      { name: 'value', type: 'uint256' },\n      { name: 'nonce', type: 'uint256' },\n      { name: 'deadline', type: 'uint256' },\n    ]\n    const message = {\n      owner: account,\n      spender: ROUTER_ADDRESS,\n      value: liquidityAmount.raw.toString(),\n      nonce: nonce.toHexString(),\n      deadline: deadlineForSignature,\n    }\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain,\n        Permit,\n      },\n      domain,\n      primaryType: 'Permit',\n      message,\n    })\n\n    library\n      .send('eth_signTypedData_v4', [account, data])\n      .then(splitSignature)\n      .then((signature) => {\n        setSignatureData({\n          v: signature.v,\n          r: signature.r,\n          s: signature.s,\n          deadline: deadlineForSignature,\n        })\n      })\n      .catch((e) => {\n        // for all errors other than 4001 (EIP-1193 user rejected request), fall back to manual approve\n        if (e?.code !== 4001) {\n          approveCallback()\n        }\n      })\n  }\n\n  // wrapped onUserInput to clear signatures\n  const onUserInput = useCallback(\n    (field: Field, val: string) => {\n      setSignatureData(null)\n      return _onUserInput(field, val)\n    },\n    [_onUserInput]\n  )\n\n  const onLiquidityInput = useCallback((val: string): void => onUserInput(Field.LIQUIDITY, val), [onUserInput])\n  const onCurrencyAInput = useCallback((val: string): void => onUserInput(Field.CURRENCY_A, val), [onUserInput])\n  const onCurrencyBInput = useCallback((val: string): void => onUserInput(Field.CURRENCY_B, val), [onUserInput])\n\n  // tx sending\n  const addTransaction = useTransactionAdder()\n  async function onRemove() {\n    if (!chainId || !library || !account) throw new Error('missing dependencies')\n    const { [Field.CURRENCY_A]: currencyAmountA, [Field.CURRENCY_B]: currencyAmountB } = parsedAmounts\n    if (!currencyAmountA || !currencyAmountB) {\n      throw new Error('missing currency amounts')\n    }\n    const router = getRouterContract(chainId, library, account)\n\n    const amountsMin = {\n      [Field.CURRENCY_A]: calculateSlippageAmount(currencyAmountA, allowedSlippage)[0],\n      [Field.CURRENCY_B]: calculateSlippageAmount(currencyAmountB, allowedSlippage)[0],\n    }\n\n    if (!currencyA || !currencyB) throw new Error('missing tokens')\n    const liquidityAmount = parsedAmounts[Field.LIQUIDITY]\n    if (!liquidityAmount) throw new Error('missing liquidity amount')\n\n    const currencyBIsETH = currencyB === ETHER\n    const oneCurrencyIsETH = currencyA === ETHER || currencyBIsETH\n    const deadlineFromNow = Math.ceil(Date.now() / 1000) + deadline\n\n    if (!tokenA || !tokenB) throw new Error('could not wrap')\n\n    let methodNames: string[]\n    let args: Array<string | string[] | number | boolean>\n    // we have approval, use normal remove liquidity\n    if (approval === ApprovalState.APPROVED) {\n      // removeLiquidityETH\n      if (oneCurrencyIsETH) {\n        methodNames = ['removeLiquidityETH', 'removeLiquidityETHSupportingFeeOnTransferTokens']\n        args = [\n          currencyBIsETH ? tokenA.address : tokenB.address,\n          liquidityAmount.raw.toString(),\n          amountsMin[currencyBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(),\n          amountsMin[currencyBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(),\n          account,\n          deadlineFromNow,\n        ]\n      }\n      // removeLiquidity\n      else {\n        methodNames = ['removeLiquidity']\n        args = [\n          tokenA.address,\n          tokenB.address,\n          liquidityAmount.raw.toString(),\n          amountsMin[Field.CURRENCY_A].toString(),\n          amountsMin[Field.CURRENCY_B].toString(),\n          account,\n          deadlineFromNow,\n        ]\n      }\n    }\n    // we have a signataure, use permit versions of remove liquidity\n    else if (signatureData !== null) {\n      // removeLiquidityETHWithPermit\n      if (oneCurrencyIsETH) {\n        methodNames = ['removeLiquidityETHWithPermit', 'removeLiquidityETHWithPermitSupportingFeeOnTransferTokens']\n        args = [\n          currencyBIsETH ? tokenA.address : tokenB.address,\n          liquidityAmount.raw.toString(),\n          amountsMin[currencyBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(),\n          amountsMin[currencyBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(),\n          account,\n          signatureData.deadline,\n          false,\n          signatureData.v,\n          signatureData.r,\n          signatureData.s,\n        ]\n      }\n      // removeLiquidityETHWithPermit\n      else {\n        methodNames = ['removeLiquidityWithPermit']\n        args = [\n          tokenA.address,\n          tokenB.address,\n          liquidityAmount.raw.toString(),\n          amountsMin[Field.CURRENCY_A].toString(),\n          amountsMin[Field.CURRENCY_B].toString(),\n          account,\n          signatureData.deadline,\n          false,\n          signatureData.v,\n          signatureData.r,\n          signatureData.s,\n        ]\n      }\n    } else {\n      throw new Error('Attempting to confirm without approval or a signature. Please contact support.')\n    }\n    const safeGasEstimates: (BigNumber | undefined)[] = await Promise.all(\n      methodNames.map((methodName, index) =>\n        router.estimateGas[methodName](...args)\n          .then(calculateGasMargin)\n          .catch((e) => {\n            console.error(`estimateGas failed`, index, methodName, args, e)\n            return undefined\n          })\n      )\n    )\n\n    const indexOfSuccessfulEstimation = safeGasEstimates.findIndex((safeGasEstimate) =>\n      BigNumber.isBigNumber(safeGasEstimate)\n    )\n\n    // all estimations failed...\n    if (indexOfSuccessfulEstimation === -1) {\n      console.error('This transaction would fail. Please contact support.')\n    } else {\n      const methodName = methodNames[indexOfSuccessfulEstimation]\n      const safeGasEstimate = safeGasEstimates[indexOfSuccessfulEstimation]\n\n      setAttemptingTxn(true)\n      await router[methodName](...args, {\n        gasLimit: safeGasEstimate,\n      })\n        .then((response: TransactionResponse) => {\n          setAttemptingTxn(false)\n\n          addTransaction(response, {\n            summary: `Remove ${parsedAmounts[Field.CURRENCY_A]?.toSignificant(3)} ${\n              currencyA?.symbol\n            } and ${parsedAmounts[Field.CURRENCY_B]?.toSignificant(3)} ${currencyB?.symbol}`,\n          })\n\n          setTxHash(response.hash)\n        })\n        .catch((e: Error) => {\n          setAttemptingTxn(false)\n          // we only care if the error is something _other_ than the user rejected the tx\n          console.error(e)\n        })\n    }\n  }\n\n  function modalHeader() {\n    return (\n      <AutoColumn gap=\"md\" style={{ marginTop: '20px' }}>\n        <RowBetween align=\"flex-end\">\n          <Text fontSize=\"24px\">{parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)}</Text>\n          <RowFixed gap=\"4px\">\n            <CurrencyLogo currency={currencyA} size=\"24px\" />\n            <Text fontSize=\"24px\" style={{ marginLeft: '10px' }}>\n              {currencyA?.symbol}\n            </Text>\n          </RowFixed>\n        </RowBetween>\n        <RowFixed>\n          <Plus size=\"16\" color={theme.colors.textSubtle} />\n        </RowFixed>\n        <RowBetween align=\"flex-end\">\n          <Text fontSize=\"24px\">{parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)}</Text>\n          <RowFixed gap=\"4px\">\n            <CurrencyLogo currency={currencyB} size=\"24px\" />\n            <Text fontSize=\"24px\" style={{ marginLeft: '10px' }}>\n              {currencyB?.symbol}\n            </Text>\n          </RowFixed>\n        </RowBetween>\n\n        <Text small color=\"textSubtle\" textAlign=\"left\" padding=\"12px 0 0 0\" style={{ fontStyle: 'italic' }}>\n          {`Output is estimated. If the price changes by more than ${\n            allowedSlippage / 100\n          }% your transaction will revert.`}\n        </Text>\n      </AutoColumn>\n    )\n  }\n\n  function modalBottom() {\n    return (\n      <>\n        <RowBetween>\n          <Text color=\"textSubtle\">{`FLIP ${currencyA?.symbol}/${currencyB?.symbol}`} Burned</Text>\n          <RowFixed>\n            <DoubleCurrencyLogo currency0={currencyA} currency1={currencyB} margin />\n            <Text>{parsedAmounts[Field.LIQUIDITY]?.toSignificant(6)}</Text>\n          </RowFixed>\n        </RowBetween>\n        {pair && (\n          <>\n            <RowBetween>\n              <Text color=\"textSubtle\">Price</Text>\n              <Text>\n                1 {currencyA?.symbol} = {tokenA ? pair.priceOf(tokenA).toSignificant(6) : '-'} {currencyB?.symbol}\n              </Text>\n            </RowBetween>\n            <RowBetween>\n              <div />\n              <Text>\n                1 {currencyB?.symbol} = {tokenB ? pair.priceOf(tokenB).toSignificant(6) : '-'} {currencyA?.symbol}\n              </Text>\n            </RowBetween>\n          </>\n        )}\n        <Button className=\"btn-supply\" disabled={!(approval === ApprovalState.APPROVED || signatureData !== null)} onClick={onRemove}>\n          Confirm\n        </Button>\n      </>\n    )\n  }\n\n  const pendingText = `Removing ${parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)} ${\n    currencyA?.symbol\n  } and ${parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)} ${currencyB?.symbol}`\n\n  const liquidityPercentChangeCallback = useCallback(\n    (value: number) => {\n      onUserInput(Field.LIQUIDITY_PERCENT, value.toString())\n    },\n    [onUserInput]\n  )\n\n  const oneCurrencyIsETH = currencyA === ETHER || currencyB === ETHER\n  const oneCurrencyIsWETH = Boolean(\n    chainId &&\n      ((currencyA && currencyEquals(WETH[chainId], currencyA)) ||\n        (currencyB && currencyEquals(WETH[chainId], currencyB)))\n  )\n\n  const handleSelectCurrencyA = useCallback(\n    (currency: Currency) => {\n      if (currencyIdB && currencyId(currency) === currencyIdB) {\n        history.push(`/remove/${currencyId(currency)}/${currencyIdA}`)\n      } else {\n        history.push(`/remove/${currencyId(currency)}/${currencyIdB}`)\n      }\n    },\n    [currencyIdA, currencyIdB, history]\n  )\n  const handleSelectCurrencyB = useCallback(\n    (currency: Currency) => {\n      if (currencyIdA && currencyId(currency) === currencyIdA) {\n        history.push(`/remove/${currencyIdB}/${currencyId(currency)}`)\n      } else {\n        history.push(`/remove/${currencyIdA}/${currencyId(currency)}`)\n      }\n    },\n    [currencyIdA, currencyIdB, history]\n  )\n\n  const handleDismissConfirmation = useCallback(() => {\n    setShowConfirm(false)\n    setSignatureData(null) // important that we clear signature data to avoid bad sigs\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onUserInput(Field.LIQUIDITY_PERCENT, '0')\n    }\n    setTxHash('')\n  }, [onUserInput, txHash])\n\n  const [innerLiquidityPercentage, setInnerLiquidityPercentage] = useDebouncedChangeHandler(\n    Number.parseInt(parsedAmounts[Field.LIQUIDITY_PERCENT].toFixed(0)),\n    liquidityPercentChangeCallback\n  )\n\n  return (\n    <>\n      <AppBody>\n        <AddRemoveTabs adding={false} />\n        <Wrapper>\n          <TransactionConfirmationModal\n            isOpen={showConfirm}\n            onDismiss={handleDismissConfirmation}\n            attemptingTxn={attemptingTxn}\n            hash={txHash || ''}\n            content={() => (\n              <ConfirmationModalContent\n                title=\"You will receive\"\n                onDismiss={handleDismissConfirmation}\n                topContent={modalHeader}\n                bottomContent={modalBottom}\n              />\n            )}\n            pendingText={pendingText}\n          />\n          <AutoColumn gap=\"md\">\n            <Body>\n              <OutlineCard>\n                <AutoColumn>\n                  <RowBetween>\n                    <Text>Amount</Text>\n                    <ClickableText\n                      onClick={() => {\n                        setShowDetailed(!showDetailed)\n                      }}\n                    >\n                      {showDetailed ? 'Simple' : 'Detailed'}\n                    </ClickableText>\n                  </RowBetween>\n                  <Flex justifyContent=\"start\">\n                    <Text fontSize=\"64px\">{formattedAmounts[Field.LIQUIDITY_PERCENT]}%</Text>\n                  </Flex>\n                  {!showDetailed && (\n                    <>\n                      <Flex mb=\"8px\">\n                        <Slider value={innerLiquidityPercentage} onChange={setInnerLiquidityPercentage} />\n                      </Flex>\n                      <Flex justifyContent=\"space-around\">\n                        <Button variant=\"tertiary\" size=\"sm\" onClick={() => onUserInput(Field.LIQUIDITY_PERCENT, '25')}>\n                          25%\n                        </Button>\n                        <Button variant=\"tertiary\" size=\"sm\" onClick={() => onUserInput(Field.LIQUIDITY_PERCENT, '50')}>\n                          50%\n                        </Button>\n                        <Button variant=\"tertiary\" size=\"sm\" onClick={() => onUserInput(Field.LIQUIDITY_PERCENT, '75')}>\n                          75%\n                        </Button>\n                        <Button\n                          variant=\"tertiary\"\n                          size=\"sm\"\n                          onClick={() => onUserInput(Field.LIQUIDITY_PERCENT, '100')}\n                        >\n                          Max\n                        </Button>\n                      </Flex>\n                    </>\n                  )}\n                </AutoColumn>\n              </OutlineCard>\n            </Body>\n            {!showDetailed && (\n              <>\n                <ColumnCenter>\n                  <ArrowDown size=\"16\" color={theme.colors.textSubtle} />\n                </ColumnCenter>\n                <Body>\n                  <OutlineCard>\n                    <AutoColumn gap=\"10px\">\n                      <RowBetween>\n                        <Text fontSize=\"24px\">{formattedAmounts[Field.CURRENCY_A] || '-'}</Text>\n                        <RowFixed>\n                          <CurrencyLogo currency={currencyA} style={{ marginRight: '12px' }} />\n                          <Text fontSize=\"24px\" id=\"remove-liquidity-tokena-symbol\">\n                            {currencyA?.symbol}\n                          </Text>\n                        </RowFixed>\n                      </RowBetween>\n                      <RowBetween>\n                        <Text fontSize=\"24px\">{formattedAmounts[Field.CURRENCY_B] || '-'}</Text>\n                        <RowFixed>\n                          <CurrencyLogo currency={currencyB} style={{ marginRight: '12px' }} />\n                          <Text fontSize=\"24px\" id=\"remove-liquidity-tokenb-symbol\">\n                            {currencyB?.symbol}\n                          </Text>\n                        </RowFixed>\n                      </RowBetween>\n                      {chainId && (oneCurrencyIsWETH || oneCurrencyIsETH) ? (\n                        <RowBetween style={{ justifyContent: 'flex-end' }}>\n                          {oneCurrencyIsETH ? (\n                            <StyledInternalLink\n                              to={`/remove/${currencyA === ETHER ? WETH[chainId].address : currencyIdA}/${\n                                currencyB === ETHER ? WETH[chainId].address : currencyIdB\n                              }`}\n                            >\n                              Receive WBNB\n                            </StyledInternalLink>\n                          ) : oneCurrencyIsWETH ? (\n                            <StyledInternalLink\n                              to={`/remove/${\n                                currencyA && currencyEquals(currencyA, WETH[chainId]) ? 'ETH' : currencyIdA\n                              }/${currencyB && currencyEquals(currencyB, WETH[chainId]) ? 'ETH' : currencyIdB}`}\n                            >\n                              Receive BNB\n                            </StyledInternalLink>\n                          ) : null}\n                        </RowBetween>\n                      ) : null}\n                    </AutoColumn>\n                  </OutlineCard>\n                </Body>\n              </>\n            )}\n            <Body style={{ paddingBottom: '24px' }}>\n              {showDetailed && (\n                <>\n                  <CurrencyInputPanel\n                    value={formattedAmounts[Field.LIQUIDITY]}\n                    onUserInput={onLiquidityInput}\n                    onMax={() => {\n                      onUserInput(Field.LIQUIDITY_PERCENT, '100')\n                    }}\n                    showMaxButton={!atMaxAmount}\n                    disableCurrencySelect\n                    currency={pair?.liquidityToken}\n                    pair={pair}\n                    id=\"liquidity-amount\"\n                  />\n                  <ColumnCenter>\n                    <ArrowDown size=\"16\" color={theme.colors.textSubtle} />\n                  </ColumnCenter>\n                  <CurrencyInputPanel\n                    hideBalance\n                    value={formattedAmounts[Field.CURRENCY_A]}\n                    onUserInput={onCurrencyAInput}\n                    onMax={() => onUserInput(Field.LIQUIDITY_PERCENT, '100')}\n                    showMaxButton={!atMaxAmount}\n                    currency={currencyA}\n                    label=\"Output\"\n                    onCurrencySelect={handleSelectCurrencyA}\n                    id=\"remove-liquidity-tokena\"\n                  />\n                  <ColumnCenter>\n                    <Plus size=\"16\" color={theme.colors.textSubtle} />\n                  </ColumnCenter>\n                  <CurrencyInputPanel\n                    hideBalance\n                    value={formattedAmounts[Field.CURRENCY_B]}\n                    onUserInput={onCurrencyBInput}\n                    onMax={() => onUserInput(Field.LIQUIDITY_PERCENT, '100')}\n                    showMaxButton={!atMaxAmount}\n                    currency={currencyB}\n                    label=\"Output\"\n                    onCurrencySelect={handleSelectCurrencyB}\n                    id=\"remove-liquidity-tokenb\"\n                  />\n                </>\n              )}\n              {pair && (\n                <div style={{ padding: '24px' }}>\n                  <Flex justifyContent=\"space-between\" mb=\"8px\">\n                    Price:\n                    <div>\n                      1 {currencyA?.symbol} = {tokenA ? pair.priceOf(tokenA).toSignificant(6) : '-'} {currencyB?.symbol}\n                    </div>\n                  </Flex>\n                  <Flex justifyContent=\"space-between\">\n                    <div />\n                    <div>\n                      1 {currencyB?.symbol} = {tokenB ? pair.priceOf(tokenB).toSignificant(6) : '-'} {currencyA?.symbol}\n                    </div>\n                  </Flex>\n                </div>\n              )}\n              <div style={{ position: 'relative' }}>\n                {!account ? (\n                  <ConnectWalletButton  />\n                ) : (\n                  <RowBetween>\n                    <Button\n                      className=\"btn-blue\"\n                      onClick={onAttemptToApprove}\n                      variant={approval === ApprovalState.APPROVED || signatureData !== null ? 'success' : 'primary'}\n                      disabled={approval !== ApprovalState.NOT_APPROVED || signatureData !== null}\n                      mr=\"8px\"\n                    >\n                      {approval === ApprovalState.PENDING ? (\n                        <Dots>Approving</Dots>\n                      ) : approval === ApprovalState.APPROVED || signatureData !== null ? (\n                        'Approved'\n                      ) : (\n                        'Approve'\n                      )}\n                    </Button>\n                    <Button\n                      className=\"btn-blue\"\n                      onClick={() => {\n                        setShowConfirm(true)\n                      }}\n                      disabled={!isValid || (signatureData === null && approval !== ApprovalState.APPROVED)}\n                      variant={\n                        !isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B]\n                          ? 'danger'\n                          : 'primary'\n                      }\n                    >\n                      {error || 'Remove'}\n                    </Button>\n                  </RowBetween>\n                )}\n              </div>\n            </Body>\n          </AutoColumn>\n        </Wrapper>\n      </AppBody>\n\n      {pair ? (\n        <AutoColumn style={{ minWidth: '20rem', marginTop: '1rem' }}>\n          <MinimalPositionCard showUnwrapped={oneCurrencyIsWETH} pair={pair} />\n        </AutoColumn>\n      ) : null}\n    </>\n  )\n}\n","import { useCallback, useEffect, useRef, useState } from 'react'\n\n/**\n * Easy way to debounce the handling of a rapidly changing value, e.g. a changing slider input\n * @param value value that is rapidly changing\n * @param onChange change handler that should receive the debounced updates to the value\n * @param debouncedMs how long we should wait for changes to be applied\n */\nexport default function useDebouncedChangeHandler<T>(\n  value: T,\n  onChange: (newValue: T) => void,\n  debouncedMs = 100\n): [T, (value: T) => void] {\n  const [inner, setInner] = useState<T>(() => value)\n  const timer = useRef<ReturnType<typeof setTimeout>>()\n\n  const onChangeInner = useCallback(\n    (newValue: T) => {\n      setInner(newValue)\n      if (timer.current) {\n        clearTimeout(timer.current)\n      }\n      timer.current = setTimeout(() => {\n        onChange(newValue)\n        timer.current = undefined\n      }, debouncedMs)\n    },\n    [debouncedMs, onChange]\n  )\n\n  useEffect(() => {\n    if (timer.current) {\n      clearTimeout(timer.current)\n      timer.current = undefined\n    }\n    setInner(value)\n  }, [value])\n\n  return [inner, onChangeInner]\n}\n","import React from 'react'\nimport { RouteComponentProps, Redirect } from 'react-router-dom'\n\nconst OLD_PATH_STRUCTURE = /^(0x[a-fA-F0-9]{40})-(0x[a-fA-F0-9]{40})$/\n\nexport function RedirectOldRemoveLiquidityPathStructure({\n  match: {\n    params: { tokens },\n  },\n}: RouteComponentProps<{ tokens: string }>) {\n  if (!OLD_PATH_STRUCTURE.test(tokens)) {\n    return <Redirect to=\"/pool\" />\n  }\n  const [currency0, currency1] = tokens.split('-')\n\n  return <Redirect to={`/remove/${currency0}/${currency1}`} />\n}\n\nexport default RedirectOldRemoveLiquidityPathStructure\n","import React from 'react'\nimport { Redirect, RouteComponentProps } from 'react-router-dom'\nimport AddLiquidity from './index'\n\nconst OLD_PATH_STRUCTURE = /^(0x[a-fA-F0-9]{40})-(0x[a-fA-F0-9]{40})$/\nexport function RedirectOldAddLiquidityPathStructure(props: RouteComponentProps<{ currencyIdA: string }>) {\n  const {\n    match: {\n      params: { currencyIdA },\n    },\n  } = props\n  const match = currencyIdA.match(OLD_PATH_STRUCTURE)\n  if (match?.length) {\n    return <Redirect to={`/add/${match[1]}/${match[2]}`} />\n  }\n\n  return <AddLiquidity {...props} />\n}\n\nexport function RedirectDuplicateTokenIds(props: RouteComponentProps<{ currencyIdA: string; currencyIdB: string }>) {\n  const {\n    match: {\n      params: { currencyIdA, currencyIdB },\n    },\n  } = props\n  if (currencyIdA.toLowerCase() === currencyIdB.toLowerCase()) {\n    return <Redirect to={`/add/${currencyIdA}`} />\n  }\n  return <AddLiquidity {...props} />\n}\n","import React, { createContext } from 'react'\n\nexport interface LanguageObject {\n  code: string\n  language: string\n}\ninterface LanguageState {\n  selectedLanguage: LanguageObject\n  setSelectedLanguage: React.Dispatch<React.SetStateAction<LanguageObject>>\n  translatedLanguage: LanguageObject\n  setTranslatedLanguage: React.Dispatch<React.SetStateAction<LanguageObject>>\n}\n\nconst defaultLanguageState: LanguageState = {\n  selectedLanguage: { code: '', language: '' },\n  setSelectedLanguage: (): void => undefined,\n  translatedLanguage: { code: '', language: '' },\n  setTranslatedLanguage: (): void => undefined,\n}\n\nexport const LanguageContext = createContext(defaultLanguageState as LanguageState)\n","export const EN = { code: 'en', language: 'English' }\nexport const AR = { code: 'ar', language: 'العربية' }\nexport const BN = { code: 'bn', language: 'বাংলা'}\nexport const ZHCN = { code: 'zh-CN', language: '简体中文' }\nexport const ZHTW = { code: 'zh-TW', language: '繁體中文' }\nexport const NL = { code: 'nl', language: 'Nederlands' }\nexport const FIL = { code: 'fil', language: 'Filipino' }\nexport const FI = { code: 'fi', language: 'Suomalainen' }\nexport const FR = { code: 'fr', language: 'Français' }\nexport const DE = { code: 'de', language: 'Deutsch' }\nexport const EL = { code: 'el', language: 'Ελληνικά' }\nexport const HI = { code: 'hi', language: 'हिंदी' }\nexport const HU = { code: 'hu', language: 'Magyar' }\nexport const ID = { code: 'id', language: 'Bahasa Indonesia' }\nexport const IT = { code: 'it', language: 'Italiano' }\nexport const JA = { code: 'ja', language: '日本語' }\nexport const KO = { code: 'ko', language: '한국어' }\nexport const PL = { code: 'pl', language: 'Polski' }\nexport const PTPT = { code: 'pt-PT', language: 'Português (Portugal)' }\nexport const PTBR = { code: 'pt-BR', language: 'Português (Brasil)' }\nexport const RO = { code: 'ro', language: 'Română' }\nexport const RU = { code: 'ru', language: 'Русский' }\nexport const ESES = { code: 'es-ES', language: 'Español' }\nexport const SVSE = { code: 'sv-SE', language: 'Svenska' }\nexport const TA = { code: 'ta', language: 'தமிழ்' }\nexport const TR = { code: 'tr', language: 'Türkçe' }\nexport const UK = { code: 'uk', language: 'Українська' }\nexport const VI = { code: 'vi', language: 'Tiếng Việt' }\n\nexport const allLanguages = [\n  EN,\n  AR,\n  BN,\n  ZHCN,\n  ZHTW,\n  NL,\n  FIL,\n  FI,\n  FR,\n  DE,\n  EL,\n  HI,\n  HU,\n  ID,\n  IT,\n  JA,\n  KO,\n  PL,\n  PTPT,\n  PTBR,\n  RO,\n  RU,\n  ESES,\n  SVSE,\n  TA,\n  TR,\n  UK,\n  VI\n]\n","import React, { useState, useEffect, lazy } from 'react'\nimport { HashRouter, Redirect, BrowserRouter, Route, Switch } from 'react-router-dom'\nimport { Credentials, StringTranslations } from '@crowdin/crowdin-api-client'\nimport { ResetCSS } from '@luckyswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport useEagerConnect from 'hooks/useEagerConnect'\nimport { useFetchPriceList, useFetchProfile, useFetchPublicData } from 'state/hooks'\nimport GlobalStyle from './style/Global'\nimport Menu from './components/Menu'\nimport SuspenseWithChunkError from './components/SuspenseWithChunkError'\nimport ToastListener from './components/ToastListener'\nimport PageLoader from './components/PageLoader'\nimport EasterEgg from './components/EasterEgg'\nimport Pools from './views/Pools'\nimport GlobalCheckClaimStatus from './views/Collectibles/components/GlobalCheckClaimStatus'\nimport history from './routerHistory'\nimport Swap from './views/Swap'\nimport { RedirectPathToSwapOnly } from './views/Swap/redirects'\nimport AddLiquidity from './views/AddLiquidity'\nimport Pool from './views/Pool'\nimport RemoveLiquidity from './views/RemoveLiquidity'\nimport { RedirectOldRemoveLiquidityPathStructure } from './views/RemoveLiquidity/redirects'\nimport { RedirectDuplicateTokenIds, RedirectOldAddLiquidityPathStructure } from './views/AddLiquidity/redirects'\nimport './index.css'\nimport 'antd/dist/antd.css'\n\nimport { LanguageContext } from './hooks/LanguageContext'\nimport { TranslationsContext } from './hooks/TranslationsContext'\nimport { EN, allLanguages } from './constants/localisation/languageCodes'\n\n// Route-based code splitting\n// Only pool is included in the main bundle because of it's the most visited page .\nconst Home = lazy(() => import('./views/Home'))\nconst Farms = lazy(() => import('./views/Farms'))\nconst Lottery = lazy(() => import('./views/Lottery'))\nconst Ifos = lazy(() => import('./views/Ifos'))\nconst NotFound = lazy(() => import('./views/NotFound'))\nconst Collectibles = lazy(() => import('./views/Collectibles'))\nconst Teams = lazy(() => import('./views/Teams'))\nconst Team = lazy(() => import('./views/Teams/Team'))\nconst Profile = lazy(() => import('./views/Profile'))\nconst TradingCompetition = lazy(() => import('./views/TradingCompetition'))\n\n// This config is required for number formating\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nconst App: React.FC = () => {\n  // Monkey patch warn() because of web3 flood\n  // To be removed when web3 1.3.5 is released\n  useEffect(() => {\n    console.warn = () => null\n  }, [])\n\n  useEagerConnect()\n  // useFetchPublicData()\n  useFetchProfile()\n  useFetchPriceList()\n\n  const [selectedLanguage, setSelectedLanguage] = useState<any>(undefined)\n  const [translatedLanguage, setTranslatedLanguage] = useState<any>(undefined)\n  const [translations, setTranslations] = useState<Array<any>>([])\n  const apiKey = `${process.env.REACT_APP_CROWDIN_APIKEY}`\n  const projectId = parseInt(`${process.env.REACT_APP_CROWDIN_PROJECTID}`)\n  const fileId = 6\n\n  const credentials: Credentials = {\n    token: apiKey,\n  }\n\n  const stringTranslationsApi = new StringTranslations(credentials)\n\n  const getStoredLang = (storedLangCode: string) => {\n    return allLanguages.filter((language) => {\n      return language.code === storedLangCode\n    })[0]\n  }\n\n  useEffect(() => {\n    // const storedLangCode = localStorage.getItem('pancakeSwapLanguage')\n    const storedLangCode = localStorage.getItem('bscStationSwapLanguage')\n    if (storedLangCode) {\n      const storedLang = getStoredLang(storedLangCode)\n      setSelectedLanguage(storedLang)\n    } else {\n      setSelectedLanguage(EN)\n    }\n  }, [])\n\n  const fetchTranslationsForSelectedLanguage = async () => {\n    stringTranslationsApi\n      .listLanguageTranslations(projectId, selectedLanguage.code, undefined, fileId, 200)\n      .then((translationApiResponse) => {\n        if (translationApiResponse.data.length < 1) {\n          setTranslations(['error'])\n        } else {\n          setTranslations(translationApiResponse.data)\n        }\n      })\n      .then(() => setTranslatedLanguage(selectedLanguage))\n      .catch((error) => {\n        setTranslations(['error'])\n        console.error(error)\n      })\n  }\n\n  useEffect(() => {\n    if (selectedLanguage) {\n      fetchTranslationsForSelectedLanguage()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectedLanguage])\n\n  return (\n    <HashRouter>\n      <LanguageContext.Provider\n        value={{ selectedLanguage, setSelectedLanguage, translatedLanguage, setTranslatedLanguage } as any}\n      >\n        <TranslationsContext.Provider value={{ translations, setTranslations } as any}>\n          <ResetCSS />\n          <GlobalStyle />\n          <Menu>\n            <SuspenseWithChunkError fallback={<PageLoader />}>\n              <Switch>\n                <Route path=\"/swap\" exact strict>\n                  <Swap />\n                </Route>\n                <Route exact path=\"/pool\" component={Pool} />\n                <Route path=\"/add\" exact component={AddLiquidity} />\n                <Route path=\"/add/:currencyIdA\" exact component={RedirectOldAddLiquidityPathStructure} />\n                <Route path=\"/add/:currencyIdA/:currencyIdB\" exact component={RedirectDuplicateTokenIds} />\n                <Route exact strict path=\"/remove/:currencyIdA/:currencyIdB\" component={RemoveLiquidity} />\n                <Route exact strict path=\"/remove/:tokens\" component={RedirectOldRemoveLiquidityPathStructure} />\n                <Route path=\"/\" exact>\n                  <Home />\n                </Route>\n                <Route path=\"/farms\">\n                  <Farms />\n                </Route>\n                <Route path=\"/pools\">\n                  <Pools />\n                </Route>\n                <Route path=\"/lottery\">\n                  <Lottery />\n                </Route>\n                <Route path=\"/ifo\">\n                  <Ifos />\n                </Route>\n                <Route path=\"/collectibles\">\n                  <Collectibles />\n                </Route>\n                <Route exact path=\"/teams\">\n                  <Teams />\n                </Route>\n                <Route path=\"/teams/:id\">\n                  <Team />\n                </Route>\n                <Route path=\"/profile\">\n                  <Profile />\n                </Route>\n                <Route path=\"/competition\">\n                  <TradingCompetition />\n                </Route>\n                {/* Redirect */}\n                <Route path=\"/staking\">\n                  <Redirect to=\"/pools\" />\n                </Route>\n                <Route path=\"/syrup\">\n                  <Redirect to=\"/pools\" />\n                </Route>\n                <Route path=\"/nft\">\n                  <Redirect to=\"/collectibles\" />\n                </Route>\n                {/* 404 */}\n                <Route component={NotFound} />\n                <Route component={RedirectPathToSwapOnly} />\n              </Switch>\n            </SuspenseWithChunkError>\n          </Menu>\n          <EasterEgg iterations={2} />\n          <ToastListener />\n          <GlobalCheckClaimStatus excludeLocations={['/collectibles']} />\n        </TranslationsContext.Provider>\n      </LanguageContext.Provider>\n    </HashRouter>\n  )\n}\n\nexport default React.memo(App)\n","import React from 'react'\nimport { ModalProvider } from '@luckyswap/uikit'\nimport { Web3ReactProvider,createWeb3ReactRoot } from '@web3-react/core'\nimport { HelmetProvider } from 'react-helmet-async'\nimport { Provider } from 'react-redux'\nimport getLibrary from 'utils/web3React'\nimport { LanguageContextProvider } from 'contexts/Localisation/languageContext'\nimport { ThemeContextProvider } from 'contexts/ThemeContext'\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\nimport store from 'state'\n\nconst Web3ProviderNetwork = createWeb3ReactRoot('NETWORK')\nconst Providers: React.FC = ({ children }) => {\n  return (\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <Web3ProviderNetwork getLibrary={getLibrary}>\n        <Provider store={store}>\n          <HelmetProvider>\n            <ThemeContextProvider>\n              <LanguageContextProvider>\n                <RefreshContextProvider>\n                  <ModalProvider>{children}</ModalProvider>\n                </RefreshContextProvider>\n              </LanguageContextProvider>\n            </ThemeContextProvider>\n          </HelmetProvider>\n        </Provider>\n      </Web3ProviderNetwork>\n    </Web3ReactProvider>\n  )\n}\n\nexport default Providers\n","import { useCallback, useEffect, useState } from 'react'\n\nconst VISIBILITY_STATE_SUPPORTED = 'visibilityState' in document\n\nfunction isWindowVisible() {\n  return !VISIBILITY_STATE_SUPPORTED || document.visibilityState !== 'hidden'\n}\n\n/**\n * Returns whether the window is currently visible to the user.\n */\nexport default function useIsWindowVisible(): boolean {\n  const [focused, setFocused] = useState<boolean>(isWindowVisible())\n  const listener = useCallback(() => {\n    setFocused(isWindowVisible())\n  }, [setFocused])\n\n  useEffect(() => {\n    if (!VISIBILITY_STATE_SUPPORTED) return undefined\n\n    document.addEventListener('visibilitychange', listener)\n    return () => {\n      document.removeEventListener('visibilitychange', listener)\n    }\n  }, [listener])\n\n  return focused\n}\n","import { useCallback, useEffect, useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { useActiveWeb3React } from '../../hooks'\nimport useDebounce from '../../hooks/useDebounce'\nimport useIsWindowVisible from '../../hooks/useIsWindowVisible'\nimport { updateBlockNumber } from './actions'\n\nexport default function Updater(): null {\n  const { library, chainId } = useActiveWeb3React()\n  const dispatch = useDispatch()\n\n  const windowVisible = useIsWindowVisible()\n\n  const [state, setState] = useState<{ chainId: number | undefined; blockNumber: number | null }>({\n    chainId,\n    blockNumber: null,\n  })\n\n  const blockNumberCallback = useCallback(\n    (blockNumber: number) => {\n      setState((s) => {\n        if (chainId === s.chainId) {\n          if (typeof s.blockNumber !== 'number') return { chainId, blockNumber }\n          return { chainId, blockNumber: Math.max(blockNumber, s.blockNumber) }\n        }\n        return s\n      })\n    },\n    [chainId, setState]\n  )\n\n  // attach/detach listeners\n  useEffect(() => {\n    if (!library || !chainId || !windowVisible) return undefined\n\n    setState({ chainId, blockNumber: null })\n\n    library\n      .getBlockNumber()\n      .then(blockNumberCallback)\n      .catch((error) => console.error(`Failed to get block number for chainId: ${chainId}`, error))\n\n    library.on('block', blockNumberCallback)\n    return () => {\n      library.removeListener('block', blockNumberCallback)\n    }\n  }, [dispatch, chainId, library, blockNumberCallback, windowVisible])\n\n  const debouncedState = useDebounce(state, 100)\n\n  useEffect(() => {\n    if (!debouncedState.chainId || !debouncedState.blockNumber || !windowVisible) return\n    dispatch(updateBlockNumber({ chainId: debouncedState.chainId, blockNumber: debouncedState.blockNumber }))\n  }, [windowVisible, dispatch, debouncedState.blockNumber, debouncedState.chainId])\n\n  return null\n}\n","import { getVersionUpgrade, minVersionBump, VersionUpgrade } from '@uniswap/token-lists'\nimport { useCallback, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useActiveWeb3React } from '../../hooks'\nimport { useFetchListCallback } from '../../hooks/useFetchListCallback'\nimport useInterval from '../../hooks/useInterval'\nimport useIsWindowVisible from '../../hooks/useIsWindowVisible'\nimport { addPopup } from '../application/actions'\nimport { AppDispatch, AppState } from '../index'\nimport { acceptListUpdate } from './actions'\n\nexport default function Updater(): null {\n  const { library } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const lists = useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\n\n  const isWindowVisible = useIsWindowVisible()\n\n  const fetchList = useFetchListCallback()\n\n  const fetchAllListsCallback = useCallback(() => {\n    if (!isWindowVisible) return\n    Object.keys(lists).forEach((url) =>\n      fetchList(url).catch((error) => console.error('interval list fetching error', error))\n    )\n  }, [fetchList, isWindowVisible, lists])\n\n  // fetch all lists every 10 minutes, but only after we initialize library\n  useInterval(fetchAllListsCallback, library ? 1000 * 60 * 10 : null)\n\n  // whenever a list is not loaded and not loading, try again to load it\n  useEffect(() => {\n    Object.keys(lists).forEach((listUrl) => {\n      const list = lists[listUrl]\n\n      if (!list.current && !list.loadingRequestId && !list.error) {\n        fetchList(listUrl).catch((error) => console.error('list added fetching error', error))\n      }\n    })\n  }, [dispatch, fetchList, library, lists])\n\n  // automatically update lists if versions are minor/patch\n  useEffect(() => {\n    Object.keys(lists).forEach((listUrl) => {\n      const list = lists[listUrl]\n      console.log('list>>',list)\n      if (list.current && list.pendingUpdate) {\n        const bump = getVersionUpgrade(list.current.version, list.pendingUpdate.version)\n        switch (bump) {\n          case VersionUpgrade.NONE:\n            throw new Error('unexpected no version bump')\n          case VersionUpgrade.PATCH:\n          case VersionUpgrade.MINOR:\n            const min = minVersionBump(list.current.tokens, list.pendingUpdate.tokens)\n            // automatically update minor/patch as long as bump matches the min update\n            if (bump >= min) {\n              dispatch(acceptListUpdate(listUrl))\n              dispatch(\n                addPopup({\n                  key: listUrl,\n                  content: {\n                    listUpdate: {\n                      listUrl,\n                      oldList: list.current,\n                      newList: list.pendingUpdate,\n                      auto: true,\n                    },\n                  },\n                })\n              )\n            } else {\n              console.error(\n                `List at url ${listUrl} could not automatically update because the version bump was only PATCH/MINOR while the update had breaking changes and should have been MAJOR`\n              )\n            }\n            break\n\n          case VersionUpgrade.MAJOR:\n            dispatch(\n              addPopup({\n                key: listUrl,\n                content: {\n                  listUpdate: {\n                    listUrl,\n                    auto: false,\n                    oldList: list.current,\n                    newList: list.pendingUpdate,\n                  },\n                },\n                removeAfterMs: null,\n              })\n            )\n        }\n      }\n    })\n  }, [dispatch, lists])\n\n  return null\n}\n","function wait(ms: number): Promise<void> {\n  return new Promise((resolve) => setTimeout(resolve, ms))\n}\n\nfunction waitRandom(min: number, max: number): Promise<void> {\n  return wait(min + Math.round(Math.random() * Math.max(0, max - min)))\n}\n\n/**\n * This error is thrown if the function is cancelled before completing\n */\nexport class CancelledError extends Error {\n  constructor() {\n    super('Cancelled')\n  }\n}\n\n/**\n * Throw this error if the function should retry\n */\nexport class RetryableError extends Error {}\n\n/**\n * Retries the function that returns the promise until the promise successfully resolves up to n retries\n * @param fn function to retry\n * @param n how many times to retry\n * @param minWait min wait between retries in ms\n * @param maxWait max wait between retries in ms\n */\nexport function retry<T>(\n  fn: () => Promise<T>,\n  { n, minWait, maxWait }: { n: number; minWait: number; maxWait: number }\n): { promise: Promise<T>; cancel: () => void } {\n  let completed = false\n  let rejectCancelled: (error: Error) => void\n  // eslint-disable-next-line no-async-promise-executor\n  const promise = new Promise<T>(async (resolve, reject) => {\n    rejectCancelled = reject\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n      let result: T\n      try {\n        result = await fn()\n        if (!completed) {\n          resolve(result)\n          completed = true\n        }\n        break\n      } catch (error) {\n        if (completed) {\n          break\n        }\n        if (n <= 0 || !(error instanceof RetryableError)) {\n          reject(error)\n          completed = true\n          break\n        }\n        n--\n      }\n      await waitRandom(minWait, maxWait)\n    }\n  })\n  return {\n    promise,\n    cancel: () => {\n      if (completed) return\n      completed = true\n      rejectCancelled(new CancelledError())\n    },\n  }\n}\n","import { Contract } from '@ethersproject/contracts'\nimport { useEffect, useMemo, useRef } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useActiveWeb3React } from 'hooks'\nimport { useMulticallContract } from 'hooks/useContract'\nimport useDebounce from 'hooks/useDebounce'\nimport chunkArray from 'utils/chunkArray'\nimport { CancelledError, retry, RetryableError } from 'utils/retry'\nimport { useBlockNumber } from '../application/hooks'\nimport { AppDispatch, AppState } from '../index'\nimport {\n  Call,\n  errorFetchingMulticallResults,\n  fetchingMulticallResults,\n  parseCallKey,\n  updateMulticallResults,\n} from './actions'\n\n// chunk calls so we do not exceed the gas limit\nconst CALL_CHUNK_SIZE = 500\n\n/**\n * Fetches a chunk of calls, enforcing a minimum block number constraint\n * @param multicallContract multicall contract to fetch against\n * @param chunk chunk of calls to make\n * @param minBlockNumber minimum block number of the result set\n */\nasync function fetchChunk(\n  multicallContract: Contract,\n  chunk: Call[],\n  minBlockNumber: number\n): Promise<{ results: string[]; blockNumber: number }> {\n  let resultsBlockNumber\n  let returnData\n  try {\n    [resultsBlockNumber, returnData] = await multicallContract.aggregate(\n      chunk.map((obj) => [obj.address, obj.callData])\n    )\n  } catch (error) {\n    console.info('Failed to fetch chunk inside retry', error)\n    throw error\n  }\n  if (resultsBlockNumber.toNumber() < minBlockNumber) {\n    throw new RetryableError('Fetched for old block number')\n  }\n  return { results: returnData, blockNumber: resultsBlockNumber.toNumber() }\n}\n\n/**\n * From the current all listeners state, return each call key mapped to the\n * minimum number of blocks per fetch. This is how often each key must be fetched.\n * @param allListeners the all listeners state\n * @param chainId the current chain id\n */\nexport function activeListeningKeys(\n  allListeners: AppState['multicall']['callListeners'],\n  chainId?: number\n): { [callKey: string]: number } {\n  if (!allListeners || !chainId) return {}\n  const listeners = allListeners[chainId]\n  if (!listeners) return {}\n\n  return Object.keys(listeners).reduce<{ [callKey: string]: number }>((memo, callKey) => {\n    const keyListeners = listeners[callKey]\n\n    memo[callKey] = Object.keys(keyListeners)\n      .filter((key) => {\n        const blocksPerFetch = parseInt(key)\n        if (blocksPerFetch <= 0) return false\n        return keyListeners[blocksPerFetch] > 0\n      })\n      .reduce((previousMin, current) => {\n        return Math.min(previousMin, parseInt(current))\n      }, Infinity)\n    return memo\n  }, {})\n}\n\n/**\n * Return the keys that need to be refetched\n * @param callResults current call result state\n * @param listeningKeys each call key mapped to how old the data can be in blocks\n * @param chainId the current chain id\n * @param latestBlockNumber the latest block number\n */\nexport function outdatedListeningKeys(\n  callResults: AppState['multicall']['callResults'],\n  listeningKeys: { [callKey: string]: number },\n  chainId: number | undefined,\n  latestBlockNumber: number | undefined\n): string[] {\n  if (!chainId || !latestBlockNumber) return []\n  const results = callResults[chainId]\n  // no results at all, load everything\n  if (!results) return Object.keys(listeningKeys)\n\n  return Object.keys(listeningKeys).filter((callKey) => {\n    const blocksPerFetch = listeningKeys[callKey]\n\n    const data = callResults[chainId][callKey]\n    // no data, must fetch\n    if (!data) return true\n\n    const minDataBlockNumber = latestBlockNumber - (blocksPerFetch - 1)\n\n    // already fetching it for a recent enough block, don't refetch it\n    if (data.fetchingBlockNumber && data.fetchingBlockNumber >= minDataBlockNumber) return false\n\n    // if data is older than minDataBlockNumber, fetch it\n    return !data.blockNumber || data.blockNumber < minDataBlockNumber\n  })\n}\n\nexport default function Updater(): null {\n  const dispatch = useDispatch<AppDispatch>()\n  const state = useSelector<AppState, AppState['multicall']>((s) => s.multicall)\n  // wait for listeners to settle before triggering updates\n  const debouncedListeners = useDebounce(state.callListeners, 100)\n  const latestBlockNumber = useBlockNumber()\n  const { chainId } = useActiveWeb3React()\n  const multicallContract = useMulticallContract()\n  const cancellations = useRef<{ blockNumber: number; cancellations: (() => void)[] }>()\n\n  const listeningKeys: { [callKey: string]: number } = useMemo(() => {\n    return activeListeningKeys(debouncedListeners, chainId)\n  }, [debouncedListeners, chainId])\n\n  const unserializedOutdatedCallKeys = useMemo(() => {\n    return outdatedListeningKeys(state.callResults, listeningKeys, chainId, latestBlockNumber)\n  }, [chainId, state.callResults, listeningKeys, latestBlockNumber])\n\n  const serializedOutdatedCallKeys = useMemo(() => JSON.stringify(unserializedOutdatedCallKeys.sort()), [\n    unserializedOutdatedCallKeys,\n  ])\n\n  useEffect(() => {\n    if (!latestBlockNumber || !chainId || !multicallContract) return\n\n    const outdatedCallKeys: string[] = JSON.parse(serializedOutdatedCallKeys)\n    if (outdatedCallKeys.length === 0) return\n    const calls = outdatedCallKeys.map((key) => parseCallKey(key))\n    // .filter(item => item.address.toLowerCase() !== '0xBCfCcbde45cE874adCB698cC183deBcF17952812'.toLowerCase())\n\n    const chunkedCalls = chunkArray(calls, CALL_CHUNK_SIZE)\n\n    if (cancellations.current?.blockNumber !== latestBlockNumber) {\n      cancellations.current?.cancellations?.forEach((c) => c())\n    }\n\n    dispatch(\n      fetchingMulticallResults({\n        calls,\n        chainId,\n        fetchingBlockNumber: latestBlockNumber,\n      })\n    )\n\n    cancellations.current = {\n      blockNumber: latestBlockNumber,\n      cancellations: chunkedCalls.map((chunk, index) => {\n        const { cancel, promise } = retry(() => fetchChunk(multicallContract, chunk, latestBlockNumber), {\n          n: Infinity,\n          minWait: 2500,\n          maxWait: 3500,\n        })\n        promise\n          .then(({ results: returnData, blockNumber: fetchBlockNumber }) => {\n            cancellations.current = { cancellations: [], blockNumber: latestBlockNumber }\n\n            // accumulates the length of all previous indices\n            const firstCallKeyIndex = chunkedCalls.slice(0, index).reduce<number>((memo, curr) => memo + curr.length, 0)\n            const lastCallKeyIndex = firstCallKeyIndex + returnData.length\n\n            dispatch(\n              updateMulticallResults({\n                chainId,\n                results: outdatedCallKeys\n                  .slice(firstCallKeyIndex, lastCallKeyIndex)\n                  .reduce<{ [callKey: string]: string | null }>((memo, callKey, i) => {\n                    memo[callKey] = returnData[i] ?? null\n                    return memo\n                  }, {}),\n                blockNumber: fetchBlockNumber,\n              })\n            )\n          })\n          .catch((error: any) => {\n            if (error instanceof CancelledError) {\n              console.error('Cancelled fetch for blockNumber', latestBlockNumber)\n              return\n            }\n            console.error('Failed to fetch multicall chunk', chunk, chainId, error)\n            dispatch(\n              errorFetchingMulticallResults({\n                calls: chunk,\n                chainId,\n                fetchingBlockNumber: latestBlockNumber,\n              })\n            )\n          })\n        return cancel\n      }),\n    }\n  }, [chainId, multicallContract, dispatch, serializedOutdatedCallKeys, latestBlockNumber])\n\n  return null\n}\n","// chunks array into chunks of maximum size\n// evenly distributes items among the chunks\nexport default function chunkArray<T>(items: T[], maxChunkSize: number): T[][] {\n  if (maxChunkSize < 1) throw new Error('maxChunkSize must be gte 1')\n  if (items.length <= maxChunkSize) return [items]\n\n  const numChunks: number = Math.ceil(items.length / maxChunkSize)\n  const chunkSize = Math.ceil(items.length / numChunks)\n\n  return [...Array(numChunks).keys() as any].map(ix => items.slice(ix * chunkSize, ix * chunkSize + chunkSize))\n}\n","import { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useActiveWeb3React } from 'hooks'\nimport { useAddPopup, useBlockNumber } from '../application/hooks'\nimport { AppDispatch, AppState } from '../index'\nimport { checkedTransaction, finalizeTransaction } from './actions'\n\nexport function shouldCheck(\n  lastBlockNumber: number,\n  tx: { addedTime: number; receipt?: any; lastCheckedBlockNumber?: number }\n): boolean {\n  if (tx.receipt) return false\n  if (!tx.lastCheckedBlockNumber) return true\n  const blocksSinceCheck = lastBlockNumber - tx.lastCheckedBlockNumber\n  if (blocksSinceCheck < 1) return false\n  const minutesPending = (new Date().getTime() - tx.addedTime) / 1000 / 60\n  if (minutesPending > 60) {\n    // every 10 blocks if pending for longer than an hour\n    return blocksSinceCheck > 9\n  }\n  if (minutesPending > 5) {\n    // every 3 blocks if pending more than 5 minutes\n    return blocksSinceCheck > 2\n  }\n  // otherwise every block\n  return true\n}\n\nexport default function Updater(): null {\n  const { chainId, library } = useActiveWeb3React()\n\n  const lastBlockNumber = useBlockNumber()\n\n  const dispatch = useDispatch<AppDispatch>()\n  const state = useSelector<AppState, AppState['transactions']>((s) => s.transactions)\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const transactions = chainId ? state[chainId] ?? {} : {}\n\n  // show popup on confirm\n  const addPopup = useAddPopup()\n\n  useEffect(() => {\n    if (!chainId || !library || !lastBlockNumber) return\n\n    Object.keys(transactions)\n      .filter((hash) => shouldCheck(lastBlockNumber, transactions[hash]))\n      .forEach((hash) => {\n        library\n          .getTransactionReceipt(hash)\n          .then((receipt) => {\n            if (receipt) {\n              dispatch(\n                finalizeTransaction({\n                  chainId,\n                  hash,\n                  receipt: {\n                    blockHash: receipt.blockHash,\n                    blockNumber: receipt.blockNumber,\n                    contractAddress: receipt.contractAddress,\n                    from: receipt.from,\n                    status: receipt.status,\n                    to: receipt.to,\n                    transactionHash: receipt.transactionHash,\n                    transactionIndex: receipt.transactionIndex,\n                  },\n                })\n              )\n\n              addPopup(\n                {\n                  txn: {\n                    hash,\n                    success: receipt.status === 1,\n                    summary: transactions[hash]?.summary,\n                  },\n                },\n                hash\n              )\n            } else {\n              dispatch(checkedTransaction({ chainId, hash, blockNumber: lastBlockNumber }))\n            }\n          })\n          .catch((error) => {\n            console.error(`failed to check transaction hash: ${hash}`, error)\n          })\n      })\n  }, [chainId, library, transactions, lastBlockNumber, dispatch, addPopup])\n\n  return null\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport Providers from './Providers'\nimport ApplicationUpdater from './state/application/updater'\nimport ListsUpdater from './state/lists/updater'\nimport MulticallUpdater from './state/multicall/updater'\nimport TransactionUpdater from './state/transactions/updater'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nif ('ethereum' in window) {\n  (window.ethereum as any).autoRefreshOnNetworkChange = false\n}\n\nwindow.addEventListener('error', () => {\n   localStorage?.removeItem('redux_localstorage_simple_lists')\n})\n\nReactDOM.render(\n  <React.StrictMode>\n    <Providers>\n    <>\n        <ListsUpdater />\n        <ApplicationUpdater />\n        <TransactionUpdater />\n        <MulticallUpdater />\n      </>\n      <App />\n    </Providers>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n","import tokens from './tokens'\nimport { FarmConfig } from './types'\n\nconst farms: FarmConfig[] = [\n  {\n    pid: 0,\n    lpSymbol: 'CAKE',\n    lpAddresses: {\n      97: '0x9C21123D94b93361a29B2C2EFB3d5CD8B17e0A9e',\n      56: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n    },\n    token: tokens.syrup,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 1,\n    lpSymbol: 'LUCKY-BNB LP',\n    lpAddresses: {\n      97: '0xd08A7AfF7952Aaab598121Ad8Ee28e5CC55CFaA1',\n      56: '0xA527a61703D82139F8a06Bc30097cC9CAA2df5A6',\n    },\n    token: tokens.bdex,\n    quoteToken: tokens.wbnb,\n  }\n]\n\nexport default farms\n","import { createAction } from '@reduxjs/toolkit'\n\n// fired once when the app reloads but before the app renders\n// allows any updates to be applied to store data loaded from localStorage\nexport const updateVersion = createAction<void>('global/updateVersion')\n\nexport default createAction\n","import { createReducer } from '@reduxjs/toolkit'\nimport { INITIAL_ALLOWED_SLIPPAGE, DEFAULT_DEADLINE_FROM_NOW } from '../../constants'\nimport { updateVersion } from '../global/actions'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  removeSerializedPair,\n  removeSerializedToken,\n  SerializedPair,\n  SerializedToken,\n  updateMatchesDarkMode,\n  updateUserDarkMode,\n  updateUserExpertMode,\n  updateUserSlippageTolerance,\n  updateUserDeadline,\n  muteAudio,\n  unmuteAudio\n} from './actions'\n\nconst currentTimestamp = () => new Date().getTime()\n\nexport interface UserState {\n  // the timestamp of the last updateVersion action\n  lastUpdateVersionTimestamp?: number\n\n  userDarkMode: boolean | null // the user's choice for dark mode or light mode\n  matchesDarkMode: boolean // whether the dark mode media query matches\n\n  userExpertMode: boolean\n\n  // user defined slippage tolerance in bips, used in all txns\n  userSlippageTolerance: number\n\n  // deadline set by user in minutes, used in all txns\n  userDeadline: number\n\n  tokens: {\n    [chainId: number]: {\n      [address: string]: SerializedToken\n    }\n  }\n\n  pairs: {\n    [chainId: number]: {\n      // keyed by token0Address:token1Address\n      [key: string]: SerializedPair\n    }\n  }\n\n  timestamp: number\n\n  audioPlay: boolean\n}\n\nfunction pairKey(token0Address: string, token1Address: string) {\n  return `${token0Address};${token1Address}`\n}\n\nexport const initialState: UserState = {\n  userDarkMode: null,\n  matchesDarkMode: false,\n  userExpertMode: false,\n  userSlippageTolerance: INITIAL_ALLOWED_SLIPPAGE,\n  userDeadline: DEFAULT_DEADLINE_FROM_NOW,\n  tokens: {},\n  pairs: {},\n  timestamp: currentTimestamp(),\n  audioPlay: true\n}\n\nexport default createReducer(initialState, builder =>\n  builder\n    .addCase(updateVersion, state => {\n      // slippage isnt being tracked in local storage, reset to default\n      // noinspection SuspiciousTypeOfGuard\n      if (typeof state.userSlippageTolerance !== 'number') {\n        state.userSlippageTolerance = INITIAL_ALLOWED_SLIPPAGE\n      }\n\n      // deadline isnt being tracked in local storage, reset to default\n      // noinspection SuspiciousTypeOfGuard\n      if (typeof state.userDeadline !== 'number') {\n        state.userDeadline = DEFAULT_DEADLINE_FROM_NOW\n      }\n\n      state.lastUpdateVersionTimestamp = currentTimestamp()\n    })\n    .addCase(updateUserDarkMode, (state, action) => {\n      state.userDarkMode = action.payload.userDarkMode\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateMatchesDarkMode, (state, action) => {\n      state.matchesDarkMode = action.payload.matchesDarkMode\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserExpertMode, (state, action) => {\n      state.userExpertMode = action.payload.userExpertMode\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserSlippageTolerance, (state, action) => {\n      state.userSlippageTolerance = action.payload.userSlippageTolerance\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserDeadline, (state, action) => {\n      state.userDeadline = action.payload.userDeadline\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(addSerializedToken, (state, { payload: { serializedToken } }) => {\n      state.tokens[serializedToken.chainId] = state.tokens[serializedToken.chainId] || {}\n      state.tokens[serializedToken.chainId][serializedToken.address] = serializedToken\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(removeSerializedToken, (state, { payload: { address, chainId } }) => {\n      state.tokens[chainId] = state.tokens[chainId] || {}\n      delete state.tokens[chainId][address]\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(addSerializedPair, (state, { payload: { serializedPair } }) => {\n      if (\n        serializedPair.token0.chainId === serializedPair.token1.chainId &&\n        serializedPair.token0.address !== serializedPair.token1.address\n      ) {\n        const {chainId} = serializedPair.token0\n        state.pairs[chainId] = state.pairs[chainId] || {}\n        state.pairs[chainId][pairKey(serializedPair.token0.address, serializedPair.token1.address)] = serializedPair\n      }\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(removeSerializedPair, (state, { payload: { chainId, tokenAAddress, tokenBAddress } }) => {\n      if (state.pairs[chainId]) {\n        // just delete both keys if either exists\n        delete state.pairs[chainId][pairKey(tokenAAddress, tokenBAddress)]\n        delete state.pairs[chainId][pairKey(tokenBAddress, tokenAAddress)]\n      }\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(muteAudio, state => {\n      state.audioPlay = false\n    })\n    .addCase(unmuteAudio, state => {\n      state.audioPlay = true\n    })\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions'\n\nexport interface SwapState {\n  readonly independentField: Field\n  readonly typedValue: string\n  readonly [Field.INPUT]: {\n    readonly currencyId: string | undefined\n  }\n  readonly [Field.OUTPUT]: {\n    readonly currencyId: string | undefined\n  }\n  // the typed recipient address or ENS name, or null if swap should go to sender\n  readonly recipient: string | null\n}\n\nconst initialState: SwapState = {\n  independentField: Field.INPUT,\n  typedValue: '',\n  [Field.INPUT]: {\n    currencyId: '',\n  },\n  [Field.OUTPUT]: {\n    currencyId: '',\n  },\n  recipient: null,\n}\n\nexport default createReducer<SwapState>(initialState, (builder) =>\n  builder\n    .addCase(\n      replaceSwapState,\n      (state, { payload: { typedValue, recipient, field, inputCurrencyId, outputCurrencyId } }) => {\n        return {\n          [Field.INPUT]: {\n            currencyId: inputCurrencyId,\n          },\n          [Field.OUTPUT]: {\n            currencyId: outputCurrencyId,\n          },\n          independentField: field,\n          typedValue,\n          recipient,\n        }\n      }\n    )\n    .addCase(selectCurrency, (state, { payload: { currencyId, field } }) => {\n      const otherField = field === Field.INPUT ? Field.OUTPUT : Field.INPUT\n      if (currencyId === state[otherField].currencyId) {\n        // the case where we have to swap the order\n        return {\n          ...state,\n          independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\n          [field]: { currencyId },\n          [otherField]: { currencyId: state[field].currencyId },\n        }\n      }\n      // the normal case\n      return {\n        ...state,\n        [field]: { currencyId },\n      }\n    })\n    .addCase(switchCurrencies, (state) => {\n      return {\n        ...state,\n        independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\n        [Field.INPUT]: { currencyId: state[Field.OUTPUT].currencyId },\n        [Field.OUTPUT]: { currencyId: state[Field.INPUT].currencyId },\n      }\n    })\n    .addCase(typeInput, (state, { payload: { field, typedValue } }) => {\n      return {\n        ...state,\n        independentField: field,\n        typedValue,\n      }\n    })\n    .addCase(setRecipient, (state, { payload: { recipient } }) => {\n      state.recipient = recipient\n    })\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, typeInput } from './actions'\n\nexport interface BurnState {\n  readonly independentField: Field\n  readonly typedValue: string\n}\n\nconst initialState: BurnState = {\n  independentField: Field.LIQUIDITY_PERCENT,\n  typedValue: '0'\n}\n\nexport default createReducer<BurnState>(initialState, builder =>\n  builder.addCase(typeInput, (state, { payload: { field, typedValue } }) => {\n    return {\n      ...state,\n      independentField: field,\n      typedValue\n    }\n  })\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { getVersionUpgrade, VersionUpgrade } from '@uniswap/token-lists'\n// eslint-disable-next-line import/no-unresolved\nimport { TokenList } from '@uniswap/token-lists/dist/types'\nimport { DEFAULT_LIST_OF_LISTS, DEFAULT_TOKEN_LIST_URL } from '../../constants/lists'\nimport { updateVersion } from '../global/actions'\nimport { acceptListUpdate, addList, fetchTokenList, removeList, selectList } from './actions'\nimport DEFAULT_LIST from '../../constants/token/luckyswap.json'\n\nexport interface ListsState {\n  readonly byUrl: {\n    readonly [url: string]: {\n      readonly current: TokenList | null\n      readonly pendingUpdate: TokenList | null\n      readonly loadingRequestId: string | null\n      readonly error: string | null\n    }\n  }\n  // this contains the default list of lists from the last time the updateVersion was called, i.e. the app was reloaded\n  readonly lastInitializedDefaultListOfLists?: string[]\n  readonly selectedListUrl: string | undefined\n}\n\nconst NEW_LIST_STATE: ListsState['byUrl'][string] = {\n  error: null,\n  current: null,\n  loadingRequestId: null,\n  pendingUpdate: null,\n}\n\ntype Mutable<T> = { -readonly [P in keyof T]: T[P] extends ReadonlyArray<infer U> ? U[] : T[P] }\n\nconst initialState: ListsState = {\n  lastInitializedDefaultListOfLists: DEFAULT_LIST_OF_LISTS,\n  byUrl: {\n    ...DEFAULT_LIST_OF_LISTS.reduce<Mutable<ListsState['byUrl']>>((memo, listUrl) => {\n      memo[listUrl] = NEW_LIST_STATE\n      return memo\n    }, {}),\n    [DEFAULT_TOKEN_LIST_URL]: {\n      error: null,\n      current: DEFAULT_LIST,\n      loadingRequestId: null,\n      pendingUpdate: null,\n    },\n  },\n  selectedListUrl: DEFAULT_TOKEN_LIST_URL,\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(fetchTokenList.pending, (state, { payload: { requestId, url } }) => {\n      state.byUrl[url] = {\n        current: null,\n        pendingUpdate: null,\n        ...state.byUrl[url],\n        loadingRequestId: requestId,\n        error: null,\n      }\n    })\n    .addCase(fetchTokenList.fulfilled, (state, { payload: { requestId, tokenList, url } }) => {\n      const current = state.byUrl[url]?.current\n      const loadingRequestId = state.byUrl[url]?.loadingRequestId\n\n      // no-op if update does nothing\n      if (current) {\n        const upgradeType = getVersionUpgrade(current.version, tokenList.version)\n        if (upgradeType === VersionUpgrade.NONE) return\n        if (loadingRequestId === null || loadingRequestId === requestId) {\n          state.byUrl[url] = {\n            ...state.byUrl[url],\n            loadingRequestId: null,\n            error: null,\n            current,\n            pendingUpdate: tokenList,\n          }\n        }\n      } else {\n        state.byUrl[url] = {\n          ...state.byUrl[url],\n          loadingRequestId: null,\n          error: null,\n          current: tokenList,\n          pendingUpdate: null,\n        }\n      }\n    })\n    .addCase(fetchTokenList.rejected, (state, { payload: { url, requestId, errorMessage } }) => {\n      if (state.byUrl[url]?.loadingRequestId !== requestId) {\n        // no-op since it's not the latest request\n        return\n      }\n\n      state.byUrl[url] = {\n        ...state.byUrl[url],\n        loadingRequestId: null,\n        error: errorMessage,\n        current: null,\n        pendingUpdate: null,\n      }\n    })\n    .addCase(selectList, (state, { payload: url }) => {\n      state.selectedListUrl = url\n      // automatically adds list\n      if (!state.byUrl[url]) {\n        state.byUrl[url] = NEW_LIST_STATE\n      }\n    })\n    .addCase(addList, (state, { payload: url }) => {\n      if (!state.byUrl[url]) {\n        state.byUrl[url] = NEW_LIST_STATE\n      }\n    })\n    .addCase(removeList, (state, { payload: url }) => {\n      if (state.byUrl[url]) {\n        delete state.byUrl[url]\n      }\n      if (state.selectedListUrl === url) {\n        state.selectedListUrl = Object.keys(state.byUrl)[0]\n      }\n    })\n    .addCase(acceptListUpdate, (state, { payload: url }) => {\n      if (!state.byUrl[url]?.pendingUpdate) {\n        throw new Error('accept list update called without pending update')\n      }\n      state.byUrl[url] = {\n        ...state.byUrl[url],\n        pendingUpdate: null,\n        current: state.byUrl[url].pendingUpdate,\n      }\n    })\n    .addCase(updateVersion, (state) => {\n      // state loaded from localStorage, but new lists have never been initialized\n      if (!state.lastInitializedDefaultListOfLists) {\n        state.byUrl = initialState.byUrl\n        state.selectedListUrl = undefined\n      } else if (state.lastInitializedDefaultListOfLists) {\n        const lastInitializedSet = state.lastInitializedDefaultListOfLists.reduce<Set<string>>(\n          (s, l) => s.add(l),\n          new Set()\n        )\n        const newListOfListsSet = DEFAULT_LIST_OF_LISTS.reduce<Set<string>>((s, l) => s.add(l), new Set())\n\n        DEFAULT_LIST_OF_LISTS.forEach((listUrl) => {\n          if (!lastInitializedSet.has(listUrl)) {\n            state.byUrl[listUrl] = NEW_LIST_STATE\n          }\n        })\n\n        state.lastInitializedDefaultListOfLists.forEach((listUrl) => {\n          if (!newListOfListsSet.has(listUrl)) {\n            delete state.byUrl[listUrl]\n          }\n        })\n      }\n\n      state.lastInitializedDefaultListOfLists = DEFAULT_LIST_OF_LISTS\n    })\n)\n","import { createReducer, nanoid } from '@reduxjs/toolkit'\nimport {\n  addPopup,\n  PopupContent,\n  removePopup,\n  toggleWalletModal,\n  toggleSettingsMenu,\n  updateBlockNumber\n} from './actions'\n\ntype PopupList = Array<{ key: string; show: boolean; content: PopupContent; removeAfterMs: number | null }>\n\nexport interface ApplicationState {\n  blockNumber: { [chainId: number]: number }\n  popupList: PopupList\n  walletModalOpen: boolean\n  settingsMenuOpen: boolean\n}\n\nconst initialState: ApplicationState = {\n  blockNumber: {},\n  popupList: [],\n  walletModalOpen: false,\n  settingsMenuOpen: false\n}\n\nexport default createReducer(initialState, builder =>\n  builder\n    .addCase(updateBlockNumber, (state, action) => {\n      const { chainId, blockNumber } = action.payload\n      if (typeof state.blockNumber[chainId] !== 'number') {\n        state.blockNumber[chainId] = blockNumber\n      } else {\n        state.blockNumber[chainId] = Math.max(blockNumber, state.blockNumber[chainId])\n      }\n    })\n    .addCase(toggleWalletModal, state => {\n      state.walletModalOpen = !state.walletModalOpen\n    })\n    .addCase(toggleSettingsMenu, state => {\n      state.settingsMenuOpen = !state.settingsMenuOpen\n    })\n    .addCase(addPopup, (state, { payload: { content, key, removeAfterMs = 15000 } }) => {\n      state.popupList = (key ? state.popupList.filter(popup => popup.key !== key) : state.popupList).concat([\n        {\n          key: key || nanoid(),\n          show: true,\n          content,\n          removeAfterMs\n        }\n      ])\n    })\n    .addCase(removePopup, (state, { payload: { key } }) => {\n      state.popupList.forEach(p => {\n        if (p.key === key) {\n          p.show = false\n        }\n      })\n    })\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport {\n  addMulticallListeners,\n  errorFetchingMulticallResults,\n  fetchingMulticallResults,\n  removeMulticallListeners,\n  toCallKey,\n  updateMulticallResults\n} from './actions'\n\nexport interface MulticallState {\n  callListeners?: {\n    // on a per-chain basis\n    [chainId: number]: {\n      // stores for each call key the listeners' preferences\n      [callKey: string]: {\n        // stores how many listeners there are per each blocks per fetch preference\n        [blocksPerFetch: number]: number\n      }\n    }\n  }\n\n  callResults: {\n    [chainId: number]: {\n      [callKey: string]: {\n        data?: string | null\n        blockNumber?: number\n        fetchingBlockNumber?: number\n      }\n    }\n  }\n}\n\nconst initialState: MulticallState = {\n  callResults: {}\n}\n\nexport default createReducer(initialState, builder =>\n  builder\n    .addCase(addMulticallListeners, (state, { payload: { calls, chainId, options: { blocksPerFetch = 1 } = {} } }) => {\n      const listeners: MulticallState['callListeners'] = state.callListeners\n        ? state.callListeners\n        : (state.callListeners = {})\n      listeners[chainId] = listeners[chainId] ?? {}\n      calls.forEach(call => {\n        const callKey = toCallKey(call)\n        listeners[chainId][callKey] = listeners[chainId][callKey] ?? {}\n        listeners[chainId][callKey][blocksPerFetch] = (listeners[chainId][callKey][blocksPerFetch] ?? 0) + 1\n      })\n    })\n    .addCase(\n      removeMulticallListeners,\n      (state, { payload: { chainId, calls, options: { blocksPerFetch = 1 } = {} } }) => {\n        const listeners: MulticallState['callListeners'] = state.callListeners\n          ? state.callListeners\n          : (state.callListeners = {})\n\n        if (!listeners[chainId]) return\n        calls.forEach(call => {\n          const callKey = toCallKey(call)\n          if (!listeners[chainId][callKey]) return\n          if (!listeners[chainId][callKey][blocksPerFetch]) return\n\n          if (listeners[chainId][callKey][blocksPerFetch] === 1) {\n            delete listeners[chainId][callKey][blocksPerFetch]\n          } else {\n            listeners[chainId][callKey][blocksPerFetch]--\n          }\n        })\n      }\n    )\n    .addCase(fetchingMulticallResults, (state, { payload: { chainId, fetchingBlockNumber, calls } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      calls.forEach(call => {\n        const callKey = toCallKey(call)\n        const current = state.callResults[chainId][callKey]\n        if (!current) {\n          state.callResults[chainId][callKey] = {\n            fetchingBlockNumber\n          }\n        } else {\n          if ((current.fetchingBlockNumber ?? 0) >= fetchingBlockNumber) return\n          state.callResults[chainId][callKey].fetchingBlockNumber = fetchingBlockNumber\n        }\n      })\n    })\n    .addCase(errorFetchingMulticallResults, (state, { payload: { fetchingBlockNumber, chainId, calls } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      calls.forEach(call => {\n        const callKey = toCallKey(call)\n        const current = state.callResults[chainId][callKey]\n        if (!current) return // only should be dispatched if we are already fetching\n        if (current.fetchingBlockNumber === fetchingBlockNumber) {\n          delete current.fetchingBlockNumber\n          current.data = null\n          current.blockNumber = fetchingBlockNumber\n        }\n      })\n    })\n    .addCase(updateMulticallResults, (state, { payload: { chainId, results, blockNumber } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      Object.keys(results).forEach(callKey => {\n        const current = state.callResults[chainId][callKey]\n        if ((current?.blockNumber ?? 0) > blockNumber) return\n        state.callResults[chainId][callKey] = {\n          data: results[callKey],\n          blockNumber\n        }\n      })\n    })\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport {\n  addTransaction,\n  checkedTransaction,\n  clearAllTransactions,\n  finalizeTransaction,\n  SerializableTransactionReceipt\n} from './actions'\n\nconst now = () => new Date().getTime()\n\nexport interface TransactionDetails {\n  hash: string\n  approval?: { tokenAddress: string; spender: string }\n  summary?: string\n  receipt?: SerializableTransactionReceipt\n  lastCheckedBlockNumber?: number\n  addedTime: number\n  confirmedTime?: number\n  from: string\n}\n\nexport interface TransactionState {\n  [chainId: number]: {\n    [txHash: string]: TransactionDetails\n  }\n}\n\nexport const initialState: TransactionState = {}\n\nexport default createReducer(initialState, builder =>\n  builder\n    .addCase(addTransaction, (transactions, { payload: { chainId, from, hash, approval, summary } }) => {\n      if (transactions[chainId]?.[hash]) {\n        throw Error('Attempted to add existing transaction.')\n      }\n      const txs = transactions[chainId] ?? {}\n      txs[hash] = { hash, approval, summary, from, addedTime: now() }\n      transactions[chainId] = txs\n    })\n    .addCase(clearAllTransactions, (transactions, { payload: { chainId } }) => {\n      if (!transactions[chainId]) return\n      transactions[chainId] = {}\n    })\n    .addCase(checkedTransaction, (transactions, { payload: { chainId, hash, blockNumber } }) => {\n      const tx = transactions[chainId]?.[hash]\n      if (!tx) {\n        return\n      }\n      if (!tx.lastCheckedBlockNumber) {\n        tx.lastCheckedBlockNumber = blockNumber\n      } else {\n        tx.lastCheckedBlockNumber = Math.max(blockNumber, tx.lastCheckedBlockNumber)\n      }\n    })\n    .addCase(finalizeTransaction, (transactions, { payload: { hash, chainId, receipt } }) => {\n      const tx = transactions[chainId]?.[hash]\n      if (!tx) {\n        return\n      }\n      tx.receipt = receipt\n      tx.confirmedTime = now()\n    })\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, resetMintState, typeInput } from './actions'\n\nexport interface MintState {\n  readonly independentField: Field\n  readonly typedValue: string\n  readonly otherTypedValue: string // for the case when there's no liquidity\n}\n\nconst initialState: MintState = {\n  independentField: Field.CURRENCY_A,\n  typedValue: '',\n  otherTypedValue: ''\n}\n\nexport default createReducer<MintState>(initialState, builder =>\n  builder\n    .addCase(resetMintState, () => initialState)\n    .addCase(typeInput, (state, { payload: { field, typedValue, noLiquidity } }) => {\n      if (noLiquidity) {\n        // they're typing into the field they've last typed in\n        if (field === state.independentField) {\n          return {\n            ...state,\n            independentField: field,\n            typedValue\n          }\n        }\n        // they're typing into a new field, store the other value\n        \n          return {\n            ...state,\n            independentField: field,\n            typedValue,\n            otherTypedValue: state.typedValue\n          }\n        \n      } \n        return {\n          ...state,\n          independentField: field,\n          typedValue,\n          otherTypedValue: ''\n        }\n      \n    })\n)\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\nimport { load } from 'redux-localstorage-simple'\nimport { useDispatch } from 'react-redux'\nimport farmsReducer from './farms'\nimport toastsReducer from './toasts'\nimport poolsReducer from './pools'\nimport pricesReducer from './prices'\nimport profileReducer from './profile'\nimport teamsReducer from './teams'\nimport achievementsReducer from './achievements'\nimport blockReducer from './block'\nimport user from './user/reducer'\nimport swap from './swap/reducer'\nimport burn from './burn/reducer'\n\nimport lists from './lists/reducer'\nimport application from './application/reducer'\nimport multicall from './multicall/reducer'\nimport transactions from './transactions/reducer'\nimport mint from './mint/reducer'\n\n\ntype MergedState = {\n  user: {\n    [key: string]: any\n  }\n  transactions: {\n    [key: string]: any\n  }\n}\nconst PERSISTED_KEYS: string[] = ['user', 'transactions']\nconst loadedState = load({ states: PERSISTED_KEYS }) as MergedState\nif (loadedState.user) {\n  // loadedState.user.userDarkMode = getThemeCache()\n}\nconst store = configureStore({\n  devTools: process.env.NODE_ENV !== 'production',\n  reducer: {\n    burn,\n    mint,\n    transactions,\n    multicall,\n    application,\n    lists,\n    swap,\n    user,\n    farms: farmsReducer,\n    toasts: toastsReducer,\n    pools: poolsReducer,\n    prices: pricesReducer,\n    profile: profileReducer,\n    teams: teamsReducer,\n    achievements: achievementsReducer,\n    block: blockReducer,\n  },\n  // middleware: [...getDefaultMiddleware({ thunk: false }) as any, save({ states: PERSISTED_KEYS })],\n  // preloadedState: loadedState,\n})\n\n/**\n * @see https://redux-toolkit.js.org/usage/usage-with-typescript#getting-the-dispatch-type\n */\nexport type AppDispatch = typeof store.dispatch\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\nexport type AppState = ReturnType<typeof store.getState>\n\nexport default store\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport teamsList from 'config/constants/teams'\nimport { Team } from 'config/constants/types'\nimport { TeamsById, TeamsState } from '../types'\nimport { getTeam, getTeams } from './helpers'\n\nconst teamsById: TeamsById = teamsList.reduce((accum, team) => {\n  return {\n    ...accum,\n    [team.id]: team,\n  }\n}, {})\n\nconst initialState: TeamsState = {\n  isInitialized: false,\n  isLoading: true,\n  data: teamsById,\n}\n\nexport const teamsSlice = createSlice({\n  name: 'teams',\n  initialState,\n  reducers: {\n    fetchStart: (state) => {\n      state.isLoading = true\n    },\n    fetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    teamFetchSucceeded: (state, action: PayloadAction<Team>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data[action.payload.id] = action.payload\n    },\n    teamsFetchSucceeded: (state, action: PayloadAction<TeamsById>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { fetchStart, teamFetchSucceeded, fetchFailed, teamsFetchSucceeded } = teamsSlice.actions\n\n// Thunks\nexport const fetchTeam = (teamId: number) => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const team = await getTeam(teamId)\n    dispatch(teamFetchSucceeded(team))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport const fetchTeams = () => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const teams = await getTeams()\n    dispatch(teamsFetchSucceeded(teams))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport default teamsSlice.reducer\n","import { createAction } from '@reduxjs/toolkit'\nimport { ChainId } from '@beswap/sdk'\n\nexport interface SerializableTransactionReceipt {\n  to: string\n  from: string\n  contractAddress: string\n  transactionIndex: number\n  blockHash: string\n  transactionHash: string\n  blockNumber: number\n  status?: number\n}\n\nexport const addTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  from: string\n  approval?: { tokenAddress: string; spender: string }\n  summary?: string\n}>('transactions/addTransaction')\nexport const clearAllTransactions = createAction<{ chainId: ChainId }>('transactions/clearAllTransactions')\nexport const finalizeTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  receipt: SerializableTransactionReceipt\n}>('transactions/finalizeTransaction')\nexport const checkedTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  blockNumber: number\n}>('transactions/checkedTransaction')\n","export const DEFAULT_TOKEN_LIST_URL = 'pancakeswap'\n\nexport const DEFAULT_LIST_OF_LISTS: string[] = [DEFAULT_TOKEN_LIST_URL]\n","import poolsConfig from 'config/constants/pools'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport cakeABI from 'config/abi/cake.json'\nimport wbnbABI from 'config/abi/weth.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getWbnbAddress } from 'utils/addressHelpers'\nimport BigNumber from 'bignumber.js'\n\nexport const fetchPoolsBlockLimits = async () => {\n  const poolsWithEnd = poolsConfig.filter((p) => p.sousId !== 0)\n  const callsStartBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'startBlock',\n    }\n  })\n  const callsEndBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'bonusEndBlock',\n    }\n  })\n\n  const starts = await multicall(sousChefABI, callsStartBlock)\n  const ends = await multicall(sousChefABI, callsEndBlock)\n\n  return poolsWithEnd.map((cakePoolConfig, index) => {\n    const startBlock = starts[index]\n    const endBlock = ends[index]\n    return {\n      sousId: cakePoolConfig.sousId,\n      startBlock: new BigNumber(startBlock).toJSON(),\n      endBlock: new BigNumber(endBlock).toJSON(),\n    }\n  })\n}\n\nexport const fetchPoolsTotalStaking = async () => {\n  const nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'BNB')\n  const bnbPool = poolsConfig.filter((p) => p.stakingToken.symbol === 'BNB')\n\n  const callsNonBnbPools = nonBnbPools.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.stakingToken.address),\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const callsBnbPools = bnbPool.map((poolConfig) => {\n    return {\n      address: getWbnbAddress(),\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const nonBnbPoolsTotalStaked = await multicall(cakeABI, callsNonBnbPools)\n  const bnbPoolsTotalStaked = await multicall(wbnbABI, callsBnbPools)\n\n  return [\n    ...nonBnbPools.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(nonBnbPoolsTotalStaked[index]).toJSON(),\n    })),\n    ...bnbPool.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(bnbPoolsTotalStaked[index]).toJSON(),\n    })),\n  ]\n}\n","import { AbiItem } from 'web3-utils'\nimport poolsConfig from 'config/constants/pools'\nimport masterChefABI from 'config/abi/masterchef.json'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport erc20ABI from 'config/abi/erc20.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { getWeb3NoAccount } from 'utils/web3'\nimport BigNumber from 'bignumber.js'\n\n// Pool 0, Cake / Cake is a different kind of contract (master chef)\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\nconst nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'BNB')\nconst bnbPools = poolsConfig.filter((p) => p.stakingToken.symbol === 'BNB')\nconst nonMasterPools = poolsConfig.filter((p) => p.sousId !== 0)\nconst web3 = getWeb3NoAccount()\nconst masterChefContract = new web3.eth.Contract((masterChefABI as unknown) as AbiItem, getMasterChefAddress())\n\nexport const fetchPoolsAllowance = async (account) => {\n  const calls = nonBnbPools.map((p) => ({\n    address: getAddress(p.stakingToken.address),\n    name: 'allowance',\n    params: [account, getAddress(p.contractAddress)],\n  }))\n\n  const allowances = await multicall(erc20ABI, calls)\n  return nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(allowances[index]).toJSON() }),\n    {},\n  )\n}\n\nexport const fetchUserBalances = async (account) => {\n  // Non BNB pools\n  const calls = nonBnbPools.map((p) => ({\n    address: getAddress(p.stakingToken.address),\n    name: 'balanceOf',\n    params: [account],\n  }))\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\n  const tokenBalances = nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\n    {},\n  )\n\n  // BNB pools\n  const bnbBalance = await web3.eth.getBalance(account)\n  const bnbBalances = bnbPools.reduce(\n    (acc, pool) => ({ ...acc, [pool.sousId]: new BigNumber(bnbBalance).toJSON() }),\n    {},\n  )\n\n  return { ...tokenBalances, ...bnbBalances }\n}\n\nexport const fetchUserStakeBalances = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'userInfo',\n    params: [account],\n  }))\n  const userInfo = await multicall(sousChefABI, calls)\n  const stakedBalances = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(userInfo[index].amount._hex).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const { amount: masterPoolAmount } = await masterChefContract.methods.userInfo('0', account).call()\n\n  return { ...stakedBalances, 0: new BigNumber(masterPoolAmount).toJSON() }\n}\n\nexport const fetchUserPendingRewards = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'pendingReward',\n    params: [account],\n  }))\n  const res = await multicall(sousChefABI, calls)\n  const pendingRewards = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(res[index]).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const pendingReward = await masterChefContract.methods.pendingCake('0', account).call()\n\n  return { ...pendingRewards, 0: new BigNumber(pendingReward).toJSON() }\n}\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit'\nimport poolsConfig from 'config/constants/pools'\nimport { fetchPoolsBlockLimits, fetchPoolsTotalStaking } from './fetchPools'\nimport {\n  fetchPoolsAllowance,\n  fetchUserBalances,\n  fetchUserStakeBalances,\n  fetchUserPendingRewards,\n} from './fetchPoolsUser'\nimport { PoolsState, Pool } from '../types'\n\nconst initialState: PoolsState = { data: [...poolsConfig] }\n\nexport const PoolsSlice = createSlice({\n  name: 'Pools',\n  initialState,\n  reducers: {\n    setPoolsPublicData: (state, action) => {\n      const livePoolsData: Pool[] = action.payload\n      state.data = state.data.map((pool) => {\n        const livePoolData = livePoolsData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, ...livePoolData }\n      })\n    },\n    setPoolsUserData: (state, action) => {\n      const userData = action.payload\n      state.data = state.data.map((pool) => {\n        const userPoolData = userData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, userData: userPoolData }\n      })\n    },\n    updatePoolsUserData: (state, action) => {\n      const { field, value, sousId } = action.payload\n      const index = state.data.findIndex((p) => p.sousId === sousId)\n      state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\n    },\n  },\n})\n\n// Actions\nexport const { setPoolsPublicData, setPoolsUserData, updatePoolsUserData } = PoolsSlice.actions\n\n// Thunks\nexport const fetchPoolsPublicDataAsync = () => async (dispatch) => {\n  const blockLimits = await fetchPoolsBlockLimits()\n  const totalStakings = await fetchPoolsTotalStaking()\n\n  const liveData = poolsConfig.map((pool) => {\n    const blockLimit = blockLimits.find((entry) => entry.sousId === pool.sousId)\n    const totalStaking = totalStakings.find((entry) => entry.sousId === pool.sousId)\n    return {\n      ...blockLimit,\n      ...totalStaking,\n    }\n  })\n\n  dispatch(setPoolsPublicData(liveData))\n}\n\nexport const fetchPoolsUserDataAsync = (account) => async (dispatch) => {\n  const allowances = await fetchPoolsAllowance(account)\n  const stakingTokenBalances = await fetchUserBalances(account)\n  const stakedBalances = await fetchUserStakeBalances(account)\n  const pendingRewards = await fetchUserPendingRewards(account)\n\n  const userData = poolsConfig.map((pool) => ({\n    sousId: pool.sousId,\n    allowance: allowances[pool.sousId],\n    stakingTokenBalance: stakingTokenBalances[pool.sousId],\n    stakedBalance: stakedBalances[pool.sousId],\n    pendingReward: pendingRewards[pool.sousId],\n  }))\n\n  dispatch(setPoolsUserData(userData))\n}\n\nexport const updateUserAllowance = (sousId: string, account: string) => async (dispatch) => {\n  const allowances = await fetchPoolsAllowance(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'allowance', value: allowances[sousId] }))\n}\n\nexport const updateUserBalance = (sousId: string, account: string) => async (dispatch) => {\n  const tokenBalances = await fetchUserBalances(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'stakingTokenBalance', value: tokenBalances[sousId] }))\n}\n\nexport const updateUserStakedBalance = (sousId: string, account: string) => async (dispatch) => {\n  const stakedBalances = await fetchUserStakeBalances(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'stakedBalance', value: stakedBalances[sousId] }))\n}\n\nexport const updateUserPendingReward = (sousId: string, account: string) => async (dispatch) => {\n  const pendingRewards = await fetchUserPendingRewards(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'pendingReward', value: pendingRewards[sousId] }))\n}\n\nexport default PoolsSlice.reducer\n","import { useCallback, useMemo } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useActiveWeb3React } from '../../hooks'\nimport { addPopup, PopupContent, removePopup, toggleWalletModal, toggleSettingsMenu } from './actions'\nimport { AppState } from '../index'\n\nexport function useBlockNumber(): number | undefined {\n  const { chainId } = useActiveWeb3React()\n\n  return useSelector((state: AppState) => state.application.blockNumber[chainId ?? -1])\n}\n\nexport function useWalletModalOpen(): boolean {\n  return useSelector((state: AppState) => state.application.walletModalOpen)\n}\n\nexport function useWalletModalToggle(): () => void {\n  const dispatch = useDispatch()\n  return useCallback(() => dispatch(toggleWalletModal()), [dispatch])\n}\n\nexport function useSettingsMenuOpen(): boolean {\n  return useSelector((state: AppState) => state.application.settingsMenuOpen)\n}\n\nexport function useToggleSettingsMenu(): () => void {\n  const dispatch = useDispatch()\n  return useCallback(() => dispatch(toggleSettingsMenu()), [dispatch])\n}\n\n// returns a function that allows adding a popup\nexport function useAddPopup(): (content: PopupContent, key?: string) => void {\n  const dispatch = useDispatch()\n\n  return useCallback(\n    (content: PopupContent, key?: string) => {\n      dispatch(addPopup({ content, key }))\n    },\n    [dispatch]\n  )\n}\n\n// returns a function that allows removing a popup via its key\nexport function useRemovePopup(): (key: string) => void {\n  const dispatch = useDispatch()\n  return useCallback(\n    (key: string) => {\n      dispatch(removePopup({ key }))\n    },\n    [dispatch]\n  )\n}\n\n// get the list of active popups\nexport function useActivePopups(): AppState['application']['popupList'] {\n  const list = useSelector((state: AppState) => state.application.popupList)\n  return useMemo(() => list.filter(item => item.show), [list])\n}\n","import { Profile } from 'state/types'\n\nexport type ProfileResponse = {\n  0: string\n  1: string\n  2: string\n  3: string\n  4: string\n  5: boolean\n}\n\nexport const transformProfileResponse = (profileResponse: ProfileResponse): Partial<Profile> => {\n  const { 0: userId, 1: numberPoints, 2: teamId, 3: nftAddress, 4: tokenId, 5: isActive } = profileResponse\n\n  return {\n    userId: Number(userId),\n    points: Number(numberPoints),\n    teamId: Number(teamId),\n    tokenId: Number(tokenId),\n    nftAddress,\n    isActive,\n  }\n}\n","import Cookies from 'js-cookie'\nimport { getProfileContract, getPancakeRabbitContract } from 'utils/contractHelpers'\nimport { Nft } from 'config/constants/types'\nimport { Profile } from 'state/types'\nimport { getTeam } from 'state/teams/helpers'\nimport nfts from 'config/constants/nfts'\nimport { transformProfileResponse } from './helpers'\n\nconst profileContract = getProfileContract()\nconst rabbitContract = getPancakeRabbitContract()\nconst profileApi = process.env.REACT_APP_API_PROFILE\n\nexport interface GetProfileResponse {\n  hasRegistered: boolean\n  profile?: Profile\n}\n\nconst getUsername = async (address: string): Promise<string> => {\n  try {\n    const response = await fetch(`${profileApi}/api/users/${address}`)\n\n    if (!response.ok) {\n      return ''\n    }\n\n    const { username = '' } = await response.json()\n\n    return username\n  } catch (error) {\n    return ''\n  }\n}\n\nconst getProfile = async (address: string): Promise<GetProfileResponse> => {\n  try {\n    const hasRegistered = (await profileContract.methods.hasRegistered(address).call()) as boolean\n\n    if (!hasRegistered) {\n      return { hasRegistered, profile: null }\n    }\n\n    const profileResponse = await profileContract.methods.getUserProfile(address).call()\n    const { userId, points, teamId, tokenId, nftAddress, isActive } = transformProfileResponse(profileResponse)\n    const team = await getTeam(teamId)\n    const username = await getUsername(address)\n\n    // If the profile is not active the tokenId returns 0, which is still a valid token id\n    // so only fetch the nft data if active\n    let nft: Nft\n    if (isActive) {\n      const bunnyId = await rabbitContract.methods.getBunnyId(tokenId).call()\n      nft = nfts.find((nftItem) => nftItem.bunnyId === Number(bunnyId))\n\n      // Save the preview image in a cookie so it can be used on the exchange\n      Cookies.set(\n        `profile_${address}`,\n        {\n          username,\n          avatar: `https://pancakeswap.finance/images/nfts/${nft.images.sm}`,\n        },\n        { domain: 'pancakeswap.finance', secure: true, expires: 30 },\n      )\n    }\n\n    const profile = {\n      userId,\n      points,\n      teamId,\n      tokenId,\n      username,\n      nftAddress,\n      isActive,\n      nft,\n      team,\n    } as Profile\n\n    return { hasRegistered, profile }\n  } catch (error) {\n    return null\n  }\n}\n\nexport default getProfile\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { ProfileState } from 'state/types'\nimport getProfile, { GetProfileResponse } from './getProfile'\n\nconst initialState: ProfileState = {\n  isInitialized: false,\n  isLoading: true,\n  hasRegistered: false,\n  data: null,\n}\n\nexport const profileSlice = createSlice({\n  name: 'profile',\n  initialState,\n  reducers: {\n    profileFetchStart: (state) => {\n      state.isLoading = true\n    },\n    profileFetchSucceeded: (state, action: PayloadAction<GetProfileResponse>) => {\n      const { profile, hasRegistered } = action.payload\n\n      return {\n        isInitialized: true,\n        isLoading: false,\n        hasRegistered,\n        data: profile,\n      }\n    },\n    profileFetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    addPoints: (state, action: PayloadAction<number>) => {\n      state.data.points += action.payload\n    },\n  },\n})\n\n// Actions\nexport const { profileFetchStart, profileFetchSucceeded, profileFetchFailed, addPoints } = profileSlice.actions\n\n// Thunks\nexport const fetchProfile = (address: string) => async (dispatch) => {\n  try {\n    dispatch(profileFetchStart())\n    const response = await getProfile(address)\n    dispatch(profileFetchSucceeded(response))\n  } catch (error) {\n    dispatch(profileFetchFailed())\n  }\n}\n\nexport default profileSlice.reducer\n","/* eslint-disable no-param-reassign */\nimport { Toast } from '@luckyswap/uikit'\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { ToastsState } from '../types'\n\nconst initialState: ToastsState = {\n  data: [],\n}\n\nexport const toastsSlice = createSlice({\n  name: 'toasts',\n  initialState,\n  reducers: {\n    push: (state: ToastsState, action: PayloadAction<Toast>) => {\n      const { payload } = action\n      const toastIndex = state.data.findIndex((toast) => toast.id === action.payload.id)\n\n      // If id already matches remove it before adding it to the top of the stack\n      if (toastIndex >= 0) {\n        state.data.splice(toastIndex, 1)\n      }\n\n      state.data.unshift(payload)\n    },\n    remove: (state: ToastsState, action: PayloadAction<string>) => {\n      const toastIndex = state.data.findIndex((toast) => toast.id === action.payload)\n\n      if (toastIndex >= 0) {\n        state.data.splice(toastIndex, 1)\n      }\n    },\n    clear: (state: ToastsState) => {\n      state.data = []\n    },\n  },\n})\n\n// Actions\nexport const { clear, remove, push } = toastsSlice.actions\n\nexport default toastsSlice.reducer\n","export { fetchFarmsPublicDataAsync, fetchFarmUserDataAsync } from './farms'\nexport { clear, remove, push } from './toasts'\nexport {\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n  updateUserAllowance,\n  updateUserBalance,\n  updateUserPendingReward,\n  updateUserStakedBalance,\n} from './pools'\nexport { profileFetchStart, profileFetchSucceeded, profileFetchFailed } from './profile'\nexport { fetchStart, teamFetchSucceeded, fetchFailed, teamsFetchSucceeded } from './teams'\nexport { setBlock } from './block'\n","import random from 'lodash/random'\n\n// Array of available nodes to connect to\nexport const nodes = [process.env.REACT_APP_NODE_1, process.env.REACT_APP_NODE_2, process.env.REACT_APP_NODE_3]\n\nconst getNodeUrl = () => {\n  const randomIndex = random(0, nodes.length - 1)\n  return nodes[randomIndex]\n}\n\nexport default getNodeUrl\n","import BigNumber from 'bignumber.js'\nimport erc20 from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport farmsConfig from 'config/constants/farms'\n\nconst fetchFarms = async () => {\n  const data = await Promise.all(\n    farmsConfig.map(async (farmConfig) => {\n      const lpAddress = getAddress(farmConfig.lpAddresses)\n      const calls = [\n        // Balance of token in the LP contract\n        {\n          address: getAddress(farmConfig.token.address),\n          name: 'balanceOf',\n          params: [lpAddress],\n        },\n        // Balance of quote token on LP contract\n        {\n          address: getAddress(farmConfig.quoteToken.address),\n          name: 'balanceOf',\n          params: [lpAddress],\n        },\n        // Balance of LP tokens in the master chef contract\n        {\n          address: lpAddress,\n          name: 'balanceOf',\n          params: [getMasterChefAddress()],\n        },\n        // Total supply of LP tokens\n        {\n          address: lpAddress,\n          name: 'totalSupply',\n        },\n        // Token decimals\n        {\n          address: getAddress(farmConfig.token.address),\n          name: 'decimals',\n        },\n        // Quote token decimals\n        {\n          address: getAddress(farmConfig.quoteToken.address),\n          name: 'decimals',\n        },\n      ]\n\n      const [\n        tokenBalanceLP,\n        quoteTokenBalanceLP,\n        lpTokenBalanceMC,\n        lpTotalSupply,\n        tokenDecimals,\n        quoteTokenDecimals,\n      ] = await multicall(erc20, calls)\n\n      // Ratio in % a LP tokens that are in staking, vs the total number in circulation\n      const lpTokenRatio = new BigNumber(lpTokenBalanceMC).div(new BigNumber(lpTotalSupply))\n\n      // Total value in staking in quote token value\n      const lpTotalInQuoteToken = new BigNumber(quoteTokenBalanceLP)\n        .div(new BigNumber(10).pow(18))\n        .times(new BigNumber(2))\n        .times(lpTokenRatio)\n\n      // Amount of token in the LP that are considered staking (i.e amount of token * lp ratio)\n      const tokenAmount = new BigNumber(tokenBalanceLP).div(new BigNumber(10).pow(tokenDecimals)).times(lpTokenRatio)\n      const quoteTokenAmount = new BigNumber(quoteTokenBalanceLP)\n        .div(new BigNumber(10).pow(quoteTokenDecimals))\n        .times(lpTokenRatio)\n\n      const [info, totalAllocPoint] = await multicall(masterchefABI, [\n        {\n          address: getMasterChefAddress(),\n          name: 'poolInfo',\n          params: [farmConfig.pid],\n        },\n        {\n          address: getMasterChefAddress(),\n          name: 'totalAllocPoint',\n        },\n      ])\n\n      const allocPoint = new BigNumber(info.allocPoint._hex)\n      const poolWeight = allocPoint.div(new BigNumber(totalAllocPoint))\n\n      return {\n        ...farmConfig,\n        tokenAmount: tokenAmount.toJSON(),\n        quoteTokenAmount: quoteTokenAmount.toJSON(),\n        lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\n        tokenPriceVsQuote: quoteTokenAmount.div(tokenAmount).toJSON(),\n        poolWeight: poolWeight.toJSON(),\n        multiplier: `${allocPoint.div(100).toString()}X`,\n      }\n    }),\n  )\n  return data\n}\n\nexport default fetchFarms\n","import BigNumber from 'bignumber.js'\nimport erc20ABI from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport farmsConfig from 'config/constants/farms'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\n\nexport const fetchFarmUserAllowances = async (account: string) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsConfig.map((farm) => {\n    const lpContractAddress = getAddress(farm.lpAddresses)\n    return { address: lpContractAddress, name: 'allowance', params: [account, masterChefAddress] }\n  })\n\n  const rawLpAllowances = await multicall(erc20ABI, calls)\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\n    return new BigNumber(lpBalance).toJSON()\n  })\n  return parsedLpAllowances\n}\n\nexport const fetchFarmUserTokenBalances = async (account: string) => {\n  const calls = farmsConfig.map((farm) => {\n    const lpContractAddress = getAddress(farm.lpAddresses)\n    return {\n      address: lpContractAddress,\n      name: 'balanceOf',\n      params: [account],\n    }\n  })\n\n  const rawTokenBalances = await multicall(erc20ABI, calls)\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\n    return new BigNumber(tokenBalance).toJSON()\n  })\n  return parsedTokenBalances\n}\n\nexport const fetchFarmUserStakedBalances = async (account: string) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsConfig.map((farm) => {\n    return {\n      address: masterChefAddress,\n      name: 'userInfo',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawStakedBalances = await multicall(masterchefABI, calls)\n  const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => {\n    return new BigNumber(stakedBalance[0]._hex).toJSON()\n  })\n  return parsedStakedBalances\n}\n\nexport const fetchFarmUserEarnings = async (account: string) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsConfig.map((farm) => {\n    return {\n      address: masterChefAddress,\n      name: 'pendingCake',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawEarnings = await multicall(masterchefABI, calls)\n  const parsedEarnings = rawEarnings.map((earnings) => {\n    return new BigNumber(earnings).toJSON()\n  })\n  return parsedEarnings\n}\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit'\nimport farmsConfig from 'config/constants/farms'\nimport fetchFarms from './fetchFarms'\nimport {\n  fetchFarmUserEarnings,\n  fetchFarmUserAllowances,\n  fetchFarmUserTokenBalances,\n  fetchFarmUserStakedBalances,\n} from './fetchFarmUser'\nimport { FarmsState, Farm } from '../types'\n\nconst initialState: FarmsState = { data: [...farmsConfig] }\n\nexport const farmsSlice = createSlice({\n  name: 'Farms',\n  initialState,\n  reducers: {\n    setFarmsPublicData: (state, action) => {\n      const liveFarmsData: Farm[] = action.payload\n      state.data = state.data.map((farm) => {\n        const liveFarmData = liveFarmsData.find((f) => f.pid === farm.pid)\n        return { ...farm, ...liveFarmData }\n      })\n    },\n    setFarmUserData: (state, action) => {\n      const { arrayOfUserDataObjects } = action.payload\n      arrayOfUserDataObjects.forEach((userDataEl) => {\n        const { index } = userDataEl\n        state.data[index] = { ...state.data[index], userData: userDataEl }\n      })\n    },\n  },\n})\n\n// Actions\nexport const { setFarmsPublicData, setFarmUserData } = farmsSlice.actions\n\n// Thunks\nexport const fetchFarmsPublicDataAsync = () => async (dispatch) => {\n  const farms = await fetchFarms()\n  dispatch(setFarmsPublicData(farms))\n}\nexport const fetchFarmUserDataAsync = (account) => async (dispatch) => {\n  const userFarmAllowances = await fetchFarmUserAllowances(account)\n  const userFarmTokenBalances = await fetchFarmUserTokenBalances(account)\n  const userStakedBalances = await fetchFarmUserStakedBalances(account)\n  const userFarmEarnings = await fetchFarmUserEarnings(account)\n\n  const arrayOfUserDataObjects = userFarmAllowances.map((farmAllowance, index) => {\n    return {\n      index,\n      allowance: userFarmAllowances[index],\n      tokenBalance: userFarmTokenBalances[index],\n      stakedBalance: userStakedBalances[index],\n      earnings: userFarmEarnings[index],\n    }\n  })\n\n  dispatch(setFarmUserData({ arrayOfUserDataObjects }))\n}\n\nexport default farmsSlice.reducer\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  CURRENCY_A = 'CURRENCY_A',\n  CURRENCY_B = 'CURRENCY_B'\n}\n\nexport const typeInput = createAction<{ field: Field; typedValue: string; noLiquidity: boolean }>('mint/typeInputMint')\nexport const resetMintState = createAction<void>('mint/resetMintState')\n","import { Team } from './types'\n\nconst teams: Team[] = [\n  {\n    id: 1,\n    name: 'Syrup Storm',\n    description: \"The storm's a-comin! Watch out! These bulls are stampeding in a syrupy surge!\",\n    images: {\n      lg: 'syrup-storm-lg.png',\n      md: 'syrup-storm-md.png',\n      sm: 'syrup-storm-sm.png',\n      alt: 'syrup-storm-alt.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/syrup-storm.png',\n    },\n    background: 'syrup-storm-bg.svg',\n    textColor: '#191326',\n    users: 0,\n    points: 0,\n  },\n  {\n    id: 2,\n    name: 'Fearsome Flippers',\n    description: \"The flippening is coming. Don't get in these bunnies' way, or you'll get flipped too!\",\n    images: {\n      lg: 'fearsome-flippers-lg.png',\n      md: 'fearsome-flippers-md.png',\n      sm: 'fearsome-flippers-sm.png',\n      alt: 'fearsome-flippers-alt.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/fearsome-flippers.png',\n    },\n    background: 'fearsome-flippers-bg.svg',\n    textColor: '#FFFFFF',\n    users: 0,\n    points: 0,\n  },\n  {\n    id: 3,\n    name: 'Chaotic Cakers',\n    description: 'Can you stand the heat? Stay out of the kitchen or you might get burned to a crisp!',\n    images: {\n      lg: 'chaotic-cakers-lg.png',\n      md: 'chaotic-cakers-md.png',\n      sm: 'chaotic-cakers-sm.png',\n      alt: 'chaotic-cakers-alt.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/chaotic-cakers.png',\n    },\n    background: 'chaotic-cakers-bg.svg',\n    textColor: '#191326',\n    users: 0,\n    points: 0,\n  },\n]\n\nexport default teams\n","import { TranslatableText } from 'state/types'\n\nexport type IfoStatus = 'idle' | 'coming_soon' | 'live' | 'finished'\n\nexport interface Ifo {\n  id: string\n  isActive: boolean\n  address: string\n  name: string\n  subTitle?: string\n  description?: string\n  launchDate: string\n  launchTime: string\n  saleAmount: string\n  raiseAmount: string\n  cakeToBurn: string\n  projectSiteUrl: string\n  currency: string\n  currencyAddress: string\n  tokenDecimals: number\n  tokenSymbol: string\n  releaseBlockNumber: number\n  campaignId?: string\n}\n\nexport enum PoolCategory {\n  'COMMUNITY' = 'Community',\n  'CORE' = 'Core',\n  'BINANCE' = 'Binance', // Pools using native BNB behave differently than pools using a token\n}\n\nexport interface Address {\n  97?: string\n  56: string\n}\n\nexport interface Token {\n  symbol: string\n  address?: Address\n  decimals?: number\n  projectLink?: string\n}\n\nexport interface FarmConfig {\n  pid: number\n  lpSymbol: string\n  lpAddresses: Address\n  token: Token\n  quoteToken: Token\n  multiplier?: string\n  isCommunity?: boolean\n  dual?: {\n    rewardPerBlock: number\n    earnLabel: string\n    endBlock: number\n  }\n}\n\nexport interface PoolConfig {\n  sousId: number\n  earningToken: Token\n  stakingToken: Token\n  stakingLimit?: number\n  contractAddress: Address\n  poolCategory: PoolCategory\n  tokenPerBlock: string\n  sortOrder?: number\n  harvest?: boolean\n  isFinished?: boolean\n}\n\nexport type Images = {\n  lg: string\n  md: string\n  sm: string\n  ipfs?: string\n}\n\nexport type NftImages = {\n  blur?: string\n} & Images\n\nexport type NftVideo = {\n  webm: string\n  mp4: string\n}\n\nexport type Nft = {\n  name: string\n  description: string\n  images: NftImages\n  sortOrder: number\n  bunnyId: number\n  video?: NftVideo\n}\n\nexport type TeamImages = {\n  alt: string\n} & Images\n\nexport type Team = {\n  id: number\n  name: string\n  description: string\n  isJoinable?: boolean\n  users: number\n  points: number\n  images: TeamImages\n  background: string\n  textColor: string\n}\n\nexport type CampaignType = 'ifo'\n\nexport type Campaign = {\n  id: string\n  type: CampaignType\n  title?: TranslatableText\n  description?: TranslatableText\n  badge?: string\n}\n\nexport type PageMeta = {\n  title: string\n  description: string\n  image: string\n}\n","import merge from 'lodash/merge'\nimport teamsList from 'config/constants/teams'\nimport { getProfileContract } from 'utils/contractHelpers'\nimport { Team } from 'config/constants/types'\nimport makeBatchRequest from 'utils/makeBatchRequest'\nimport { TeamsById, TeamResponse } from 'state/types'\n\nconst profileContract = getProfileContract()\n\nexport const getTeam = async (teamId: number): Promise<Team> => {\n  try {\n    const {\n      0: teamName,\n      2: numberUsers,\n      3: numberPoints,\n      4: isJoinable,\n    } = await profileContract.methods.getTeamProfile(teamId).call()\n    const staticTeamInfo = teamsList.find((staticTeam) => staticTeam.id === teamId)\n\n    return merge({}, staticTeamInfo, {\n      isJoinable,\n      name: teamName,\n      users: numberUsers,\n      points: numberPoints,\n    })\n  } catch (error) {\n    return null\n  }\n}\n\n/**\n * Gets on-chain data and merges it with the existing static list of teams\n */\nexport const getTeams = async (): Promise<TeamsById> => {\n  try {\n    const teamsById = teamsList.reduce((accum, team) => {\n      return {\n        ...accum,\n        [team.id]: team,\n      }\n    }, {})\n    const nbTeams = await profileContract.methods.numberTeams().call()\n    const calls = []\n\n    for (let i = 1; i <= nbTeams; i++) {\n      calls.push(profileContract.methods.getTeamProfile(i).call)\n    }\n\n    const teamData = (await makeBatchRequest(calls)) as TeamResponse[]\n    const onChainTeamData = teamData.reduce((accum, team, index) => {\n      const { 0: teamName, 2: numberUsers, 3: numberPoints, 4: isJoinable } = team\n\n      return {\n        ...accum,\n        [index + 1]: {\n          name: teamName,\n          users: Number(numberUsers),\n          points: Number(numberPoints),\n          isJoinable,\n        },\n      }\n    }, {})\n\n    return merge({}, teamsById, onChainTeamData)\n  } catch (error) {\n    return null\n  }\n}\n","import { Campaign } from './types'\n\n/**\n * id: The campaign id (required)\n * type: The type of the achievement\n * title: A string or an object to be translated.\n * Note: If the value is a string it is likely used as data in a translation object\n *\n * badge: Achievement avatar\n */\n\nconst campaigns: Campaign[] = [\n  {\n    id: '511080000',\n    type: 'ifo',\n    title: 'Belt',\n    badge: 'ifo-belt.svg',\n  },\n  {\n    id: '511070000',\n    type: 'ifo',\n    title: 'Yieldwatch',\n    badge: 'ifo-watch.svg',\n  },\n  {\n    id: '511060000',\n    type: 'ifo',\n    title: 'Berry',\n    badge: 'ifo-bry.svg',\n  },\n  {\n    id: '511050000',\n    type: 'ifo',\n    title: 'Soteria',\n    badge: 'ifo-wsote.svg',\n  },\n  {\n    id: '511040000',\n    type: 'ifo',\n    title: 'Helmet',\n    badge: 'ifo-helmet.svg',\n  },\n  {\n    id: '511030000',\n    type: 'ifo',\n    title: 'Tenet',\n    badge: 'ifo-ten.svg',\n  },\n  {\n    id: '511020000',\n    type: 'ifo',\n    title: 'Ditto',\n    badge: 'ifo-ditto.svg',\n  },\n  {\n    id: '511010000',\n    type: 'ifo',\n    title: 'Blink',\n    badge: 'ifo-blk.svg',\n  },\n]\n\n/**\n * Transform the campaign config into a map. Keeps the config the same\n * as the others and allows easy access to a campaign by id\n */\nexport const campaignMap = new Map<string, Campaign>()\n\ncampaigns.forEach((campaign) => {\n  campaignMap.set(campaign.id, campaign)\n})\n\nexport default campaigns\n","import { InjectedConnector } from '@web3-react/injected-connector'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\nimport { BscConnector } from '@binance-chain/bsc-connector'\nimport { ConnectorNames } from '@luckyswap/uikit'\nimport { Web3Provider } from '@ethersproject/providers'\n\nimport Web3 from 'web3'\nimport getNodeUrl from './getRpcUrl'\n\nconst POLLING_INTERVAL = 12000\nconst rpcUrl = getNodeUrl()\nconst chainId = parseInt(process.env.REACT_APP_CHAIN_ID) || 56\n\nconst injected = new InjectedConnector({ supportedChainIds: [chainId] })\n\nconst walletconnect = new WalletConnectConnector({\n  rpc: { [chainId]: rpcUrl },\n  bridge: 'https://bridge.walletconnect.org',\n  qrcode: true,\n  pollingInterval: POLLING_INTERVAL,\n})\n\nconst bscConnector = new BscConnector({ supportedChainIds: [chainId] })\n\nexport const connectorsByName: { [connectorName in ConnectorNames]: any } = {\n  [ConnectorNames.Injected]: injected,\n  [ConnectorNames.WalletConnect]: walletconnect,\n  [ConnectorNames.BSC]: bscConnector,\n}\n\nexport default function getLibrary(provider: any): Web3Provider {\n  const library = new Web3Provider(provider)\n  library.pollingInterval = 15000\n  return library\n}\n","import { PageMeta } from './types'\n\nexport const DEFAULT_META: PageMeta = {\n  title: 'Lucky Swap | A fully decentralized protocol for automated liquidity provision on both Ethereum/Binance',\n  description:\n    'The most popular AMM on BSC by user count!',\n  image: 'https://Luckyswap.finance/images/easter-battle.png',\n}\n\nexport const customMeta: { [key: string]: PageMeta } = {\n  '/competition': {\n    title: 'Luckyswap Easter Battle',\n    description: 'Register now for the Luckyswap Easter battle!',\n    image: 'https://Luckyswap.finance/images/easter-battle.png',\n  },\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Helmet } from 'react-helmet-async'\nimport { useLocation } from 'react-router'\nimport { customMeta, DEFAULT_META } from 'config/constants/meta'\nimport { usePriceCakeBusd } from 'state/hooks'\nimport Container from './Container'\n\nconst StyledPage = styled(Container)`\n  min-height: calc(100vh - 64px);\n  padding-top: 16px;\n  padding-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-top: 24px;\n    padding-bottom: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    padding-bottom: 32px;\n  }\n`\n\nconst PageMeta = () => {\n  const { pathname } = useLocation()\n  const cakePriceUsd = usePriceCakeBusd()\n  const cakePriceUsdDisplay = cakePriceUsd.eq(0)\n    ? ''\n    : `$${cakePriceUsd.toNumber().toLocaleString(undefined, {\n        minimumFractionDigits: 3,\n        maximumFractionDigits: 3,\n      })}`\n  const pageMeta = customMeta[pathname] || {}\n  const { title, description, image } = { ...DEFAULT_META, ...pageMeta }\n  const pageTitle = cakePriceUsdDisplay ? [title, cakePriceUsdDisplay].join(' - ') : title\n\n  return (\n    <Helmet>\n      <title>{pageTitle}</title>\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:image\" content={image} />\n    </Helmet>\n  )\n}\n\nconst Page: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, ...props }) => {\n  return (\n    <>\n      <PageMeta />\n      <StyledPage {...props}>{children}</StyledPage>\n    </>\n  )\n}\n\nexport default Page\n","import { useContext } from 'react'\nimport { RefreshContext } from 'contexts/RefreshContext'\n\nconst useRefresh = () => {\n  const { fast, slow } = useContext(RefreshContext)\n  return { fastRefresh: fast, slowRefresh: slow }\n}\n\nexport default useRefresh\n","import { getWeb3NoAccount } from './web3'\n\n/**\n * Accepts an array of contract method calls and batches them\n *\n * Example:\n *\n * [\n *  contract.method.balanceOf().call,\n *  contract.method.startBlockNumber().call\n * ]\n */\nconst makeBatchRequest = (calls: any[]) => {\n  try {\n    const web3 = getWeb3NoAccount()\n    const batch = new web3.BatchRequest()\n\n    const promises = calls.map((call) => {\n      return new Promise((resolve, reject) => {\n        batch.add(\n          call.request({}, (err, result) => {\n            if (err) {\n              reject(err)\n            } else {\n              resolve(result)\n            }\n          }),\n        )\n      })\n    })\n\n    batch.execute()\n\n    return Promise.all(promises)\n  } catch {\n    return null\n  }\n}\n\nexport default makeBatchRequest\n","import { Nft } from './types'\n\nconst Nfts: Nft[] = [\n  {\n    name: \"Cakeston Easter '21\",\n    description: 'Melting Easter eggs and melting hearts!',\n    images: {\n      lg: 'cakeston-easter-21-lg.png',\n      md: 'cakeston-easter-21-md.png',\n      sm: 'cakeston-easter-21-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-caker.png',\n    },\n    sortOrder: 999,\n    bunnyId: 14,\n  },\n  {\n    name: \"Flipsie Easter '21\",\n    description: 'Watch out for Flipsie’s spatula smash!',\n    images: {\n      lg: 'flipsie-easter-21-lg.png',\n      md: 'flipsie-easter-21-md.png',\n      sm: 'flipsie-easter-21-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-flipper.png',\n    },\n    sortOrder: 999,\n    bunnyId: 13,\n  },\n  {\n    name: \"Stormy Easter '21\",\n    description: 'Do you like chocolate with your syrup? Go long!',\n    images: {\n      lg: 'stormy-easter-21-lg.png',\n      md: 'stormy-easter-21-md.png',\n      sm: 'stormy-easter-21-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-storm.png',\n    },\n    sortOrder: 999,\n    bunnyId: 12,\n  },\n  {\n    name: 'Bullish',\n    description: 'Happy Niu Year! This bunny’s excited for the year of the bull (market!)',\n    images: {\n      lg: 'bullish-lg.png',\n      md: 'bullish-md.png',\n      sm: 'bullish-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.png',\n    },\n    video: {\n      webm: 'https://gateway.pinata.cloud/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.webm',\n      mp4: 'https://gateway.pinata.cloud/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.mp4',\n    },\n    sortOrder: 999,\n    bunnyId: 11,\n  },\n  {\n    name: 'Hiccup',\n    description: \"Oopsie daisy! Hiccup's had a bit of an accident. Poor little fella.\",\n    images: {\n      lg: 'hiccup-lg.png',\n      md: 'hiccup-md.png',\n      sm: 'hiccup-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmQ6EE6gkVzAQUdQLLM7CyrnME6LZHCoy92ZERW8HXmyjw/hiccup.png',\n    },\n    sortOrder: 999,\n    bunnyId: 10,\n  },\n  {\n    name: 'Sleepy',\n    description: 'Aww, looks like eating pancakes all day is tough work. Sweet dreams!',\n    images: {\n      lg: 'sleepy-lg.png',\n      md: 'sleepy-md.png',\n      sm: 'sleepy-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/sleepy.png',\n      blur: 'sleepy-blur.png',\n    },\n    sortOrder: 999,\n    bunnyId: 5,\n  },\n  {\n    name: 'Sunny',\n    description: 'Sunny is always cheerful when there are pancakes around. Smile!',\n    images: {\n      lg: 'sunny-lg.png',\n      md: 'sunny-md.png',\n      sm: 'sunny-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/sunny.png',\n      blur: 'sunny-blur.png',\n    },\n    sortOrder: 999,\n    bunnyId: 9,\n  },\n  {\n    name: 'Churro',\n    description: \"Don't let that dopey smile deceive you... Churro's a master CAKE chef!\",\n    images: {\n      lg: 'churro-lg.png',\n      md: 'churro-md.png',\n      sm: 'churro-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/churro.png',\n      blur: 'churro-blur.png',\n    },\n    sortOrder: 999,\n    bunnyId: 8,\n  },\n  {\n    name: 'Dollop',\n    description: \"Nommm... Oh hi, I'm just meditating on the meaning of CAKE.\",\n    images: {\n      lg: 'dollop-lg.png',\n      md: 'dollop-md.png',\n      sm: 'dollop-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/dollop.png',\n      blur: 'dollop-blur.png',\n    },\n    sortOrder: 999,\n    bunnyId: 6,\n  },\n  {\n    name: 'Twinkle',\n    description: \"Three guesses what's put that twinkle in those eyes! (Hint: it's CAKE)\",\n    images: {\n      lg: 'twinkle-lg.png',\n      md: 'twinkle-md.png',\n      sm: 'twinkle-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/twinkle.png',\n      blur: 'twinkle-blur.png',\n    },\n    sortOrder: 999,\n    bunnyId: 7,\n  },\n  {\n    name: 'Swapsies',\n    description: 'These bunnies love nothing more than swapping pancakes. Especially on BSC.',\n    images: {\n      lg: 'swapsies-lg.png',\n      md: 'swapsies-md.png',\n      sm: 'swapsies-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/swapsies.png',\n      blur: 'swapsies-blur.png',\n    },\n    sortOrder: 999,\n    bunnyId: 0,\n  },\n  {\n    name: 'Drizzle',\n    description: \"It's raining syrup on this bunny, but he doesn't seem to mind. Can you blame him?\",\n    images: {\n      lg: 'drizzle-lg.png',\n      md: 'drizzle-md.png',\n      sm: 'drizzle-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/drizzle.png',\n      blur: 'drizzle-blur.png',\n    },\n    sortOrder: 999,\n    bunnyId: 1,\n  },\n  {\n    name: 'Blueberries',\n    description: \"These bunnies like their pancakes with blueberries. What's your favorite topping?\",\n    images: {\n      lg: 'blueberries-lg.png',\n      md: 'blueberries-md.png',\n      sm: 'blueberries-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/blueberries.png',\n      blur: 'blueberries-blur.png',\n    },\n    sortOrder: 999,\n    bunnyId: 2,\n  },\n  {\n    name: 'Circular',\n    description: \"Love makes the world go 'round... but so do pancakes. And these bunnies know it.\",\n    images: {\n      lg: 'circular-lg.png',\n      md: 'circular-md.png',\n      sm: 'circular-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/circular.png',\n      blur: 'circular-blur.png',\n    },\n    sortOrder: 999,\n    bunnyId: 3,\n  },\n  {\n    name: 'Sparkle',\n    description: 'It’s sparkling syrup, pancakes, and even lottery tickets! This bunny really loves it.',\n    images: {\n      lg: 'sparkle-lg.png',\n      md: 'sparkle-md.png',\n      sm: 'sparkle-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/sparkle.png',\n      blur: 'sparkle-blur.png',\n    },\n    sortOrder: 999,\n    bunnyId: 4,\n  },\n]\n\nexport default Nfts\n","// Set of helper functions to facilitate wallet setup\n\nimport { nodes } from './getRpcUrl'\n\n/**\n * Prompt the user to add BSC as a network on Metamask, or switch to BSC if the wallet is on a different network\n * @returns {boolean} true if the setup succeeded, false otherwise\n */\nexport const setupNetwork = async () => {\n  const provider = (window as WindowChain).ethereum\n  if (provider) {\n    const chainId = 56\n    try {\n      await provider.request({\n        method: 'wallet_addEthereumChain',\n        params: [\n          {\n            chainId: `0x${chainId.toString(16)}`,\n            chainName: 'Binance Smart Chain Mainnet',\n            nativeCurrency: {\n              name: 'BNB',\n              symbol: 'bnb',\n              decimals: 18,\n            },\n            rpcUrls: nodes,\n            blockExplorerUrls: ['https://testnet.bscscan.com/'],\n          },\n        ],\n      })\n      return true\n    } catch (error) {\n      console.error(error)\n      return false\n    }\n  } else {\n    console.error(\"Can't setup the BSC network on metamask because window.ethereum is undefined\")\n    return false\n  }\n}\n\n/**\n * Prompt the user to add a custom token to metamask\n * @param tokenAddress\n * @param tokenSymbol\n * @param tokenDecimals\n * @param tokenImage\n * @returns {boolean} true if the token has been added, false otherwise\n */\nexport const registerToken = async (\n  tokenAddress: string,\n  tokenSymbol: string,\n  tokenDecimals: number,\n  tokenImage: string,\n) => {\n  const tokenAdded = await (window as WindowChain).ethereum.request({\n    method: 'wallet_watchAsset',\n    params: {\n      type: 'ERC20',\n      options: {\n        address: tokenAddress,\n        symbol: tokenSymbol,\n        decimals: tokenDecimals,\n        image: tokenImage,\n      },\n    },\n  })\n\n  return tokenAdded\n}\n","import { useCallback } from 'react'\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\nimport { NoBscProviderError } from '@binance-chain/bsc-connector'\nimport {\n  NoEthereumProviderError,\n  UserRejectedRequestError as UserRejectedRequestErrorInjected,\n} from '@web3-react/injected-connector'\nimport {\n  UserRejectedRequestError as UserRejectedRequestErrorWalletConnect,\n  WalletConnectConnector,\n} from '@web3-react/walletconnect-connector'\nimport { ConnectorNames, connectorLocalStorageKey } from '@luckyswap/uikit'\nimport { useToast } from 'state/hooks'\nimport { connectorsByName } from 'utils/web3React'\nimport { setupNetwork } from 'utils/wallet'\n\nconst useAuth = () => {\n  const { activate, deactivate } = useWeb3React()\n  const { toastError } = useToast()\n\n  const login = useCallback((connectorID: ConnectorNames) => {\n    const connector = connectorsByName[connectorID]\n    if (connector) {\n      activate(connector, async (error: Error) => {\n        if (error instanceof UnsupportedChainIdError) {\n          const hasSetup = await setupNetwork()\n          if (hasSetup) {\n            activate(connector)\n          }\n        } else {\n          window.localStorage.removeItem(connectorLocalStorageKey)\n          if (error instanceof NoEthereumProviderError || error instanceof NoBscProviderError) {\n            toastError('Provider Error', 'No provider was found')\n          } else if (\n            error instanceof UserRejectedRequestErrorInjected ||\n            error instanceof UserRejectedRequestErrorWalletConnect\n          ) {\n            if (connector instanceof WalletConnectConnector) {\n              const walletConnector = connector as WalletConnectConnector\n              walletConnector.walletConnectProvider = null\n            }\n            toastError('Authorization Error', 'Please authorize to access your account')\n          } else {\n            toastError(error.name, error.message)\n          }\n        }\n      })\n    } else {\n      toastError(\"Can't find connector\", 'The connector config is wrong')\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return { login, logout: deactivate }\n}\n\nexport default useAuth\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  INPUT = 'INPUT',\n  OUTPUT = 'OUTPUT'\n}\n\nexport const selectCurrency = createAction<{ field: Field; currencyId: string }>('swap/selectCurrency')\nexport const switchCurrencies = createAction<void>('swap/switchCurrencies')\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('swap/typeInput')\nexport const replaceSwapState = createAction<{\n  field: Field\n  typedValue: string\n  inputCurrencyId?: string\n  outputCurrencyId?: string\n  recipient: string | null\n}>('swap/replaceSwapState')\nexport const setRecipient = createAction<{ recipient: string | null }>('swap/setRecipient')\n","import { Ifo } from './types'\n\nconst ifos: Ifo[] = [\n  {\n    id: 'belt',\n    address: '0xc9FBedC033a1c479a6AD451ffE463025E92a1d38',\n    isActive: true,\n    name: 'Belt (BELT)',\n    subTitle: 'AMM protocol incorporating multi-strategy yield optimization',\n    description:\n      'Belt.fi is a protocol that allows users to retain the stability of their asset positions and get maximum yields with minimal risk, including automated vault compounding and yield optimization strategies. BELT is the governance and incentivization token of Belt Finance. BELT will be distributed to all types of pools.',\n    launchDate: 'Mar. 10',\n    launchTime: '5PM SGT',\n    saleAmount: '150,000 BELT',\n    raiseAmount: '$3,000,000',\n    cakeToBurn: '$1,500,000',\n    projectSiteUrl: 'https://beta.belt.fi/',\n    currency: 'BESWAP-BNB LP',\n    currencyAddress: '0xA527a61703D82139F8a06Bc30097cC9CAA2df5A6',\n    tokenDecimals: 18,\n    tokenSymbol: 'BELT',\n    releaseBlockNumber: 5493919,\n    campaignId: '511080000',\n  },\n  {\n    id: 'watch',\n    address: '0x55344b55C71Ad8834C397E6e08dF5195cF84fe6d',\n    isActive: false,\n    name: 'Yieldwatch (WATCH)',\n    subTitle: 'A smart yield farming dashboard on BSC',\n    description:\n      'Yieldwatch is a smart yield farming dashboard on Binance Smart Chain that lets you monitor your liquidity pools, yield farming and token staking performance with fast and casual UI. The $WATCH token is a membership token, which is required to access advanced PRO features.',\n    launchDate: 'Mar. 4',\n    launchTime: '5PM SGT',\n    saleAmount: '8,000,000 WATCH',\n    raiseAmount: '$800,000',\n    cakeToBurn: '$400,000',\n    projectSiteUrl: 'https://yieldwatch.net/',\n    currency: 'BESWAP-BNB LP',\n    currencyAddress: '0xA527a61703D82139F8a06Bc30097cC9CAA2df5A6',\n    tokenDecimals: 18,\n    tokenSymbol: 'WATCH',\n    releaseBlockNumber: 5294924,\n    campaignId: '511070000',\n  },\n  {\n    id: 'berry',\n    address: '0x5d028cE3435B2bB9AceBfaC599EEbA1ccD63d7dd',\n    isActive: false,\n    name: 'Berry (BRY)',\n    subTitle: 'A decentralized oracle network on BSC',\n    description:\n      'Berry Data is a transparent community-veriﬁed price oracle on BSC. Berry Data provides a trustless and decentralized alternative for off-chain data. As the governance token for Berry Data, BRY allows holders to pay for Berry Data feeds, vote on governance issues, validate data through staking, and build the Berry ecosystem.',\n    launchDate: 'Feb. 16',\n    launchTime: '5PM SGT',\n    saleAmount: '2,000,000 BRY',\n    raiseAmount: '$1,000,000',\n    cakeToBurn: '$500,000',\n    projectSiteUrl: 'https://berrydata.co/',\n    currency: 'BESWAP-BNB LP',\n    currencyAddress: '0xA527a61703D82139F8a06Bc30097cC9CAA2df5A6',\n    tokenDecimals: 18,\n    tokenSymbol: 'BRY',\n    releaseBlockNumber: 4750968,\n    campaignId: '511060000',\n  },\n  {\n    id: 'soteria',\n    address: '0x9C21123D94b93361a29B2C2EFB3d5CD8B17e0A9e',\n    isActive: false,\n    name: 'Soteria (wSOTE)',\n    subTitle: 'A blockchain based mutual to share the risk of DeFi on Binance Smart Chain',\n    description:\n      'Soteria allows users to buy insurance cover to greatly diminish or reduce the financial risk of hacks. It replaces the idea of a traditional insurance company, because it is wholly owned by the members. The model encourages engagement as members receive economic incentives for participating in Risk Assessment, Claims Assessment and Governance.',\n    launchDate: 'Jan. 21',\n    launchTime: '4PM SGT',\n    saleAmount: '1,500,000 wSOTE',\n    raiseAmount: '$525,000',\n    cakeToBurn: '$262,500',\n    projectSiteUrl: 'https://soteria.finance/#/',\n    currency: 'BESWAP-BNB LP',\n    currencyAddress: '0xA527a61703D82139F8a06Bc30097cC9CAA2df5A6',\n    tokenDecimals: 18,\n    tokenSymbol: 'wSOTE',\n    releaseBlockNumber: 4086064,\n    campaignId: '511050000',\n  },\n  {\n    id: 'helmet',\n    address: '0xa32509d760ee47Eb2Be96D338b5d69B5FBa4eFEB',\n    isActive: false,\n    name: 'Helmet.insure (Helmet)',\n    subTitle: 'Crypto-assets insurance trading platform',\n    description:\n      'Helmet is a peer-to-peer insurance protocol written with options trading logic, which allows anyone to create any insurance policy easily in the market. Helmet aims to enable DeFi users to be protected against the risk of price fluctuations by providing price-shield insurance for BSC assets. They provide suppliers with a range of insurance types to sell, giving a variety of hedging strategies to the market.',\n    launchDate: 'Jan. 13',\n    launchTime: '5PM SGT',\n    saleAmount: '10,000,000 Helmet',\n    raiseAmount: '$1,000,000',\n    cakeToBurn: '$500,000',\n    projectSiteUrl: 'https://www.helmet.insure/',\n    currency: 'BESWAP-BNB LP',\n    currencyAddress: '0xA527a61703D82139F8a06Bc30097cC9CAA2df5A6',\n    tokenDecimals: 18,\n    tokenSymbol: 'Helmet',\n    releaseBlockNumber: 3771926,\n    campaignId: '511040000',\n  },\n  {\n    id: 'tenet',\n    address: '0xB922aA19A2603A07C6C9ED6c236618C9bac51f06',\n    isActive: false,\n    name: 'Tenet (TEN)',\n    subTitle: 'Cross-chain Automated Market Maker',\n    description:\n      'Tenet is a cross-chain Automated Market Maker (AMM) connector that provides a decentralized Liquidity Tap for various tokens. The Liquidity Tap is the powerhouse of the Liquidity Pool, employing a dynamic algorithm to give the Liquidity Provider fairer, more efficient, and richer incentives. Tenet aims to build a cross-chain and cross-platform toolkit protocol that allows the demand side to customize the parameters of the liquidity tap, allowing them to reach out to more liquidity participants effectively and with relative ease.',\n    launchDate: 'Jan. 5',\n    launchTime: '3PM SGT',\n    saleAmount: '1,000,000 TEN',\n    raiseAmount: '$1,000,000',\n    cakeToBurn: '$500,000',\n    projectSiteUrl: 'https://www.tenet.farm/',\n    currency: 'BESWAP-BNB LP',\n    currencyAddress: '0xA527a61703D82139F8a06Bc30097cC9CAA2df5A6',\n    tokenDecimals: 18,\n    tokenSymbol: 'TEN',\n    releaseBlockNumber: 3483883,\n    campaignId: '511030000',\n  },\n  {\n    id: 'ditto',\n    address: '0x570c9eB19553526Fb35895a531928E19C7D20788',\n    isActive: false,\n    name: 'Ditto (DITTO)',\n    subTitle: 'Next-gen elastic supply token',\n    description:\n      'Ditto is the first elastic supply token on the Binance Smart Chain. Its goal is to maintain a stable price of $1, where its supply will adapt to changes in demand. All supply changes will apply equally to every wallet holding Ditto, and holders should always have the same % of the total supply',\n    launchDate: 'Dec. 23',\n    launchTime: '3PM SGT',\n    saleAmount: '700,000 DITTO',\n    raiseAmount: '$630,000',\n    cakeToBurn: '$315,000',\n    projectSiteUrl: 'https://ditto.money/',\n    currency: 'BESWAP-BNB LP',\n    currencyAddress: '0xA527a61703D82139F8a06Bc30097cC9CAA2df5A6',\n    tokenDecimals: 9,\n    tokenSymbol: 'DITTO',\n    releaseBlockNumber: 3279767,\n    campaignId: '511020000',\n  },\n  {\n    id: 'blink',\n    address: '0x44a9Cc8463EC00937242b660BF65B10365d99baD',\n    isActive: false,\n    name: 'BLINk (BLK)',\n    subTitle: 'Online games on BSC',\n    description:\n      'BLINk enables BNB holders to enjoy gaming experiences that WINk users on Tron have been enjoying for over two years.',\n    launchDate: 'Nov. 20',\n    launchTime: '9PM SGT',\n    saleAmount: '100,000,000 BLINK',\n    raiseAmount: '$1,000,000',\n    cakeToBurn: '$500,000',\n    projectSiteUrl: 'https://blink.wink.org',\n    currency: 'BESWAP-BNB LP',\n    currencyAddress: '0xA527a61703D82139F8a06Bc30097cC9CAA2df5A6',\n    tokenDecimals: 6,\n    tokenSymbol: 'blink',\n    releaseBlockNumber: 3279767,\n    campaignId: '511010000',\n  },\n]\n\nexport default ifos\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { BlockState } from '../types'\n\nconst initialState: BlockState = { currentBlock: 0, initialBlock: 0 }\n\nexport const blockSlice = createSlice({\n  name: 'Block',\n  initialState,\n  reducers: {\n    setBlock: (state, action: PayloadAction<number>) => {\n      if (state.initialBlock === 0) {\n        state.initialBlock = action.payload\n      }\n\n      state.currentBlock = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { setBlock } = blockSlice.actions\n\nexport default blockSlice.reducer\n","import { request, gql } from 'graphql-request'\nimport { campaignMap } from 'config/constants/campaigns'\nimport { Achievement } from 'state/types'\nimport { getAchievementTitle, getAchievementDescription } from 'utils/achievements'\n\ninterface UserPointIncreaseEvent {\n  campaignId: string\n  id: string // wallet address\n  points: string\n}\n\nconst profileSubgraphApi = process.env.REACT_APP_SUBGRAPH_PROFILE\n\n/**\n * Gets all user point increase events on the profile filtered by wallet address\n */\nexport const getUserPointIncreaseEvents = async (account: string): Promise<UserPointIncreaseEvent[]> => {\n  try {\n    const data = await request(\n      profileSubgraphApi,\n      gql`\n        {\n          user(id: \"${account.toLowerCase()}\") {\n            points {\n              id\n              campaignId\n              points\n            }\n          }\n        }\n      `,\n    )\n    return data.user.points\n  } catch (error) {\n    return null\n  }\n}\n\n/**\n * Gets all user point increase events and adds achievement meta\n */\nexport const getAchievements = async (account: string): Promise<Achievement[]> => {\n  const pointIncreaseEvents = await getUserPointIncreaseEvents(account)\n\n  if (!pointIncreaseEvents) {\n    return []\n  }\n\n  return pointIncreaseEvents.reduce((accum, userPoint) => {\n    const campaignMeta = campaignMap.get(userPoint.campaignId)\n\n    return [\n      ...accum,\n      {\n        id: userPoint.campaignId,\n        type: campaignMeta.type,\n        address: userPoint.id,\n        title: getAchievementTitle(campaignMeta),\n        description: getAchievementDescription(campaignMeta),\n        badge: campaignMeta.badge,\n        points: Number(userPoint.points),\n      },\n    ]\n  }, [])\n}\n","/* eslint-disable no-param-reassign */\nimport { toastTypes } from '@luckyswap/uikit'\nimport { createSlice, Dispatch, PayloadAction } from '@reduxjs/toolkit'\nimport { kebabCase } from 'lodash'\nimport { push } from 'state/toasts'\nimport { AchievementState, Achievement } from '../types'\nimport { getAchievements } from './helpers'\n\nconst initialState: AchievementState = {\n  data: [],\n}\n\nexport const achievementSlice = createSlice({\n  name: 'achievements',\n  initialState,\n  reducers: {\n    addAchievement: (state, action: PayloadAction<Achievement>) => {\n      state.data.push(action.payload)\n    },\n    addAchievements: (state, action: PayloadAction<Achievement[]>) => {\n      state.data = [...state.data, ...action.payload]\n    },\n    setAchievements: (state, action: PayloadAction<Achievement[]>) => {\n      state.data = action.payload\n    },\n    clearAchievements: (state) => {\n      state.data = []\n    },\n  },\n})\n\n// Actions\nexport const { addAchievement, addAchievements, setAchievements, clearAchievements } = achievementSlice.actions\n\n// Thunks\nexport const fetchAchievements = (account: string) => async (dispatch: Dispatch) => {\n  try {\n    const achievements = await getAchievements(account)\n    dispatch(setAchievements(achievements))\n  } catch (error) {\n    console.error(error)\n    const title = 'Error fetching achievements'\n    dispatch(push({ id: kebabCase(title), type: toastTypes.DANGER, title }))\n  }\n}\n\nexport default achievementSlice.reducer\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { PriceApiResponse, PriceApiThunk, PriceState } from 'state/types'\n\nconst initialState: PriceState = {\n  isLoading: false,\n  lastUpdated: null,\n  data: null,\n}\n\n// Thunks\nexport const fetchPrices = createAsyncThunk<PriceApiThunk>('prices/fetch', async () => {\n  const response = await fetch('https://api.pancakeswap.info/api/tokens')\n  const data = (await response.json()) as PriceApiResponse\n\n  // Return normalized token names\n  return {\n    updated_at: data.updated_at,\n    data: Object.keys(data.data).reduce((accum, token) => {\n      return {\n        ...accum,\n        [token.toLowerCase()]: parseFloat(data.data[token].price),\n      }\n    }, {}),\n  }\n})\n\nexport const pricesSlice = createSlice({\n  name: 'prices',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(fetchPrices.pending, (state) => {\n      state.isLoading = true\n    })\n    builder.addCase(fetchPrices.fulfilled, (state, action: PayloadAction<PriceApiThunk>) => {\n      state.isLoading = false\n      state.lastUpdated = action.payload.updated_at\n      state.data = action.payload.data\n    })\n  },\n})\n\nexport default pricesSlice.reducer\n","import React, { useState, useEffect } from 'react'\n\nconst FAST_INTERVAL = 10000\nconst SLOW_INTERVAL = 60000\n\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\n\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\nconst RefreshContextProvider = ({ children }) => {\n  const [slow, setSlow] = useState(0)\n  const [fast, setFast] = useState(0)\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      setFast((prev) => prev + 1)\n    }, FAST_INTERVAL)\n    return () => clearInterval(interval)\n  }, [])\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      setSlow((prev) => prev + 1)\n    }, SLOW_INTERVAL)\n    return () => clearInterval(interval)\n  }, [])\n\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\n}\n\nexport { RefreshContext, RefreshContextProvider }\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  LIQUIDITY_PERCENT = 'LIQUIDITY_PERCENT',\n  LIQUIDITY = 'LIQUIDITY',\n  CURRENCY_A = 'CURRENCY_A',\n  CURRENCY_B = 'CURRENCY_B'\n}\n\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('burn/typeInputBurn')\n","import React, { createContext } from 'react'\n\nexport interface TranslationState {\n  translations: Array<any>\n  setTranslations: React.Dispatch<React.SetStateAction<Array<any>>>\n}\n\nconst defaultTranslationState: TranslationState = {\n  translations: [],\n  setTranslations: (): void => undefined,\n}\n\nexport const TranslationsContext = createContext(defaultTranslationState as TranslationState)\n","import React, { useState } from 'react'\nimport { ThemeProvider as SCThemeProvider } from 'styled-components'\nimport { light, dark } from '@luckyswap/uikit'\n\nconst CACHE_KEY = 'IS_DARK'\n\nconst ThemeContext = React.createContext({ isDark: null, toggleTheme: () => null })\n\nconst ThemeContextProvider = ({ children }) => {\n  const [isDark, setIsDark] = useState(() => {\n    const isDarkUserSetting = localStorage.getItem(CACHE_KEY)\n    return isDarkUserSetting ? JSON.parse(isDarkUserSetting) : false\n  })\n\n  const toggleTheme = () => {\n    setIsDark((prevState) => {\n      localStorage.setItem(CACHE_KEY, JSON.stringify(!prevState))\n      return !prevState\n    })\n  }\n\n  return (\n    <ThemeContext.Provider value={{ isDark, toggleTheme }}>\n      <SCThemeProvider theme={isDark ? dark : light}>{children}</SCThemeProvider>\n    </ThemeContext.Provider>\n  )\n}\n\nexport { ThemeContext, ThemeContextProvider }\n","import { Interface } from '@ethersproject/abi'\nimport ERC20_ABI from './erc20.json'\nimport ERC20_BYTES32_ABI from './erc20_bytes32.json'\n\nconst ERC20_INTERFACE = new Interface(ERC20_ABI)\n\nexport default ERC20_INTERFACE\nexport { ERC20_ABI, ERC20_BYTES32_ABI }\n","import { Web3Provider } from '@ethersproject/providers'\nimport { ChainId } from '@beswap/sdk'\nimport { useWeb3React as useWeb3ReactCore } from '@web3-react/core'\n// eslint-disable-next-line import/no-unresolved\nimport { Web3ReactContextInterface } from '@web3-react/core/dist/types'\nimport { useEffect, useState } from 'react'\nimport { isMobile } from 'react-device-detect'\nimport { injected } from '../connectors'\nimport { NetworkContextName } from '../constants'\n\nexport function useActiveWeb3React(): Web3ReactContextInterface<Web3Provider> & { chainId?: ChainId } {\n  const context = useWeb3ReactCore<Web3Provider>()\n  const contextNetwork = useWeb3ReactCore<Web3Provider>(NetworkContextName)\n  return context.active ? context : contextNetwork\n}\n\nexport function useEagerConnect() {\n  const { activate, active } = useWeb3ReactCore() // specifically using useWeb3ReactCore because of what this hook does\n  const [tried, setTried] = useState(false)\n\n  useEffect(() => {\n    injected.isAuthorized().then((isAuthorized) => {\n      const hasSignedIn = window.localStorage.getItem('accountStatus')\n      if (isAuthorized && hasSignedIn) {\n        activate(injected, undefined, true).catch(() => {\n          setTried(true)\n        })\n      } else if (isMobile && window.ethereum && hasSignedIn) {\n        activate(injected, undefined, true).catch(() => {\n          setTried(true)\n        })\n      } else {\n        setTried(true)\n      }\n    })\n  }, [activate]) // intentionally only running on mount (make sure it's only mounted once :))\n\n  // if the connection worked, wait until we get confirmation of that to flip the flag\n  useEffect(() => {\n    if (active) {\n      setTried(true)\n    }\n  }, [active])\n\n  return tried\n}\n\n/**\n * Use for network and injected - logs user in\n * and out after checking what network theyre on\n */\nexport function useInactiveListener(suppress = false) {\n  const { active, error, activate } = useWeb3ReactCore() // specifically using useWeb3React because of what this hook does\n\n  useEffect(() => {\n    const { ethereum } = window\n\n    if (ethereum && ethereum.on && !active && !error && !suppress) {\n      const handleChainChanged = () => {\n        // eat errors\n        activate(injected, undefined, true).catch((e) => {\n          console.error('Failed to activate after chain changed', e)\n        })\n      }\n\n      const handleAccountsChanged = (accounts: string[]) => {\n        if (accounts.length > 0) {\n          // eat errors\n          activate(injected, undefined, true).catch((e) => {\n            console.error('Failed to activate after accounts changed', e)\n          })\n        }\n      }\n\n      ethereum.on('chainChanged', handleChainChanged)\n      ethereum.on('accountsChanged', handleAccountsChanged)\n\n      return () => {\n        if (ethereum.removeListener) {\n          ethereum.removeListener('chainChanged', handleChainChanged)\n          ethereum.removeListener('accountsChanged', handleAccountsChanged)\n        }\n      }\n    }\n    return undefined\n  }, [active, error, suppress, activate])\n}\n","import { Contract } from '@ethersproject/contracts'\nimport { getAddress } from '@ethersproject/address'\nimport { AddressZero } from '@ethersproject/constants'\nimport { JsonRpcSigner, Web3Provider } from '@ethersproject/providers'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { ChainId, JSBI, Percent, Token, CurrencyAmount, Currency, ETHER } from '@beswap/sdk'\nimport { ROUTER_ADDRESS } from '../constants'\nimport { TokenAddressMap } from '../state/lists/hooks'\nimport { abi as IBeswapRouterV2 } from '../constants/abis/IBeswapRouterV2.json'\n\n// returns the checksummed address if the address is valid, otherwise returns false\nexport function isAddress(value: any): string | false {\n  try {\n    return getAddress(value)\n  } catch {\n    return false\n  }\n}\n\nconst BSCSCAN_PREFIXES: { [chainId in ChainId]: string } = {\n  56: '',\n  97: 'testnet.'\n}\n\nexport function getBscScanLink(chainId: ChainId, data: string, type: 'transaction' | 'token' | 'address'): string {\n  const prefix = `https://${BSCSCAN_PREFIXES[chainId] || BSCSCAN_PREFIXES[ChainId.MAINNET]}bscscan.com`\n\n  switch (type) {\n    case 'transaction': {\n      return `${prefix}/tx/${data}`\n    }\n    case 'token': {\n      return `${prefix}/token/${data}`\n    }\n    case 'address':\n    default: {\n      return `${prefix}/address/${data}`\n    }\n  }\n}\n\n// shorten the checksummed version of the input address to have 0x + 4 characters at start and end\nexport function shortenAddress(address: string, chars = 4): string {\n  const parsed = isAddress(address)\n  if (!parsed) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n  return `${parsed.substring(0, chars + 2)}...${parsed.substring(42 - chars)}`\n}\n\n// add 10%\nexport function calculateGasMargin(value: BigNumber): BigNumber {\n  return value.mul(BigNumber.from(10000).add(BigNumber.from(1000))).div(BigNumber.from(10000))\n}\n\n// converts a basis points value to a sdk percent\nexport function basisPointsToPercent(num: number): Percent {\n  return new Percent(JSBI.BigInt(Math.floor(num)), JSBI.BigInt(10000))\n}\n\nexport function calculateSlippageAmount(value: CurrencyAmount, slippage: number): [JSBI, JSBI] {\n  if (slippage < 0 || slippage > 10000) {\n    throw Error(`Unexpected slippage value: ${slippage}`)\n  }\n  return [\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 - slippage)), JSBI.BigInt(10000)),\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 + slippage)), JSBI.BigInt(10000))\n  ]\n}\n\n// account is not optional\nexport function getSigner(library: Web3Provider, account: string): JsonRpcSigner {\n  return library.getSigner(account).connectUnchecked()\n}\n\n// account is optional\nexport function getProviderOrSigner(library: Web3Provider, account?: string): Web3Provider | JsonRpcSigner {\n  return account ? getSigner(library, account) : library\n}\n\n// account is optional\nexport function getContract(address: string, ABI: any, library: Web3Provider, account?: string): Contract {\n  if (!isAddress(address) || address === AddressZero) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n\n  return new Contract(address, ABI, getProviderOrSigner(library, account) as any)\n}\n\n// account is optional\nexport function getRouterContract(_: number, library: Web3Provider, account?: string): Contract {\n  return getContract(ROUTER_ADDRESS, IBeswapRouterV2, library, account)\n}\n\nexport function escapeRegExp(string: string): string {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') // $& means the whole matched string\n}\n\nexport function isTokenOnList(defaultTokens: TokenAddressMap, currency?: Currency): boolean {\n  if (currency === ETHER) return true\n  return Boolean(currency instanceof Token && defaultTokens[currency.chainId]?.[currency.address])\n}\n","import { Campaign } from 'config/constants/types'\nimport { getPointCenterIfoContract } from 'utils/contractHelpers'\nimport ifosList from 'config/constants/ifo'\nimport { campaignMap } from 'config/constants/campaigns'\nimport { Achievement, TranslatableText } from 'state/types'\nimport makeBatchRequest from './makeBatchRequest'\n\ninterface IfoMapResponse {\n  thresholdToClaim: string\n  campaignId: string\n  numberPoints: string\n}\n\nexport const getAchievementTitle = (campaign: Campaign): TranslatableText => {\n  switch (campaign.type) {\n    case 'ifo':\n      return {\n        id: 999,\n        fallback: `IFO Shopper: ${campaign.title}`,\n        data: {\n          name: campaign.title as string,\n        },\n      }\n    default:\n      return campaign.title\n  }\n}\n\nexport const getAchievementDescription = (campaign: Campaign): TranslatableText => {\n  switch (campaign.type) {\n    case 'ifo':\n      return {\n        id: 999,\n        fallback: `Committed more than $5 worth of LP in the ${campaign.title} IFO`,\n        data: {\n          name: campaign.title as string,\n        },\n      }\n    default:\n      return campaign.description\n  }\n}\n\n/**\n * Checks if a wallet is eligble to claim points from valid IFO's\n */\nexport const getClaimableIfoData = async (account: string): Promise<Achievement[]> => {\n  const ifoCampaigns = ifosList.filter((ifoItem) => ifoItem.campaignId !== undefined)\n  const ifoCampaignAddresses = ifoCampaigns.map((ifoItem) => ifoItem.address)\n  const pointCenterContract = getPointCenterIfoContract()\n\n  // Returns the claim status of every IFO with a campaign ID\n  const claimStatuses = (await pointCenterContract.methods\n    .checkClaimStatuses(account, ifoCampaignAddresses)\n    .call()) as boolean[]\n\n  // Get IFO data for all IFO's that are eligible to claim\n  const claimableIfoData = (await makeBatchRequest(\n    claimStatuses.reduce((accum, claimStatus, index) => {\n      if (claimStatus === true) {\n        return [...accum, pointCenterContract.methods.ifos(ifoCampaignAddresses[index]).call]\n      }\n\n      return accum\n    }, []),\n  )) as IfoMapResponse[]\n\n  // Transform response to an Achievement\n  return claimableIfoData.reduce((accum, claimableIfoDataItem) => {\n    if (!campaignMap.has(claimableIfoDataItem.campaignId)) {\n      return accum\n    }\n\n    const campaignMeta = campaignMap.get(claimableIfoDataItem.campaignId)\n    const { address } = ifoCampaigns.find((ifoCampaign) => ifoCampaign.campaignId === claimableIfoDataItem.campaignId)\n\n    return [\n      ...accum,\n      {\n        address,\n        id: claimableIfoDataItem.campaignId,\n        type: 'ifo',\n        title: getAchievementTitle(campaignMeta),\n        description: getAchievementDescription(campaignMeta),\n        badge: campaignMeta.badge,\n        points: Number(claimableIfoDataItem.numberPoints),\n      },\n    ]\n  }, [])\n}\n","import React, { useEffect, useState } from 'react'\nimport { PromiEvent } from 'web3-core'\nimport { useWeb3React } from '@web3-react/core'\nimport { Contract } from 'web3-eth-contract'\nimport { useProfile } from 'state/hooks'\nimport { useEasterNftContract } from 'hooks/useContract'\nimport NftCard, { NftCardProps } from './index'\n\n/**\n * A map of NFT bunny Ids to Team ids\n * [bunnyId]: teamId\n */\nexport const teamNftMap = {\n  12: 1,\n  13: 2,\n  14: 3,\n}\n\nconst EasterNftCard: React.FC<NftCardProps> = ({ nft, lastUpdated, ...props }) => {\n  const [isClaimable, setIsClaimable] = useState(false)\n  const { account } = useWeb3React()\n  const { profile } = useProfile()\n  const { bunnyId } = nft\n  const { team } = profile ?? {}\n  const easterNftContract = useEasterNftContract()\n\n  const handleClaim = (): PromiEvent<Contract> => {\n    return easterNftContract.methods.mintNFT().send({ from: account })\n  }\n\n  useEffect(() => {\n    const fetchClaimStatus = async () => {\n      const canClaim = await easterNftContract.methods.canClaim(account).call()\n\n      // Wallet can claim if it is claimable and the nft being displayed is mapped to the wallet's team\n      setIsClaimable(canClaim ? team.id === teamNftMap[bunnyId] : false)\n    }\n\n    if (account && team) {\n      fetchClaimStatus()\n    }\n  }, [account, bunnyId, team, lastUpdated, easterNftContract, setIsClaimable])\n\n  return <NftCard nft={nft} lastUpdated={lastUpdated} {...props} canClaim={isClaimable} onClaim={handleClaim} />\n}\n\nexport default EasterNftCard\n","import styled from 'styled-components'\n\nconst Container = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 1200px;\n  padding-left: 16px;\n  padding-right: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-left: 24px;\n    padding-right: 24px;\n  }\n`\n\nexport default Container\n","import farmsConfig from './farms'\n\nconst communityFarms = farmsConfig.filter((farm) => farm.isCommunity).map((farm) => farm.token.symbol)\n\nexport { farmsConfig, communityFarms }\nexport { default as poolsConfig } from './pools'\nexport { default as ifosConfig } from './ifo'\n","import { ChainId, JSBI, Percent, Token, WETH } from '@beswap/sdk'\n\nexport const ROUTER_ADDRESS = '0x35e455f4C6d53461fb741982bFF37b17b22CF5e9'\n\n// a list of tokens by chain\ntype ChainTokenList = {\n  readonly [chainId in ChainId]: Token[]\n}\n\nexport const DAI = new Token(ChainId.MAINNET, '0x1af3f329e8be154074d8769d1ffa4ee058b1dbc3', 18, 'DAI', 'Dai Stablecoin')\nexport const BUSD = new Token(ChainId.MAINNET, '0xe9e7cea3dedca5984780bafc599bd69add087d56', 18, 'BUSD', 'Binance USD')\nexport const USDT = new Token(ChainId.MAINNET, '0x55d398326f99059ff775485246999027b3197955', 18, 'USDT', 'Tether USD')\nexport const UST = new Token(\n  ChainId.MAINNET,\n  '0x23396cf899ca06c4472205fc903bdb4de249d6fc',\n  18,\n  'UST',\n  'Wrapped UST Token'\n)\n\nconst WETH_ONLY: ChainTokenList = {\n  [ChainId.MAINNET]: [WETH[ChainId.MAINNET]],\n  [ChainId.BSCTESTNET]: [WETH[ChainId.BSCTESTNET]],\n}\n\n// used to construct intermediary pairs for trading\nexport const BASES_TO_CHECK_TRADES_AGAINST: ChainTokenList = {\n  ...WETH_ONLY,\n  [ChainId.MAINNET]: [...WETH_ONLY[ChainId.MAINNET], DAI, BUSD, USDT, UST],\n}\n\n/**\n * Some tokens can only be swapped via certain pairs, so we override the list of bases that are considered for these\n * tokens.\n */\nexport const CUSTOM_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MAINNET]: {},\n}\n\n// used for display in the default list when adding liquidity\nexport const SUGGESTED_BASES: ChainTokenList = {\n  ...WETH_ONLY,\n  [ChainId.MAINNET]: [...WETH_ONLY[ChainId.MAINNET], DAI, BUSD, USDT],\n}\n\n// used to construct the list of all pairs we consider by default in the frontend\nexport const BASES_TO_TRACK_LIQUIDITY_FOR: ChainTokenList = {\n  ...WETH_ONLY,\n  [ChainId.MAINNET]: [...WETH_ONLY[ChainId.MAINNET], DAI, BUSD, USDT],\n}\n\nexport const PINNED_PAIRS: { readonly [chainId in ChainId]?: [Token, Token][] } = {\n  [ChainId.MAINNET]: [\n    [\n      new Token(ChainId.MAINNET, '0x43bd1Db5b882b081cCbA03CA26311e3Fa9f69924', 18, 'BSCS', 'BSCSswap-Test Token'),\n      new Token(ChainId.MAINNET, '0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c', 18, 'WBNB', 'Wrapped BNB'),\n    ],\n    [BUSD, USDT],\n    [DAI, USDT],\n  ]\n}\n\nexport const NetworkContextName = 'NETWORK'\n\n// default allowed slippage, in bips\nexport const INITIAL_ALLOWED_SLIPPAGE = 80\n// 20 minutes, denominated in seconds\nexport const DEFAULT_DEADLINE_FROM_NOW = 60 * 20\n\n// one basis point\nexport const ONE_BIPS = new Percent(JSBI.BigInt(1), JSBI.BigInt(10000))\nexport const BIPS_BASE = JSBI.BigInt(10000)\n// used for warning states\nexport const ALLOWED_PRICE_IMPACT_LOW: Percent = new Percent(JSBI.BigInt(100), BIPS_BASE) // 1%\nexport const ALLOWED_PRICE_IMPACT_MEDIUM: Percent = new Percent(JSBI.BigInt(300), BIPS_BASE) // 3%\nexport const ALLOWED_PRICE_IMPACT_HIGH: Percent = new Percent(JSBI.BigInt(500), BIPS_BASE) // 5%\n// if the price slippage exceeds this number, force the user to type 'confirm' to execute\nexport const PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN: Percent = new Percent(JSBI.BigInt(1000), BIPS_BASE) // 10%\n// for non expert mode disable swaps above this\nexport const BLOCKED_PRICE_IMPACT_NON_EXPERT: Percent = new Percent(JSBI.BigInt(1500), BIPS_BASE) // 15%\n\n// used to ensure the user doesn't send so much ETH so they end up with <.01\nexport const MIN_ETH: JSBI = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(16)) // .01 ETH\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Spinner } from '@luckyswap/uikit'\nimport Page from './layout/Page'\n\nconst Wrapper = styled(Page)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst PageLoader: React.FC = () => {\n  return (\n    <Wrapper>\n      <Spinner />\n    </Wrapper>\n  )\n}\n\nexport default PageLoader\n","import { createBrowserHistory } from 'history'\n\n// Manually create the history object so we can access outside the Router e.g. in modals\nconst history = createBrowserHistory()\n\nexport default history\n","import styled from 'styled-components'\n\nconst InfoRow = styled.div`\n  align-items: center;\n  display: flex;\n  justify-content: space-between;\n`\n\nexport default InfoRow\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport Web3 from 'web3'\nimport { useWeb3React } from '@web3-react/core'\nimport { Button, Input, Modal, Text } from '@luckyswap/uikit'\nimport { useToast } from 'state/hooks'\nimport { Nft } from 'config/constants/types'\nimport useI18n from 'hooks/useI18n'\nimport { usePancakeRabbits } from 'hooks/useContract'\nimport InfoRow from './InfoRow'\n\ninterface TransferNftModalProps {\n  nft: Nft\n  tokenIds: number[]\n  onSuccess: () => any\n  onDismiss?: () => void\n}\n\nconst Value = styled(Text)`\n  font-weight: 600;\n`\n\nconst ModalContent = styled.div`\n  margin-bottom: 16px;\n`\n\nconst Actions = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-gap: 8px;\n`\n\nconst Label = styled.label`\n  color: ${({ theme }) => theme.colors.text};\n  display: block;\n  margin-bottom: 8px;\n  margin-top: 24px;\n`\n\nconst TransferNftModal: React.FC<TransferNftModalProps> = ({ nft, tokenIds, onSuccess, onDismiss }) => {\n  const [isLoading, setIsLoading] = useState(false)\n  const [value, setValue] = useState('')\n  const [error, setError] = useState(null)\n  const TranslateString = useI18n()\n  const { account } = useWeb3React()\n  const pancakeRabbitsContract = usePancakeRabbits()\n  const { toastSuccess } = useToast()\n\n  const handleConfirm = async () => {\n    try {\n      const isValidAddress = Web3.utils.isAddress(value)\n\n      if (!isValidAddress) {\n        setError(TranslateString(999, 'Please enter a valid wallet address'))\n      } else {\n        await pancakeRabbitsContract.methods\n          .transferFrom(account, value, tokenIds[0])\n          .send({ from: account })\n          .on('sending', () => {\n            setIsLoading(true)\n          })\n          .on('receipt', () => {\n            onDismiss()\n            onSuccess()\n            toastSuccess('NFT successfully transferred!')\n          })\n          .on('error', () => {\n            console.error(error)\n            setError('Unable to transfer NFT')\n            setIsLoading(false)\n          })\n      }\n    } catch (err) {\n      console.error('Unable to transfer NFT:', err)\n    }\n  }\n\n  const handleChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\n    const { value: inputValue } = evt.target\n    setValue(inputValue)\n  }\n\n  return (\n    <Modal title={TranslateString(999, 'Transfer NFT')} onDismiss={onDismiss}>\n      <ModalContent>\n        {error && (\n          <Text color=\"failure\" mb=\"8px\">\n            {error}\n          </Text>\n        )}\n        <InfoRow>\n          <Text>{TranslateString(999, 'Transferring')}:</Text>\n          <Value>{`1x \"${nft.name}\" NFT`}</Value>\n        </InfoRow>\n        <Label htmlFor=\"transferAddress\">{TranslateString(999, 'Receiving address')}:</Label>\n        <Input\n          id=\"transferAddress\"\n          name=\"address\"\n          type=\"text\"\n          placeholder={TranslateString(999, 'Paste address')}\n          value={value}\n          onChange={handleChange}\n          isWarning={error}\n          disabled={isLoading}\n        />\n      </ModalContent>\n      <Actions>\n        <Button width=\"100%\" variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button width=\"100%\" onClick={handleConfirm} disabled={!account || isLoading || !value}>\n          {TranslateString(464, 'Confirm')}\n        </Button>\n      </Actions>\n    </Modal>\n  )\n}\n\nexport default TransferNftModal\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { PromiEvent } from 'web3-core'\nimport { Contract } from 'web3-eth-contract'\nimport { useWeb3React } from '@web3-react/core'\nimport { useToast } from 'state/hooks'\nimport { Button, InjectedModalProps, Modal, Text, Flex, AutoRenewIcon } from '@luckyswap/uikit'\nimport { Nft } from 'config/constants/types'\nimport useI18n from 'hooks/useI18n'\n\ninterface ClaimNftModalProps extends InjectedModalProps {\n  nft: Nft\n  onSuccess: () => void\n  onClaim: () => PromiEvent<Contract>\n}\n\nconst ModalContent = styled.div`\n  margin-bottom: 16px;\n`\n\nconst Actions = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-gap: 8px;\n`\n\nconst ClaimNftModal: React.FC<ClaimNftModalProps> = ({ nft, onSuccess, onClaim, onDismiss }) => {\n  const [isConfirming, setIsConfirming] = useState(false)\n  const TranslateString = useI18n()\n  const { account } = useWeb3React()\n  const { toastError, toastSuccess } = useToast()\n\n  const handleConfirm = async () => {\n    onClaim()\n      .once('sending', () => {\n        setIsConfirming(true)\n      })\n      .once('receipt', () => {\n        toastSuccess('Successfully claimed!')\n        onDismiss()\n        onSuccess()\n      })\n      .once('error', (error) => {\n        console.error('Unable to claim NFT', error)\n        toastError('Error', 'Unable to claim NFT, please try again.')\n        setIsConfirming(false)\n      })\n  }\n\n  return (\n    <Modal title={TranslateString(999, 'Claim Collectible')} onDismiss={onDismiss}>\n      <ModalContent>\n        <Flex alignItems=\"center\" mb=\"8px\" justifyContent=\"space-between\">\n          <Text>{TranslateString(626, 'You will receive')}:</Text>\n          <Text bold>{`1x \"${nft.name}\" Collectible`}</Text>\n        </Flex>\n      </ModalContent>\n      <Actions>\n        <Button width=\"100%\" variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          width=\"100%\"\n          onClick={handleConfirm}\n          disabled={!account}\n          isLoading={isConfirming}\n          endIcon={isConfirming ? <AutoRenewIcon color=\"currentColor\" spin /> : null}\n        >\n          {TranslateString(464, 'Confirm')}\n        </Button>\n      </Actions>\n    </Modal>\n  )\n}\n\nexport default ClaimNftModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Nft } from 'config/constants/types'\n\ninterface PreviewProps {\n  nft: Nft\n  isOwned?: boolean\n}\n\nconst Container = styled.div`\n  background-color: ${({ theme }) => theme.colors.borderColor};\n  position: relative;\n  width: 100%;\n  overflow: hidden;\n  padding-bottom: 100%;\n`\n\nconst StyledImage = styled.img`\n  position: absolute;\n  width: 100%;\n  top: 0;\n  left: 0;\n  transition: opacity 1s linear;\n  height: 100%;\n  object-fit: cover;\n  border-radius: 32px 32px 0 0;\n`\n\nconst StyledVideo = styled.video`\n  height: 100%;\n  width: 100%;\n`\n\nconst Preview: React.FC<PreviewProps> = ({ nft, isOwned = false }) => {\n  const { images, name, video } = nft\n  const previewImageSrc = `/images/nfts/${images.lg}`\n\n  if (video) {\n    const videoComponent = (\n      <StyledVideo autoPlay controls={false} loop muted poster={previewImageSrc}>\n        <source src={video.webm} type=\"video/webm\" />\n        <source src={video.mp4} type=\"video/mp4\" />\n      </StyledVideo>\n    )\n\n    return isOwned ? (\n      <a href={images.ipfs} target=\"_blank\" rel=\"noreferrer noopener\">\n        {videoComponent}\n      </a>\n    ) : (\n      videoComponent\n    )\n  }\n\n  const previewImage = <StyledImage src={previewImageSrc} alt={name} />\n\n  return (\n    <Container>\n      {isOwned ? (\n        <a href={images.ipfs} target=\"_blank\" rel=\"noreferrer noopener\">\n          {previewImage}\n        </a>\n      ) : (\n        previewImage\n      )}\n    </Container>\n  )\n}\n\nexport default Preview\n","import React, { useState } from 'react'\nimport { PromiEvent } from 'web3-core'\nimport { Contract } from 'web3-eth-contract'\nimport styled from 'styled-components'\nimport {\n  Card,\n  CardBody,\n  Heading,\n  Tag,\n  Button,\n  ChevronUpIcon,\n  ChevronDownIcon,\n  Text,\n  CardFooter,\n  useModal,\n} from '@luckyswap/uikit'\nimport { useProfile } from 'state/hooks'\nimport useI18n from 'hooks/useI18n'\nimport { Nft } from 'config/constants/types'\nimport InfoRow from '../InfoRow'\nimport TransferNftModal from '../TransferNftModal'\nimport ClaimNftModal from '../ClaimNftModal'\nimport Preview from './Preview'\n\nexport interface NftCardProps {\n  nft: Nft\n  canClaim?: boolean\n  tokenIds?: number[]\n  onClaim: () => PromiEvent<Contract>\n  lastUpdated: number\n  refresh: () => void\n}\n\nconst Header = styled(InfoRow)`\n  min-height: 28px;\n`\n\nconst DetailsButton = styled(Button).attrs({ variant: 'text' })`\n  height: auto;\n  padding: 16px 24px;\n\n  &:hover:not(:disabled):not(:active) {\n    background-color: transparent;\n  }\n\n  &:focus:not(:active) {\n    box-shadow: none;\n  }\n`\n\nconst InfoBlock = styled.div`\n  padding: 24px;\n`\n\nconst NftCard: React.FC<NftCardProps> = ({ nft, canClaim = false, tokenIds = [], onClaim, refresh }) => {\n  const [isOpen, setIsOpen] = useState(false)\n  const TranslateString = useI18n()\n  const { profile } = useProfile()\n  const { bunnyId, name, description } = nft\n  const walletOwnsNft = tokenIds.length > 0\n  const Icon = isOpen ? ChevronUpIcon : ChevronDownIcon\n\n  const handleClick = async () => {\n    setIsOpen(!isOpen)\n  }\n\n  const handleSuccess = () => {\n    refresh()\n  }\n\n  const [onPresentTransferModal] = useModal(\n    <TransferNftModal nft={nft} tokenIds={tokenIds} onSuccess={handleSuccess} />,\n  )\n  const [onPresentClaimModal] = useModal(<ClaimNftModal nft={nft} onSuccess={handleSuccess} onClaim={onClaim} />)\n\n  return (\n    <Card isActive={walletOwnsNft}>\n      <Preview nft={nft} isOwned={walletOwnsNft} />\n      <CardBody>\n        <Header>\n          <Heading>{name}</Heading>\n          {walletOwnsNft && (\n            <Tag outline variant=\"secondary\">\n              {TranslateString(728, 'In Wallet')}\n            </Tag>\n          )}\n          {profile?.nft?.bunnyId === bunnyId && (\n            <Tag outline variant=\"success\">\n              {TranslateString(999, 'Profile Pic')}\n            </Tag>\n          )}\n        </Header>\n        {canClaim && (\n          <Button width=\"100%\" mt=\"24px\" onClick={onPresentClaimModal}>\n            {TranslateString(652, 'Claim this NFT')}\n          </Button>\n        )}\n        {walletOwnsNft && (\n          <Button width=\"100%\" variant=\"secondary\" mt=\"24px\" onClick={onPresentTransferModal}>\n            {TranslateString(999, 'Transfer')}\n          </Button>\n        )}\n      </CardBody>\n      <CardFooter p=\"0\">\n        <DetailsButton width=\"100%\" endIcon={<Icon width=\"24px\" color=\"primary\" />} onClick={handleClick}>\n          {TranslateString(658, 'Details')}\n        </DetailsButton>\n        {isOpen && (\n          <InfoBlock>\n            <Text as=\"p\" color=\"textSubtle\" style={{ textAlign: 'center' }}>\n              {description}\n            </Text>\n          </InfoBlock>\n        )}\n      </CardFooter>\n    </Card>\n  )\n}\n\nexport default NftCard\n","import addresses from 'config/constants/contracts'\nimport tokens from 'config/constants/tokens'\nimport { Address } from 'config/constants/types'\n\nexport const getAddress = (address: Address): string => {\n  const mainNetChainId = 56\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  return address[chainId] ? address[chainId] : address[mainNetChainId]\n}\n\nexport const getCakeAddress = () => {\n  return getAddress(tokens.cake.address)\n}\nexport const getMasterChefAddress = () => {\n  return getAddress(addresses.masterChef)\n}\nexport const getMulticallAddress = () => {\n  return getAddress(addresses.mulltiCall)\n}\nexport const getWbnbAddress = () => {\n  return getAddress(tokens.wbnb.address)\n}\nexport const getLotteryAddress = () => {\n  return getAddress(addresses.lottery)\n}\nexport const getLotteryTicketAddress = () => {\n  return getAddress(addresses.lotteryNFT)\n}\nexport const getPancakeProfileAddress = () => {\n  return getAddress(addresses.pancakeProfile)\n}\nexport const getPancakeRabbitsAddress = () => {\n  return getAddress(addresses.pancakeRabbits)\n}\nexport const getBunnyFactoryAddress = () => {\n  return getAddress(addresses.bunnyFactory)\n}\nexport const getClaimRefundAddress = () => {\n  return getAddress(addresses.claimRefund)\n}\nexport const getPointCenterIfoAddress = () => {\n  return getAddress(addresses.pointCenterIfo)\n}\nexport const getBunnySpecialAddress = () => {\n  return getAddress(addresses.bunnySpecial)\n}\nexport const getTradingCompetitionAddress = () => {\n  return getAddress(addresses.tradingCompetition)\n}\nexport const getEasterNftAddress = () => {\n  return getAddress(addresses.easterNft)\n}\n","import { Token, TokenAmount } from '@beswap/sdk'\nimport { useMemo } from 'react'\n\nimport { useTokenContract } from '../hooks/useContract'\nimport { useSingleCallResult } from '../state/multicall/hooks'\n\nexport function useTokenAllowance(token?: Token, owner?: string, spender?: string): TokenAmount | undefined {\n  const contract = useTokenContract(token?.address, false)\n\n  const inputs = useMemo(() => [owner, spender], [owner, spender])\n  const allowance = useSingleCallResult(contract, 'allowance', inputs).result\n\n  return useMemo(() => (token && allowance ? new TokenAmount(token, allowance.toString()) : undefined), [\n    token,\n    allowance,\n  ])\n}\n\nexport default useTokenAllowance\n","import { MaxUint256 } from '@ethersproject/constants'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { Trade, TokenAmount, CurrencyAmount, ETHER } from '@beswap/sdk'\nimport { useCallback, useMemo } from 'react'\nimport { useActiveWeb3React } from 'hooks'\n\nimport { ROUTER_ADDRESS } from '../constants'\nimport { useTokenAllowance } from '../data/Allowances'\nimport { Field } from '../state/swap/actions'\nimport { useTransactionAdder, useHasPendingApproval } from '../state/transactions/hooks'\nimport { computeSlippageAdjustedAmounts } from '../utils/prices'\nimport { calculateGasMargin } from '../utils'\nimport { useTokenContract } from './useContract'\n\nexport enum ApprovalState {\n  UNKNOWN,\n  NOT_APPROVED,\n  PENDING,\n  APPROVED,\n}\n\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\nexport function useApproveCallbackCustom(token?: any, addressNeedApprove?: string): [() => Promise<void>] {\n  const tokenContract = useTokenContract(token)\n  const addTransaction = useTransactionAdder()\n\n  const approve = useCallback(async (): Promise<void> => {\n    const estimatedGas = await tokenContract.estimateGas.approve(addressNeedApprove, MaxUint256).catch(() => {\n      return tokenContract.estimateGas.approve(addressNeedApprove, MaxUint256)\n    })\n\n    return tokenContract\n      .approve(addressNeedApprove, MaxUint256, {\n        gasLimit: calculateGasMargin(estimatedGas),\n      })\n      .then((response: TransactionResponse) => {\n        addTransaction(response, {\n          summary: `Aprrove  successfully!`,\n        })\n        return response\n      })\n      .catch((error: Error) => {\n        console.debug('Failed to approve token', error)\n        throw error\n      })\n    /* eslint-disable react-hooks/exhaustive-deps */\n  }, [tokenContract, addressNeedApprove])\n\n  return [approve]\n}\n\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\nexport function useApproveCallback(\n  amountToApprove?: CurrencyAmount,\n  spender?: string,\n): [ApprovalState, () => Promise<void>] {\n  const { account } = useActiveWeb3React()\n  const token = amountToApprove instanceof TokenAmount ? amountToApprove.token : undefined\n  const currentAllowance = useTokenAllowance(token, account ?? undefined, spender)\n  const pendingApproval = useHasPendingApproval(token?.address, spender)\n\n  // check the current approval status\n  const approvalState: ApprovalState = useMemo(() => {\n    if (!amountToApprove || !spender) return ApprovalState.UNKNOWN\n    if (amountToApprove.currency === ETHER) return ApprovalState.APPROVED\n    // we might not have enough data to know whether or not we need to approve\n    if (!currentAllowance) return ApprovalState.UNKNOWN\n\n    // amountToApprove will be defined if currentAllowance is\n    return currentAllowance.lessThan(amountToApprove)\n      ? pendingApproval\n        ? ApprovalState.PENDING\n        : ApprovalState.NOT_APPROVED\n      : ApprovalState.APPROVED\n  }, [amountToApprove, currentAllowance, pendingApproval, spender])\n\n  const tokenContract = useTokenContract(token?.address)\n  const addTransaction = useTransactionAdder()\n\n  const approve = useCallback(async (): Promise<void> => {\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\n      console.error('approve was called unnecessarily')\n      return\n    }\n    if (!token) {\n      console.error('no token')\n      return\n    }\n\n    if (!tokenContract) {\n      console.error('tokenContract is null')\n      return\n    }\n\n    if (!amountToApprove) {\n      console.error('missing amount to approve')\n      return\n    }\n\n    if (!spender) {\n      console.error('no spender')\n      return\n    }\n\n    let useExact = false\n    const estimatedGas = await tokenContract.estimateGas.approve(spender, MaxUint256).catch(() => {\n      // general fallback for tokens who restrict approval amounts\n      useExact = true\n      return tokenContract.estimateGas.approve(spender, amountToApprove.raw.toString())\n    })\n\n    // eslint-disable-next-line consistent-return\n    return tokenContract\n      .approve(spender, useExact ? amountToApprove.raw.toString() : MaxUint256, {\n        gasLimit: calculateGasMargin(estimatedGas),\n      })\n      .then((response: TransactionResponse) => {\n        addTransaction(response, {\n          summary: `Approve ${amountToApprove.currency.symbol}`,\n          approval: { tokenAddress: token.address, spender },\n        })\n      })\n      .catch((error: Error) => {\n        console.error('Failed to approve token', error)\n        throw error\n      })\n  }, [approvalState, token, tokenContract, amountToApprove, spender, addTransaction])\n\n  return [approvalState, approve]\n}\n\n// wraps useApproveCallback in the context of a swap\nexport function useApproveCallbackFromTrade(trade?: Trade, allowedSlippage = 0) {\n  const amountToApprove = useMemo(\n    () => (trade ? computeSlippageAdjustedAmounts(trade, allowedSlippage)[Field.INPUT] : undefined),\n    [trade, allowedSlippage],\n  )\n  return useApproveCallback(amountToApprove, ROUTER_ADDRESS)\n}\n","import { useContext } from 'react'\nimport { ThemeContext as StyledThemeContext } from 'styled-components'\nimport { ThemeContext } from 'contexts/ThemeContext'\n\nconst useTheme = () => {\n  const { isDark, toggleTheme } = useContext(ThemeContext)\n  const theme = useContext(StyledThemeContext)\n  return { isDark, toggleTheme, theme }\n}\n\nexport default useTheme\n","import styled from 'styled-components'\n\nconst FlexLayout = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  & > * {\n    min-width: 280px;\n    max-width: 31.5%;\n    width: 100%;\n    margin: 0 8px;\n    margin-bottom: 32px;\n  }\n`\n\nexport default FlexLayout\n","import { ChainId } from '@beswap/sdk'\nimport MULTICALL_ABI from './abi.json'\n\nconst MULTICALL_NETWORKS: { [chainId in ChainId]: string } = {\n  [ChainId.MAINNET]: '0x1Ee38d535d541c55C9dae27B12edf090C608E6Fb', // TODO\n  [ChainId.BSCTESTNET]: '0x301907b5835a2d723Fe3e9E8C5Bc5375d5c1236A'\n}\n\nexport { MULTICALL_ABI, MULTICALL_NETWORKS }\n","import { useMemo } from 'react'\nimport useWeb3 from 'hooks/useWeb3'\nimport { Contract } from '@ethersproject/contracts'\nimport { ChainId, WETH } from '@beswap/sdk'\nimport { useActiveWeb3React } from 'hooks'\nimport addresss from 'config/constants/contracts'\nimport SMART_CHEF_ABI from 'config/abi/smartChef.json'\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport {\n  getBep20Contract,\n  getCakeContract,\n  getBunnyFactoryContract,\n  getBunnySpecialContract,\n  getPancakeRabbitContract,\n  getProfileContract,\n  getIfoContract,\n  getLotteryContract,\n  getLotteryTicketContract,\n  getMasterchefContract,\n  getPointCenterIfoContract,\n  getSouschefContract,\n  getClaimRefundContract,\n  getTradingCompetitionContract,\n  getEasterNftContract,\n} from '../utils/contractHelpers'\nimport { getContract } from '../utils'\nimport { ERC20_BYTES32_ABI } from '../constants/abis/erc20'\nimport ERC20_ABI from '../constants/abis/erc20.json'\nimport ENS_PUBLIC_RESOLVER_ABI from '../constants/abis/ens-public-resolver.json'\nimport ENS_ABI from '../constants/abis/ens-registrar.json'\nimport WETH_ABI from '../constants/abis/weth.json'\nimport { MULTICALL_ABI, MULTICALL_NETWORKS } from '../constants/multicall'\nimport FARMS_ABI from '../constants/abis/masterChef.json'\n\n/**\n * Helper hooks to get specific contracts (by ABI)\n */\n\nexport function useENSRegistrarContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  let address: string | undefined\n  if (chainId) {\n    switch (chainId) {\n      case 56:\n      case 97:\n    }\n  }\n  return useContract(address, ENS_ABI, withSignerIfPossible)\n}\n\nexport function useContract(address: string | undefined, ABI: any, withSignerIfPossible = true): Contract | null {\n  const { library, account } = useActiveWeb3React()\n  return useMemo(() => {\n    if (!address || !ABI || !library) return null\n    try {\n      return getContract(address, ABI, library, withSignerIfPossible && account ? account : undefined)\n    } catch (error) {\n      console.error('Failed to get contract', error)\n      return null\n    }\n  }, [address, ABI, library, withSignerIfPossible, account])\n}\n\nexport function useBytes32TokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_BYTES32_ABI, withSignerIfPossible)\n}\n\nexport function useTokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_ABI, withSignerIfPossible)\n}\n\nexport const useIfoContract = (address: string) => {\n  const web3 = useWeb3()\n  return useMemo(() => getIfoContract(address, web3), [address, web3])\n}\n\nexport const useERC20 = (address: string) => {\n  const web3 = useWeb3()\n  return useMemo(() => getBep20Contract(address, web3), [address, web3])\n}\n\nexport const useCake = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getCakeContract(web3), [web3])\n}\n\nexport const useBunnyFactory = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getBunnyFactoryContract(web3), [web3])\n}\n\nexport const usePancakeRabbits = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getPancakeRabbitContract(web3), [web3])\n}\n\nexport const useProfile = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getProfileContract(web3), [web3])\n}\n\nexport const useLottery = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getLotteryContract(web3), [web3])\n}\n\nexport const useLotteryTicket = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getLotteryTicketContract(web3), [web3])\n}\n\nexport const useMasterchef = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getMasterchefContract(web3), [web3])\n}\n\nexport const useSousChef = (id) => {\n  const web3 = useWeb3()\n  return useMemo(() => getSouschefContract(id, web3), [id, web3])\n}\n\nexport const usePointCenterIfoContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getPointCenterIfoContract(web3), [web3])\n}\n\nexport const useBunnySpecialContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getBunnySpecialContract(web3), [web3])\n}\n\nexport const useClaimRefundContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getClaimRefundContract(web3), [web3])\n}\n\nexport const useTradingCompetitionContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getTradingCompetitionContract(web3), [web3])\n}\n\nexport const useEasterNftContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getEasterNftContract(web3), [web3])\n}\n\nexport function useENSResolverContract(address: string | undefined, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(address, ENS_PUBLIC_RESOLVER_ABI, withSignerIfPossible)\n}\nexport function useWETHContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  return useContract(chainId ? WETH[chainId].address : undefined, WETH_ABI, withSignerIfPossible)\n}\n\nexport function useMulticallContract(): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  return useContract(chainId && MULTICALL_NETWORKS[chainId], MULTICALL_ABI, false)\n}\nexport function usePairContract(pairAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(pairAddress, IUniswapV2PairABI, withSignerIfPossible)\n}\n\nexport function useFarmsContract(): Contract | null {\n  return useContract(addresss.masterChef[97], FARMS_ABI, true)\n}\n\nexport function useStakingContract(address: any): Contract | null {\n  return useContract(address, SMART_CHEF_ABI, true)\n}\n","import { Interface, FunctionFragment } from '@ethersproject/abi'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { Contract } from '@ethersproject/contracts'\nimport { useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useActiveWeb3React } from 'hooks'\nimport { useBlockNumber } from '../application/hooks'\nimport { AppDispatch, AppState } from '../index'\nimport {\n  addMulticallListeners,\n  Call,\n  removeMulticallListeners,\n  parseCallKey,\n  toCallKey,\n  ListenerOptions,\n} from './actions'\n\nexport interface Result extends ReadonlyArray<any> {\n  readonly [key: string]: any\n}\n\ntype MethodArg = string | number | BigNumber\ntype MethodArgs = Array<MethodArg | MethodArg[]>\n\ntype OptionalMethodInputs = Array<MethodArg | MethodArg[] | undefined> | undefined\n\nfunction isMethodArg(x: unknown): x is MethodArg {\n  return ['string', 'number'].indexOf(typeof x) !== -1\n}\n\nfunction isValidMethodArgs(x: unknown): x is MethodArgs | undefined {\n  return (\n    x === undefined ||\n    (Array.isArray(x) && x.every((xi) => isMethodArg(xi) || (Array.isArray(xi) && xi.every(isMethodArg))))\n  )\n}\n\ninterface CallResult {\n  readonly valid: boolean\n  readonly data: string | undefined\n  readonly blockNumber: number | undefined\n}\n\nconst INVALID_RESULT: CallResult = { valid: false, blockNumber: undefined, data: undefined }\n\n// use this options object\nexport const NEVER_RELOAD: ListenerOptions = {\n  blocksPerFetch: Infinity,\n}\n\n// the lowest level call for subscribing to contract data\nfunction useCallsData(calls: (Call | undefined)[], options?: ListenerOptions): CallResult[] {\n  const { chainId } = useActiveWeb3React()\n  const callResults = useSelector<AppState, AppState['multicall']['callResults']>(\n    (state) => state.multicall.callResults\n  )\n  const dispatch = useDispatch<AppDispatch>()\n\n  const serializedCallKeys: string = useMemo(\n    () =>\n      JSON.stringify(\n        calls\n          ?.filter((c): c is Call => Boolean(c))\n          ?.map(toCallKey)\n          ?.sort() ?? []\n      ),\n    [calls]\n  )\n\n  // update listeners when there is an actual change that persists for at least 100ms\n  useEffect(() => {\n    const callKeys: string[] = JSON.parse(serializedCallKeys)\n    if (!chainId || callKeys.length === 0) return undefined\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    const calls = callKeys.map((key) => parseCallKey(key))\n    dispatch(\n      addMulticallListeners({\n        chainId,\n        calls,\n        options,\n      })\n    )\n\n    return () => {\n      dispatch(\n        removeMulticallListeners({\n          chainId,\n          calls,\n          options,\n        })\n      )\n    }\n  }, [chainId, dispatch, options, serializedCallKeys])\n\n  return useMemo(\n    () =>\n      // @ts-ignore\n      calls.map<CallResult>((call) => {\n        if (!chainId || !call) return INVALID_RESULT\n\n        const result = callResults[chainId]?.[toCallKey(call)]\n        const data = result?.data && result?.data !== '0x' ? result.data : null\n\n        return { valid: true, data, blockNumber: result?.blockNumber }\n      }),\n    [callResults, calls, chainId]\n  )\n}\n\ninterface CallState {\n  readonly valid: boolean\n  // the result, or undefined if loading or errored/no data\n  readonly result: Result | undefined\n  // true if the result has never been fetched\n  readonly loading: boolean\n  // true if the result is not for the latest block\n  readonly syncing: boolean\n  // true if the call was made and is synced, but the return data is invalid\n  readonly error: boolean\n}\n\nconst INVALID_CALL_STATE: CallState = { valid: false, result: undefined, loading: false, syncing: false, error: false }\nconst LOADING_CALL_STATE: CallState = { valid: true, result: undefined, loading: true, syncing: true, error: false }\n\nfunction toCallState(\n  callResult: CallResult | undefined,\n  contractInterface: Interface | undefined,\n  fragment: FunctionFragment | undefined,\n  latestBlockNumber: number | undefined\n): CallState {\n  if (!callResult) return INVALID_CALL_STATE\n  const { valid, data, blockNumber } = callResult\n  if (!valid) return INVALID_CALL_STATE\n  if (valid && !blockNumber) return LOADING_CALL_STATE\n  if (!contractInterface || !fragment || !latestBlockNumber) return LOADING_CALL_STATE\n  const success = data && data.length > 2\n  const syncing = (blockNumber ?? 0) < latestBlockNumber\n  let result: Result | undefined\n  if (success && data) {\n    try {\n      result = contractInterface.decodeFunctionResult(fragment, data)\n    } catch (error) {\n      console.error('Result data parsing failed', fragment, data)\n      return {\n        valid: true,\n        loading: false,\n        error: true,\n        syncing,\n        result,\n      }\n    }\n  }\n  return {\n    valid: true,\n    loading: false,\n    syncing,\n    result,\n    error: !success,\n  }\n}\n\nexport function useSingleContractMultipleData(\n  contract: Contract | null | undefined,\n  methodName: string,\n  callInputs: OptionalMethodInputs[],\n  options?: ListenerOptions\n): CallState[] {\n  const fragment = useMemo(() => contract?.interface?.getFunction(methodName), [contract, methodName])\n\n  const calls = useMemo(\n    () =>\n      contract && fragment && callInputs && callInputs.length > 0\n        ? callInputs.map<Call>((inputs) => {\n            return {\n              address: contract.address,\n              callData: contract.interface.encodeFunctionData(fragment, inputs),\n            }\n          })\n        : [],\n    [callInputs, contract, fragment]\n  )\n\n  const results = useCallsData(calls, options)\n\n  const latestBlockNumber = useBlockNumber()\n\n  return useMemo(() => {\n    return results.map((result) => toCallState(result, contract?.interface, fragment, latestBlockNumber))\n  }, [fragment, contract, results, latestBlockNumber])\n}\n\nexport function useMultipleContractSingleData(\n  addresses: (string | undefined)[],\n  contractInterface: Interface,\n  methodName: string,\n  callInputs?: OptionalMethodInputs,\n  options?: ListenerOptions\n): CallState[] {\n  const fragment = useMemo(() => contractInterface.getFunction(methodName), [contractInterface, methodName])\n  const callData: string | undefined = useMemo(\n    () =>\n      fragment && isValidMethodArgs(callInputs)\n        ? contractInterface.encodeFunctionData(fragment, callInputs)\n        : undefined,\n    [callInputs, contractInterface, fragment]\n  )\n\n  const calls = useMemo(\n    () =>\n      fragment && addresses && addresses.length > 0 && callData\n        ? addresses.map<Call | undefined>((address) => {\n            return address && callData\n              ? {\n                  address,\n                  callData,\n                }\n              : undefined\n          })\n        : [],\n    [addresses, callData, fragment]\n  )\n\n  const results = useCallsData(calls, options)\n\n  const latestBlockNumber = useBlockNumber()\n\n  return useMemo(() => {\n    return results.map((result) => toCallState(result, contractInterface, fragment, latestBlockNumber))\n  }, [fragment, results, contractInterface, latestBlockNumber])\n}\n\nexport function useSingleCallResult(\n  contract: Contract | null | undefined,\n  methodName: string,\n  inputs?: OptionalMethodInputs,\n  options?: ListenerOptions\n): CallState {\n  const fragment = useMemo(() => contract?.interface?.getFunction(methodName), [contract, methodName])\n\n  const calls = useMemo<Call[]>(() => {\n    return contract && fragment && isValidMethodArgs(inputs)\n      ? [\n          {\n            address: contract.address,\n            callData: contract.interface.encodeFunctionData(fragment, inputs),\n          },\n        ]\n      : []\n  }, [contract, fragment, inputs])\n\n  const result = useCallsData(calls, options)[0]\n  const latestBlockNumber = useBlockNumber()\n\n  return useMemo(() => {\n    return toCallState(result, contract?.interface, fragment, latestBlockNumber)\n  }, [result, contract, fragment, latestBlockNumber])\n}\n","import { useEffect, useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { kebabCase } from 'lodash'\nimport { useWeb3React } from '@web3-react/core'\nimport { Toast, toastTypes } from '@luckyswap/uikit'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { Team } from 'config/constants/types'\nimport { getWeb3NoAccount } from 'utils/web3'\nimport useRefresh from 'hooks/useRefresh'\nimport {\n  fetchFarmsPublicDataAsync,\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n  push as pushToast,\n  remove as removeToast,\n  clear as clearToast,\n  setBlock,\n} from './actions'\nimport { State, Farm, Pool, ProfileState, TeamsState, AchievementState, PriceState } from './types'\nimport { fetchProfile } from './profile'\nimport { fetchTeam, fetchTeams } from './teams'\nimport { fetchAchievements } from './achievements'\nimport { fetchPrices } from './prices'\n\nexport const useFetchPublicData = () => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n  useEffect(() => {\n    dispatch(fetchFarmsPublicDataAsync()as any) \n    dispatch(fetchPoolsPublicDataAsync()as any) \n  }, [dispatch, slowRefresh])\n\n  useEffect(() => {\n    const web3 = getWeb3NoAccount()\n    const interval = setInterval(async () => {\n      const blockNumber = await web3.eth.getBlockNumber()\n      dispatch(setBlock(blockNumber))\n    }, 6000)\n\n    return () => clearInterval(interval)\n  }, [dispatch])\n}\n\n// Farms\n\nexport const useFarms = (): Farm[] => {\n  const farms = useSelector((state: State) => state.farms.data)\n  return farms\n}\n\nexport const useFarmFromPid = (pid): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\n  return farm\n}\n\nexport const useFarmFromSymbol = (lpSymbol: string): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\n  return farm\n}\n\nexport const useFarmUser = (pid) => {\n  const farm = useFarmFromPid(pid)\n\n  return {\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : new BigNumber(0),\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : new BigNumber(0),\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : new BigNumber(0),\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : new BigNumber(0),\n  }\n}\n\n// Pools\n\nexport const usePools = (account): Pool[] => {\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchPoolsUserDataAsync(account)as any) \n    }\n  }, [account, dispatch, fastRefresh])\n\n  const pools = useSelector((state: State) => state.pools.data)\n  return pools\n}\n\nexport const usePoolFromPid = (sousId): Pool => {\n  const pool = useSelector((state: State) => state.pools.data.find((p) => p.sousId === sousId))\n  return pool\n}\n\n// Toasts\nexport const useToast = () => {\n  const dispatch = useAppDispatch()\n  const helpers = useMemo(() => {\n    const push = (toast: Toast) => dispatch(pushToast(toast))\n\n    return {\n      toastError: (title: string, description?: string) => {\n        return push({ id: kebabCase(title), type: toastTypes.DANGER, title, description })\n      },\n      toastInfo: (title: string, description?: string) => {\n        return push({ id: kebabCase(title), type: toastTypes.INFO, title, description })\n      },\n      toastSuccess: (title: string, description?: string) => {\n        return push({ id: kebabCase(title), type: toastTypes.SUCCESS, title, description })\n      },\n      toastWarning: (title: string, description?: string) => {\n        return push({ id: kebabCase(title), type: toastTypes.WARNING, title, description })\n      },\n      push,\n      remove: (id: string) => dispatch(removeToast(id)),\n      clear: () => dispatch(clearToast()),\n    }\n  }, [dispatch])\n\n  return helpers\n}\n\n// Profile\n\nexport const useFetchProfile = () => {\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchProfile(account)as any) \n  }, [account, dispatch])\n}\n\nexport const useProfile = () => {\n  const { isInitialized, isLoading, data, hasRegistered }: ProfileState = useSelector((state: State) => state.profile)\n  return { profile: data, hasProfile: isInitialized && hasRegistered, isInitialized, isLoading }\n}\n\n// Teams\n\nexport const useTeam = (id: number) => {\n  const team: Team = useSelector((state: State) => state.teams.data[id])\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchTeam(id)as any) \n  }, [id, dispatch])\n\n  return team\n}\n\nexport const useTeams = () => {\n  const { isInitialized, isLoading, data }: TeamsState = useSelector((state: State) => state.teams)\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchTeams()as any) \n  }, [dispatch])\n\n  return { teams: data, isInitialized, isLoading }\n}\n\n// Achievements\n\nexport const useFetchAchievements = () => {\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchAchievements(account)as any) \n    }\n  }, [account, dispatch])\n}\n\nexport const useAchievements = () => {\n  const achievements: AchievementState['data'] = useSelector((state: State) => state.achievements.data)\n  return achievements\n}\n\n// Prices\nexport const useFetchPriceList = () => {\n  const { slowRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchPrices()as any) \n  }, [dispatch, slowRefresh])\n}\n\nexport const useGetApiPrices = () => {\n  const prices: PriceState['data'] = useSelector((state: State) => state.prices.data)\n  return prices\n}\n\nexport const useGetApiPrice = (token: string) => {\n  const prices = useGetApiPrices()\n\n  if (!prices) {\n    return null\n  }\n\n  return prices[token.toLowerCase()]\n}\n\nexport const usePriceCakeBusd = (): BigNumber => {\n  const ZERO = new BigNumber(0)\n  const cakeBnbFarm = useFarmFromPid(1)\n  const bnbBusdFarm = useFarmFromPid(2)\n\n  const bnbBusdPrice = bnbBusdFarm && bnbBusdFarm.tokenPriceVsQuote ? new BigNumber(1).div(bnbBusdFarm.tokenPriceVsQuote) : ZERO\n  const cakeBusdPrice = cakeBnbFarm && cakeBnbFarm.tokenPriceVsQuote ? bnbBusdPrice.times(cakeBnbFarm.tokenPriceVsQuote) : ZERO\n\n  return cakeBusdPrice\n}\n\n// Block\nexport const useBlock = () => {\n  return useSelector((state: State) => state.block)\n}\n\nexport const useInitialBlock = () => {\n  return useSelector((state: State) => state.block.initialBlock)\n}\n","import Web3 from 'web3'\nimport { AbiItem } from 'web3-utils'\nimport web3NoAccount from 'utils/web3'\nimport { poolsConfig } from 'config/constants'\nimport { PoolCategory } from 'config/constants/types'\n\n// Addresses\nimport {\n  getAddress,\n  getPancakeProfileAddress,\n  getPancakeRabbitsAddress,\n  getBunnyFactoryAddress,\n  getBunnySpecialAddress,\n  getCakeAddress,\n  getLotteryAddress,\n  getLotteryTicketAddress,\n  getMasterChefAddress,\n  getPointCenterIfoAddress,\n  getClaimRefundAddress,\n  getTradingCompetitionAddress,\n  getEasterNftAddress,\n} from 'utils/addressHelpers'\n\n// ABI\nimport profileABI from 'config/abi/pancakeProfile.json'\nimport pancakeRabbitsAbi from 'config/abi/pancakeRabbits.json'\nimport bunnyFactoryAbi from 'config/abi/bunnyFactory.json'\nimport bunnySpecialAbi from 'config/abi/bunnySpecial.json'\nimport bep20Abi from 'config/abi/erc20.json'\nimport lpTokenAbi from 'config/abi/lpToken.json'\nimport cakeAbi from 'config/abi/cake.json'\nimport ifoAbi from 'config/abi/ifo.json'\nimport pointCenterIfo from 'config/abi/pointCenterIfo.json'\nimport lotteryAbi from 'config/abi/lottery.json'\nimport lotteryTicketAbi from 'config/abi/lotteryNft.json'\nimport masterChef from 'config/abi/masterchef.json'\nimport sousChef from 'config/abi/sousChef.json'\nimport sousChefBnb from 'config/abi/sousChefBnb.json'\nimport claimRefundAbi from 'config/abi/claimRefund.json'\nimport tradingCompetitionAbi from 'config/abi/tradingCompetition.json'\nimport easterNftAbi from 'config/abi/easterNft.json'\n\nconst getContract = (abi: any, address: string, web3?: Web3) => {\n  const _web3 = web3 ?? web3NoAccount\n  return new _web3.eth.Contract((abi as unknown) as AbiItem, address)\n}\n\nexport const getBep20Contract = (address: string, web3?: Web3) => {\n  return getContract(bep20Abi, address, web3)\n}\nexport const getLpContract = (address: string, web3?: Web3) => {\n  return getContract(lpTokenAbi, address, web3)\n}\nexport const getIfoContract = (address: string, web3?: Web3) => {\n  return getContract(ifoAbi, address, web3)\n}\nexport const getSouschefContract = (id: number, web3?: Web3) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  const abi = config.poolCategory === PoolCategory.BINANCE ? sousChefBnb : sousChef\n  return getContract(abi, getAddress(config.contractAddress), web3)\n}\nexport const getPointCenterIfoContract = (web3?: Web3) => {\n  return getContract(pointCenterIfo, getPointCenterIfoAddress(), web3)\n}\nexport const getCakeContract = (web3?: Web3) => {\n  return getContract(cakeAbi, getCakeAddress(), web3)\n}\nexport const getProfileContract = (web3?: Web3) => {\n  return getContract(profileABI, getPancakeProfileAddress(), web3)\n}\nexport const getPancakeRabbitContract = (web3?: Web3) => {\n  return getContract(pancakeRabbitsAbi, getPancakeRabbitsAddress(), web3)\n}\nexport const getBunnyFactoryContract = (web3?: Web3) => {\n  return getContract(bunnyFactoryAbi, getBunnyFactoryAddress(), web3)\n}\nexport const getBunnySpecialContract = (web3?: Web3) => {\n  return getContract(bunnySpecialAbi, getBunnySpecialAddress(), web3)\n}\nexport const getLotteryContract = (web3?: Web3) => {\n  return getContract(lotteryAbi, getLotteryAddress(), web3)\n}\nexport const getLotteryTicketContract = (web3?: Web3) => {\n  return getContract(lotteryTicketAbi, getLotteryTicketAddress(), web3)\n}\nexport const getMasterchefContract = (web3?: Web3) => {\n  return getContract(masterChef, getMasterChefAddress(), web3)\n}\nexport const getClaimRefundContract = (web3?: Web3) => {\n  return getContract(claimRefundAbi, getClaimRefundAddress(), web3)\n}\nexport const getTradingCompetitionContract = (web3?: Web3) => {\n  return getContract(tradingCompetitionAbi, getTradingCompetitionAddress(), web3)\n}\nexport const getEasterNftContract = (web3?: Web3) => {\n  return getContract(easterNftAbi, getEasterNftAddress(), web3)\n}\n","import { createAction } from '@reduxjs/toolkit'\n\nexport interface SerializedToken {\n  chainId: number\n  address: string\n  decimals: number\n  symbol?: string\n  name?: string\n}\n\nexport interface SerializedPair {\n  token0: SerializedToken\n  token1: SerializedToken\n}\n\nexport const updateMatchesDarkMode = createAction<{ matchesDarkMode: boolean }>('user/updateMatchesDarkMode')\nexport const updateUserDarkMode = createAction<{ userDarkMode: boolean }>('user/updateUserDarkMode')\nexport const updateUserExpertMode = createAction<{ userExpertMode: boolean }>('user/updateUserExpertMode')\nexport const updateUserSlippageTolerance = createAction<{ userSlippageTolerance: number }>(\n  'user/updateUserSlippageTolerance'\n)\nexport const updateUserDeadline = createAction<{ userDeadline: number }>('user/updateUserDeadline')\nexport const addSerializedToken = createAction<{ serializedToken: SerializedToken }>('user/addSerializedToken')\nexport const removeSerializedToken = createAction<{ chainId: number; address: string }>('user/removeSerializedToken')\nexport const addSerializedPair = createAction<{ serializedPair: SerializedPair }>('user/addSerializedPair')\nexport const removeSerializedPair = createAction<{ chainId: number; tokenAAddress: string; tokenBAddress: string }>(\n  'user/removeSerializedPair'\n)\nexport const muteAudio = createAction<void>('user/muteAudio')\nexport const unmuteAudio = createAction<void>('user/unmuteAudio')\n","import { CurrencyAmount, Fraction, JSBI, Percent, TokenAmount, Trade } from '@beswap/sdk'\nimport { BLOCKED_PRICE_IMPACT_NON_EXPERT , ALLOWED_PRICE_IMPACT_HIGH, ALLOWED_PRICE_IMPACT_LOW, ALLOWED_PRICE_IMPACT_MEDIUM } from '../constants'\n\nimport { Field } from '../state/swap/actions'\nimport { basisPointsToPercent } from './index'\n\nconst BASE_FEE = new Percent(JSBI.BigInt(20), JSBI.BigInt(10000))\nconst ONE_HUNDRED_PERCENT = new Percent(JSBI.BigInt(10000), JSBI.BigInt(10000))\nconst INPUT_FRACTION_AFTER_FEE = ONE_HUNDRED_PERCENT.subtract(BASE_FEE)\n\n// computes price breakdown for the trade\nexport function computeTradePriceBreakdown(\n  trade?: Trade\n): { priceImpactWithoutFee?: Percent; realizedLPFee?: CurrencyAmount } {\n  // for each hop in our trade, take away the x*y=k price impact from 0.3% fees\n  // e.g. for 3 tokens/2 hops: 1 - ((1 - .03) * (1-.03))\n  const realizedLPFee = !trade\n    ? undefined\n    : ONE_HUNDRED_PERCENT.subtract(\n        trade.route.pairs.reduce<Fraction>(\n          (currentFee: Fraction): Fraction => currentFee.multiply(INPUT_FRACTION_AFTER_FEE),\n          ONE_HUNDRED_PERCENT\n        )\n      )\n\n  // remove lp fees from price impact ,\n  const priceImpactWithoutFeeFraction = trade && realizedLPFee ? trade.priceImpact.subtract(realizedLPFee) : undefined\n\n  // the x*y=k impact\n  const priceImpactWithoutFeePercent = priceImpactWithoutFeeFraction\n    ? new Percent(priceImpactWithoutFeeFraction?.numerator, priceImpactWithoutFeeFraction?.denominator)\n    : undefined\n\n  // the amount of the input that accrues to LPs\n  const realizedLPFeeAmount =\n    realizedLPFee &&\n    trade &&\n    (trade.inputAmount instanceof TokenAmount\n      ? new TokenAmount(trade.inputAmount.token, realizedLPFee.multiply(trade.inputAmount.raw).quotient)\n      : CurrencyAmount.ether(realizedLPFee.multiply(trade.inputAmount.raw).quotient))\n\n  return { priceImpactWithoutFee: priceImpactWithoutFeePercent, realizedLPFee: realizedLPFeeAmount }\n}\n\n// computes the minimum amount out and maximum amount in for a trade given a user specified allowed slippage in bips\nexport function computeSlippageAdjustedAmounts(\n  trade: Trade | undefined,\n  allowedSlippage: number\n): { [field in Field]?: CurrencyAmount } {\n  const pct = basisPointsToPercent(allowedSlippage)\n  return {\n    [Field.INPUT]: trade?.maximumAmountIn(pct),\n    [Field.OUTPUT]: trade?.minimumAmountOut(pct)\n  }\n}\n\nexport function warningSeverity(priceImpact: Percent | undefined): 0 | 1 | 2 | 3 | 4 {\n  if (!priceImpact?.lessThan(BLOCKED_PRICE_IMPACT_NON_EXPERT)) return 4\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) return 3\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_MEDIUM)) return 2\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_LOW)) return 1\n  return 0\n}\n\nexport function formatExecutionPrice(trade?: Trade, inverted?: boolean): string {\n  if (!trade) {\n    return ''\n  }\n  return inverted\n    ? `${trade.executionPrice.invert().toSignificant(6)} ${trade.inputAmount.currency.symbol} / ${\n        trade.outputAmount.currency.symbol\n      }`\n    : `${trade.executionPrice.toSignificant(6)} ${trade.outputAmount.currency.symbol} / ${\n        trade.inputAmount.currency.symbol\n      }`\n}\n","import { createAction } from '@reduxjs/toolkit'\n\nexport interface Call {\n  address: string\n  callData: string\n}\n\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\nconst LOWER_HEX_REGEX = /^0x[a-f0-9]*$/\nexport function toCallKey(call: Call): string {\n  if (!ADDRESS_REGEX.test(call.address)) {\n    throw new Error(`Invalid address: ${call.address}`)\n  }\n  if (!LOWER_HEX_REGEX.test(call.callData)) {\n    throw new Error(`Invalid hex: ${call.callData}`)\n  }\n  return `${call.address}-${call.callData}`\n}\n\nexport function parseCallKey(callKey: string): Call {\n  const pcs = callKey.split('-')\n  if (pcs.length !== 2) {\n    throw new Error(`Invalid call key: ${callKey}`)\n  }\n  return {\n    address: pcs[0],\n    callData: pcs[1]\n  }\n}\n\nexport interface ListenerOptions {\n  // how often this data should be fetched, by default 1\n  readonly blocksPerFetch?: number\n}\n\nexport const addMulticallListeners = createAction<{ chainId: number; calls: Call[]; options?: ListenerOptions }>(\n  'multicall/addMulticallListeners'\n)\nexport const removeMulticallListeners = createAction<{ chainId: number; calls: Call[]; options?: ListenerOptions }>(\n  'multicall/removeMulticallListeners'\n)\nexport const fetchingMulticallResults = createAction<{ chainId: number; calls: Call[]; fetchingBlockNumber: number }>(\n  'multicall/fetchingMulticallResults'\n)\nexport const errorFetchingMulticallResults = createAction<{\n  chainId: number\n  calls: Call[]\n  fetchingBlockNumber: number\n}>('multicall/errorFetchingMulticallResults')\nexport const updateMulticallResults = createAction<{\n  chainId: number\n  blockNumber: number\n  results: {\n    [callKey: string]: string | null\n  }\n}>('multicall/updateMulticallResults')\n","import { ActionCreatorWithPayload, createAction } from '@reduxjs/toolkit'\nimport { TokenList, Version } from '@uniswap/token-lists'\n\nexport const fetchTokenList: Readonly<{\n  pending: ActionCreatorWithPayload<{ url: string; requestId: string }>\n  fulfilled: ActionCreatorWithPayload<{ url: string; tokenList: TokenList; requestId: string }>\n  rejected: ActionCreatorWithPayload<{ url: string; errorMessage: string; requestId: string }>\n}> = {\n  pending: createAction('lists/fetchTokenList/pending'),\n  fulfilled: createAction('lists/fetchTokenList/fulfilled'),\n  rejected: createAction('lists/fetchTokenList/rejected')\n}\n\nexport const acceptListUpdate = createAction<string>('lists/acceptListUpdate')\nexport const addList = createAction<string>('lists/addList')\nexport const removeList = createAction<string>('lists/removeList')\nexport const selectList = createAction<string>('lists/selectList')\nexport const rejectVersionUpdate = createAction<Version>('lists/rejectVersionUpdate')\n","import { AbiItem } from 'web3-utils'\nimport { Interface } from '@ethersproject/abi'\nimport { getWeb3NoAccount } from 'utils/web3'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport { getMulticallAddress } from 'utils/addressHelpers'\n\ninterface Call {\n  address: string // Address of the contract\n  name: string // Function name on the contract (example: balanceOf)\n  params?: any[] // Function params\n}\n\nconst multicall = async (abi: any[], calls: Call[]) => {\n  const web3 = getWeb3NoAccount()\n  const multi = new web3.eth.Contract((MultiCallAbi as unknown) as AbiItem, getMulticallAddress())\n  const itf = new Interface(abi)\n\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n  const { returnData } = await multi.methods.aggregate(calldata).call()\n  const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\n\n  return res\n}\n\nexport default multicall\n","import { useContext } from 'react'\nimport { isEmpty } from 'lodash'\nimport { TranslationsContext } from '../contexts/Localisation/translationsContext'\n\ninterface ContextData {\n  [key: string]: number | string\n}\n\nconst useI18n = () => {\n  const { translations } = useContext(TranslationsContext)\n\n  return (translationId: number, fallback: string, data: ContextData = {}) => {\n    if (translations.length === 0) {\n      return fallback\n    }\n\n    const foundTranslation = translations.find((translation) => {\n      return translation.data.stringId === translationId\n    })\n\n    if (foundTranslation) {\n      const { text } = foundTranslation.data\n      const includesVariable = text.includes('%')\n\n      if (includesVariable) {\n        let interpolatedText = text\n\n        // If dynamic tags are found but no data was passed return the fallback\n        if (isEmpty(data)) {\n          return fallback\n        }\n\n        Object.keys(data).forEach((dataKey) => {\n          const templateKey = new RegExp(`%${dataKey}%`, 'g')\n          interpolatedText = interpolatedText.replace(templateKey, data[dataKey])\n        })\n\n        return interpolatedText\n      }\n\n      return text\n    }\n\n    return fallback\n  }\n}\n\nexport default useI18n\n","import { useEffect, useState, useRef } from 'react'\nimport Web3 from 'web3'\nimport { useWeb3React } from '@web3-react/core'\nimport { getWeb3NoAccount } from 'utils/web3'\n\n/**\n * Provides a web3 instance using the provider provided by useWallet\n * with a fallback of an httpProver\n * Recreate web3 instance only if the provider change\n */\nconst useWeb3 = () => {\n  const { library } = useWeb3React()\n  const refEth = useRef(library)\n  const [web3, setweb3] = useState(library ? new Web3(library) : getWeb3NoAccount())\n\n  useEffect(() => {\n    if (library !== refEth.current) {\n      setweb3(library ? new Web3(library) : getWeb3NoAccount())\n      refEth.current = library\n    }\n  }, [library])\n\n  return web3\n}\n\nexport default useWeb3\n","import { createAction } from '@reduxjs/toolkit'\nimport { TokenList } from '@uniswap/token-lists'\n\nexport type PopupContent =\n  | {\n      txn: {\n        hash: string\n        success: boolean\n        summary?: string\n      }\n    }\n  | {\n      listUpdate: {\n        listUrl: string\n        oldList: TokenList\n        newList: TokenList\n        auto: boolean\n      }\n    }\n\nexport const updateBlockNumber = createAction<{ chainId: number; blockNumber: number }>('app/updateBlockNumber')\nexport const toggleWalletModal = createAction<void>('app/toggleWalletModal')\nexport const toggleSettingsMenu = createAction<void>('app/toggleSettingsMenu')\nexport const addPopup = createAction<{ key?: string; removeAfterMs?: number | null; content: PopupContent }>(\n  'app/addPopup'\n)\nexport const removePopup = createAction<{ key: string }>('app/removePopup')\n","import { TransactionResponse } from '@ethersproject/providers'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { useActiveWeb3React } from 'hooks'\nimport { AppDispatch, AppState } from '../index'\nimport { addTransaction } from './actions'\nimport { TransactionDetails } from './reducer'\n\n// helper that can take a ethers library transaction response and add it to the list of transactions\nexport function useTransactionAdder(): (\n  response: TransactionResponse,\n  customData?: { summary?: string; approval?: { tokenAddress: string; spender: string } }\n) => void {\n  const { chainId, account } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (\n      response: TransactionResponse,\n      { summary, approval }: { summary?: string; approval?: { tokenAddress: string; spender: string } } = {}\n    ) => {\n      if (!account) return\n      if (!chainId) return\n\n      const { hash } = response\n      if (!hash) {\n        throw Error('No transaction hash found.')\n      }\n      dispatch(addTransaction({ hash, from: account, chainId, approval, summary }))\n    },\n    [dispatch, chainId, account]\n  )\n}\n\n// returns all the transactions for the current chain\nexport function useAllTransactions(): { [txHash: string]: TransactionDetails } {\n  const { chainId } = useActiveWeb3React()\n\n  const state = useSelector<AppState, AppState['transactions']>((s) => s.transactions)\n\n  return chainId ? state[chainId] ?? {} : {}\n}\n\nexport function useIsTransactionPending(transactionHash?: string): boolean {\n  const transactions = useAllTransactions()\n\n  if (!transactionHash || !transactions[transactionHash]) return false\n\n  return !transactions[transactionHash].receipt\n}\n\n/**\n * Returns whether a transaction happened in the last day (86400 seconds * 1000 milliseconds / second)\n * @param tx to check for recency\n */\nexport function isTransactionRecent(tx: TransactionDetails): boolean {\n  return new Date().getTime() - tx.addedTime < 86_400_000\n}\n\n// returns whether a token has a pending approval transaction\nexport function useHasPendingApproval(tokenAddress: string | undefined, spender: string | undefined): boolean {\n  const allTransactions = useAllTransactions()\n  return useMemo(\n    () =>\n      typeof tokenAddress === 'string' &&\n      typeof spender === 'string' &&\n      Object.keys(allTransactions).some((hash) => {\n        const tx = allTransactions[hash]\n        if (!tx) return false\n        if (tx.receipt) {\n          return false\n        }\n        const { approval } = tx\n        if (!approval) return false\n        return approval.spender === spender && approval.tokenAddress === tokenAddress && isTransactionRecent(tx)\n      }),\n    [allTransactions, spender, tokenAddress]\n  )\n}\n","import { ConnectorUpdate } from '@web3-react/types'\nimport { AbstractConnector } from '@web3-react/abstract-connector'\nimport invariant from 'tiny-invariant'\n\ninterface NetworkConnectorArguments {\n  urls: { [chainId: number]: string }\n  defaultChainId?: number\n}\n\n// taken from ethers.js, compatible interface with web3 provider\ntype AsyncSendable = {\n  isMetaMask?: boolean\n  host?: string\n  path?: string\n  sendAsync?: (request: any, callback: (error: any, response: any) => void) => void\n  send?: (request: any, callback: (error: any, response: any) => void) => void\n}\n\nclass RequestError extends Error {\n  constructor(message: string, public code: number, public data?: unknown) {\n    super(message)\n  }\n}\n\ninterface BatchItem {\n  request: { jsonrpc: '2.0'; id: number; method: string; params: unknown }\n  resolve: (result: any) => void\n  reject: (error: Error) => void\n}\n\nclass MiniRpcProvider implements AsyncSendable {\n  public readonly isMetaMask: false = false\n\n  public readonly chainId: number\n\n  public readonly url: string\n\n  public readonly host: string\n\n  public readonly path: string\n\n  public readonly batchWaitTimeMs: number\n\n  private nextId = 1\n\n  private batchTimeoutId: ReturnType<typeof setTimeout> | null = null\n\n  private batch: BatchItem[] = []\n\n  constructor(chainId: number, url: string, batchWaitTimeMs?: number) {\n    this.chainId = chainId\n    this.url = url\n    const parsed = new URL(url)\n    this.host = parsed.host\n    this.path = parsed.pathname\n    // how long to wait to batch calls\n    this.batchWaitTimeMs = batchWaitTimeMs ?? 50\n  }\n\n  public readonly clearBatch = async () => {\n    console.info('Clearing batch', this.batch)\n    const { batch } = this\n    this.batch = []\n    this.batchTimeoutId = null\n    let response: Response\n    try {\n      response = await fetch(this.url, {\n        method: 'POST',\n        headers: { 'content-type': 'application/json', accept: 'application/json' },\n        body: JSON.stringify(batch.map((item) => item.request)),\n      })\n    } catch (error) {\n      batch.forEach(({ reject }) => reject(new Error('Failed to send batch call')))\n      return\n    }\n\n    if (!response.ok) {\n      batch.forEach(({ reject }) => reject(new RequestError(`${response.status}: ${response.statusText}`, -32000)))\n      return\n    }\n\n    let json\n    try {\n      json = await response.json()\n    } catch (error) {\n      batch.forEach(({ reject }) => reject(new Error('Failed to parse JSON response')))\n      return\n    }\n    const byKey = batch.reduce<{ [id: number]: BatchItem }>((memo, current) => {\n      memo[current.request.id] = current\n      return memo\n    }, {})\n    // eslint-disable-next-line no-restricted-syntax\n    // for (const result of json) {\n    //   const {\n    //     resolve,\n    //     reject,\n    //     request: { method },\n    //   } = byKey[result.id]\n    //   if (resolve && reject) {\n    //     if ('error' in result) {\n    //       reject(new RequestError(result?.error?.message, result?.error?.code, result?.error?.data))\n    //     } else if ('result' in result) {\n    //       resolve(result.result)\n    //     } else {\n    //       reject(new RequestError(`Received unexpected JSON-RPC response to ${method} request.`, -32000, result))\n    //     }\n    //   }\n    // }\n  }\n\n  public readonly sendAsync = (\n    request: { jsonrpc: '2.0'; id: number | string | null; method: string; params?: any },\n    callback: (error: any, response: any) => void\n  ): void => {\n    this.request(request.method, request.params)\n      .then((result) => callback(null, { jsonrpc: '2.0', id: request.id, result }))\n      .catch((error) => callback(error, null))\n  }\n\n  public readonly request = async (\n    method: string | { method: string; params: unknown[] },\n    params?: any\n  ): Promise<unknown> => {\n    if (typeof method !== 'string') {\n      return this.request(method.method, method.params)\n    }\n    if (method === 'eth_chainId') {\n      return `0x${this.chainId.toString(16)}`\n    }\n    const promise = new Promise((resolve, reject) => {\n      this.batch.push({\n        request: {\n          jsonrpc: '2.0',\n          id: this.nextId++,\n          method,\n          params,\n        },\n        resolve,\n        reject,\n      })\n    })\n    this.batchTimeoutId = this.batchTimeoutId ?? setTimeout(this.clearBatch, this.batchWaitTimeMs)\n    return promise\n  }\n}\n\nexport class NetworkConnector extends AbstractConnector {\n  private readonly providers: { [chainId: number]: MiniRpcProvider }\n\n  private currentChainId: number\n\n  constructor({ urls, defaultChainId }: NetworkConnectorArguments) {\n    invariant(defaultChainId || Object.keys(urls).length === 1, 'defaultChainId is a required argument with >1 url')\n    super({ supportedChainIds: Object.keys(urls).map((k): number => Number(k)) })\n\n    this.currentChainId = defaultChainId || Number(Object.keys(urls)[0])\n    this.providers = Object.keys(urls).reduce<{ [chainId: number]: MiniRpcProvider }>((accumulator, chainId) => {\n      accumulator[Number(chainId)] = new MiniRpcProvider(Number(chainId), urls[Number(chainId)])\n      return accumulator\n    }, {})\n  }\n\n  public get provider(): MiniRpcProvider {\n    return this.providers[this.currentChainId]\n  }\n\n  public async activate(): Promise<ConnectorUpdate> {\n    return { provider: this.providers[this.currentChainId], chainId: this.currentChainId, account: null }\n  }\n\n  public async getProvider(): Promise<MiniRpcProvider> {\n    return this.providers[this.currentChainId]\n  }\n\n  public async getChainId(): Promise<number> {\n    return this.currentChainId\n  }\n\n  public async getAccount(): Promise<null> {\n    return null\n  }\n\n  public deactivate() {\n    return null\n  }\n}\n\nexport default NetworkConnector\n","import { AbstractConnectorArguments, ConnectorUpdate } from '@web3-react/types'\nimport { AbstractConnector } from '@web3-react/abstract-connector'\nimport warning from 'tiny-warning'\n\nimport { SendReturnResult, SendReturn, Send, SendOld } from './types'\n\nfunction parseSendReturn(sendReturn: SendReturnResult | SendReturn): any {\n  // eslint-disable-next-line no-prototype-builtins\n  return sendReturn.hasOwnProperty('result') ? sendReturn.result : sendReturn\n}\n\nexport class NoBscProviderError extends Error {\n  public constructor() {\n    super()\n    this.name = this.constructor.name\n    this.message = 'No BSC provider was found on window.BinanceChain.'\n  }\n}\n\nexport class UserRejectedRequestError extends Error {\n  public constructor() {\n    super()\n    this.name = this.constructor.name\n    this.message = 'The user rejected the request.'\n  }\n}\n\nexport class BscConnector extends AbstractConnector {\n  constructor(kwargs: AbstractConnectorArguments) {\n    super(kwargs)\n\n    this.handleNetworkChanged = this.handleNetworkChanged.bind(this)\n    this.handleChainChanged = this.handleChainChanged.bind(this)\n    this.handleAccountsChanged = this.handleAccountsChanged.bind(this)\n    this.handleClose = this.handleClose.bind(this)\n  }\n\n  private handleChainChanged(chainId: string | number): void {\n    this.emitUpdate({ chainId, provider: window.BinanceChain } as any)\n  }\n\n  private handleAccountsChanged(accounts: string[]): void {\n    if (accounts.length === 0) {\n      this.emitDeactivate()\n    } else {\n      this.emitUpdate({ account: accounts[0] })\n    }\n  }\n\n  private handleClose(): void {\n    this.emitDeactivate()\n  }\n\n  private handleNetworkChanged(networkId: string | number): void {\n    this.emitUpdate({ chainId: networkId, provider: window.BinanceChain })\n  }\n\n  public async activate(): Promise<ConnectorUpdate> {\n    if (!window.BinanceChain) {\n      throw new NoBscProviderError()\n    }\n\n    if (window.BinanceChain.on) {\n      window.BinanceChain.on('chainChanged', this.handleChainChanged)\n      window.BinanceChain.on('accountsChanged', this.handleAccountsChanged)\n      window.BinanceChain.on('close', this.handleClose)\n      window.BinanceChain.on('networkChanged', this.handleNetworkChanged)\n    }\n\n    if ((window.BinanceChain as any).isMetaMask) {\n      (window.BinanceChain as any).autoRefreshOnNetworkChange = false\n    }\n\n    // try to activate + get account via eth_requestAccounts\n    let account\n    try {\n      account = await (window.BinanceChain.send as Send)('eth_requestAccounts').then(\n        (sendReturn) => parseSendReturn(sendReturn)[0]\n      )\n    } catch (error) {\n      if ((error as any).code === 4001) {\n        throw new UserRejectedRequestError()\n      }\n      warning(false, 'eth_requestAccounts was unsuccessful, falling back to enable')\n    }\n\n    // if unsuccessful, try enable\n    if (!account) {\n      // if enable is successful but doesn't return accounts, fall back to getAccount (not happy i have to do this...)\n      account = await window.BinanceChain.enable().then((sendReturn) => sendReturn && parseSendReturn(sendReturn)[0])\n    }\n\n    return { provider: window.BinanceChain, ...(account ? { account } : {}) }\n  }\n\n  public async getProvider(): Promise<any> {\n    return window.BinanceChain\n  }\n\n  public async getChainId(): Promise<number | string> {\n    if (!window.BinanceChain) {\n      throw new NoBscProviderError()\n    }\n\n    let chainId\n    try {\n      chainId = await (window.BinanceChain.send as Send)('eth_chainId').then(parseSendReturn)\n    } catch {\n      warning(false, 'eth_chainId was unsuccessful, falling back to net_version')\n    }\n\n    if (!chainId) {\n      try {\n        chainId = await (window.BinanceChain.send as Send)('net_version').then(parseSendReturn)\n      } catch {\n        warning(false, 'net_version was unsuccessful, falling back to net version v2')\n      }\n    }\n\n    if (!chainId) {\n      try {\n        chainId = parseSendReturn((window.BinanceChain.send as SendOld)({ method: 'net_version' }))\n      } catch {\n        warning(false, 'net_version v2 was unsuccessful, falling back to manual matches and static properties')\n      }\n    }\n\n    if (!chainId) {\n      if ((window.BinanceChain as any).isDapper) {\n        chainId = parseSendReturn((window.BinanceChain as any).cachedResults.net_version)\n      } else {\n        chainId =\n          (window.BinanceChain as any).chainId ||\n          (window.BinanceChain as any).netVersion ||\n          (window.BinanceChain as any).networkVersion ||\n          (window.BinanceChain as any)._chainId\n      }\n    }\n\n    return chainId\n  }\n\n  public async getAccount(): Promise<null | string> {\n    if (!window.BinanceChain) {\n      throw new NoBscProviderError()\n    }\n\n    let account\n    try {\n      account = await (window.BinanceChain.send as Send)('eth_accounts').then(\n        (sendReturn) => parseSendReturn(sendReturn)[0]\n      )\n    } catch {\n      warning(false, 'eth_accounts was unsuccessful, falling back to enable')\n    }\n\n    if (!account) {\n      try {\n        account = await window.BinanceChain.enable().then((sendReturn) => parseSendReturn(sendReturn)[0])\n      } catch {\n        warning(false, 'enable was unsuccessful, falling back to eth_accounts v2')\n      }\n    }\n\n    if (!account) {\n      account = parseSendReturn((window.BinanceChain.send as SendOld)({ method: 'eth_accounts' }))[0]\n    }\n\n    return account\n  }\n\n  public deactivate() {\n    if (window.BinanceChain && window.BinanceChain.removeListener) {\n      window.BinanceChain.removeListener('chainChanged', this.handleChainChanged)\n      window.BinanceChain.removeListener('accountsChanged', this.handleAccountsChanged)\n      window.BinanceChain.removeListener('close', this.handleClose)\n      window.BinanceChain.removeListener('networkChanged', this.handleNetworkChanged)\n    }\n  }\n\n  public async isAuthorized(): Promise<boolean> {\n    if (!window.BinanceChain) {\n      return false\n    }\n\n    try {\n      return await (window.BinanceChain.send as Send)('eth_accounts').then((sendReturn) => {\n        if (parseSendReturn(sendReturn).length > 0) {\n          return true\n        }\n        return false\n      })\n    } catch {\n      return false\n    }\n  }\n}\n","import { Web3Provider } from '@ethersproject/providers'\nimport { InjectedConnector } from '@web3-react/injected-connector'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\nimport { WalletLinkConnector } from '@web3-react/walletlink-connector'\nimport { NetworkConnector } from './NetworkConnector'\nimport { BscConnector } from './bsc/bscConnector'\nimport getNodeUrl from '../utils/getRpcUrl'\n\nconst NETWORK_URL =getNodeUrl()\nexport const NETWORK_CHAIN_ID: number = parseInt('56' ?? '56')\n\nif (typeof NETWORK_URL === 'undefined') {\n  throw new Error(`REACT_APP_NETWORK_URL must be a defined environment variable`)\n}\n\nexport const network = new NetworkConnector({\n  urls: { [NETWORK_CHAIN_ID]: NETWORK_URL },\n})\n\nlet networkLibrary: Web3Provider | undefined\nexport function getNetworkLibrary(): Web3Provider {\n  // eslint-disable-next-line no-return-assign\n  return (networkLibrary = networkLibrary ?? new Web3Provider(network.provider as any))\n}\n\nexport const injected = new InjectedConnector({\n  supportedChainIds: [56, 97],\n})\n\nexport const bsc = new BscConnector({ supportedChainIds: [56] })\n\n// mainnet only\nexport const walletconnect = new WalletConnectConnector({\n  rpc: { [NETWORK_CHAIN_ID]: NETWORK_URL },\n  bridge: 'https://bridge.walletconnect.org',\n  qrcode: true,\n  pollingInterval: 15000,\n})\n\n// mainnet only\nexport const walletlink = new WalletLinkConnector({\n  url: NETWORK_URL,\n  appName: 'Uniswap',\n  appLogoUrl:\n    'https://mpng.pngfly.com/20181202/bex/kisspng-emoji-domain-unicorn-pin-badges-sticker-unicorn-tumblr-emoji-unicorn-iphoneemoji-5c046729264a77.5671679315437924251569.jpg',\n})\n","export default {\n  masterChef: {\n    97: '0x895930575A582263e88dc503234cfD369c94020C',\n    56: '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\n  },\n  sousChef: {\n    97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n    56: '0x6ab8463a4185b80905e05a9ff80a2d6b714b9e95',\n  },\n  lottery: {\n    97: '0x99c2EcD51d52c036B00130d882Bc65f20Fdecf9f',\n    56: '0x3C3f2049cc17C136a604bE23cF7E42745edf3b91',\n  },\n  lotteryNFT: {\n    97: '0x8175c10383511b3a1C68f9dB222dc14A19CC950e',\n    56: '0x5e74094Cd416f55179DBd0E45b1a8ED030e396A1',\n  },\n  mulltiCall: {\n    56: '0x1ee38d535d541c55c9dae27b12edf090c608e6fb',\n    97: '0x67ADCB4dF3931b0C5Da724058ADC2174a9844412',\n  },\n  pancakeProfile: {\n    56: '0xDf4dBf6536201370F95e06A0F8a7a70fE40E388a',\n    97: '0x4B683C7E13B6d5D7fd1FeA9530F451954c1A7c8A',\n  },\n  pancakeRabbits: {\n    56: '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07',\n    97: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\n  },\n  bunnyFactory: {\n    56: '0xfa249Caa1D16f75fa159F7DFBAc0cC5EaB48CeFf',\n    97: '0x707CBF373175fdB601D34eeBF2Cf665d08f01148',\n  },\n  claimRefund: {\n    56: '0xE7e53A7e9E3Cf6b840f167eF69519175c497e149',\n    97: '',\n  },\n  pointCenterIfo: {\n    56: '0x3C6919b132462C1FEc572c6300E83191f4F0012a',\n    97: '0xd2Ac1B1728Bb1C11ae02AB6e75B76Ae41A2997e3',\n  },\n  bunnySpecial: {\n    56: '0xFee8A195570a18461146F401d6033f5ab3380849',\n    97: '0x7b7b1583De1DeB32Ce6605F6deEbF24A0671c17C',\n  },\n  tradingCompetition: {\n    56: '0xd718baa0B1F4f70dcC8458154042120FFE0DEFFA',\n    97: '0xC787F45B833721ED3aC46E99b703B3E1E01abb97',\n  },\n  easterNft: {\n    56: '0x23c41D28A239dDCAABd1bb1deF8d057189510066',\n    97: '0x24ec6962dbe874F6B67B5C50857565667fA0854F',\n  },\n}\n","import tokens from './tokens'\nimport { PoolConfig, PoolCategory } from './types'\n\nconst pools: PoolConfig[] = [\n  // {\n  //   sousId: 0,\n  //   stakingToken: tokens.cake,\n  //   earningToken: tokens.cake,\n  //   contractAddress: {\n  //     97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n  //     56: '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   harvest: true,\n  //   tokenPerBlock: '10',\n  //   sortOrder: 1,\n  //   isFinished: false,\n  // },\n  {\n    sousId: 99,\n    stakingToken: tokens.bdex,\n    earningToken: tokens.bake,\n    contractAddress: {\n      97: '0xa5bd720d5115Dc14E9a04C8349F316252A69F987',\n      56: '0x40918EF8efFF4aA061656013a81E0e5A8A702eA7',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.005',\n  },\n  {\n    sousId: 100,\n    stakingToken: tokens.bdextest,\n    earningToken: tokens.cake2,\n    contractAddress: {\n      97: '0x911A05e65399E2De2bDde2eB77c0f0748ff3E42E',\n      56: '0x40918EF8efFF4aA061656013a81E0e5A8A702eA7',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.005',\n  }\n]\n\nexport default pools\n"],"sourceRoot":""}
{"version":3,"sources":["utils/formatBalance.ts","components/UnlockButton.tsx","views/TradingCompetition/components/CompetitionHeadingText.tsx","views/TradingCompetition/components/Section/sectionStyles.tsx","hooks/useTokenBalance.ts","views/Profile/components/ApproveConfirmButtons.tsx","hooks/useApproveConfirmTransaction.ts","hooks/useGetWalletNfts.ts","views/Profile/components/HeaderWrapper.tsx","views/Profile/components/ProfileAvatar.tsx","views/TradingCompetition/pngs/all-bunnies-clipped.png","views/TradingCompetition/components/LeadInBanner/index.tsx","views/Profile/components/ComingSoon.tsx","views/Profile/components/SecondaryCard.tsx","views/Profile/components/StatBox.tsx","views/Profile/ProfileCreation/UserName.tsx","views/Profile/ProfileCreation/config.ts","views/Profile/ProfileCreation/contexts/ProfileCreationProvider.tsx","views/Profile/ProfileCreation/Header.tsx","views/Profile/components/WalletNotConnected.tsx","hooks/useHasCakeBalance.ts","views/Profile/components/SelectionCard.tsx","views/Profile/components/NextStepButton.tsx","views/Profile/ProfileCreation/contexts/hook.ts","views/Profile/ProfileCreation/Mint.tsx","views/Profile/ProfileCreation/ProfilePicture.tsx","views/Profile/ProfileCreation/TeamSelection.tsx","views/Profile/components/ConfirmProfileCreationModal.tsx","views/Profile/components/EditProfileModal/reducer.ts","views/Profile/ProfileCreation/Steps.tsx","views/Profile/ProfileCreation/index.tsx","views/Profile/components/ClaimGiftModal.tsx","hooks/useGetProfileCosts.ts","views/Profile/components/EditProfileModal/StartView.tsx","views/Profile/components/EditProfileModal/PauseProfileView.tsx","views/Profile/components/EditProfileModal/ChangeProfilePicView.tsx","views/Profile/components/EditProfileModal/ApproveCakeView.tsx","views/Profile/components/EditProfileModal/index.tsx","views/Profile/components/Header.tsx","views/Profile/components/AchievementAvatar.tsx","views/Profile/components/AchievementTitle.tsx","views/Profile/components/AchievementDescription.tsx","views/Profile/components/AchievementCard.tsx","views/Profile/components/AchievementsList.tsx","views/Profile/components/ActionColumn.tsx","views/Profile/components/AchievementRow/PointsLabel.tsx","views/Profile/components/AchievementRow/index.tsx","views/Profile/components/ClaimPointsCallout .tsx","views/Profile/components/Menu.tsx","views/Profile/TaskCenter.tsx","views/Profile/components/CardHeader.tsx","views/Profile/components/CollectibleCard.tsx","views/Profile/components/Collectibles.tsx","views/Profile/components/EditProfileAvatar.tsx","views/Profile/PublicProfile.tsx","views/Profile/index.tsx"],"names":["getBalanceNumber","balance","decimals","displayBalance","BigNumber","dividedBy","pow","toNumber","getFullDisplayBalance","toFixed","UnlockButton","props","TranslateString","useI18n","useAuth","login","logout","onPresentConnectModal","useWalletModal","className","onClick","H1SizeStyles","theme","mediaQueries","sm","H2SizeStyles","sharedStyles","textColor","background","fill","sharedVisiblyHiddenStyles","Heading1Text","styled","Heading","Heading2Text","VisuallyHiddenHeading2Text","DARKBG","DARKFILL","MIDBLUEBG","MIDBLUEBG_DARK","MIDBLUEFILL","MIDBLUEFILL_DARK","LIGHTBLUEBG","LIGHTBLUEBG_DARK","LIGHTBLUEFILL","LIGHTBLUEFILL_DARK","GOLDGRADIENT","BnbBalance","useState","setBalance","slowRefresh","useRefresh","web3","getWeb3NoAccount","account","useWeb3React","useEffect","a","eth","getBalance","result","fetchBalance","useTokenBalance","tokenAddress","useWeb3","fastRefresh","getBep20Contract","StyledApproveConfirmButtons","div","md","Button","UIKitButton","iconAttrs","width","color","ChevronRight","ChevronRightIcon","attrs","ChevronBottom","ChevronDownIcon","spinnerIcon","spin","ApproveConfirmButtons","isApproveDisabled","isApproving","isConfirming","isConfirmDisabled","onApprove","onConfirm","disabled","endIcon","undefined","isLoading","justifyContent","initialState","approvalState","approvalReceipt","approvalError","confirmState","confirmReceipt","confirmError","reducer","state","actions","type","payload","useApproveConfirmTransaction","onRequiresApproval","onSuccess","noop","useReducer","dispatch","handlePreApprove","useRef","toastError","useToast","current","then","isApproved","isConfirmed","handleApprove","on","error","console","handleConfirm","pancakeRabbitsContract","getPancakeRabbitContract","nfts","lastUpdated","Date","now","action","data","timestamp","useGetWalletNfts","methods","balanceOf","call","getTokenIdAndBunnyId","index","tokenOfOwnerByIndex","getBunnyId","tokenURI","tokenId","makeBatchRequest","bunnyId","tokenUri","Number","tokenIdPromises","i","push","Promise","all","tokenIdsOwnedByWallet","reduce","accum","association","tokenIds","fetchNfts","refresh","HeaderWrapper","colors","textSubtle","TeamAvatar","img","card","AvatarWrapper","bg","AvatarInactive","NoProfileAvatarIcon","ProfileAvatar","profile","nft","images","isActive","src","team","alt","name","StyledLeadInBanner","Box","Container","PageContainer","allBunniesImageClipped","Header","SubHeader","LearnMoreLink","Link","primary","LaurelWrapper","LeadInBanner","alignItems","px","id","to","ml","ComingSoon","children","flexDirection","p","height","as","size","SecondaryCard","Text","defaultProps","StatBox","Icon","icon","title","subtitle","isDisabled","mr","textTransform","fontSize","bold","ExistingUserState","REGISTER_COST","STARTER_BUNNY_IDS","isInitialized","currentStep","teamId","userName","minimumCakeRequired","MINT_COST","multipliedBy","allowance","totalCost","step","ProfileCreationContext","createContext","ProfileCreationProvider","isSubscribed","bunnyFactoryContract","getBunnyFactoryContract","canMint","fetchData","useMemo","nextStep","setTeamId","setTokenId","setUserName","Provider","value","Wrapper","steps","translationId","label","useContext","mb","map","WalletNotConnected","useHasCakeBalance","minimumBalance","getCakeAddress","gte","StyledCard","Card","isSuccess","Label","Body","Children","StyledBackgroundImage","SelectionCard","isChecked","image","onChange","checked","e","target","style","flex","NextStepButton","useProfileCreation","nftList","filter","includes","minimumCakeBalanceToMint","Mint","setBunnyId","cakeContract","useCake","useBunnyFactory","hasMinimumCakeRequired","options","address","response","currentAllowance","approve","toJSON","send","from","mintNFT","num","parseInt","RouterLink","NftWrapper","ProfilePicture","setIsApproved","setIsApproving","nftsInWallet","usePancakeRabbits","bunnyIds","Object","keys","nftWalletItem","walletNfts","length","marginLeft","walletNft","firstTokenId","getPancakeProfileAddress","message","Team","currentTeamId","teams","useTeams","handleTeamSelection","teamValues","shuffle","values","isJoinable","users","toLocaleString","ConfirmProfileCreationModal","onDismiss","profileContract","useProfile","useAppDispatch","toastSuccess","createProfile","fetchProfile","Views","profileApiUrl","process","REACT_APP_API_PROFILE","minimumCakeToRegister","InputWrap","Input","UIKitInput","Indicator","Flex","UserName","isAcknowledged","setIsAcknowledged","library","IDLE","existingUserState","setExistingUserState","isValid","setIsValid","setIsLoading","setMessage","useModal","onPresentConfirmProfileCreation","isUserCreated","CREATED","checkUsernameValidity","debounce","fetch","res","ok","json","bnbSign","signature","personal","sign","method","headers","body","JSON","stringify","username","dateCreated","formatDistance","parseISO","created_at","NEW","fetchUser","event","isWarning","minLength","maxLength","placeholder","py","minHeight","htmlFor","display","cursor","marginBottom","scale","mt","Steps","TeamSelection","ProfileCreation","Page","useCanClaim","canClaim","setCanClaim","setRefresh","checkClaimStatus","useCallback","prevRefresh","claimRefundContract","getClaimRefundContract","walletCanClaim","fetchClaimStatus","ClaimGift","setIsConfirming","useClaimRefundContract","maxWidth","getCakeBack","currentView","view","previousView","useEditProfile","START","goToStart","goToChange","CHANGE","goToRemove","REMOVE","goToApprove","APPROVE","goPrevious","useGetProfileCosts","numberCakeToReactivate","numberCakeToRegister","numberCakeToUpdate","costs","setCosts","getProfileContract","fetchCosts","DangerOutline","variant","failure","StartPage","needsApproval","setNeedsApproval","cost","lt","checkApprovalStatus","PauseProfilePage","pancakeProfileContract","useProfileContract","pauseProfile","ChangeProfilePicPage","updateProfile","getPancakeRabbitsAddress","reactivateProfile","ApproveCakePage","times","viewTitle","EditProfileModal","isStartView","handleBack","onBack","hideCloseButton","StartView","PauseProfileView","ChangeProfilePicView","ApproveCakeView","ProfileHeader","onPresentClaimGiftModal","onEditProfileModal","hasProfile","startIcon","NoBadgePlaceholder","BunnyPlaceholderIcon","StyledAchievementAvatar","AchievementAvatar","badge","AchievementTitle","fallback","Description","AchievementDescription","description","Details","AchievementCard","achievement","points","Grid","AchievementsList","achievements","useAchievements","ActionColumn","PointsLabel","localePoints","StyledAchievementRow","borderColor","AchievementRow","onCollectSuccess","isCollecting","setIsCollecting","pointCenterContract","usePointCenterIfoContract","getPoints","ClaimPointsCallout","claimableAchievements","setClaimableAchievement","getClaimableIfoData","ifoData","fetchIfoClaims","handleCollectSuccess","addAchievement","addPoints","prevClaimableAchievements","prevClaimableAchievement","totalPointsToCollect","sumBy","Menu","activeIndex","TaskCenter","CardHeader","UIKitCardHeader","isDark","getBackground","PreviewImage","CollectibleCard","lg","CollectibleList","Collectibles","tokenIdsInWallet","nftInWallet","EditOverlay","StyledEditProfileAvatar","EditProfileAvatar","Content","Username","Status","ResponsiveText","AddressLink","Section","PublicProfile","href","external","outline","PrizeIcon","Profile","useFetchAchievements","PageLoader","exact","path"],"mappings":"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","file":"static/js/9.250ae309.chunk.js","sourcesContent":["import BigNumber from 'bignumber.js'\n\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\n  const displayBalance = new BigNumber(balance).dividedBy(new BigNumber(10).pow(decimals))\n  return displayBalance.toNumber()\n}\n\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18) => {\n  return balance.dividedBy(new BigNumber(10).pow(decimals)).toFixed()\n}\n","import React from 'react'\nimport { Button, useWalletModal } from '@luckyswap/uikit'\nimport useAuth from 'hooks/useAuth'\nimport useI18n from 'hooks/useI18n'\n\nconst UnlockButton = (props) => {\n  const TranslateString = useI18n()\n  const { login, logout } = useAuth()\n  const { onPresentConnectModal } = useWalletModal(login, logout)\n\n  return (\n    <div className=\"custom-btn\">\n      <Button onClick={onPresentConnectModal} {...props}>\n        {TranslateString(292, 'Unlock Wallet')}\n      </Button>\n    </div>\n  )\n}\n\nexport default UnlockButton\n","import { Heading } from '@luckyswap/uikit'\nimport styled, { DefaultTheme } from 'styled-components'\n\nconst H1SizeStyles = (theme: DefaultTheme) => `\n  font-size: 48px;\n  line-height: 110%;\n  white-space: nowrap;\n\n  ${theme.mediaQueries.sm} {\n    font-size: 64px;\n  }\n`\n\nconst H2SizeStyles = (theme: DefaultTheme) => `\n  font-size: 32px;\n  line-height: 110%;\n  white-space: nowrap;\n\n  ${theme.mediaQueries.sm} {\n    font-size: 40px\n  }\n`\n\nconst sharedStyles = (props: HeadingProps) => `\n  color: ${props.textColor ? props.textColor : '#ffffff'};\n  background:  ${props.background ? props.background : 'linear-gradient(#2b2c3a 0%, #2b2c3a 100%)'};\n  background-clip: text;\n  -webkit-background-clip: text;\n  ${\n    props.fill\n      ? `-webkit-text-fill-color: transparent;`\n      : `-webkit-text-stroke: 4px transparent;\n       text-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);`\n  }\n`\n\nconst sharedVisiblyHiddenStyles = `\n  visibility: hidden;\n  height: 0px;\n`\n\ninterface HeadingProps {\n  textColor?: string\n  background?: string\n  fill?: boolean\n}\n\nexport const Heading1Text = styled(Heading)<HeadingProps>`\n  ${({ theme }) => H1SizeStyles(theme)}\n  ${(props) => sharedStyles(props)}\n`\n\nexport const Heading2Text = styled(Heading)<HeadingProps>`\n  ${({ theme }) => H2SizeStyles(theme)}\n  ${(props) => sharedStyles(props)}\n`\n\nexport const VisuallyHiddenHeading1Text = styled(Heading)`\n  ${({ theme }) => H1SizeStyles(theme)}\n  ${sharedVisiblyHiddenStyles}\n`\n\nexport const VisuallyHiddenHeading2Text = styled(Heading)`\n  ${({ theme }) => H2SizeStyles(theme)}\n  ${sharedVisiblyHiddenStyles}\n`\n\nexport default Heading1Text\n","export const DARKBG = 'radial-gradient(329.58% 50% at 50% 50%, #3B2864 0%, #191326 100%)'\nexport const DARKFILL = '#191326'\nexport const MIDBLUEBG = 'linear-gradient(180deg, #CBD7EF 0%, #9A9FD0 100%)'\nexport const MIDBLUEBG_DARK = 'linear-gradient(180deg, #434575 0%, #66578D 100%)'\nexport const MIDBLUEFILL = '#9A9FD0'\nexport const MIDBLUEFILL_DARK = '#66578D'\nexport const LIGHTBLUEBG = 'linear-gradient(139.73deg, #E6FDFF 0%, #F3EFFF 100%)'\nexport const LIGHTBLUEBG_DARK = 'linear-gradient(139.73deg, #313D5C 0%, #3D2A54 100%)'\nexport const LIGHTBLUEFILL = '#F3EFFF'\nexport const LIGHTBLUEFILL_DARK = '#3D2A54'\nexport const GOLDGRADIENT = 'linear-gradient(180deg, #FFD800 0%, #EB8C00 100%)'\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { getBep20Contract, getCakeContract } from 'utils/contractHelpers'\nimport { getWeb3NoAccount } from 'utils/web3'\nimport useWeb3 from './useWeb3'\nimport useRefresh from './useRefresh'\n\nconst useTokenBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { account } = useWeb3React()\n  const web3 = useWeb3()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress, web3)\n      const res = 0 // = await contract.methods.balanceOf(account).call()\n      setBalance(new BigNumber(res))\n    }\n\n    if (account) {\n      fetchBalance()\n    }\n  }, [account, tokenAddress, web3, fastRefresh])\n\n  return balance\n}\n\nexport const useTotalSupply = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getCakeContract()\n      const supply = await cakeContract.methods.totalSupply().call()\n      setTotalSupply(new BigNumber(supply))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\n\nexport const useBurnedBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { slowRefresh } = useRefresh()\n  const web3 = useWeb3()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress, web3)\n      const res = 0 // await contract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call()\n      setBalance(new BigNumber(res))\n    }\n\n    fetchBalance()\n  }, [web3, tokenAddress, slowRefresh])\n\n  return balance\n}\n\nexport const BnbBalance = () => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { slowRefresh } = useRefresh()\n  const web3 = getWeb3NoAccount()\n  const { account } = useWeb3React()\n  useEffect(() => {\n    if (account) {\n      const fetchBalance = async () => {\n        const result = await web3.eth.getBalance(account)\n        setBalance(new BigNumber(result))\n      }\n\n      fetchBalance()\n    }\n  }, [web3, account, slowRefresh])\n  return balance\n}\n\nexport default useTokenBalance\n","import React from 'react'\nimport styled from 'styled-components'\nimport {\n  ChevronRightIcon,\n  Button as UIKitButton,\n  AutoRenewIcon,\n  ChevronDownIcon,\n  Box,\n  Flex,\n} from '@luckyswap/uikit'\nimport useI18n from 'hooks/useI18n'\n\ninterface ApproveConfirmButtonsProps {\n  isApproveDisabled: boolean\n  isApproving: boolean\n  isConfirming: boolean\n  isConfirmDisabled: boolean\n  onApprove: () => void\n  onConfirm: () => void\n}\n\nconst StyledApproveConfirmButtons = styled.div`\n  align-items: center;\n  display: grid;\n  grid-template-columns: 1fr;\n  justify-content: center;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    grid-template-columns: 1fr 24px 1fr;\n  }\n`\n\nconst Button = styled(UIKitButton)`\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    min-width: 160px;\n  }\n`\n\nconst iconAttrs = { width: '24px', color: 'textDisabled' }\n\nconst ChevronRight = styled(ChevronRightIcon).attrs(iconAttrs)`\n  display: none;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: block;\n  }\n`\n\nconst ChevronBottom = styled(ChevronDownIcon).attrs(iconAttrs)`\n  display: block;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: none;\n  }\n`\n\nconst spinnerIcon = <AutoRenewIcon spin color=\"currentColor\" />\n\nconst ApproveConfirmButtons: React.FC<ApproveConfirmButtonsProps> = ({\n  isApproveDisabled,\n  isApproving,\n  isConfirming,\n  isConfirmDisabled,\n  onApprove,\n  onConfirm,\n}) => {\n  const TranslateString = useI18n()\n\n  return (\n    <StyledApproveConfirmButtons>\n      <Box>\n        <Button\n          disabled={isApproveDisabled}\n          onClick={onApprove}\n          endIcon={isApproving ? spinnerIcon : undefined}\n          isLoading={isApproving}\n        >\n          {isApproving ? TranslateString(800, 'Approving') : TranslateString(564, 'Approve')}\n        </Button>\n      </Box>\n      <Flex justifyContent=\"center\">\n        <ChevronRight />\n        <ChevronBottom />\n      </Flex>\n      <Box>\n        <Button\n          onClick={onConfirm}\n          disabled={isConfirmDisabled}\n          isLoading={isConfirming}\n          endIcon={isConfirming ? spinnerIcon : undefined}\n        >\n          {isConfirming ? TranslateString(802, 'Confirming') : TranslateString(464, 'Confirm')}\n        </Button>\n      </Box>\n    </StyledApproveConfirmButtons>\n  )\n}\n\nexport default ApproveConfirmButtons\n","import { useEffect, useReducer, useRef } from 'react'\nimport { noop } from 'lodash'\nimport { useWeb3React } from '@web3-react/core'\nimport { useToast } from 'state/hooks'\n\ntype Web3Payload = Record<string, unknown> | null\n\ntype LoadingState = 'idle' | 'loading' | 'success' | 'fail'\n\ntype Action =\n  | { type: 'requires_approval' }\n  | { type: 'approve_sending' }\n  | { type: 'approve_receipt'; payload: Web3Payload }\n  | { type: 'approve_error'; payload: Web3Payload }\n  | { type: 'confirm_sending' }\n  | { type: 'confirm_receipt'; payload: Web3Payload }\n  | { type: 'confirm_error'; payload: Web3Payload }\n\ninterface State {\n  approvalState: LoadingState\n  approvalReceipt: Web3Payload\n  approvalError: Web3Payload\n  confirmState: LoadingState\n  confirmReceipt: Web3Payload\n  confirmError: Web3Payload\n}\n\nconst initialState: State = {\n  approvalState: 'idle',\n  approvalReceipt: null,\n  approvalError: null,\n  confirmState: 'idle',\n  confirmReceipt: null,\n  confirmError: null,\n}\n\nconst reducer = (state: State, actions: Action): State => {\n  switch (actions.type) {\n    case 'requires_approval':\n      return {\n        ...state,\n        approvalState: 'success',\n      }\n    case 'approve_sending':\n      return {\n        ...state,\n        approvalState: 'loading',\n      }\n    case 'approve_receipt':\n      return {\n        ...state,\n        approvalState: 'success',\n        approvalReceipt: actions.payload,\n      }\n    case 'approve_error':\n      return {\n        ...state,\n        approvalState: 'fail',\n        approvalError: actions.payload,\n      }\n    case 'confirm_sending':\n      return {\n        ...state,\n        confirmState: 'loading',\n      }\n    case 'confirm_receipt':\n      return {\n        ...state,\n        confirmState: 'success',\n        confirmReceipt: actions.payload,\n      }\n    case 'confirm_error':\n      return {\n        ...state,\n        confirmState: 'fail',\n        confirmError: actions.payload,\n      }\n    default:\n      return state\n  }\n}\n\ntype ContractHandler = () => any\n\ninterface ApproveConfirmTransaction {\n  onApprove: ContractHandler\n  onConfirm: ContractHandler\n  onRequiresApproval?: () => Promise<boolean>\n  onSuccess: (state: State) => void\n}\n\nconst useApproveConfirmTransaction = ({\n  onApprove,\n  onConfirm,\n  onRequiresApproval,\n  onSuccess = noop,\n}: ApproveConfirmTransaction) => {\n  const { account } = useWeb3React()\n  const [state, dispatch] = useReducer(reducer, initialState)\n  const handlePreApprove = useRef(onRequiresApproval)\n  const { toastError } = useToast()\n\n  // Check if approval is necessary, re-check if account changes\n  useEffect(() => {\n    if (account && handlePreApprove.current) {\n      handlePreApprove.current().then((result) => {\n        if (result) {\n          dispatch({ type: 'requires_approval' })\n        }\n      })\n    }\n  }, [account, handlePreApprove, dispatch])\n\n  return {\n    isApproving: state.approvalState === 'loading',\n    isApproved: state.approvalState === 'success',\n    isConfirming: state.confirmState === 'loading',\n    isConfirmed: state.confirmState === 'success',\n    approvalReceipt: state.approvalReceipt,\n    approvalError: state.approvalError,\n    confirmReceipt: state.confirmReceipt,\n    confirmError: state.confirmError,\n    handleApprove: () => {\n      onApprove()\n        .on('sending', () => {\n          dispatch({ type: 'approve_sending' })\n        })\n        .on('receipt', (payload: Web3Payload) => {\n          dispatch({ type: 'approve_receipt', payload })\n        })\n        .on('error', (error: Web3Payload) => {\n          dispatch({ type: 'approve_error', payload: error })\n          console.error('An error occurred approving transaction:', error)\n          toastError('An error occurred approving transaction')\n        })\n    },\n    handleConfirm: () => {\n      onConfirm()\n        .on('sending', () => {\n          dispatch({ type: 'confirm_sending' })\n        })\n        .on('receipt', (payload: Web3Payload) => {\n          dispatch({ type: 'confirm_receipt', payload })\n          onSuccess(state)\n        })\n        .on('error', (error: Web3Payload) => {\n          dispatch({ type: 'confirm_error', payload: error })\n          console.error('An error occurred confirming transaction:', error)\n          toastError('An error occurred confirming transaction')\n        })\n    },\n  }\n}\n\nexport default useApproveConfirmTransaction\n","import { useWeb3React } from '@web3-react/core'\nimport { useEffect, useReducer } from 'react'\nimport { getPancakeRabbitContract } from 'utils/contractHelpers'\nimport makeBatchRequest from 'utils/makeBatchRequest'\n\nconst pancakeRabbitsContract = getPancakeRabbitContract()\n\nexport type NftMap = {\n  [key: number]: {\n    tokenUri: string\n    tokenIds: number[]\n  }\n}\n\ntype Action = { type: 'set_nfts'; data: NftMap } | { type: 'reset' } | { type: 'refresh'; timestamp: number }\n\ntype State = {\n  isLoading: boolean\n  nfts: NftMap\n  lastUpdated: number\n}\n\nconst initialState: State = {\n  isLoading: true,\n  nfts: {},\n  lastUpdated: Date.now(),\n}\n\nconst reducer = (state: State, action: Action) => {\n  switch (action.type) {\n    case 'set_nfts':\n      return {\n        ...initialState,\n        isLoading: false,\n        nfts: action.data,\n      }\n    case 'refresh':\n      return {\n        ...initialState,\n        lastUpdated: action.timestamp,\n      }\n    case 'reset':\n      return {\n        ...initialState,\n        isLoading: false,\n      }\n    default:\n      return state\n  }\n}\n\nconst useGetWalletNfts = () => {\n  const [state, dispatch] = useReducer(reducer, initialState)\n  const { account } = useWeb3React()\n  const { lastUpdated } = state\n\n  useEffect(() => {\n    const fetchNfts = async () => {\n      try {\n        const balanceOf = await pancakeRabbitsContract.methods.balanceOf(account).call()\n\n        if (balanceOf > 0) {\n          const getTokenIdAndBunnyId = async (index: number) => {\n            try {\n              const { tokenOfOwnerByIndex, getBunnyId, tokenURI } = pancakeRabbitsContract.methods\n              const tokenId = await tokenOfOwnerByIndex(account, index).call()\n              const [bunnyId, tokenUri] = await makeBatchRequest([getBunnyId(tokenId).call, tokenURI(tokenId).call])\n\n              return [Number(bunnyId), Number(tokenId), tokenUri]\n            } catch (error) {\n              return null\n            }\n          }\n\n          const tokenIdPromises = []\n\n          for (let i = 0; i < balanceOf; i++) {\n            tokenIdPromises.push(getTokenIdAndBunnyId(i))\n          }\n\n          const tokenIdsOwnedByWallet = await Promise.all(tokenIdPromises)\n\n          const nfts: NftMap = tokenIdsOwnedByWallet.reduce((accum, association) => {\n            if (!association) {\n              return accum\n            }\n\n            const [bunnyId, tokenId, tokenUri] = association\n\n            return {\n              ...accum,\n              [bunnyId]: {\n                tokenUri,\n                tokenIds: accum[bunnyId] ? [...accum[bunnyId].tokenIds, tokenId] : [tokenId],\n              },\n            }\n          }, {})\n\n          dispatch({ type: 'set_nfts', data: nfts })\n        } else {\n          // Reset it in case of wallet change\n          dispatch({ type: 'reset' })\n        }\n      } catch (error) {\n        dispatch({ type: 'reset' })\n      }\n    }\n\n    if (account) {\n      fetchNfts()\n    }\n  }, [account, lastUpdated, dispatch])\n\n  const refresh = () => dispatch({ type: 'refresh', timestamp: Date.now() })\n\n  return { ...state, refresh }\n}\n\nexport default useGetWalletNfts\n","import styled from 'styled-components'\n\nconst HeaderWrapper = styled.div`\n  border-bottom: 2px solid ${({ theme }) => theme.colors.textSubtle};\n  margin-bottom: 24px;\n  padding-bottom: 24px;\n`\n\nexport default HeaderWrapper\n","import React from 'react'\nimport { NoProfileAvatarIcon } from '@luckyswap/uikit'\nimport { Profile } from 'state/types'\nimport styled from 'styled-components'\n\nexport interface ProfileAvatarProps {\n  profile: Profile\n}\n\nconst TeamAvatar = styled.img`\n  border: 1px solid ${({ theme }) => theme.card.background};\n  border-radius: 50%;\n  bottom: 0px;\n  position: absolute;\n  right: 0px;\n  min-width: 20px;\n  min-height: 20px;\n  width: 37.5%;\n  height: 37.5%;\n  z-index: 5;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    border-width: 2px;\n  }\n`\n\nconst AvatarWrapper = styled.div<{ bg: string }>`\n  background: url('${({ bg }) => bg}');\n  background-repeat: no-repeat;\n  background-size: cover;\n  border-radius: 50%;\n  position: relative;\n  width: 100%;\n  height: 100%;\n\n  & > img {\n    border-radius: 50%;\n  }\n`\n// TODO: replace with no profile avatar icon\nconst AvatarInactive = styled(NoProfileAvatarIcon)`\n  width: 100%;\n  height: 100%;\n`\n\nconst ProfileAvatar: React.FC<ProfileAvatarProps> = ({ profile }) => {\n  return (\n    <AvatarWrapper bg={`/images/nfts/${profile.nft?.images?.md}`}>\n      {!profile.isActive && <AvatarInactive />}\n      <TeamAvatar src={`/images/teams/${profile.team.images.alt}`} alt={profile.team.name} />\n    </AvatarWrapper>\n  )\n}\n\nexport default ProfileAvatar\n","export default __webpack_public_path__ + \"static/media/all-bunnies-clipped.6aa99e2e.png\";","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { ArrowForwardIcon, Box, Flex, LaurelLeftIcon, LaurelRightIcon } from '@luckyswap/uikit'\nimport styled from 'styled-components'\nimport useI18n from 'hooks/useI18n'\nimport PageContainer from 'components/layout/Container'\nimport allBunniesImageClipped from '../../pngs/all-bunnies-clipped.png'\nimport { DARKBG, GOLDGRADIENT } from '../Section/sectionStyles'\nimport { Heading1Text, Heading2Text } from '../CompetitionHeadingText'\n\nconst StyledLeadInBanner = styled(Box)`\n  background: ${DARKBG};\n  display: none;\n`\n\nconst Container = styled(PageContainer)`\n  padding-bottom: 24px;\n  padding-top: 24px;\n  text-align: center;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    background: url(${allBunniesImageClipped}) no-repeat bottom right 24px;\n    text-align: left;\n  }\n`\n\nconst Header = styled(Heading1Text)`\n  font-size: 24px;\n`\n\nconst SubHeader = styled(Heading2Text)`\n  font-size: 24px;\n  margin-bottom: 4px;\n`\n\nconst LearnMoreLink = styled(Link)`\n  align-items: center;\n  color: ${({ theme }) => theme.colors.primary};\n  display: inline-flex;\n  font-weight: 600;\n`\n\nconst LaurelWrapper = styled.div`\n  flex: none;\n  width: 40px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: none;\n  }\n`\n\nconst LeadInBanner = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <StyledLeadInBanner>\n      <Container>\n        <Flex alignItems=\"center\" justifyContent={['center', 'center', null, 'start']}>\n          <LaurelWrapper>\n            <LaurelLeftIcon width=\"40px\" color=\"warning\" />\n          </LaurelWrapper>\n          <Box px={['8px', '16px', null, '0']}>\n            <Header>{TranslateString(999, 'Easter Battle')}</Header>\n            <SubHeader background={GOLDGRADIENT} fill>\n              {TranslateString(999, '$200,000 in Prizes!')}\n            </SubHeader>\n            <LearnMoreLink id=\"hp-learn-more-cta\" to=\"/competition\">\n              {TranslateString(999, 'Learn More')}\n              <ArrowForwardIcon color=\"primary\" ml=\"4px\" />\n            </LearnMoreLink>\n          </Box>\n          <LaurelWrapper>\n            <LaurelRightIcon width=\"40px\" color=\"warning\" />\n          </LaurelWrapper>\n        </Flex>\n      </Container>\n    </StyledLeadInBanner>\n  )\n}\n\nexport default LeadInBanner\n","import React from 'react'\nimport { BunnyPlaceholderIcon, Flex, Heading } from '@luckyswap/uikit'\nimport useI18n from 'hooks/useI18n'\n\ninterface ComingSoonProps {\n  children?: React.ReactNode\n}\n\nconst ComingSoon: React.FC<ComingSoonProps> = ({ children }) => {\n  const TranslateString = useI18n()\n\n  return (\n    <Flex flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\" p=\"24px\">\n      <BunnyPlaceholderIcon width=\"72px\" height=\"72px\" />\n      <Heading as=\"h5\" size=\"md\" color=\"textDisabled\">\n        {children || TranslateString(999, 'Coming Soon!')}\n      </Heading>\n    </Flex>\n  )\n}\n\nexport default ComingSoon\n","import styled from 'styled-components'\nimport { Text } from '@luckyswap/uikit'\n\nconst SecondaryCard = styled(Text)`\n  border: 2px solid #2b2c3a;\n  border-radius: 16px;\n`\n\nSecondaryCard.defaultProps = {\n  p: '24px',\n}\n\nexport default SecondaryCard\n","import React, { ElementType, ReactNode } from 'react'\nimport { Flex, Heading, Text, TextProps } from '@luckyswap/uikit'\nimport SecondaryCard from './SecondaryCard'\n\ninterface StatBoxProps extends TextProps {\n  icon: ElementType\n  title: ReactNode\n  subtitle: ReactNode\n  isDisabled?: boolean\n}\n\nconst StatBox: React.FC<StatBoxProps> = ({ icon: Icon, title, subtitle, isDisabled = false, ...props }) => {\n  return (\n    <SecondaryCard {...props}>\n      <Flex alignItems=\"start\">\n        <Icon width=\"44px\" mr=\"24px\" color={isDisabled ? 'textDisabled' : 'currentColor'} />\n        <div>\n          <Heading as=\"h3\" size=\"xl\" color={isDisabled ? 'textDisabled' : 'text'}>\n            {title}\n          </Heading>\n          <Text textTransform=\"uppercase\" color={isDisabled ? 'textDisabled' : 'textSubtle'} fontSize=\"12px\" bold>\n            {subtitle}\n          </Text>\n        </div>\n      </Flex>\n    </SecondaryCard>\n  )\n}\n\nexport default StatBox\n","import React, { ChangeEvent, useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport {\n  Card,\n  CardBody,\n  Heading,\n  Text,\n  Input as UIKitInput,\n  Button,\n  AutoRenewIcon,\n  CheckmarkIcon,\n  Flex,\n  WarningIcon,\n  useModal,\n  Skeleton,\n  Checkbox,\n} from '@luckyswap/uikit'\nimport { parseISO, formatDistance } from 'date-fns'\nimport { useWeb3React } from '@web3-react/core'\nimport { useToast } from 'state/hooks'\nimport useWeb3 from 'hooks/useWeb3'\nimport useI18n from 'hooks/useI18n'\nimport useHasCakeBalance from 'hooks/useHasCakeBalance'\nimport debounce from 'lodash/debounce'\nimport ConfirmProfileCreationModal from '../components/ConfirmProfileCreationModal'\nimport useProfileCreation from './contexts/hook'\nimport { USERNAME_MIN_LENGTH, USERNAME_MAX_LENGTH, REGISTER_COST } from './config'\n\nenum ExistingUserState {\n  IDLE = 'idle', // initial state\n  CREATED = 'created', // username has already been created\n  NEW = 'new', // username has not been created\n}\n\nconst profileApiUrl = process.env.REACT_APP_API_PROFILE\nconst minimumCakeToRegister = new BigNumber(REGISTER_COST).multipliedBy(new BigNumber(10).pow(18))\n\nconst InputWrap = styled.div`\n  position: relative;\n  max-width: 240px;\n`\n\nconst Input = styled(UIKitInput)`\n  padding-right: 40px;\n`\n\nconst Indicator = styled(Flex)`\n  align-items: center;\n  height: 24px;\n  justify-content: center;\n  margin-top: -12px;\n  position: absolute;\n  right: 16px;\n  top: 50%;\n  width: 24px;\n`\n\nconst UserName: React.FC = () => {\n  const [isAcknowledged, setIsAcknowledged] = useState(false)\n  const { teamId, tokenId, userName, actions, minimumCakeRequired, allowance } = useProfileCreation()\n  const TranslateString = useI18n()\n  const { account, library } = useWeb3React()\n  const { toastError } = useToast()\n  const web3 = useWeb3()\n  const [existingUserState, setExistingUserState] = useState<ExistingUserState>(ExistingUserState.IDLE)\n  const [isValid, setIsValid] = useState(false)\n  const [isLoading, setIsLoading] = useState(false)\n  const [message, setMessage] = useState('')\n  const hasMinimumCakeRequired = useHasCakeBalance(minimumCakeToRegister)\n  const [onPresentConfirmProfileCreation] = useModal(\n    <ConfirmProfileCreationModal\n      userName={userName}\n      tokenId={tokenId}\n      account={account}\n      teamId={teamId}\n      minimumCakeRequired={minimumCakeRequired}\n      allowance={allowance}\n    />,\n    false,\n  )\n  const isUserCreated = existingUserState === ExistingUserState.CREATED\n\n  const checkUsernameValidity = debounce(async (value: string) => {\n    try {\n      setIsLoading(true)\n      const res = await fetch(`${profileApiUrl}/api/users/valid/${value}`)\n\n      if (res.ok) {\n        setIsValid(true)\n        setMessage('')\n      } else {\n        const data = await res.json()\n        setIsValid(false)\n        setMessage(data?.error?.message)\n      }\n    } finally {\n      setIsLoading(false)\n    }\n  }, 200)\n\n  const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target\n    actions.setUserName(value)\n    checkUsernameValidity(value)\n  }\n\n  const handleConfirm = async () => {\n    try {\n      setIsLoading(true)\n\n      const signature = library?.bnbSign\n        ? (await library.bnbSign(account, userName))?.signature\n        : await web3.eth.personal.sign(userName, account, null) // Last param is the password, and is null to request a signature in the wallet\n\n      const response = await fetch(`${profileApiUrl}/api/users/register`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          address: account,\n          username: userName,\n          signature,\n        }),\n      })\n\n      if (response.ok) {\n        setExistingUserState(ExistingUserState.CREATED)\n      } else {\n        const data = await response.json()\n        toastError(data?.error?.message)\n      }\n    } catch (error) {\n      toastError(error?.message ? error.message : JSON.stringify(error))\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  const handleAcknowledge = () => setIsAcknowledged(!isAcknowledged)\n\n  // Perform an initial check to see if the wallet has already created a username\n  useEffect(() => {\n    const fetchUser = async () => {\n      try {\n        const response = await fetch(`${profileApiUrl}/api/users/${account}`)\n        const data = await response.json()\n\n        if (response.ok) {\n          const dateCreated = formatDistance(parseISO(data.created_at), new Date())\n          setMessage(`Created ${dateCreated} ago`)\n\n          actions.setUserName(data.username)\n          setExistingUserState(ExistingUserState.CREATED)\n          setIsValid(true)\n        } else {\n          setExistingUserState(ExistingUserState.NEW)\n        }\n      } catch (error) {\n        toastError('Error: Unable to verify username')\n      }\n    }\n\n    if (account) {\n      fetchUser()\n    }\n  }, [account, setExistingUserState, setIsValid, setMessage, actions, toastError])\n\n  return (\n    <>\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\n        {TranslateString(999, `Step ${4}`)}\n      </Text>\n      <Heading as=\"h3\" size=\"xl\" mb=\"24px\">\n        {TranslateString(1110, 'Set Your Name')}\n      </Heading>\n      <Text as=\"p\" mb=\"24px\">\n        {TranslateString(\n          999,\n          'This name will be shown in team leaderboards and search results as long as your profile is active.',\n        )}\n      </Text>\n      <Card mb=\"24px\">\n        <CardBody>\n          <Heading as=\"h4\" size=\"lg\" mb=\"8px\">\n            {TranslateString(1110, 'Set Your Name')}\n          </Heading>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n            {TranslateString(\n              840,\n              'Your name must be at least 3 and at most 15 standard letters and numbers long. You can’t change this once you click Confirm.',\n            )}\n          </Text>\n          {existingUserState === ExistingUserState.IDLE ? (\n            <Skeleton height=\"40px\" width=\"240px\" />\n          ) : (\n            <InputWrap>\n              <Input\n                onChange={handleChange}\n                isWarning={userName && !isValid}\n                isSuccess={userName && isValid}\n                minLength={USERNAME_MIN_LENGTH}\n                maxLength={USERNAME_MAX_LENGTH}\n                disabled={isUserCreated}\n                placeholder={TranslateString(1094, 'Enter your name...')}\n                value={userName}\n              />\n              <Indicator>\n                {isLoading && <AutoRenewIcon spin />}\n                {!isLoading && isValid && userName && <CheckmarkIcon color=\"success\" />}\n                {!isLoading && !isValid && userName && <WarningIcon color=\"failure\" />}\n              </Indicator>\n            </InputWrap>\n          )}\n          <Text color=\"textSubtle\" fontSize=\"14px\" py=\"4px\" mb=\"16px\" style={{ minHeight: '30px' }}>\n            {message}\n          </Text>\n          <Text as=\"p\" color=\"failure\" mb=\"8px\">\n            {TranslateString(\n              1100,\n              \"Only reuse a name from other social media if you're OK with people viewing your wallet. You can't change your name once you click Confirm.\",\n            )}\n          </Text>\n          <label htmlFor=\"checkbox\" style={{ display: 'block', cursor: 'pointer', marginBottom: '24px' }}>\n            <Flex alignItems=\"center\">\n              <div style={{ flex: 'none' }}>\n                <Checkbox id=\"checkbox\" scale=\"sm\" checked={isAcknowledged} onChange={handleAcknowledge} />\n              </div>\n              <Text ml=\"8px\">\n                {TranslateString(1096, 'I understand that people can view my wallet if they know my username')}\n              </Text>\n            </Flex>\n          </label>\n          <Button onClick={handleConfirm} disabled={!isValid || isUserCreated || isLoading || !isAcknowledged}>\n            {TranslateString(464, 'Confirm')}\n          </Button>\n        </CardBody>\n      </Card>\n      <Button onClick={onPresentConfirmProfileCreation} disabled={!isValid || !isUserCreated}>\n        {TranslateString(842, 'Complete Profile')}\n      </Button>\n      {!hasMinimumCakeRequired && (\n        <Text color=\"failure\" mt=\"16px\">\n          {TranslateString(1098, `A minimum of ${REGISTER_COST} CAKE is required`, { num: REGISTER_COST })}\n        </Text>\n      )}\n    </>\n  )\n}\n\nexport default UserName\n","export const MINT_COST = 1\nexport const REGISTER_COST = 0.5\nexport const ALLOWANCE_MULTIPLIER = 5\nexport const STARTER_BUNNY_IDS = [5, 6, 7, 8, 9]\nexport const USERNAME_MIN_LENGTH = 3\nexport const USERNAME_MAX_LENGTH = 15\n","import React, { createContext, useEffect, useMemo, useReducer } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { getBunnyFactoryContract } from 'utils/contractHelpers'\nimport { MINT_COST, REGISTER_COST, ALLOWANCE_MULTIPLIER } from '../config'\nimport { Actions, State, ContextType } from './types'\n\nconst totalCost = MINT_COST + REGISTER_COST\nconst allowance = totalCost * ALLOWANCE_MULTIPLIER\n\nconst initialState: State = {\n  isInitialized: false,\n  currentStep: 0,\n  teamId: null,\n  tokenId: null,\n  userName: '',\n  minimumCakeRequired: new BigNumber(totalCost).multipliedBy(new BigNumber(10).pow(18)),\n  allowance: new BigNumber(allowance).multipliedBy(new BigNumber(10).pow(18)),\n}\n\nconst reducer = (state: State, action: Actions): State => {\n  switch (action.type) {\n    case 'initialize':\n      return {\n        ...state,\n        isInitialized: true,\n        currentStep: action.step,\n      }\n    case 'next_step':\n      return {\n        ...state,\n        currentStep: state.currentStep + 1,\n      }\n    case 'set_team':\n      return {\n        ...state,\n        teamId: action.teamId,\n      }\n    case 'set_tokenid':\n      return {\n        ...state,\n        tokenId: action.tokenId,\n      }\n    case 'set_username':\n      return {\n        ...state,\n        userName: action.userName,\n      }\n    default:\n      return state\n  }\n}\n\nexport const ProfileCreationContext = createContext<ContextType>(null)\n\nconst ProfileCreationProvider: React.FC = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState)\n  const { account } = useWeb3React()\n\n  // Initial checks\n  useEffect(() => {\n    let isSubscribed = true\n\n    const fetchData = async () => {\n      const bunnyFactoryContract = getBunnyFactoryContract()\n      const canMint = await bunnyFactoryContract.methods.canMint(account).call()\n      dispatch({ type: 'initialize', step: canMint ? 0 : 1 })\n\n      // When changing wallets quickly unmounting before the hasClaim finished causes a React error\n      if (isSubscribed) {\n        dispatch({ type: 'initialize', step: canMint ? 0 : 1 })\n      }\n    }\n\n    if (account) {\n      fetchData()\n    }\n\n    return () => {\n      isSubscribed = false\n    }\n  }, [account, dispatch])\n\n  const actions: ContextType['actions'] = useMemo(\n    () => ({\n      nextStep: () => dispatch({ type: 'next_step' }),\n      setTeamId: (teamId: number) => dispatch({ type: 'set_team', teamId }),\n      setTokenId: (tokenId: number) => dispatch({ type: 'set_tokenid', tokenId }),\n      setUserName: (userName: string) => dispatch({ type: 'set_username', userName }),\n    }),\n    [dispatch],\n  )\n\n  return <ProfileCreationContext.Provider value={{ ...state, actions }}>{children}</ProfileCreationContext.Provider>\n}\n\nexport default ProfileCreationProvider\n","import React, { useContext } from 'react'\nimport styled from 'styled-components'\nimport { Breadcrumbs, Heading, Text } from '@luckyswap/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { ProfileCreationContext } from './contexts/ProfileCreationProvider'\n\nconst Wrapper = styled.div`\n  border-bottom: 2px solid #2b2c3a;\n  margin-bottom: 24px;\n  padding-bottom: 24px;\n`\n\nconst steps = [\n  { translationId: 776, label: 'Get Starter Collectible' },\n  { translationId: 778, label: 'Set Profile Picture' },\n  { translationId: 780, label: 'Join Team' },\n  { translationId: 782, label: 'Set Name' },\n]\n\nconst Header: React.FC = () => {\n  const TranslateString = useI18n()\n  const { currentStep } = useContext(ProfileCreationContext)\n\n  return (\n    <Wrapper>\n      <Heading as=\"h1\" size=\"xxl\" color=\"#2b2c3a\" mb=\"8px\">\n        {TranslateString(770, 'Profile Setup')}\n      </Heading>\n      <Heading as=\"h2\" size=\"lg\" mb=\"8px\" color=\"#2b2c3a\">\n        {TranslateString(772, 'Show off your stats and collectibles with your unique profile')}\n      </Heading>\n      <Text color=\"#2b2c3a\" mb=\"24px\">\n        {TranslateString(999, 'Total cost: 1.5 CAKE')}\n      </Text>\n      <Breadcrumbs>\n        {steps.map(({ translationId, label }, index) => {\n          return (\n            <Text key={label} color={index <= currentStep ? '#2b2c3a' : 'textDisabled'}>\n              {TranslateString(translationId, label)}\n            </Text>\n          )\n        })}\n      </Breadcrumbs>\n    </Wrapper>\n  )\n}\n\nexport default Header\n","import React from 'react'\nimport { Heading, Text } from '@luckyswap/uikit'\nimport useI18n from 'hooks/useI18n'\nimport UnlockButton from 'components/UnlockButton'\n\nconst WalletNotConnected = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <div>\n      <Heading size=\"xl\" mb=\"8px\">\n        {TranslateString(852, 'Oops!')}\n      </Heading>\n      <Text as=\"p\" mb=\"16px\">\n        {TranslateString(999, 'Please connect your wallet to continue')}\n      </Text>\n      <UnlockButton />\n    </div>\n  )\n}\n\nexport default WalletNotConnected\n","import BigNumber from 'bignumber.js'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport useTokenBalance from './useTokenBalance'\n\n/**\n * A hook to check if a wallet's CAKE balance is at least the amount passed in\n */\nconst useHasCakeBalance = (minimumBalance: BigNumber) => {\n  const cakeBalance = useTokenBalance(getCakeAddress())\n  return cakeBalance.gte(minimumBalance)\n}\n\nexport default useHasCakeBalance\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card, Radio } from '@luckyswap/uikit'\n\ninterface SelectionCardProps {\n  name: string\n  value: string | number\n  isChecked?: boolean\n  onChange: (val: any) => void\n  image: string\n  disabled?: boolean\n}\n\nconst StyledCard = styled(Card)`\n  ${({ isSuccess }) => !isSuccess && 'box-shadow: none;'}\n  border-radius: 16px;\n  margin-bottom: 16px;\n`\n\nconst Label = styled.label<{ isDisabled: boolean }>`\n  cursor: ${({ isDisabled }) => (isDisabled ? 'not-allowed' : 'pointer')};\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  opacity: ${({ isDisabled }) => (isDisabled ? '0.6' : '1')};\n`\n\nconst Body = styled.div`\n  align-items: center;\n  border: 2px solid #2b2c3a;\n  border-radius: 16px 0 0 16px;\n  display: flex;\n  flex-grow: 1;\n  height: 80px;\n  padding: 8px 16px;\n`\n\nconst Children = styled.div`\n  margin-left: 16px;\n`\n\nconst StyledBackgroundImage = styled.div<{ src: string }>`\n  align-self: stretch;\n  background-image: url('${({ src }) => src}');\n  background-size: contain;\n  background-position: center;\n  background-repeat: no-repeat;\n  flex: none;\n  width: 80px;\n`\n\nconst SelectionCard: React.FC<SelectionCardProps> = ({\n  name,\n  value,\n  isChecked = false,\n  image,\n  onChange,\n  disabled,\n  children,\n  ...props\n}) => {\n  return (\n    <StyledCard isSuccess={isChecked} isDisabled={disabled} mb=\"16px\" {...props}>\n      <Label isDisabled={disabled}>\n        <Body>\n          <Radio\n            name={name}\n            checked={isChecked}\n            value={value}\n            onChange={(e) => onChange(e.target.value)}\n            disabled={disabled}\n            style={{ flex: 'none' }}\n          />\n          <Children>{children}</Children>\n        </Body>\n        <StyledBackgroundImage src={image} />\n      </Label>\n    </StyledCard>\n  )\n}\n\nexport default SelectionCard\n","import React from 'react'\nimport { ArrowForwardIcon, Button, ButtonProps } from '@luckyswap/uikit'\n\nconst NextStepButton: React.FC<ButtonProps> = (props) => {\n  return <Button endIcon={<ArrowForwardIcon color=\"currentColor\" />} {...props} />\n}\n\nexport default NextStepButton\n","import { useContext } from 'react'\nimport { ProfileCreationContext } from './ProfileCreationProvider'\n\nconst useProfileCreation = () => {\n  return useContext(ProfileCreationContext)\n}\n\nexport default useProfileCreation\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { Card, CardBody, Heading, Text } from '@luckyswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport useI18n from 'hooks/useI18n'\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\nimport { useCake, useBunnyFactory } from 'hooks/useContract'\nimport useHasCakeBalance from 'hooks/useHasCakeBalance'\nimport nftList from 'config/constants/nfts'\nimport SelectionCard from '../components/SelectionCard'\nimport NextStepButton from '../components/NextStepButton'\nimport ApproveConfirmButtons from '../components/ApproveConfirmButtons'\nimport useProfileCreation from './contexts/hook'\nimport { MINT_COST, STARTER_BUNNY_IDS } from './config'\n\nconst nfts = nftList.filter((nft) => STARTER_BUNNY_IDS.includes(nft.bunnyId))\nconst minimumCakeBalanceToMint = new BigNumber(MINT_COST).multipliedBy(new BigNumber(10).pow(18))\n\nconst Mint: React.FC = () => {\n  const [bunnyId, setBunnyId] = useState(null)\n  const { actions, minimumCakeRequired, allowance } = useProfileCreation()\n\n  const { account } = useWeb3React()\n  const cakeContract = useCake()\n  const bunnyFactoryContract = useBunnyFactory()\n  const TranslateString = useI18n()\n  const hasMinimumCakeRequired = useHasCakeBalance(minimumCakeBalanceToMint)\n  const {\n    isApproving,\n    isApproved,\n    isConfirmed,\n    isConfirming,\n    handleApprove,\n    handleConfirm,\n  } = useApproveConfirmTransaction({\n    onRequiresApproval: async () => {\n      // TODO: Move this to a helper, this check will be probably be used many times\n      try {\n        const response = await cakeContract.methods.allowance(account, bunnyFactoryContract.options.address).call()\n        const currentAllowance = new BigNumber(response)\n        return currentAllowance.gte(minimumCakeRequired)\n      } catch (error) {\n        return false\n      }\n    },\n    onApprove: () => {\n      return cakeContract.methods\n        .approve(bunnyFactoryContract.options.address, allowance.toJSON())\n        .send({ from: account })\n    },\n    onConfirm: () => {\n      return bunnyFactoryContract.methods.mintNFT(bunnyId).send({ from: account })\n    },\n    onSuccess: () => actions.nextStep(),\n  })\n\n  return (\n    <>\n      <Text fontSize=\"20px\" color=\"#2b2c3a\" bold>\n        {TranslateString(999, `Step ${1}`)}\n      </Text>\n      <Heading as=\"h3\" size=\"xl\" mb=\"24px\" color=\"#2b2c3a\">\n        {TranslateString(776, 'Get Starter Collectible')}\n      </Heading>\n      <Text as=\"p\" color=\"#2b2c3a\">{TranslateString(786, 'Every profile starts by making a “starter” collectible (NFT).')}</Text>\n      <Text as=\"p\" color=\"#2b2c3a\">{TranslateString(788, 'This starter will also become your first profile picture.')}</Text>\n      <Text as=\"p\" mb=\"24px\" color=\"#2b2c3a\">\n        {TranslateString(790, 'You can change your profile pic later if you get another approved Pancake Collectible.')}\n      </Text>\n      <Card mb=\"24px\">\n        <CardBody>\n          <Heading as=\"h4\" size=\"lg\" mb=\"8px\" color=\"#2b2c3a\">\n            {TranslateString(792, 'Choose your Starter!')}\n          </Heading>\n          <Text as=\"p\" color=\"#2b2c3a\">\n            {TranslateString(794, 'Choose wisely: you can only ever make one starter collectible!')}\n          </Text>\n          <Text as=\"p\" mb=\"24px\" color=\"#2b2c3a\">\n            {TranslateString(999, `Cost: ${MINT_COST} CAKE`, { num: MINT_COST })}\n          </Text>\n          {nfts.map((nft) => {\n            const handleChange = (value: string) => setBunnyId(parseInt(value, 10))\n\n            return (\n              <SelectionCard\n                key={nft.bunnyId}\n                name=\"mintStarter\"\n                value={nft.bunnyId}\n                image={`/images/nfts/${nft.images.md}`}\n                isChecked={bunnyId === nft.bunnyId}\n                onChange={handleChange}\n                disabled={isApproving || isConfirming || isConfirmed || !hasMinimumCakeRequired}\n              >\n                <Text bold color=\"#2b2c3a\">{nft.name}</Text>\n              </SelectionCard>\n            )\n          })}\n          {!hasMinimumCakeRequired && (\n            <Text color=\"failure\" mb=\"16px\">\n              {TranslateString(1098, `A minimum of ${MINT_COST} CAKE is required`)}\n            </Text>\n          )}\n          <ApproveConfirmButtons\n            isApproveDisabled={bunnyId === null || isConfirmed || isConfirming || isApproved}\n            isApproving={isApproving}\n            isConfirmDisabled={!isApproved || isConfirmed || !hasMinimumCakeRequired}\n            isConfirming={isConfirming}\n            onApprove={handleApprove}\n            onConfirm={handleConfirm}\n          />\n        </CardBody>\n      </Card>\n      <NextStepButton onClick={actions.nextStep} disabled={!isConfirmed}>\n        {TranslateString(798, 'Next Step')}\n      </NextStepButton>\n    </>\n  )\n}\n\nexport default Mint\n","import React, { useContext, useState } from 'react'\nimport styled from 'styled-components'\nimport { AutoRenewIcon, Button, Card, CardBody, Heading, Skeleton, Text } from '@luckyswap/uikit'\nimport { Link as RouterLink } from 'react-router-dom'\nimport { useWeb3React } from '@web3-react/core'\nimport nftList from 'config/constants/nfts'\nimport useI18n from 'hooks/useI18n'\nimport { useToast } from 'state/hooks'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\nimport { usePancakeRabbits } from 'hooks/useContract'\nimport useGetWalletNfts from 'hooks/useGetWalletNfts'\nimport SelectionCard from '../components/SelectionCard'\nimport NextStepButton from '../components/NextStepButton'\nimport { ProfileCreationContext } from './contexts/ProfileCreationProvider'\n\nconst Link = styled(RouterLink)`\n  color: ${({ theme }) => theme.colors.primary};\n`\n\nconst NftWrapper = styled.div`\n  margin-bottom: 24px;\n`\n\nconst ProfilePicture: React.FC = () => {\n  const [isApproved, setIsApproved] = useState(false)\n  const [isApproving, setIsApproving] = useState(false)\n  const { tokenId, actions } = useContext(ProfileCreationContext)\n  const TranslateString = useI18n()\n  const { isLoading, nfts: nftsInWallet } = useGetWalletNfts()\n  const pancakeRabbitsContract = usePancakeRabbits()\n  const { account } = useWeb3React()\n  const { toastError } = useToast()\n  const bunnyIds = Object.keys(nftsInWallet).map((nftWalletItem) => Number(nftWalletItem))\n  const walletNfts = nftList.filter((nft) => bunnyIds.includes(nft.bunnyId))\n\n  const handleApprove = () => {\n    pancakeRabbitsContract.methods\n      .approve(getPancakeProfileAddress(), tokenId)\n      .send({ from: account })\n      .on('sending', () => {\n        setIsApproving(true)\n      })\n      .on('receipt', () => {\n        setIsApproving(false)\n        setIsApproved(true)\n      })\n      .on('error', (error) => {\n        toastError('Error', error?.message)\n        setIsApproving(false)\n      })\n  }\n\n  if (!isLoading && walletNfts.length === 0) {\n    return (\n      <>\n        <Heading size=\"xl\" mb=\"24px\">\n          {TranslateString(852, 'Oops!')}\n        </Heading>\n        <Text bold fontSize=\"20px\" mb=\"24px\">\n          {TranslateString(854, 'We couldn’t find any Pancake Collectibles in your wallet.')}\n        </Text>\n        <Text as=\"p\">\n          {TranslateString(\n            856,\n            'You need a Pancake Collectible to finish setting up your profile. If you sold or transferred your starter collectible to another wallet, you’ll need to get it back or acquire a new one somehow. You can’t make a new starter with this wallet address.',\n          )}\n        </Text>\n      </>\n    )\n  }\n\n  return (\n    <>\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\n        {TranslateString(999, `Step ${2}`)}\n      </Text>\n      <Heading as=\"h3\" size=\"xl\" mb=\"24px\">\n        {TranslateString(778, 'Set Profile Picture')}\n      </Heading>\n      <Card mb=\"24px\">\n        <CardBody>\n          <Heading as=\"h4\" size=\"lg\" mb=\"8px\">\n            {TranslateString(812, 'Choose collectible')}\n          </Heading>\n          <Text as=\"p\" color=\"textSubtle\">\n            {TranslateString(\n              814,\n              'Choose a profile picture from the eligible collectibles (NFT) in your wallet, shown below.',\n            )}\n          </Text>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n            {TranslateString(816, 'Only approved Pancake Collectibles can be used.')}\n            <Link to=\"/collectibles\" style={{ marginLeft: '4px' }}>\n              {TranslateString(999, 'See the list >')}\n            </Link>\n          </Text>\n          <NftWrapper>\n            {isLoading ? (\n              <Skeleton height=\"80px\" mb=\"16px\" />\n            ) : (\n              walletNfts.map((walletNft) => {\n                const [firstTokenId] = nftsInWallet[walletNft.bunnyId].tokenIds\n\n                return (\n                  <SelectionCard\n                    name=\"profilePicture\"\n                    key={walletNft.bunnyId}\n                    value={firstTokenId}\n                    image={`/images/nfts/${walletNft.images.md}`}\n                    isChecked={firstTokenId === tokenId}\n                    onChange={(value: string) => actions.setTokenId(parseInt(value, 10))}\n                  >\n                    <Text bold>{walletNft.name}</Text>\n                  </SelectionCard>\n                )\n              })\n            )}\n          </NftWrapper>\n          <Heading as=\"h4\" size=\"lg\" mb=\"8px\">\n            {TranslateString(818, 'Allow collectible to be locked')}\n          </Heading>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"16px\">\n            {TranslateString(\n              820,\n              \"The collectible you've chosen will be locked in a smart contract while it’s being used as your profile picture. Don't worry - you'll be able to get it back at any time.\",\n            )}\n          </Text>\n          <Button\n            isLoading={isApproving}\n            disabled={isApproved || isApproving || tokenId === null}\n            onClick={handleApprove}\n            endIcon={isApproving ? <AutoRenewIcon spin color=\"currentColor\" /> : undefined}\n          >\n            {TranslateString(564, 'Approve')}\n          </Button>\n        </CardBody>\n      </Card>\n      <NextStepButton onClick={actions.nextStep} disabled={tokenId === null || !isApproved || isApproving}>\n        {TranslateString(798, 'Next Step')}\n      </NextStepButton>\n    </>\n  )\n}\n\nexport default ProfilePicture\n","import React, { useMemo } from 'react'\nimport { Card, CardBody, CommunityIcon, Flex, Heading, Text } from '@luckyswap/uikit'\nimport shuffle from 'lodash/shuffle'\nimport { useTeams } from 'state/hooks'\nimport useI18n from 'hooks/useI18n'\nimport SelectionCard from '../components/SelectionCard'\nimport NextStepButton from '../components/NextStepButton'\nimport useProfileCreation from './contexts/hook'\n\nconst Team: React.FC = () => {\n  const { teamId: currentTeamId, actions } = useProfileCreation()\n  const TranslateString = useI18n()\n  const { teams } = useTeams()\n  const handleTeamSelection = (value: string) => actions.setTeamId(parseInt(value, 10))\n  const teamValues = useMemo(() => shuffle(Object.values(teams)), [teams])\n\n  return (\n    <>\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\n        {TranslateString(999, `Step ${3}`)}\n      </Text>\n      <Heading as=\"h3\" size=\"xl\" mb=\"24px\">\n        {TranslateString(826, 'Join a Team')}\n      </Heading>\n      <Text as=\"p\" mb=\"24px\">\n        {TranslateString(828, 'It won’t be possible to undo the choice you make for the foreseeable future!')}\n      </Text>\n      <Card mb=\"24px\">\n        <CardBody>\n          <Heading as=\"h4\" size=\"lg\" mb=\"8px\">\n            {TranslateString(826, 'Join a Team')}\n          </Heading>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n            {TranslateString(\n              830,\n              'There’s currently no big difference between teams, and no benefit of joining one team over another for now. So pick whichever one you like!',\n            )}\n          </Text>\n          {teamValues &&\n            teamValues.map((team) => {\n              return (\n                <SelectionCard\n                  key={team.name}\n                  name=\"teams-selection\"\n                  value={team.id}\n                  isChecked={currentTeamId === team.id}\n                  image={`/images/teams/${team.images.md}`}\n                  onChange={handleTeamSelection}\n                  disabled={!team.isJoinable}\n                >\n                  <Text bold>{team.name}</Text>\n                  <Flex>\n                    <CommunityIcon mr=\"8px\" />\n                    <Text>{team.users.toLocaleString()}</Text>\n                  </Flex>\n                </SelectionCard>\n              )\n            })}\n        </CardBody>\n      </Card>\n      <NextStepButton onClick={actions.nextStep} disabled={currentTeamId === null}>\n        {TranslateString(798, 'Next Step')}\n      </NextStepButton>\n    </>\n  )\n}\n\nexport default Team\n","import React from 'react'\nimport { Modal, Flex, Text } from '@luckyswap/uikit'\nimport { useAppDispatch } from 'state'\nimport BigNumber from 'bignumber.js'\nimport useI18n from 'hooks/useI18n'\nimport { useCake, usePancakeRabbits, useProfile } from 'hooks/useContract'\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\nimport { fetchProfile } from 'state/profile'\nimport { useToast } from 'state/hooks'\nimport { REGISTER_COST } from '../ProfileCreation/config'\nimport ApproveConfirmButtons from './ApproveConfirmButtons'\n\ninterface Props {\n  userName: string\n  tokenId: number\n  account: string\n  teamId: number\n  minimumCakeRequired: BigNumber\n  allowance: BigNumber\n  onDismiss?: () => void\n}\n\nconst ConfirmProfileCreationModal: React.FC<Props> = ({\n  account,\n  teamId,\n  tokenId,\n  minimumCakeRequired,\n  allowance,\n  onDismiss,\n}) => {\n  const TranslateString = useI18n()\n  const profileContract = useProfile()\n  const pancakeRabbitsContract = usePancakeRabbits()\n  const dispatch = useAppDispatch()\n  const { toastSuccess } = useToast()\n  const cakeContract = useCake()\n\n  const {\n    isApproving,\n    isApproved,\n    isConfirmed,\n    isConfirming,\n    handleApprove,\n    handleConfirm,\n  } = useApproveConfirmTransaction({\n    onRequiresApproval: async () => {\n      try {\n        const response = await cakeContract.methods.allowance(account, profileContract.options.address).call()\n        const currentAllowance = new BigNumber(response)\n        return currentAllowance.gte(minimumCakeRequired)\n      } catch (error) {\n        return false\n      }\n    },\n    onApprove: () => {\n      return cakeContract.methods.approve(profileContract.options.address, allowance.toJSON()).send({ from: account })\n    },\n    onConfirm: () => {\n      return profileContract.methods\n        .createProfile(teamId, pancakeRabbitsContract.options.address, tokenId)\n        .send({ from: account })\n    },\n    onSuccess: async () => {\n      await dispatch(fetchProfile(account)as any) \n      onDismiss()\n      toastSuccess('Profile created!')\n    },\n  })\n\n  return (\n    <Modal title=\"Complete Profile\" onDismiss={onDismiss}>\n      <Text color=\"textSubtle\" mb=\"8px\">\n        {TranslateString(999, 'Submitting NFT to contract and confirming User Name and Team.')}\n      </Text>\n      <Flex justifyContent=\"space-between\" mb=\"16px\">\n        <Text>{TranslateString(999, 'Cost')}</Text>\n        <Text>{TranslateString(999, `${REGISTER_COST} CAKE`, { num: REGISTER_COST })}</Text>\n      </Flex>\n      <ApproveConfirmButtons\n        isApproveDisabled={isConfirmed || isConfirming || isApproved}\n        isApproving={isApproving}\n        isConfirmDisabled={!isApproved || isConfirmed}\n        isConfirming={isConfirming}\n        onApprove={handleApprove}\n        onConfirm={handleConfirm}\n      />\n    </Modal>\n  )\n}\n\nexport default ConfirmProfileCreationModal\n","import { useReducer } from 'react'\n\nexport enum Views {\n  START = 'start',\n  CHANGE = 'change',\n  REMOVE = 'remove',\n  APPROVE = 'approve',\n}\n\nexport type Actions =\n  | {\n      type: 'set_view'\n      view: Views\n    }\n  | {\n      type: 'go_previous'\n    }\n\nexport interface State {\n  currentView: Views\n  previousView: Views | null\n}\n\nconst reducer = (state: State, action: Actions): State => {\n  switch (action.type) {\n    case 'set_view':\n      return {\n        ...state,\n        currentView: action.view,\n        previousView: state.currentView,\n      }\n    case 'go_previous':\n      return {\n        ...state,\n        currentView: state.previousView,\n        previousView: state.currentView,\n      }\n    default:\n      return state\n  }\n}\n\nexport interface UseEditProfileResponse extends State {\n  goToStart: () => void\n  goToChange: () => void\n  goToApprove: () => void\n  goToRemove: () => void\n  goPrevious: () => void\n}\n\nconst useEditProfile = (): UseEditProfileResponse => {\n  const [state, dispatch] = useReducer(reducer, {\n    currentView: Views.START,\n    previousView: null,\n  })\n\n  const goToStart = () => dispatch({ type: 'set_view', view: Views.START })\n  const goToChange = () => dispatch({ type: 'set_view', view: Views.CHANGE })\n  const goToRemove = () => dispatch({ type: 'set_view', view: Views.REMOVE })\n  const goToApprove = () => dispatch({ type: 'set_view', view: Views.APPROVE })\n  const goPrevious = () => dispatch({ type: 'go_previous' })\n\n  return { ...state, goToStart, goToChange, goToRemove, goToApprove, goPrevious }\n}\n\nexport default useEditProfile\n","import React, { useContext } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport NoWalletConnected from '../components/WalletNotConnected'\nimport { ProfileCreationContext } from './contexts/ProfileCreationProvider'\nimport Mint from './Mint'\nimport ProfilePicture from './ProfilePicture'\nimport TeamSelection from './TeamSelection'\nimport UserName from './UserName'\n\nconst Steps = () => {\n  const { isInitialized, currentStep } = useContext(ProfileCreationContext)\n  const { account } = useWeb3React()\n\n  if (!account) {\n    return <NoWalletConnected />\n  }\n\n  if (!isInitialized) {\n    return <div>Loading...</div>\n  }\n\n  if (currentStep === 0) {\n    return <Mint />\n  }\n\n  if (currentStep === 1) {\n    return <ProfilePicture />\n  }\n\n  if (currentStep === 2) {\n    return <TeamSelection />\n  }\n\n  if (currentStep === 3) {\n    return <UserName />\n  }\n\n  return null\n}\n\nexport default Steps\n","import React from 'react'\nimport Page from 'components/layout/Page'\nimport Header from './Header'\nimport ProfileCreationProvider from './contexts/ProfileCreationProvider'\nimport Steps from './Steps'\n\nconst ProfileCreation = () => (\n  <ProfileCreationProvider>\n    <Page>\n      <Header />\n      <Steps />\n    </Page>\n  </ProfileCreationProvider>\n)\n\nexport default ProfileCreation\n","import React, { useCallback, useEffect, useState } from 'react'\nimport { Modal, Text, InjectedModalProps, Button, AutoRenewIcon } from '@luckyswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { useToast } from 'state/hooks'\nimport { useClaimRefundContract } from 'hooks/useContract'\nimport useI18n from 'hooks/useI18n'\nimport { getClaimRefundContract } from 'utils/contractHelpers'\n\ninterface ClaimGiftProps extends InjectedModalProps {\n  onSuccess: () => void\n}\n\nexport const useCanClaim = () => {\n  const [canClaim, setCanClaim] = useState(false)\n  const [refresh, setRefresh] = useState(1)\n  const { account } = useWeb3React()\n\n  const checkClaimStatus = useCallback(() => {\n    setRefresh((prevRefresh) => prevRefresh + 1)\n  }, [setRefresh])\n\n  useEffect(() => {\n    const fetchClaimStatus = async () => {\n      const claimRefundContract = getClaimRefundContract()\n      const walletCanClaim = await claimRefundContract.methods.canClaim(account).call()\n      setCanClaim(walletCanClaim)\n    }\n\n    if (account) {\n      fetchClaimStatus()\n    }\n  }, [account, refresh, setCanClaim])\n\n  return { canClaim, checkClaimStatus }\n}\n\nconst ClaimGift: React.FC<ClaimGiftProps> = ({ onSuccess, onDismiss }) => {\n  const [isConfirming, setIsConfirming] = useState(false)\n  const { account } = useWeb3React()\n  const TranslateString = useI18n()\n  const { canClaim } = useCanClaim()\n  const claimRefundContract = useClaimRefundContract()\n  const { toastSuccess, toastError } = useToast()\n\n  const handleClick = () => {\n    claimRefundContract.methods\n      .getCakeBack()\n      .send({ from: account })\n      .on('sending', () => {\n        setIsConfirming(true)\n      })\n      .on('receipt', () => {\n        toastSuccess('Success!')\n        onSuccess()\n        onDismiss()\n      })\n      .on('error', (error) => {\n        setIsConfirming(false)\n        toastError('Error', error?.message)\n      })\n  }\n\n  return (\n    <Modal title={TranslateString(999, 'Claim your Gift!')} onDismiss={onDismiss}>\n      <div style={{ maxWidth: '640px' }}>\n        <Text as=\"p\">{TranslateString(999, 'Thank you for being a day-one user of Pancake Profiles!')}</Text>\n        <Text as=\"p\" mb=\"8px\">\n          {TranslateString(\n            999,\n            \"If you haven't already noticed, we made a mistake and the starter bunny you chose got mixed up and changed into another bunny. Oops!\",\n          )}\n        </Text>\n        <Text as=\"p\">\n          {TranslateString(999, \"To make it up to you, we'll refund you the full 4 CAKE it cost to make your bunny.\")}\n        </Text>\n        <Text as=\"p\" mb=\"8px\">\n          {TranslateString(\n            999,\n            \"We're also preparing an all-new collectible for you to claim (for free!) in the near future.\",\n          )}\n        </Text>\n        <Text as=\"p\" mb=\"24px\">\n          {TranslateString(\n            999,\n            'Once you claim the refund, you can make another account with another wallet, mint a new bunny, and send it to your main account via the NFT page.',\n          )}\n        </Text>\n        <Button\n          endIcon={isConfirming ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          isLoading={isConfirming}\n          onClick={handleClick}\n          disabled={!canClaim}\n        >\n          {TranslateString(999, 'Claim Your CAKE')}\n        </Button>\n      </div>\n    </Modal>\n  )\n}\n\nexport default ClaimGift\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { getProfileContract } from 'utils/contractHelpers'\nimport makeBatchRequest from 'utils/makeBatchRequest'\nimport { useToast } from 'state/hooks'\n\nconst useGetProfileCosts = () => {\n  const [costs, setCosts] = useState({\n    numberCakeToReactivate: new BigNumber(0),\n    numberCakeToRegister: new BigNumber(0),\n    numberCakeToUpdate: new BigNumber(0),\n  })\n  const { toastError } = useToast()\n\n  useEffect(() => {\n    const fetchCosts = async () => {\n      try {\n        const profileContract = getProfileContract()\n        const [numberCakeToReactivate, numberCakeToRegister, numberCakeToUpdate] = await makeBatchRequest([\n          profileContract.methods.numberCakeToReactivate().call,\n          profileContract.methods.numberCakeToRegister().call,\n          profileContract.methods.numberCakeToUpdate().call,\n        ])\n\n        setCosts({\n          numberCakeToReactivate: new BigNumber(numberCakeToReactivate as string),\n          numberCakeToRegister: new BigNumber(numberCakeToRegister as string),\n          numberCakeToUpdate: new BigNumber(numberCakeToUpdate as string),\n        })\n      } catch (error) {\n        toastError('Error', 'Could not retrieve CAKE costs for profile')\n      }\n    }\n\n    fetchCosts()\n  }, [setCosts, toastError])\n\n  return costs\n}\n\nexport default useGetProfileCosts\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { Button, Flex, Text, InjectedModalProps } from '@luckyswap/uikit'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\nimport { useCake } from 'hooks/useContract'\nimport useI18n from 'hooks/useI18n'\nimport useGetProfileCosts from 'hooks/useGetProfileCosts'\nimport useHasCakeBalance from 'hooks/useHasCakeBalance'\nimport { useProfile } from 'state/hooks'\nimport { UseEditProfileResponse } from './reducer'\nimport ProfileAvatar from '../ProfileAvatar'\n\ninterface StartPageProps extends InjectedModalProps {\n  goToChange: UseEditProfileResponse['goToChange']\n  goToRemove: UseEditProfileResponse['goToRemove']\n  goToApprove: UseEditProfileResponse['goToApprove']\n}\n\nconst DangerOutline = styled(Button).attrs({ variant: 'secondary' })`\n  border-color: ${({ theme }) => theme.colors.failure};\n  color: ${({ theme }) => theme.colors.failure};\n  margin-bottom: 24px;\n\n  &:hover:not(:disabled):not(.button--disabled):not(:active) {\n    border-color: ${({ theme }) => theme.colors.failure};\n    opacity: 0.8;\n  }\n`\n\nconst AvatarWrapper = styled.div`\n  height: 64px;\n  width: 64px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    height: 128px;\n    width: 128px;\n  }\n`\n\nconst StartPage: React.FC<StartPageProps> = ({ goToApprove, goToChange, goToRemove, onDismiss }) => {\n  const [needsApproval, setNeedsApproval] = useState(null)\n  const { profile } = useProfile()\n  const { numberCakeToUpdate, numberCakeToReactivate } = useGetProfileCosts()\n  const minimumCakeRequired = profile.isActive ? numberCakeToUpdate : numberCakeToReactivate\n  const hasMinimumCakeRequired = useHasCakeBalance(minimumCakeRequired)\n  const TranslateString = useI18n()\n  const { account } = useWeb3React()\n  const cakeContract = useCake()\n  const cost = profile.isActive ? numberCakeToUpdate : numberCakeToReactivate\n\n  /**\n   * Check if the wallet has the required CAKE allowance to change their profile pic or reactivate\n   * If they don't, we send them to the approval screen first\n   */\n  useEffect(() => {\n    const checkApprovalStatus = async () => {\n      const response = await cakeContract.methods.allowance(account, getPancakeProfileAddress()).call()\n      const currentAllowance = new BigNumber(response)\n      setNeedsApproval(currentAllowance.lt(cost))\n    }\n\n    if (account) {\n      checkApprovalStatus()\n    }\n  }, [account, cost, setNeedsApproval, cakeContract])\n\n  if (!profile) {\n    return null\n  }\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"center\" flexDirection=\"column\">\n      <AvatarWrapper>\n        <ProfileAvatar profile={profile} />\n      </AvatarWrapper>\n      <Flex alignItems=\"center\" style={{ height: '48px' }} justifyContent=\"center\">\n        <Text as=\"p\" color=\"failure\">\n          {!hasMinimumCakeRequired &&\n            TranslateString(999, `${getFullDisplayBalance(minimumCakeRequired)} CAKE required to change profile pic`)}\n        </Text>\n      </Flex>\n      {profile.isActive ? (\n        <>\n          <Button\n            width=\"100%\"\n            mb=\"8px\"\n            onClick={needsApproval === true ? goToApprove : goToChange}\n            disabled={!hasMinimumCakeRequired || needsApproval === null}\n          >\n            {TranslateString(999, 'Change Profile Pic')}\n          </Button>\n          <DangerOutline width=\"100%\" onClick={goToRemove}>\n            {TranslateString(999, 'Remove Profile Pic')}\n          </DangerOutline>\n        </>\n      ) : (\n        <Button\n          width=\"100%\"\n          mb=\"8px\"\n          onClick={needsApproval === true ? goToApprove : goToChange}\n          disabled={!hasMinimumCakeRequired || needsApproval === null}\n        >\n          {TranslateString(999, 'Reactivate Profile')}\n        </Button>\n      )}\n      <Button variant=\"text\" width=\"100%\" onClick={onDismiss}>\n        {TranslateString(999, 'Close Window')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default StartPage\n","import React, { useState } from 'react'\nimport { AutoRenewIcon, Button, Checkbox, Flex, InjectedModalProps, Text } from '@luckyswap/uikit'\nimport useI18n from 'hooks/useI18n'\nimport useGetProfileCosts from 'hooks/useGetProfileCosts'\nimport { useAppDispatch } from 'state'\nimport { useProfile, useToast } from 'state/hooks'\nimport { fetchProfile } from 'state/profile'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useProfile as useProfileContract } from 'hooks/useContract'\nimport { useWeb3React } from '@web3-react/core'\n\ntype PauseProfilePageProps = InjectedModalProps\n\nconst PauseProfilePage: React.FC<PauseProfilePageProps> = ({ onDismiss }) => {\n  const [isAcknowledged, setIsAcknowledged] = useState(false)\n  const [isConfirming, setIsConfirming] = useState(false)\n  const { profile } = useProfile()\n  const { numberCakeToReactivate } = useGetProfileCosts()\n  const TranslateString = useI18n()\n  const pancakeProfileContract = useProfileContract()\n  const { account } = useWeb3React()\n  const { toastSuccess, toastError } = useToast()\n  const dispatch = useAppDispatch()\n\n  const handleChange = () => setIsAcknowledged(!isAcknowledged)\n\n  const handleDeactivateProfile = () => {\n    pancakeProfileContract.methods\n      .pauseProfile()\n      .send({ from: account })\n      .on('sending', () => {\n        setIsConfirming(true)\n      })\n      .on('receipt', async () => {\n        // Re-fetch profile\n        await dispatch(fetchProfile(account)as any) \n        toastSuccess('Profile Paused!')\n\n        onDismiss()\n      })\n      .on('error', (error) => {\n        toastError('Error', error?.message)\n        setIsConfirming(false)\n      })\n  }\n\n  if (!profile) {\n    return null\n  }\n\n  return (\n    <>\n      <Text as=\"p\" color=\"failure\" mb=\"24px\">\n        {TranslateString(999, 'This will suspend your profile and send your Collectible back to your wallet')}\n      </Text>\n      <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n        {TranslateString(\n          999,\n          \"While your profile is suspended, you won't be able to earn points, but your achievements and points will stay associated with your profile\",\n        )}\n      </Text>\n      <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n        {TranslateString(999, `Cost to reactivate in future: ${getBalanceNumber(numberCakeToReactivate)} CAKE`)}\n      </Text>\n      <label htmlFor=\"acknowledgement\" style={{ cursor: 'pointer', display: 'block', marginBottom: '24px' }}>\n        <Flex alignItems=\"center\">\n          <Checkbox id=\"acknowledgement\" checked={isAcknowledged} onChange={handleChange} scale=\"sm\" />\n          <Text ml=\"8px\">{TranslateString(476, 'I understand')}</Text>\n        </Flex>\n      </label>\n      <Button\n        width=\"100%\"\n        isLoading={isConfirming}\n        endIcon={isConfirming ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        disabled={!isAcknowledged || isConfirming}\n        onClick={handleDeactivateProfile}\n        mb=\"8px\"\n      >\n        {TranslateString(464, 'Confirm')}\n      </Button>\n      <Button variant=\"text\" width=\"100%\" onClick={onDismiss}>\n        {TranslateString(999, 'Close Window')}\n      </Button>\n    </>\n  )\n}\n\nexport default PauseProfilePage\n","import React, { useState } from 'react'\nimport { Button, InjectedModalProps, Skeleton, Text } from '@luckyswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport nftList from 'config/constants/nfts'\nimport { useProfile, useToast } from 'state/hooks'\nimport useI18n from 'hooks/useI18n'\nimport { fetchProfile } from 'state/profile'\nimport useGetWalletNfts from 'hooks/useGetWalletNfts'\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\nimport { usePancakeRabbits, useProfile as useProfileContract } from 'hooks/useContract'\nimport { getPancakeProfileAddress, getPancakeRabbitsAddress } from 'utils/addressHelpers'\nimport SelectionCard from '../SelectionCard'\nimport ApproveConfirmButtons from '../ApproveConfirmButtons'\n\ntype ChangeProfilePicPageProps = InjectedModalProps\n\nconst ChangeProfilePicPage: React.FC<ChangeProfilePicPageProps> = ({ onDismiss }) => {\n  const [tokenId, setTokenId] = useState(null)\n  const TranslateString = useI18n()\n  const { isLoading, nfts: nftsInWallet } = useGetWalletNfts()\n  const dispatch = useAppDispatch()\n  const { profile } = useProfile()\n  const pancakeRabbitsContract = usePancakeRabbits()\n  const profileContract = useProfileContract()\n  const { account } = useWeb3React()\n  const { toastSuccess } = useToast()\n  const {\n    isApproving,\n    isApproved,\n    isConfirmed,\n    isConfirming,\n    handleApprove,\n    handleConfirm,\n  } = useApproveConfirmTransaction({\n    onApprove: () => {\n      return pancakeRabbitsContract.methods.approve(getPancakeProfileAddress(), tokenId).send({ from: account })\n    },\n    onConfirm: () => {\n      if (!profile.isActive) {\n        return profileContract.methods.reactivateProfile(getPancakeRabbitsAddress(), tokenId).send({ from: account })\n      }\n\n      return profileContract.methods.updateProfile(getPancakeRabbitsAddress(), tokenId).send({ from: account })\n    },\n    onSuccess: async () => {\n      // Re-fetch profile\n      await dispatch(fetchProfile(account)as any) \n      toastSuccess('Profile Updated!')\n\n      onDismiss()\n    },\n  })\n  const bunnyIds = Object.keys(nftsInWallet).map((nftWalletItem) => Number(nftWalletItem))\n  const walletNfts = nftList.filter((nft) => bunnyIds.includes(nft.bunnyId))\n\n  return (\n    <>\n      <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n        {TranslateString(999, 'Choose a new Collectible to use as your profile pic.')}\n      </Text>\n      {isLoading ? (\n        <Skeleton height=\"80px\" mb=\"16px\" />\n      ) : (\n        walletNfts.map((walletNft) => {\n          const [firstTokenId] = nftsInWallet[walletNft.bunnyId].tokenIds\n\n          return (\n            <SelectionCard\n              name=\"profilePicture\"\n              key={walletNft.bunnyId}\n              value={firstTokenId}\n              image={`/images/nfts/${walletNft.images.md}`}\n              isChecked={firstTokenId === tokenId}\n              onChange={(value: string) => setTokenId(parseInt(value, 10))}\n              disabled={isApproving || isConfirming || isConfirmed}\n            >\n              <Text bold>{walletNft.name}</Text>\n            </SelectionCard>\n          )\n        })\n      )}\n      {!isLoading && walletNfts.length === 0 && (\n        <>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"16px\">\n            {TranslateString(999, 'Sorry! You don’t have any eligible Collectibles in your wallet to use!')}\n          </Text>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n            {TranslateString(999, 'Make sure you have a Pancake Collectible in your wallet and try again!')}\n          </Text>\n        </>\n      )}\n      <ApproveConfirmButtons\n        isApproveDisabled={isConfirmed || isConfirming || isApproved || tokenId === null}\n        isApproving={isApproving}\n        isConfirmDisabled={!isApproved || isConfirmed || tokenId === null}\n        isConfirming={isConfirming}\n        onApprove={handleApprove}\n        onConfirm={handleConfirm}\n      />\n      <Button variant=\"text\" width=\"100%\" onClick={onDismiss} disabled={isApproving || isConfirming}>\n        {TranslateString(999, 'Close Window')}\n      </Button>\n    </>\n  )\n}\n\nexport default ChangeProfilePicPage\n","import React, { useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { AutoRenewIcon, Button, Flex, InjectedModalProps, Text } from '@luckyswap/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { useCake } from 'hooks/useContract'\nimport { useProfile, useToast } from 'state/hooks'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport useGetProfileCosts from 'hooks/useGetProfileCosts'\nimport { UseEditProfileResponse } from './reducer'\n\ninterface ApproveCakePageProps extends InjectedModalProps {\n  goToChange: UseEditProfileResponse['goToChange']\n}\n\nconst ApproveCakePage: React.FC<ApproveCakePageProps> = ({ goToChange, onDismiss }) => {\n  const [isApproving, setIsApproving] = useState(false)\n  const { profile } = useProfile()\n  const TranslateString = useI18n()\n  const { account } = useWeb3React()\n  const { numberCakeToUpdate, numberCakeToReactivate } = useGetProfileCosts()\n  const cakeContract = useCake()\n  const { toastError } = useToast()\n  const cost = profile.isActive ? numberCakeToUpdate : numberCakeToReactivate\n\n  const handleApprove = () => {\n    cakeContract.methods\n      .approve(getPancakeProfileAddress(), cost.times(2).toJSON())\n      .send({ from: account })\n      .on('sending', () => {\n        setIsApproving(true)\n      })\n      .on('receipt', () => {\n        goToChange()\n      })\n      .on('error', (error) => {\n        toastError('Error', error?.message)\n        setIsApproving(false)\n      })\n  }\n\n  if (!profile) {\n    return null\n  }\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\n        <Text>\n          {profile.isActive ? TranslateString(999, 'Cost to update:') : TranslateString(999, 'Cost to reactivate:')}\n        </Text>\n        <Text>{TranslateString(999, `${getFullDisplayBalance(cost)} CAKE`)}</Text>\n      </Flex>\n      <Button\n        disabled={isApproving}\n        isLoading={isApproving}\n        endIcon={isApproving ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        width=\"100%\"\n        mb=\"8px\"\n        onClick={handleApprove}\n      >\n        {TranslateString(999, 'Approve')}\n      </Button>\n      <Button variant=\"text\" width=\"100%\" onClick={onDismiss} disabled={isApproving}>\n        {TranslateString(999, 'Close Window')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default ApproveCakePage\n","import React from 'react'\nimport { InjectedModalProps, Modal } from '@luckyswap/uikit'\nimport useI18n from 'hooks/useI18n'\nimport useEditProfile, { Views } from './reducer'\nimport StartView from './StartView'\nimport PauseProfileView from './PauseProfileView'\nimport ChangeProfilePicView from './ChangeProfilePicView'\nimport ApproveCakeView from './ApproveCakeView'\n\ntype EditProfileModalProps = InjectedModalProps\n\nconst viewTitle = {\n  [Views.START]: { id: 999, label: 'Edit Profile' },\n  [Views.CHANGE]: { id: 999, label: 'Change Profile Pic' },\n  [Views.REMOVE]: { id: 999, label: 'Remove Profile Pic' },\n  [Views.APPROVE]: { id: 999, label: 'Approve CAKE' },\n}\n\nconst EditProfileModal: React.FC<EditProfileModalProps> = ({ onDismiss }) => {\n  const { currentView, goToChange, goToRemove, goToApprove, goPrevious } = useEditProfile()\n  const TranslateString = useI18n()\n  const { id, label } = viewTitle[currentView]\n\n  const isStartView = currentView === Views.START\n  const handleBack = isStartView ? null : () => goPrevious()\n\n  return (\n    <Modal title={TranslateString(id, label)} onBack={handleBack} onDismiss={onDismiss} hideCloseButton={!isStartView}>\n      <div style={{ maxWidth: '400px' }}>\n        {currentView === Views.START && (\n          <StartView goToApprove={goToApprove} goToChange={goToChange} goToRemove={goToRemove} onDismiss={onDismiss} />\n        )}\n        {currentView === Views.REMOVE && <PauseProfileView onDismiss={onDismiss} />}\n        {currentView === Views.CHANGE && <ChangeProfilePicView onDismiss={onDismiss} />}\n        {currentView === Views.APPROVE && <ApproveCakeView goToChange={goToChange} onDismiss={onDismiss} />}\n      </div>\n    </Modal>\n  )\n}\n\nexport default EditProfileModal\n","import React from 'react'\nimport { Button, Flex, Heading, useModal, Won } from '@luckyswap/uikit'\nimport { useProfile } from 'state/hooks'\nimport useI18n from 'hooks/useI18n'\nimport ClaimNftAndCakeModal, { useCanClaim } from './ClaimGiftModal'\nimport HeaderWrapper from './HeaderWrapper'\nimport EditProfileModal from './EditProfileModal'\n\nconst ProfileHeader = () => {\n  const TranslateString = useI18n()\n  const { canClaim, checkClaimStatus } = useCanClaim()\n  const [onPresentClaimGiftModal] = useModal(<ClaimNftAndCakeModal onSuccess={checkClaimStatus} />)\n  const [onEditProfileModal] = useModal(<EditProfileModal />, false)\n  const { hasProfile } = useProfile()\n\n  return (\n    <HeaderWrapper>\n      <Flex\n        flexDirection={['column', null, 'row']}\n        alignItems={['start', null, 'center']}\n        justifyContent=\"space-between\"\n      >\n        <div>\n          <Heading as=\"h1\" size=\"xxl\" mb=\"8px\" color=\"secondary\">\n            {TranslateString(999, 'Your Profile')}\n          </Heading>\n          <Heading as=\"h2\" size=\"lg\" mb=\"16px\">\n            {TranslateString(999, 'Check your stats and collect achievements')}\n          </Heading>\n          {hasProfile && <Button onClick={onEditProfileModal}>{TranslateString(999, 'Edit Profile')}</Button>}\n        </div>\n        {canClaim && (\n          <Button variant=\"tertiary\" onClick={onPresentClaimGiftModal} startIcon={<Won />}>\n            {TranslateString(999, \"You've got a gift to claim!\")}\n          </Button>\n        )}\n      </Flex>\n    </HeaderWrapper>\n  )\n}\n\nexport default ProfileHeader\n","import React, { ImgHTMLAttributes } from 'react'\nimport styled from 'styled-components'\nimport { BunnyPlaceholderIcon } from '@luckyswap/uikit'\n\ninterface AchievementAvatarProps extends ImgHTMLAttributes<HTMLImageElement> {\n  badge?: string\n}\n\nconst NoBadgePlaceholder = styled(BunnyPlaceholderIcon)`\n  height: 48px;\n  width: 48px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    height: 64px;\n    width: 64px;\n  }\n`\n\nconst StyledAchievementAvatar = styled.img`\n  border-radius: 50%;\n  height: 48px;\n  width: 48px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    height: 64px;\n    width: 64px;\n  }\n`\n\nconst AchievementAvatar: React.FC<AchievementAvatarProps> = ({ badge, ...props }) => {\n  if (!badge) {\n    return <NoBadgePlaceholder />\n  }\n\n  return <StyledAchievementAvatar src={`/images/achievements/${badge}`} alt=\"achievement badge\" {...props} />\n}\n\nexport default AchievementAvatar\n","import React from 'react'\nimport { Text, TextProps } from '@luckyswap/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { TranslatableText as AchievementTitleType } from 'state/types'\n\ninterface AchievementTitleProps extends TextProps {\n  title: AchievementTitleType\n}\n\nconst AchievementTitle: React.FC<AchievementTitleProps> = ({ title, ...props }) => {\n  const TranslateString = useI18n()\n\n  if (typeof title === 'string') {\n    return (\n      <Text bold {...props}>\n        {title}\n      </Text>\n    )\n  }\n\n  const { id, fallback, data = {} } = title\n\n  return (\n    <Text bold {...props}>\n      {TranslateString(id, fallback, data)}\n    </Text>\n  )\n}\n\nexport default AchievementTitle\n","import React from 'react'\nimport { Text, TextProps } from '@luckyswap/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { TranslatableText as AchievementDescriptionType } from 'state/types'\nimport styled from 'styled-components'\n\ninterface AchievementDescriptionProps extends TextProps {\n  description?: AchievementDescriptionType\n}\n\nconst Description = styled(Text).attrs({ as: 'p', fontSize: '14px' })`\n  display: none;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: block;\n  }\n`\n\nconst AchievementDescription: React.FC<AchievementDescriptionProps> = ({ description, ...props }) => {\n  const TranslateString = useI18n()\n\n  if (!description) {\n    return null\n  }\n\n  if (typeof description === 'string') {\n    return (\n      <Text as=\"p\" color=\"textSubtle\" fontSize=\"14px\" {...props}>\n        {description}\n      </Text>\n    )\n  }\n\n  const { id, fallback, data = {} } = description\n\n  return (\n    <Description color=\"textSubtle\" {...props}>\n      {TranslateString(id, fallback, data)}\n    </Description>\n  )\n}\n\nexport default AchievementDescription\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, PrizeIcon, Text } from '@luckyswap/uikit'\nimport { Achievement } from 'state/types'\nimport AchievementAvatar from './AchievementAvatar'\nimport AchievementTitle from './AchievementTitle'\nimport AchievementDescription from './AchievementDescription'\n\ninterface AchievementCardProps {\n  achievement: Achievement\n}\n\nconst Details = styled(Flex)`\n  flex: 1;\n  flex-direction: column;\n  justify-content: center;\n  padding-left: 8px;\n  padding-right: 8px;\n`\n\nconst AchievementCard: React.FC<AchievementCardProps> = ({ achievement }) => {\n  return (\n    <Flex>\n      <AchievementAvatar badge={achievement.badge} />\n      <Details>\n        <AchievementTitle title={achievement.title} />\n        <AchievementDescription description={achievement.description} />\n      </Details>\n      <Flex alignItems=\"center\">\n        <PrizeIcon width=\"18px\" color=\"textSubtle\" mr=\"4px\" />\n        <Text color=\"textSubtle\">{achievement.points.toLocaleString()}</Text>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default AchievementCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Heading } from '@luckyswap/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { useAchievements } from 'state/hooks'\nimport AchievementCard from './AchievementCard'\n\nconst Grid = styled.div`\n  display: grid;\n  grid-gap: 16px;\n  grid-template-columns: 1fr;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    grid-template-columns: repeat(2, 1fr);\n  }\n`\n\nconst AchievementsList = () => {\n  const TranslateString = useI18n()\n  const achievements = useAchievements()\n\n  return (\n    <>\n      <Grid>\n        {achievements.map((achievement) => (\n          <AchievementCard key={achievement.id} achievement={achievement} />\n        ))}\n      </Grid>\n      {achievements.length === 0 && (\n        <Flex alignItems=\"center\" justifyContent=\"center\" style={{ height: '64px' }}>\n          <Heading as=\"h5\" size=\"md\" color=\"textDisabled\">\n            {TranslateString(999, 'No achievements yet!')}\n          </Heading>\n        </Flex>\n      )}\n    </>\n  )\n}\n\nexport default AchievementsList\n","import styled from 'styled-components'\n\nconst ActionColumn = styled.div`\n  flex: none;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    max-width: 160px;\n\n    & > button {\n      width: 100%;\n    }\n  }\n`\n\nexport default ActionColumn\n","import React from 'react'\nimport { Flex, FlexProps, PrizeIcon, Text } from '@luckyswap/uikit'\nimport useI18n from 'hooks/useI18n'\n\ninterface PointsLabelProps extends FlexProps {\n  points: number\n}\n\nconst PointsLabel: React.FC<PointsLabelProps> = ({ points, ...props }) => {\n  const TranslateString = useI18n()\n  const localePoints = points.toLocaleString()\n\n  return (\n    <Flex alignItems=\"center\" {...props}>\n      <PrizeIcon mr=\"4px\" color=\"textSubtle\" />\n      <Text color=\"textSubtle\">{TranslateString(999, `${localePoints} points`, { num: localePoints })}</Text>\n    </Flex>\n  )\n}\n\nexport default PointsLabel\n","import React, { useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport styled from 'styled-components'\nimport { AutoRenewIcon, Button, Flex } from '@luckyswap/uikit'\nimport { Achievement } from 'state/types'\nimport { useToast } from 'state/hooks'\nimport useI18n from 'hooks/useI18n'\nimport { usePointCenterIfoContract } from 'hooks/useContract'\nimport ActionColumn from '../ActionColumn'\nimport PointsLabel from './PointsLabel'\nimport AchievementTitle from '../AchievementTitle'\nimport AchievementAvatar from '../AchievementAvatar'\nimport AchievementDescription from '../AchievementDescription'\n\ninterface AchievementRowProps {\n  achievement: Achievement\n  onCollectSuccess?: (achievement: Achievement) => void\n}\n\nconst StyledAchievementRow = styled(Flex)`\n  border-bottom: 1px solid ${({ theme }) => theme.colors.borderColor};\n  padding-bottom: 16px;\n  padding-top: 16px;\n`\n\nconst Details = styled.div`\n  flex: 1;\n`\n\nconst Body = styled(Flex)`\n  flex-direction: column;\n  flex: 1;\n  margin-left: 8px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    align-items: center;\n    flex-direction: row;\n  }\n`\n\nconst AchievementRow: React.FC<AchievementRowProps> = ({ achievement, onCollectSuccess }) => {\n  const [isCollecting, setIsCollecting] = useState(false)\n  const TranslateString = useI18n()\n  const pointCenterContract = usePointCenterIfoContract()\n  const { account } = useWeb3React()\n  const { toastError, toastSuccess } = useToast()\n\n  const handleCollectPoints = () => {\n    pointCenterContract.methods\n      .getPoints(achievement.address)\n      .send({ from: account })\n      .on('sending', () => {\n        setIsCollecting(true)\n      })\n      .on('receipt', () => {\n        setIsCollecting(false)\n        onCollectSuccess(achievement)\n        toastSuccess('Points Collected!')\n      })\n      .on('error', (error) => {\n        toastError('Error', error?.message)\n        setIsCollecting(false)\n      })\n  }\n\n  return (\n    <StyledAchievementRow>\n      <AchievementAvatar badge={achievement.badge} />\n      <Body>\n        <Details>\n          <AchievementTitle title={achievement.title} />\n          <AchievementDescription description={achievement.description} />\n        </Details>\n        <PointsLabel points={achievement.points} px={[0, null, null, '32px']} mb={['16px', null, null, 0]} />\n        <ActionColumn>\n          <Button\n            onClick={handleCollectPoints}\n            isLoading={isCollecting}\n            endIcon={isCollecting ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n            disabled={isCollecting}\n            variant=\"secondary\"\n          >\n            {TranslateString(999, 'Collect')}\n          </Button>\n        </ActionColumn>\n      </Body>\n    </StyledAchievementRow>\n  )\n}\n\nexport default AchievementRow\n","import React, { useEffect, useState } from 'react'\nimport { sumBy } from 'lodash'\nimport { useAppDispatch } from 'state'\nimport { useWeb3React } from '@web3-react/core'\nimport { Card, CardBody, CardHeader, Flex, Heading, PrizeIcon } from '@luckyswap/uikit'\nimport { useProfile } from 'state/hooks'\nimport { Achievement } from 'state/types'\nimport { addPoints } from 'state/profile'\nimport { addAchievement } from 'state/achievements'\nimport useI18n from 'hooks/useI18n'\nimport { getClaimableIfoData } from 'utils/achievements'\nimport AchievementRow from './AchievementRow'\n\nconst ClaimPointsCallout = () => {\n  const [claimableAchievements, setClaimableAchievement] = useState<Achievement[]>([])\n  const TranslateString = useI18n()\n  const dispatch = useAppDispatch()\n  const { profile } = useProfile()\n  const { account } = useWeb3React()\n\n  useEffect(() => {\n    const fetchIfoClaims = async () => {\n      const ifoData = await getClaimableIfoData(account)\n      setClaimableAchievement(ifoData)\n    }\n\n    if (account) {\n      fetchIfoClaims()\n    }\n  }, [account, dispatch, setClaimableAchievement])\n\n  const handleCollectSuccess = (achievement: Achievement) => {\n    dispatch(addAchievement(achievement))\n    dispatch(addPoints(achievement.points))\n\n    setClaimableAchievement((prevClaimableAchievements) =>\n      prevClaimableAchievements.filter((prevClaimableAchievement) => prevClaimableAchievement.id !== achievement.id),\n    )\n  }\n\n  if (!profile?.isActive) {\n    return null\n  }\n\n  if (claimableAchievements.length === 0) {\n    return null\n  }\n\n  const totalPointsToCollect = sumBy(claimableAchievements, 'points')\n\n  return (\n    <Card isActive mb=\"32px\">\n      <CardHeader>\n        <Flex flexDirection={['column', null, 'row']} justifyContent={['start', null, 'space-between']}>\n          <Flex alignItems=\"center\" mb={['16px', null, 0]}>\n            <PrizeIcon width=\"32px\" mr=\"8px\" />\n            <Heading size=\"lg\">\n              {TranslateString(999, `${totalPointsToCollect} Points to Collect`, { num: totalPointsToCollect })}\n            </Heading>\n          </Flex>\n        </Flex>\n      </CardHeader>\n      <CardBody>\n        {claimableAchievements.map((achievement) => (\n          <AchievementRow key={achievement.address} achievement={achievement} onCollectSuccess={handleCollectSuccess} />\n        ))}\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default ClaimPointsCallout\n","import useI18n from 'hooks/useI18n'\nimport React from 'react'\nimport { Link as RouterLink } from 'react-router-dom'\nimport { ChevronLeftIcon, Flex, Text, ButtonMenu, ButtonMenuItem } from '@luckyswap/uikit'\n\ninterface MenuProps {\n  activeIndex?: number\n}\n\nconst Menu: React.FC<MenuProps> = ({ activeIndex = 0 }) => {\n  const TranslateString = useI18n()\n\n  return (\n    <>\n      <Flex mb=\"24px\">\n        <RouterLink to=\"/teams\">\n          <Flex alignItems=\"center\">\n            <ChevronLeftIcon color=\"primary\" />\n            <Text color=\"primary\">{TranslateString(1038, 'Teams Overview')}</Text>\n          </Flex>\n        </RouterLink>\n      </Flex>\n\n      <Flex mb=\"24px\" justifyContent=\"center\">\n        <ButtonMenu activeIndex={activeIndex} variant=\"subtle\" scale=\"sm\">\n          <ButtonMenuItem as={RouterLink} to=\"/profile/tasks\">\n            {TranslateString(1090, 'Task Center')}\n          </ButtonMenuItem>\n          <ButtonMenuItem as={RouterLink} to=\"/profile\">\n            {TranslateString(1104, 'Public Profile')}\n          </ButtonMenuItem>\n        </ButtonMenu>\n      </Flex>\n    </>\n  )\n}\n\nexport default Menu\n","import React from 'react'\nimport { Card, CardBody, CardHeader, Flex, Heading, Text } from '@luckyswap/uikit'\nimport useI18n from 'hooks/useI18n'\nimport AchievementsList from './components/AchievementsList'\nimport ClaimPointsCallout from './components/ClaimPointsCallout '\nimport ComingSoon from './components/ComingSoon'\nimport Menu from './components/Menu'\n\nconst TaskCenter = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <>\n      <Menu />\n      <ClaimPointsCallout />\n      <Card mb=\"32px\">\n        <CardHeader>\n          <Flex alignItems=\"center\" justifyContent=\"space-between\">\n            <div>\n              <Heading size=\"lg\" mb=\"8px\">\n                {TranslateString(1092, 'Achievements')}\n              </Heading>\n              <Text as=\"p\">{TranslateString(1084, 'Earn more points for completing larger quests!')}</Text>\n            </div>\n          </Flex>\n        </CardHeader>\n        <CardBody>\n          <AchievementsList />\n        </CardBody>\n      </Card>\n      <Card mb=\"32px\">\n        <CardHeader>\n          <Flex alignItems=\"center\" justifyContent=\"space-between\">\n            <div>\n              <Heading size=\"lg\" mb=\"8px\">\n                {TranslateString(1090, 'Task Center')}\n              </Heading>\n              <Text as=\"p\">{TranslateString(1088, 'Earn points by completing regular tasks!')}</Text>\n              <Text as=\"p\">\n                {TranslateString(1086, 'Collecting points for these tasks makes them available again.')}\n              </Text>\n            </div>\n          </Flex>\n        </CardHeader>\n        <CardBody>\n          <ComingSoon />\n        </CardBody>\n      </Card>\n    </>\n  )\n}\n\nexport default TaskCenter\n","import styled, { DefaultTheme } from 'styled-components'\nimport { CardHeader as UIKitCardHeader } from '@luckyswap/uikit'\n\nconst getBackground = (theme: DefaultTheme) => {\n  if (theme.isDark) {\n    return 'linear-gradient(139.73deg, #142339 0%, #24243D 47.4%, #37273F 100%)'\n  }\n\n  return 'linear-gradient(139.73deg, #E6FDFF 0%, #EFF4F5 46.87%, #F3EFFF 100%)'\n}\n\nconst CardHeader = styled(UIKitCardHeader)`\n  background: ${({ theme }) => getBackground(theme)};\n  position: relative;\n`\n\nexport default CardHeader\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text } from '@luckyswap/uikit'\nimport { Nft } from 'config/constants/types'\n\ninterface CollectibleCardProps {\n  nft: Nft\n}\n\nconst PreviewImage = styled.img`\n  border-radius: 4px;\n  margin-bottom: 8px;\n`\n\nconst CollectibleCard: React.FC<CollectibleCardProps> = ({ nft }) => {\n  return (\n    <div>\n      <PreviewImage src={`/images/nfts/${nft.images.lg}`} />\n      <Text bold mb=\"8px\">\n        {nft.name}\n      </Text>\n      <Text as=\"p\" fontSize=\"12px\" color=\"textSubtle\">\n        {nft.description}\n      </Text>\n    </div>\n  )\n}\n\nexport default CollectibleCard\n","import React from 'react'\nimport { Heading, Text, Flex, ChevronRightIcon } from '@luckyswap/uikit'\nimport { Link } from 'react-router-dom'\nimport useI18n from 'hooks/useI18n'\nimport nfts from 'config/constants/nfts'\nimport useGetWalletNfts from 'hooks/useGetWalletNfts'\nimport styled from 'styled-components'\nimport CollectibleCard from './CollectibleCard'\n\nconst CollectibleList = styled.div`\n  display: grid;\n  grid-gap: 16px;\n  grid-template-columns: repeat(2, 1fr);\n  padding: 16px 0;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    grid-gap: 24px;\n    grid-template-columns: repeat(3, 1fr);\n    padding: 24px 0;\n  }\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    grid-template-columns: repeat(4, 1fr);\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    grid-template-columns: repeat(5, 1fr);\n  }\n`\n\nconst Collectibles = () => {\n  const TranslateString = useI18n()\n  const { nfts: tokenIdsInWallet } = useGetWalletNfts()\n  const bunnyIds = Object.keys(tokenIdsInWallet).map((nftWalletItem) => Number(nftWalletItem))\n  const nftsInWallet = nfts.filter((nft) => bunnyIds.includes(nft.bunnyId))\n\n  return (\n    <>\n      <Heading as=\"h4\" size=\"md\" mb=\"8px\">\n        {TranslateString(999, 'Pancake Collectibles')}\n      </Heading>\n      <Text as=\"p\">\n        {TranslateString(\n          999,\n          'Pancake Collectibles are special ERC-721 NFTs that can be used on the Luckyswap platform.',\n        )}\n      </Text>\n      <Text as=\"p\">\n        {TranslateString(\n          999,\n          \"NFTs in this user's wallet that aren't approved Pancake Collectibles won't be shown here.\",\n        )}\n      </Text>\n      {nftsInWallet.length > 0 && (\n        <CollectibleList>\n          {nftsInWallet.map((nftInWallet) => (\n            <CollectibleCard key={nftInWallet.bunnyId} nft={nftInWallet} />\n          ))}\n        </CollectibleList>\n      )}\n      {nftsInWallet.length === 0 && (\n        <Flex justifyContent=\"center\" p=\"32px\">\n          <Text fontSize=\"20px\" bold color=\"textDisabled\">\n            {TranslateString(999, 'No NFTs Found')}\n          </Text>\n        </Flex>\n      )}\n      <Flex alignItems=\"center\" justifyContent=\"flex-end\">\n        <Link to=\"/collectibles\">{TranslateString(999, 'See all approved Pancake Collectibles')}</Link>\n        <ChevronRightIcon />\n      </Flex>\n    </>\n  )\n}\n\nexport default Collectibles\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useModal } from '@luckyswap/uikit'\nimport EditProfileModal from './EditProfileModal'\nimport ProfileAvatar, { ProfileAvatarProps } from './ProfileAvatar'\n\nconst EditOverlay = styled.div`\n  background: rgba(0, 0, 0, 0.6) url('/images/camera.svg') no-repeat center center;\n  background-size: 24px;\n  border-radius: 50%;\n  left: 0;\n  height: 100%;\n  opacity: 0;\n  position: absolute;\n  top: 0;\n  transition: opacity 300ms;\n  width: 100%;\n  z-index: 3;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    background-size: 48px;\n  }\n`\n\nconst StyledEditProfileAvatar = styled.div`\n  position: relative;\n\n  &:hover {\n    cursor: pointer;\n\n    ${EditOverlay} {\n      opacity: 1;\n    }\n  }\n`\n\nconst AvatarWrapper = styled.div`\n  height: 64px;\n  width: 64px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    height: 128px;\n    width: 128px;\n  }\n`\n\nconst EditProfileAvatar: React.FC<ProfileAvatarProps> = ({ profile }) => {\n  const [onEditProfileModal] = useModal(<EditProfileModal />, false)\n\n  return (\n    <StyledEditProfileAvatar onClick={onEditProfileModal}>\n      <AvatarWrapper>\n        <ProfileAvatar profile={profile} />\n      </AvatarWrapper>\n      <EditOverlay />\n    </StyledEditProfileAvatar>\n  )\n}\n\nexport default EditProfileAvatar\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useWeb3React } from '@web3-react/core'\nimport {\n  Card,\n  CardBody,\n  CheckmarkCircleIcon,\n  Flex,\n  Heading,\n  Link,\n  Tag,\n  Text,\n  PrizeIcon,\n  OpenNewIcon,\n  BlockIcon,\n} from '@luckyswap/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { useProfile } from 'state/hooks'\nimport Menu from './components/Menu'\nimport CardHeader from './components/CardHeader'\nimport Collectibles from './components/Collectibles'\nimport WalletNotConnected from './components/WalletNotConnected'\nimport StatBox from './components/StatBox'\nimport EditProfileAvatar from './components/EditProfileAvatar'\nimport AchievementsList from './components/AchievementsList'\n\nconst Content = styled.div`\n  flex: 1;\n  padding: 16px 0;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding: 0 16px;\n  }\n`\n\nconst Username = styled(Heading)`\n  font-size: 16px;\n  line-height: 24px;\n  margin-bottom: 8px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    font-size: 40px;\n    line-height: 44px;\n  }\n`\n\nconst Status = styled.div`\n  position: absolute;\n  right: 24px;\n  top: 24px;\n`\n\nconst ResponsiveText = styled(Text)`\n  font-size: 12px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    font-size: 16px;\n  }\n`\n\nconst AddressLink = styled(Link)`\n  display: inline-block;\n  font-weight: 400;\n  font-size: 12px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  width: 80px;\n  white-space: nowrap;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    font-size: 16px;\n    width: auto;\n  }\n`\n\nconst Section = styled.div`\n  margin-bottom: 40px;\n`\n\nconst PublicProfile = () => {\n  const { account } = useWeb3React()\n  const { profile } = useProfile()\n  const TranslateString = useI18n()\n\n  if (!account) {\n    return <WalletNotConnected />\n  }\n\n  return (\n    <>\n      <Menu activeIndex={1} />\n      <div>\n        <Card>\n          <CardHeader>\n            <Flex alignItems={['start', null, 'center']} flexDirection={['column', null, 'row']}>\n              <EditProfileAvatar profile={profile} />\n              <Content>\n                <Username>{`@${profile.username}`}</Username>\n                <Flex alignItems=\"center\">\n                  <AddressLink href={`https://testnet.bscscan.com/address/${account}`} color=\"text\" external>\n                    {account}\n                  </AddressLink>\n                  <OpenNewIcon ml=\"4px\" />\n                </Flex>\n                <ResponsiveText bold>{profile.team.name}</ResponsiveText>\n              </Content>\n            </Flex>\n            <Status>\n              {profile.isActive ? (\n                <Tag startIcon={<CheckmarkCircleIcon width=\"18px\" />} outline>\n                  {TranslateString(698, 'Active')}\n                </Tag>\n              ) : (\n                <Tag variant=\"failure\" startIcon={<BlockIcon width=\"18px\" />} outline>\n                  {TranslateString(999, 'Paused')}\n                </Tag>\n              )}\n            </Status>\n          </CardHeader>\n          <CardBody>\n            <StatBox icon={PrizeIcon} title={profile.points} subtitle={TranslateString(999, 'Points')} mb=\"24px\" />\n            <Section>\n              <Heading as=\"h4\" size=\"md\" mb=\"16px\">\n                {TranslateString(1092, 'Achievements')}\n              </Heading>\n              <AchievementsList />\n            </Section>\n            <Collectibles />\n          </CardBody>\n        </Card>\n      </div>\n    </>\n  )\n}\n\nexport default PublicProfile\n","import React from 'react'\nimport { Route } from 'react-router-dom'\nimport { useWeb3React } from '@web3-react/core'\nimport Page from 'components/layout/Page'\nimport PageLoader from 'components/PageLoader'\nimport { useFetchAchievements, useProfile } from 'state/hooks'\nimport ProfileCreation from './ProfileCreation'\nimport Header from './components/Header'\nimport TaskCenter from './TaskCenter'\nimport PublicProfile from './PublicProfile'\nimport LeadInBanner from '../TradingCompetition/components/LeadInBanner'\n\nconst Profile = () => {\n  const { isInitialized, isLoading, hasProfile } = useProfile()\n  const { account } = useWeb3React()\n\n  useFetchAchievements()\n\n  if (!isInitialized || isLoading) {\n    return <PageLoader />\n  }\n\n  if (account && !hasProfile) {\n    return (\n      <Page>\n        <ProfileCreation />\n      </Page>\n    )\n  }\n\n  return (\n    <>\n      <LeadInBanner />\n      <Page>\n        <Header />\n        <Route exact path=\"/profile\">\n          <PublicProfile />\n        </Route>\n        <Route path=\"/profile/tasks\">\n          <TaskCenter />\n        </Route>\n      </Page>\n    </>\n  )\n}\n\nexport default Profile\n"],"sourceRoot":""}
{"version":3,"sources":["views/TradingCompetition/components/CompetitionHeadingText.tsx","views/TradingCompetition/components/Section/sectionStyles.tsx","hooks/useTokenBalance.ts","views/Profile/components/ApproveConfirmButtons.tsx","hooks/useApproveConfirmTransaction.ts","hooks/useGetWalletNfts.ts","views/Profile/components/HeaderWrapper.tsx","views/Profile/components/ProfileAvatar.tsx","views/TradingCompetition/pngs/all-bunnies-clipped.png","views/TradingCompetition/components/LeadInBanner/index.tsx","views/Profile/components/ComingSoon.tsx","views/Profile/components/SecondaryCard.tsx","views/Profile/components/StatBox.tsx","views/Profile/ProfileCreation/UserName.tsx","views/Profile/ProfileCreation/config.ts","views/Profile/ProfileCreation/contexts/ProfileCreationProvider.tsx","views/Profile/ProfileCreation/Header.tsx","views/Profile/components/WalletNotConnected.tsx","hooks/useHasCakeBalance.ts","views/Profile/components/SelectionCard.tsx","views/Profile/components/NextStepButton.tsx","views/Profile/ProfileCreation/contexts/hook.ts","views/Profile/ProfileCreation/Mint.tsx","views/Profile/ProfileCreation/ProfilePicture.tsx","views/Profile/ProfileCreation/TeamSelection.tsx","views/Profile/components/ConfirmProfileCreationModal.tsx","views/Profile/components/EditProfileModal/reducer.ts","views/Profile/ProfileCreation/Steps.tsx","views/Profile/ProfileCreation/index.tsx","views/Profile/components/ClaimGiftModal.tsx","hooks/useGetProfileCosts.ts","views/Profile/components/EditProfileModal/StartView.tsx","views/Profile/components/EditProfileModal/PauseProfileView.tsx","views/Profile/components/EditProfileModal/ChangeProfilePicView.tsx","views/Profile/components/EditProfileModal/ApproveCakeView.tsx","views/Profile/components/EditProfileModal/index.tsx","views/Profile/components/Header.tsx","views/Profile/components/AchievementAvatar.tsx","views/Profile/components/AchievementTitle.tsx","views/Profile/components/AchievementDescription.tsx","views/Profile/components/AchievementCard.tsx","views/Profile/components/AchievementsList.tsx","views/Profile/components/ActionColumn.tsx","views/Profile/components/AchievementRow/PointsLabel.tsx","views/Profile/components/AchievementRow/index.tsx","views/Profile/components/ClaimPointsCallout .tsx","views/Profile/components/Menu.tsx","views/Profile/TaskCenter.tsx","views/Profile/components/CardHeader.tsx","views/Profile/components/CollectibleCard.tsx","views/Profile/components/Collectibles.tsx","views/Profile/components/EditProfileAvatar.tsx","views/Profile/PublicProfile.tsx","views/Profile/index.tsx"],"names":["H1SizeStyles","theme","mediaQueries","sm","H2SizeStyles","sharedStyles","props","textColor","background","fill","sharedVisiblyHiddenStyles","Heading1Text","styled","Heading","Heading2Text","VisuallyHiddenHeading2Text","DARKBG","DARKFILL","MIDBLUEBG","MIDBLUEBG_DARK","MIDBLUEFILL","MIDBLUEFILL_DARK","LIGHTBLUEBG","LIGHTBLUEBG_DARK","LIGHTBLUEFILL","LIGHTBLUEFILL_DARK","GOLDGRADIENT","useTokenBalance","tokenAddress","useState","BigNumber","balance","setBalance","account","useWeb3React","web3","useWeb3","fastRefresh","useRefresh","useEffect","a","getBep20Contract","fetchBalance","StyledApproveConfirmButtons","div","md","Button","UIKitButton","iconAttrs","width","color","ChevronRight","ChevronRightIcon","attrs","ChevronBottom","ChevronDownIcon","spinnerIcon","spin","ApproveConfirmButtons","isApproveDisabled","isApproving","isConfirming","isConfirmDisabled","onApprove","onConfirm","TranslateString","useI18n","disabled","onClick","endIcon","undefined","isLoading","justifyContent","initialState","approvalState","approvalReceipt","approvalError","confirmState","confirmReceipt","confirmError","reducer","state","actions","type","payload","useApproveConfirmTransaction","onRequiresApproval","onSuccess","noop","useReducer","dispatch","handlePreApprove","useRef","toastError","useToast","current","then","result","isApproved","isConfirmed","handleApprove","on","error","console","handleConfirm","pancakeRabbitsContract","getPancakeRabbitContract","nfts","lastUpdated","Date","now","action","data","timestamp","useGetWalletNfts","methods","balanceOf","call","getTokenIdAndBunnyId","index","tokenOfOwnerByIndex","getBunnyId","tokenURI","tokenId","makeBatchRequest","bunnyId","tokenUri","Number","tokenIdPromises","i","push","Promise","all","tokenIdsOwnedByWallet","reduce","accum","association","tokenIds","fetchNfts","refresh","HeaderWrapper","colors","textSubtle","TeamAvatar","img","card","AvatarWrapper","bg","AvatarInactive","NoProfileAvatarIcon","ProfileAvatar","profile","nft","images","isActive","src","team","alt","name","StyledLeadInBanner","Box","Container","PageContainer","allBunniesImageClipped","Header","SubHeader","LearnMoreLink","Link","primary","LaurelWrapper","LeadInBanner","alignItems","px","id","to","ml","ComingSoon","children","flexDirection","p","height","as","size","SecondaryCard","Text","defaultProps","StatBox","Icon","icon","title","subtitle","isDisabled","mr","textTransform","fontSize","bold","ExistingUserState","REGISTER_COST","STARTER_BUNNY_IDS","isInitialized","currentStep","teamId","userName","minimumCakeRequired","MINT_COST","multipliedBy","pow","allowance","totalCost","step","ProfileCreationContext","createContext","ProfileCreationProvider","isSubscribed","bunnyFactoryContract","getBunnyFactoryContract","canMint","fetchData","useMemo","nextStep","setTeamId","setTokenId","setUserName","Provider","value","Wrapper","steps","translationId","label","useContext","mb","map","WalletNotConnected","UnlockButton","useHasCakeBalance","minimumBalance","getCakeAddress","gte","StyledCard","Card","isSuccess","Label","Body","Children","StyledBackgroundImage","SelectionCard","isChecked","image","onChange","checked","e","target","style","flex","NextStepButton","useProfileCreation","nftList","filter","includes","minimumCakeBalanceToMint","Mint","setBunnyId","cakeContract","useCake","useBunnyFactory","hasMinimumCakeRequired","options","address","response","currentAllowance","approve","toJSON","send","from","mintNFT","num","parseInt","RouterLink","NftWrapper","ProfilePicture","setIsApproved","setIsApproving","nftsInWallet","usePancakeRabbits","bunnyIds","Object","keys","nftWalletItem","walletNfts","length","marginLeft","walletNft","firstTokenId","getPancakeProfileAddress","message","Team","currentTeamId","teams","useTeams","handleTeamSelection","teamValues","shuffle","values","isJoinable","users","toLocaleString","ConfirmProfileCreationModal","onDismiss","profileContract","useProfile","useAppDispatch","toastSuccess","createProfile","fetchProfile","Views","profileApiUrl","process","REACT_APP_API_PROFILE","minimumCakeToRegister","InputWrap","Input","UIKitInput","Indicator","Flex","UserName","isAcknowledged","setIsAcknowledged","library","IDLE","existingUserState","setExistingUserState","isValid","setIsValid","setIsLoading","setMessage","useModal","onPresentConfirmProfileCreation","isUserCreated","CREATED","checkUsernameValidity","debounce","fetch","res","ok","json","bnbSign","signature","eth","personal","sign","method","headers","body","JSON","stringify","username","dateCreated","formatDistance","parseISO","created_at","NEW","fetchUser","event","isWarning","minLength","maxLength","placeholder","py","minHeight","htmlFor","display","cursor","marginBottom","scale","mt","Steps","TeamSelection","ProfileCreation","Page","useCanClaim","canClaim","setCanClaim","setRefresh","checkClaimStatus","useCallback","prevRefresh","claimRefundContract","getClaimRefundContract","walletCanClaim","fetchClaimStatus","ClaimGift","setIsConfirming","useClaimRefundContract","maxWidth","getCakeBack","currentView","view","previousView","useEditProfile","START","goToStart","goToChange","CHANGE","goToRemove","REMOVE","goToApprove","APPROVE","goPrevious","useGetProfileCosts","numberCakeToReactivate","numberCakeToRegister","numberCakeToUpdate","costs","setCosts","getProfileContract","fetchCosts","DangerOutline","variant","failure","StartPage","needsApproval","setNeedsApproval","cost","lt","checkApprovalStatus","getFullDisplayBalance","PauseProfilePage","pancakeProfileContract","useProfileContract","getBalanceNumber","pauseProfile","ChangeProfilePicPage","updateProfile","getPancakeRabbitsAddress","reactivateProfile","ApproveCakePage","times","viewTitle","EditProfileModal","isStartView","handleBack","onBack","hideCloseButton","StartView","PauseProfileView","ChangeProfilePicView","ApproveCakeView","ProfileHeader","onPresentClaimGiftModal","onEditProfileModal","hasProfile","startIcon","NoBadgePlaceholder","BunnyPlaceholderIcon","StyledAchievementAvatar","AchievementAvatar","badge","AchievementTitle","fallback","Description","AchievementDescription","description","Details","AchievementCard","achievement","points","Grid","AchievementsList","achievements","useAchievements","ActionColumn","PointsLabel","localePoints","StyledAchievementRow","borderColor","AchievementRow","onCollectSuccess","isCollecting","setIsCollecting","pointCenterContract","usePointCenterIfoContract","getPoints","ClaimPointsCallout","claimableAchievements","setClaimableAchievement","getClaimableIfoData","ifoData","fetchIfoClaims","handleCollectSuccess","addAchievement","addPoints","prevClaimableAchievements","prevClaimableAchievement","totalPointsToCollect","sumBy","Menu","activeIndex","TaskCenter","CardHeader","UIKitCardHeader","isDark","getBackground","PreviewImage","CollectibleCard","lg","CollectibleList","Collectibles","tokenIdsInWallet","nftInWallet","EditOverlay","StyledEditProfileAvatar","EditProfileAvatar","Content","Username","Status","ResponsiveText","AddressLink","Section","PublicProfile","href","external","outline","PrizeIcon","Profile","useFetchAchievements","PageLoader","exact","path"],"mappings":"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","file":"static/js/7.a9383542.chunk.js","sourcesContent":["import { Heading } from '@beswap/uikit'\nimport styled, { DefaultTheme } from 'styled-components'\n\nconst H1SizeStyles = (theme: DefaultTheme) => `\n  font-size: 48px;\n  line-height: 110%;\n  white-space: nowrap;\n\n  ${theme.mediaQueries.sm} {\n    font-size: 64px;\n  }\n`\n\nconst H2SizeStyles = (theme: DefaultTheme) => `\n  font-size: 32px;\n  line-height: 110%;\n  white-space: nowrap;\n\n  ${theme.mediaQueries.sm} {\n    font-size: 40px\n  }\n`\n\nconst sharedStyles = (props: HeadingProps) => `\n  color: ${props.textColor ? props.textColor : '#ffffff'};\n  background:  ${props.background ? props.background : 'linear-gradient(#2b2c3a 0%, #2b2c3a 100%)'};\n  background-clip: text;\n  -webkit-background-clip: text;\n  ${\n    props.fill\n      ? `-webkit-text-fill-color: transparent;`\n      : `-webkit-text-stroke: 4px transparent;\n       text-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);`\n  }\n`\n\nconst sharedVisiblyHiddenStyles = `\n  visibility: hidden;\n  height: 0px;\n`\n\ninterface HeadingProps {\n  textColor?: string\n  background?: string\n  fill?: boolean\n}\n\nexport const Heading1Text = styled(Heading)<HeadingProps>`\n  ${({ theme }) => H1SizeStyles(theme)}\n  ${(props) => sharedStyles(props)}\n`\n\nexport const Heading2Text = styled(Heading)<HeadingProps>`\n  ${({ theme }) => H2SizeStyles(theme)}\n  ${(props) => sharedStyles(props)}\n`\n\nexport const VisuallyHiddenHeading1Text = styled(Heading)`\n  ${({ theme }) => H1SizeStyles(theme)}\n  ${sharedVisiblyHiddenStyles}\n`\n\nexport const VisuallyHiddenHeading2Text = styled(Heading)`\n  ${({ theme }) => H2SizeStyles(theme)}\n  ${sharedVisiblyHiddenStyles}\n`\n\nexport default Heading1Text\n","export const DARKBG = 'radial-gradient(329.58% 50% at 50% 50%, #3B2864 0%, #191326 100%)'\nexport const DARKFILL = '#191326'\nexport const MIDBLUEBG = 'linear-gradient(180deg, #CBD7EF 0%, #9A9FD0 100%)'\nexport const MIDBLUEBG_DARK = 'linear-gradient(180deg, #434575 0%, #66578D 100%)'\nexport const MIDBLUEFILL = '#9A9FD0'\nexport const MIDBLUEFILL_DARK = '#66578D'\nexport const LIGHTBLUEBG = 'linear-gradient(139.73deg, #E6FDFF 0%, #F3EFFF 100%)'\nexport const LIGHTBLUEBG_DARK = 'linear-gradient(139.73deg, #313D5C 0%, #3D2A54 100%)'\nexport const LIGHTBLUEFILL = '#F3EFFF'\nexport const LIGHTBLUEFILL_DARK = '#3D2A54'\nexport const GOLDGRADIENT = 'linear-gradient(180deg, #FFD800 0%, #EB8C00 100%)'\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { getBep20Contract, getCakeContract } from 'utils/contractHelpers'\nimport useWeb3 from './useWeb3'\nimport useRefresh from './useRefresh'\n\nconst useTokenBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { account } = useWeb3React()\n  const web3 = useWeb3()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress, web3)\n      const res =0 // = await contract.methods.balanceOf(account).call()\n      setBalance(new BigNumber(res))\n    }\n\n    if (account) {\n      fetchBalance()\n    }\n  }, [account, tokenAddress, web3, fastRefresh])\n\n  return balance\n}\n\nexport const useTotalSupply = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getCakeContract()\n      const supply = await cakeContract.methods.totalSupply().call()\n      setTotalSupply(new BigNumber(supply))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\n\nexport const useBurnedBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { slowRefresh } = useRefresh()\n  const web3 = useWeb3()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress, web3)\n      const res = 0 // await contract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call()\n      setBalance(new BigNumber(res))\n    }\n\n    fetchBalance()\n  }, [web3, tokenAddress, slowRefresh])\n\n  return balance\n}\n\nexport default useTokenBalance\n","import React from 'react'\nimport styled from 'styled-components'\nimport {\n  ChevronRightIcon,\n  Button as UIKitButton,\n  AutoRenewIcon,\n  ChevronDownIcon,\n  Box,\n  Flex,\n} from '@beswap/uikit'\nimport useI18n from 'hooks/useI18n'\n\ninterface ApproveConfirmButtonsProps {\n  isApproveDisabled: boolean\n  isApproving: boolean\n  isConfirming: boolean\n  isConfirmDisabled: boolean\n  onApprove: () => void\n  onConfirm: () => void\n}\n\nconst StyledApproveConfirmButtons = styled.div`\n  align-items: center;\n  display: grid;\n  grid-template-columns: 1fr;\n  justify-content: center;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    grid-template-columns: 1fr 24px 1fr;\n  }\n`\n\nconst Button = styled(UIKitButton)`\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    min-width: 160px;\n  }\n`\n\nconst iconAttrs = { width: '24px', color: 'textDisabled' }\n\nconst ChevronRight = styled(ChevronRightIcon).attrs(iconAttrs)`\n  display: none;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: block;\n  }\n`\n\nconst ChevronBottom = styled(ChevronDownIcon).attrs(iconAttrs)`\n  display: block;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: none;\n  }\n`\n\nconst spinnerIcon = <AutoRenewIcon spin color=\"currentColor\" />\n\nconst ApproveConfirmButtons: React.FC<ApproveConfirmButtonsProps> = ({\n  isApproveDisabled,\n  isApproving,\n  isConfirming,\n  isConfirmDisabled,\n  onApprove,\n  onConfirm,\n}) => {\n  const TranslateString = useI18n()\n\n  return (\n    <StyledApproveConfirmButtons>\n      <Box>\n        <Button\n          disabled={isApproveDisabled}\n          onClick={onApprove}\n          endIcon={isApproving ? spinnerIcon : undefined}\n          isLoading={isApproving}\n        >\n          {isApproving ? TranslateString(800, 'Approving') : TranslateString(564, 'Approve')}\n        </Button>\n      </Box>\n      <Flex justifyContent=\"center\">\n        <ChevronRight />\n        <ChevronBottom />\n      </Flex>\n      <Box>\n        <Button\n          onClick={onConfirm}\n          disabled={isConfirmDisabled}\n          isLoading={isConfirming}\n          endIcon={isConfirming ? spinnerIcon : undefined}\n        >\n          {isConfirming ? TranslateString(802, 'Confirming') : TranslateString(464, 'Confirm')}\n        </Button>\n      </Box>\n    </StyledApproveConfirmButtons>\n  )\n}\n\nexport default ApproveConfirmButtons\n","import { useEffect, useReducer, useRef } from 'react'\nimport { noop } from 'lodash'\nimport { useWeb3React } from '@web3-react/core'\nimport { useToast } from 'state/hooks'\n\ntype Web3Payload = Record<string, unknown> | null\n\ntype LoadingState = 'idle' | 'loading' | 'success' | 'fail'\n\ntype Action =\n  | { type: 'requires_approval' }\n  | { type: 'approve_sending' }\n  | { type: 'approve_receipt'; payload: Web3Payload }\n  | { type: 'approve_error'; payload: Web3Payload }\n  | { type: 'confirm_sending' }\n  | { type: 'confirm_receipt'; payload: Web3Payload }\n  | { type: 'confirm_error'; payload: Web3Payload }\n\ninterface State {\n  approvalState: LoadingState\n  approvalReceipt: Web3Payload\n  approvalError: Web3Payload\n  confirmState: LoadingState\n  confirmReceipt: Web3Payload\n  confirmError: Web3Payload\n}\n\nconst initialState: State = {\n  approvalState: 'idle',\n  approvalReceipt: null,\n  approvalError: null,\n  confirmState: 'idle',\n  confirmReceipt: null,\n  confirmError: null,\n}\n\nconst reducer = (state: State, actions: Action): State => {\n  switch (actions.type) {\n    case 'requires_approval':\n      return {\n        ...state,\n        approvalState: 'success',\n      }\n    case 'approve_sending':\n      return {\n        ...state,\n        approvalState: 'loading',\n      }\n    case 'approve_receipt':\n      return {\n        ...state,\n        approvalState: 'success',\n        approvalReceipt: actions.payload,\n      }\n    case 'approve_error':\n      return {\n        ...state,\n        approvalState: 'fail',\n        approvalError: actions.payload,\n      }\n    case 'confirm_sending':\n      return {\n        ...state,\n        confirmState: 'loading',\n      }\n    case 'confirm_receipt':\n      return {\n        ...state,\n        confirmState: 'success',\n        confirmReceipt: actions.payload,\n      }\n    case 'confirm_error':\n      return {\n        ...state,\n        confirmState: 'fail',\n        confirmError: actions.payload,\n      }\n    default:\n      return state\n  }\n}\n\ntype ContractHandler = () => any\n\ninterface ApproveConfirmTransaction {\n  onApprove: ContractHandler\n  onConfirm: ContractHandler\n  onRequiresApproval?: () => Promise<boolean>\n  onSuccess: (state: State) => void\n}\n\nconst useApproveConfirmTransaction = ({\n  onApprove,\n  onConfirm,\n  onRequiresApproval,\n  onSuccess = noop,\n}: ApproveConfirmTransaction) => {\n  const { account } = useWeb3React()\n  const [state, dispatch] = useReducer(reducer, initialState)\n  const handlePreApprove = useRef(onRequiresApproval)\n  const { toastError } = useToast()\n\n  // Check if approval is necessary, re-check if account changes\n  useEffect(() => {\n    if (account && handlePreApprove.current) {\n      handlePreApprove.current().then((result) => {\n        if (result) {\n          dispatch({ type: 'requires_approval' })\n        }\n      })\n    }\n  }, [account, handlePreApprove, dispatch])\n\n  return {\n    isApproving: state.approvalState === 'loading',\n    isApproved: state.approvalState === 'success',\n    isConfirming: state.confirmState === 'loading',\n    isConfirmed: state.confirmState === 'success',\n    approvalReceipt: state.approvalReceipt,\n    approvalError: state.approvalError,\n    confirmReceipt: state.confirmReceipt,\n    confirmError: state.confirmError,\n    handleApprove: () => {\n      onApprove()\n        .on('sending', () => {\n          dispatch({ type: 'approve_sending' })\n        })\n        .on('receipt', (payload: Web3Payload) => {\n          dispatch({ type: 'approve_receipt', payload })\n        })\n        .on('error', (error: Web3Payload) => {\n          dispatch({ type: 'approve_error', payload: error })\n          console.error('An error occurred approving transaction:', error)\n          toastError('An error occurred approving transaction')\n        })\n    },\n    handleConfirm: () => {\n      onConfirm()\n        .on('sending', () => {\n          dispatch({ type: 'confirm_sending' })\n        })\n        .on('receipt', (payload: Web3Payload) => {\n          dispatch({ type: 'confirm_receipt', payload })\n          onSuccess(state)\n        })\n        .on('error', (error: Web3Payload) => {\n          dispatch({ type: 'confirm_error', payload: error })\n          console.error('An error occurred confirming transaction:', error)\n          toastError('An error occurred confirming transaction')\n        })\n    },\n  }\n}\n\nexport default useApproveConfirmTransaction\n","import { useWeb3React } from '@web3-react/core'\nimport { useEffect, useReducer } from 'react'\nimport { getPancakeRabbitContract } from 'utils/contractHelpers'\nimport makeBatchRequest from 'utils/makeBatchRequest'\n\nconst pancakeRabbitsContract = getPancakeRabbitContract()\n\nexport type NftMap = {\n  [key: number]: {\n    tokenUri: string\n    tokenIds: number[]\n  }\n}\n\ntype Action = { type: 'set_nfts'; data: NftMap } | { type: 'reset' } | { type: 'refresh'; timestamp: number }\n\ntype State = {\n  isLoading: boolean\n  nfts: NftMap\n  lastUpdated: number\n}\n\nconst initialState: State = {\n  isLoading: true,\n  nfts: {},\n  lastUpdated: Date.now(),\n}\n\nconst reducer = (state: State, action: Action) => {\n  switch (action.type) {\n    case 'set_nfts':\n      return {\n        ...initialState,\n        isLoading: false,\n        nfts: action.data,\n      }\n    case 'refresh':\n      return {\n        ...initialState,\n        lastUpdated: action.timestamp,\n      }\n    case 'reset':\n      return {\n        ...initialState,\n        isLoading: false,\n      }\n    default:\n      return state\n  }\n}\n\nconst useGetWalletNfts = () => {\n  const [state, dispatch] = useReducer(reducer, initialState)\n  const { account } = useWeb3React()\n  const { lastUpdated } = state\n\n  useEffect(() => {\n    const fetchNfts = async () => {\n      try {\n        const balanceOf = await pancakeRabbitsContract.methods.balanceOf(account).call()\n\n        if (balanceOf > 0) {\n          const getTokenIdAndBunnyId = async (index: number) => {\n            try {\n              const { tokenOfOwnerByIndex, getBunnyId, tokenURI } = pancakeRabbitsContract.methods\n              const tokenId = await tokenOfOwnerByIndex(account, index).call()\n              const [bunnyId, tokenUri] = await makeBatchRequest([getBunnyId(tokenId).call, tokenURI(tokenId).call])\n\n              return [Number(bunnyId), Number(tokenId), tokenUri]\n            } catch (error) {\n              return null\n            }\n          }\n\n          const tokenIdPromises = []\n\n          for (let i = 0; i < balanceOf; i++) {\n            tokenIdPromises.push(getTokenIdAndBunnyId(i))\n          }\n\n          const tokenIdsOwnedByWallet = await Promise.all(tokenIdPromises)\n\n          const nfts: NftMap = tokenIdsOwnedByWallet.reduce((accum, association) => {\n            if (!association) {\n              return accum\n            }\n\n            const [bunnyId, tokenId, tokenUri] = association\n\n            return {\n              ...accum,\n              [bunnyId]: {\n                tokenUri,\n                tokenIds: accum[bunnyId] ? [...accum[bunnyId].tokenIds, tokenId] : [tokenId],\n              },\n            }\n          }, {})\n\n          dispatch({ type: 'set_nfts', data: nfts })\n        } else {\n          // Reset it in case of wallet change\n          dispatch({ type: 'reset' })\n        }\n      } catch (error) {\n        dispatch({ type: 'reset' })\n      }\n    }\n\n    if (account) {\n      fetchNfts()\n    }\n  }, [account, lastUpdated, dispatch])\n\n  const refresh = () => dispatch({ type: 'refresh', timestamp: Date.now() })\n\n  return { ...state, refresh }\n}\n\nexport default useGetWalletNfts\n","import styled from 'styled-components'\n\nconst HeaderWrapper = styled.div`\n  border-bottom: 2px solid ${({ theme }) => theme.colors.textSubtle};\n  margin-bottom: 24px;\n  padding-bottom: 24px;\n`\n\nexport default HeaderWrapper\n","import React from 'react'\nimport { NoProfileAvatarIcon } from '@beswap/uikit'\nimport { Profile } from 'state/types'\nimport styled from 'styled-components'\n\nexport interface ProfileAvatarProps {\n  profile: Profile\n}\n\nconst TeamAvatar = styled.img`\n  border: 1px solid ${({ theme }) => theme.card.background};\n  border-radius: 50%;\n  bottom: 0px;\n  position: absolute;\n  right: 0px;\n  min-width: 20px;\n  min-height: 20px;\n  width: 37.5%;\n  height: 37.5%;\n  z-index: 5;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    border-width: 2px;\n  }\n`\n\nconst AvatarWrapper = styled.div<{ bg: string }>`\n  background: url('${({ bg }) => bg}');\n  background-repeat: no-repeat;\n  background-size: cover;\n  border-radius: 50%;\n  position: relative;\n  width: 100%;\n  height: 100%;\n\n  & > img {\n    border-radius: 50%;\n  }\n`\n// TODO: replace with no profile avatar icon\nconst AvatarInactive = styled(NoProfileAvatarIcon)`\n  width: 100%;\n  height: 100%;\n`\n\nconst ProfileAvatar: React.FC<ProfileAvatarProps> = ({ profile }) => {\n  return (\n    <AvatarWrapper bg={`/images/nfts/${profile.nft?.images?.md}`}>\n      {!profile.isActive && <AvatarInactive />}\n      <TeamAvatar src={`/images/teams/${profile.team.images.alt}`} alt={profile.team.name} />\n    </AvatarWrapper>\n  )\n}\n\nexport default ProfileAvatar\n","export default __webpack_public_path__ + \"static/media/all-bunnies-clipped.6aa99e2e.png\";","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { ArrowForwardIcon, Box, Flex, LaurelLeftIcon, LaurelRightIcon } from '@beswap/uikit'\nimport styled from 'styled-components'\nimport useI18n from 'hooks/useI18n'\nimport PageContainer from 'components/layout/Container'\nimport allBunniesImageClipped from '../../pngs/all-bunnies-clipped.png'\nimport { DARKBG, GOLDGRADIENT } from '../Section/sectionStyles'\nimport { Heading1Text, Heading2Text } from '../CompetitionHeadingText'\n\nconst StyledLeadInBanner = styled(Box)`\n  background: ${DARKBG};\n  display: none;\n`\n\nconst Container = styled(PageContainer)`\n  padding-bottom: 24px;\n  padding-top: 24px;\n  text-align: center;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    background: url(${allBunniesImageClipped}) no-repeat bottom right 24px;\n    text-align: left;\n  }\n`\n\nconst Header = styled(Heading1Text)`\n  font-size: 24px;\n`\n\nconst SubHeader = styled(Heading2Text)`\n  font-size: 24px;\n  margin-bottom: 4px;\n`\n\nconst LearnMoreLink = styled(Link)`\n  align-items: center;\n  color: ${({ theme }) => theme.colors.primary};\n  display: inline-flex;\n  font-weight: 600;\n`\n\nconst LaurelWrapper = styled.div`\n  flex: none;\n  width: 40px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: none;\n  }\n`\n\nconst LeadInBanner = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <StyledLeadInBanner>\n      <Container>\n        <Flex alignItems=\"center\" justifyContent={['center', 'center', null, 'start']}>\n          <LaurelWrapper>\n            <LaurelLeftIcon width=\"40px\" color=\"warning\" />\n          </LaurelWrapper>\n          <Box px={['8px', '16px', null, '0']}>\n            <Header>{TranslateString(999, 'Easter Battle')}</Header>\n            <SubHeader background={GOLDGRADIENT} fill>\n              {TranslateString(999, '$200,000 in Prizes!')}\n            </SubHeader>\n            <LearnMoreLink id=\"hp-learn-more-cta\" to=\"/competition\">\n              {TranslateString(999, 'Learn More')}\n              <ArrowForwardIcon color=\"primary\" ml=\"4px\" />\n            </LearnMoreLink>\n          </Box>\n          <LaurelWrapper>\n            <LaurelRightIcon width=\"40px\" color=\"warning\" />\n          </LaurelWrapper>\n        </Flex>\n      </Container>\n    </StyledLeadInBanner>\n  )\n}\n\nexport default LeadInBanner\n","import React from 'react'\nimport { BunnyPlaceholderIcon, Flex, Heading } from '@beswap/uikit'\nimport useI18n from 'hooks/useI18n'\n\ninterface ComingSoonProps {\n  children?: React.ReactNode\n}\n\nconst ComingSoon: React.FC<ComingSoonProps> = ({ children }) => {\n  const TranslateString = useI18n()\n\n  return (\n    <Flex flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\" p=\"24px\">\n      <BunnyPlaceholderIcon width=\"72px\" height=\"72px\" />\n      <Heading as=\"h5\" size=\"md\" color=\"textDisabled\">\n        {children || TranslateString(999, 'Coming Soon!')}\n      </Heading>\n    </Flex>\n  )\n}\n\nexport default ComingSoon\n","import styled from 'styled-components'\nimport { Text } from '@beswap/uikit'\n\nconst SecondaryCard = styled(Text)`\n  border: 2px solid #2b2c3a;\n  border-radius: 16px;\n`\n\nSecondaryCard.defaultProps = {\n  p: '24px',\n}\n\nexport default SecondaryCard\n","import React, { ElementType, ReactNode } from 'react'\nimport { Flex, Heading, Text, TextProps } from '@beswap/uikit'\nimport SecondaryCard from './SecondaryCard'\n\ninterface StatBoxProps extends TextProps {\n  icon: ElementType\n  title: ReactNode\n  subtitle: ReactNode\n  isDisabled?: boolean\n}\n\nconst StatBox: React.FC<StatBoxProps> = ({ icon: Icon, title, subtitle, isDisabled = false, ...props }) => {\n  return (\n    <SecondaryCard {...props}>\n      <Flex alignItems=\"start\">\n        <Icon width=\"44px\" mr=\"24px\" color={isDisabled ? 'textDisabled' : 'currentColor'} />\n        <div>\n          <Heading as=\"h3\" size=\"xl\" color={isDisabled ? 'textDisabled' : 'text'}>\n            {title}\n          </Heading>\n          <Text textTransform=\"uppercase\" color={isDisabled ? 'textDisabled' : 'textSubtle'} fontSize=\"12px\" bold>\n            {subtitle}\n          </Text>\n        </div>\n      </Flex>\n    </SecondaryCard>\n  )\n}\n\nexport default StatBox\n","import React, { ChangeEvent, useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport {\n  Card,\n  CardBody,\n  Heading,\n  Text,\n  Input as UIKitInput,\n  Button,\n  AutoRenewIcon,\n  CheckmarkIcon,\n  Flex,\n  WarningIcon,\n  useModal,\n  Skeleton,\n  Checkbox,\n} from '@beswap/uikit'\nimport { parseISO, formatDistance } from 'date-fns'\nimport { useWeb3React } from '@web3-react/core'\nimport { useToast } from 'state/hooks'\nimport useWeb3 from 'hooks/useWeb3'\nimport useI18n from 'hooks/useI18n'\nimport useHasCakeBalance from 'hooks/useHasCakeBalance'\nimport debounce from 'lodash/debounce'\nimport ConfirmProfileCreationModal from '../components/ConfirmProfileCreationModal'\nimport useProfileCreation from './contexts/hook'\nimport { USERNAME_MIN_LENGTH, USERNAME_MAX_LENGTH, REGISTER_COST } from './config'\n\nenum ExistingUserState {\n  IDLE = 'idle', // initial state\n  CREATED = 'created', // username has already been created\n  NEW = 'new', // username has not been created\n}\n\nconst profileApiUrl = process.env.REACT_APP_API_PROFILE\nconst minimumCakeToRegister = new BigNumber(REGISTER_COST).multipliedBy(new BigNumber(10).pow(18))\n\nconst InputWrap = styled.div`\n  position: relative;\n  max-width: 240px;\n`\n\nconst Input = styled(UIKitInput)`\n  padding-right: 40px;\n`\n\nconst Indicator = styled(Flex)`\n  align-items: center;\n  height: 24px;\n  justify-content: center;\n  margin-top: -12px;\n  position: absolute;\n  right: 16px;\n  top: 50%;\n  width: 24px;\n`\n\nconst UserName: React.FC = () => {\n  const [isAcknowledged, setIsAcknowledged] = useState(false)\n  const { teamId, tokenId, userName, actions, minimumCakeRequired, allowance } = useProfileCreation()\n  const TranslateString = useI18n()\n  const { account, library } = useWeb3React()\n  const { toastError } = useToast()\n  const web3 = useWeb3()\n  const [existingUserState, setExistingUserState] = useState<ExistingUserState>(ExistingUserState.IDLE)\n  const [isValid, setIsValid] = useState(false)\n  const [isLoading, setIsLoading] = useState(false)\n  const [message, setMessage] = useState('')\n  const hasMinimumCakeRequired = useHasCakeBalance(minimumCakeToRegister)\n  const [onPresentConfirmProfileCreation] = useModal(\n    <ConfirmProfileCreationModal\n      userName={userName}\n      tokenId={tokenId}\n      account={account}\n      teamId={teamId}\n      minimumCakeRequired={minimumCakeRequired}\n      allowance={allowance}\n    />,\n    false,\n  )\n  const isUserCreated = existingUserState === ExistingUserState.CREATED\n\n  const checkUsernameValidity = debounce(async (value: string) => {\n    try {\n      setIsLoading(true)\n      const res = await fetch(`${profileApiUrl}/api/users/valid/${value}`)\n\n      if (res.ok) {\n        setIsValid(true)\n        setMessage('')\n      } else {\n        const data = await res.json()\n        setIsValid(false)\n        setMessage(data?.error?.message)\n      }\n    } finally {\n      setIsLoading(false)\n    }\n  }, 200)\n\n  const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target\n    actions.setUserName(value)\n    checkUsernameValidity(value)\n  }\n\n  const handleConfirm = async () => {\n    try {\n      setIsLoading(true)\n\n      const signature = library?.bnbSign\n        ? (await library.bnbSign(account, userName))?.signature\n        : await web3.eth.personal.sign(userName, account, null) // Last param is the password, and is null to request a signature in the wallet\n\n      const response = await fetch(`${profileApiUrl}/api/users/register`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          address: account,\n          username: userName,\n          signature,\n        }),\n      })\n\n      if (response.ok) {\n        setExistingUserState(ExistingUserState.CREATED)\n      } else {\n        const data = await response.json()\n        toastError(data?.error?.message)\n      }\n    } catch (error) {\n      toastError(error?.message ? error.message : JSON.stringify(error))\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  const handleAcknowledge = () => setIsAcknowledged(!isAcknowledged)\n\n  // Perform an initial check to see if the wallet has already created a username\n  useEffect(() => {\n    const fetchUser = async () => {\n      try {\n        const response = await fetch(`${profileApiUrl}/api/users/${account}`)\n        const data = await response.json()\n\n        if (response.ok) {\n          const dateCreated = formatDistance(parseISO(data.created_at), new Date())\n          setMessage(`Created ${dateCreated} ago`)\n\n          actions.setUserName(data.username)\n          setExistingUserState(ExistingUserState.CREATED)\n          setIsValid(true)\n        } else {\n          setExistingUserState(ExistingUserState.NEW)\n        }\n      } catch (error) {\n        toastError('Error: Unable to verify username')\n      }\n    }\n\n    if (account) {\n      fetchUser()\n    }\n  }, [account, setExistingUserState, setIsValid, setMessage, actions, toastError])\n\n  return (\n    <>\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\n        {TranslateString(999, `Step ${4}`)}\n      </Text>\n      <Heading as=\"h3\" size=\"xl\" mb=\"24px\">\n        {TranslateString(1110, 'Set Your Name')}\n      </Heading>\n      <Text as=\"p\" mb=\"24px\">\n        {TranslateString(\n          999,\n          'This name will be shown in team leaderboards and search results as long as your profile is active.',\n        )}\n      </Text>\n      <Card mb=\"24px\">\n        <CardBody>\n          <Heading as=\"h4\" size=\"lg\" mb=\"8px\">\n            {TranslateString(1110, 'Set Your Name')}\n          </Heading>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n            {TranslateString(\n              840,\n              'Your name must be at least 3 and at most 15 standard letters and numbers long. You can’t change this once you click Confirm.',\n            )}\n          </Text>\n          {existingUserState === ExistingUserState.IDLE ? (\n            <Skeleton height=\"40px\" width=\"240px\" />\n          ) : (\n            <InputWrap>\n              <Input\n                onChange={handleChange}\n                isWarning={userName && !isValid}\n                isSuccess={userName && isValid}\n                minLength={USERNAME_MIN_LENGTH}\n                maxLength={USERNAME_MAX_LENGTH}\n                disabled={isUserCreated}\n                placeholder={TranslateString(1094, 'Enter your name...')}\n                value={userName}\n              />\n              <Indicator>\n                {isLoading && <AutoRenewIcon spin />}\n                {!isLoading && isValid && userName && <CheckmarkIcon color=\"success\" />}\n                {!isLoading && !isValid && userName && <WarningIcon color=\"failure\" />}\n              </Indicator>\n            </InputWrap>\n          )}\n          <Text color=\"textSubtle\" fontSize=\"14px\" py=\"4px\" mb=\"16px\" style={{ minHeight: '30px' }}>\n            {message}\n          </Text>\n          <Text as=\"p\" color=\"failure\" mb=\"8px\">\n            {TranslateString(\n              1100,\n              \"Only reuse a name from other social media if you're OK with people viewing your wallet. You can't change your name once you click Confirm.\",\n            )}\n          </Text>\n          <label htmlFor=\"checkbox\" style={{ display: 'block', cursor: 'pointer', marginBottom: '24px' }}>\n            <Flex alignItems=\"center\">\n              <div style={{ flex: 'none' }}>\n                <Checkbox id=\"checkbox\" scale=\"sm\" checked={isAcknowledged} onChange={handleAcknowledge} />\n              </div>\n              <Text ml=\"8px\">\n                {TranslateString(1096, 'I understand that people can view my wallet if they know my username')}\n              </Text>\n            </Flex>\n          </label>\n          <Button onClick={handleConfirm} disabled={!isValid || isUserCreated || isLoading || !isAcknowledged}>\n            {TranslateString(464, 'Confirm')}\n          </Button>\n        </CardBody>\n      </Card>\n      <Button onClick={onPresentConfirmProfileCreation} disabled={!isValid || !isUserCreated}>\n        {TranslateString(842, 'Complete Profile')}\n      </Button>\n      {!hasMinimumCakeRequired && (\n        <Text color=\"failure\" mt=\"16px\">\n          {TranslateString(1098, `A minimum of ${REGISTER_COST} CAKE is required`, { num: REGISTER_COST })}\n        </Text>\n      )}\n    </>\n  )\n}\n\nexport default UserName\n","export const MINT_COST = 1\nexport const REGISTER_COST = 0.5\nexport const ALLOWANCE_MULTIPLIER = 5\nexport const STARTER_BUNNY_IDS = [5, 6, 7, 8, 9]\nexport const USERNAME_MIN_LENGTH = 3\nexport const USERNAME_MAX_LENGTH = 15\n","import React, { createContext, useEffect, useMemo, useReducer } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { getBunnyFactoryContract } from 'utils/contractHelpers'\nimport { MINT_COST, REGISTER_COST, ALLOWANCE_MULTIPLIER } from '../config'\nimport { Actions, State, ContextType } from './types'\n\nconst totalCost = MINT_COST + REGISTER_COST\nconst allowance = totalCost * ALLOWANCE_MULTIPLIER\n\nconst initialState: State = {\n  isInitialized: false,\n  currentStep: 0,\n  teamId: null,\n  tokenId: null,\n  userName: '',\n  minimumCakeRequired: new BigNumber(totalCost).multipliedBy(new BigNumber(10).pow(18)),\n  allowance: new BigNumber(allowance).multipliedBy(new BigNumber(10).pow(18)),\n}\n\nconst reducer = (state: State, action: Actions): State => {\n  switch (action.type) {\n    case 'initialize':\n      return {\n        ...state,\n        isInitialized: true,\n        currentStep: action.step,\n      }\n    case 'next_step':\n      return {\n        ...state,\n        currentStep: state.currentStep + 1,\n      }\n    case 'set_team':\n      return {\n        ...state,\n        teamId: action.teamId,\n      }\n    case 'set_tokenid':\n      return {\n        ...state,\n        tokenId: action.tokenId,\n      }\n    case 'set_username':\n      return {\n        ...state,\n        userName: action.userName,\n      }\n    default:\n      return state\n  }\n}\n\nexport const ProfileCreationContext = createContext<ContextType>(null)\n\nconst ProfileCreationProvider: React.FC = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState)\n  const { account } = useWeb3React()\n\n  // Initial checks\n  useEffect(() => {\n    let isSubscribed = true\n\n    const fetchData = async () => {\n      const bunnyFactoryContract = getBunnyFactoryContract()\n      const canMint = await bunnyFactoryContract.methods.canMint(account).call()\n      dispatch({ type: 'initialize', step: canMint ? 0 : 1 })\n\n      // When changing wallets quickly unmounting before the hasClaim finished causes a React error\n      if (isSubscribed) {\n        dispatch({ type: 'initialize', step: canMint ? 0 : 1 })\n      }\n    }\n\n    if (account) {\n      fetchData()\n    }\n\n    return () => {\n      isSubscribed = false\n    }\n  }, [account, dispatch])\n\n  const actions: ContextType['actions'] = useMemo(\n    () => ({\n      nextStep: () => dispatch({ type: 'next_step' }),\n      setTeamId: (teamId: number) => dispatch({ type: 'set_team', teamId }),\n      setTokenId: (tokenId: number) => dispatch({ type: 'set_tokenid', tokenId }),\n      setUserName: (userName: string) => dispatch({ type: 'set_username', userName }),\n    }),\n    [dispatch],\n  )\n\n  return <ProfileCreationContext.Provider value={{ ...state, actions }}>{children}</ProfileCreationContext.Provider>\n}\n\nexport default ProfileCreationProvider\n","import React, { useContext } from 'react'\nimport styled from 'styled-components'\nimport { Breadcrumbs, Heading, Text } from '@beswap/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { ProfileCreationContext } from './contexts/ProfileCreationProvider'\n\nconst Wrapper = styled.div`\n  border-bottom: 2px solid #2b2c3a;\n  margin-bottom: 24px;\n  padding-bottom: 24px;\n`\n\nconst steps = [\n  { translationId: 776, label: 'Get Starter Collectible' },\n  { translationId: 778, label: 'Set Profile Picture' },\n  { translationId: 780, label: 'Join Team' },\n  { translationId: 782, label: 'Set Name' },\n]\n\nconst Header: React.FC = () => {\n  const TranslateString = useI18n()\n  const { currentStep } = useContext(ProfileCreationContext)\n\n  return (\n    <Wrapper>\n      <Heading as=\"h1\" size=\"xxl\" color=\"#2b2c3a\" mb=\"8px\">\n        {TranslateString(770, 'Profile Setup')}\n      </Heading>\n      <Heading as=\"h2\" size=\"lg\" mb=\"8px\" color=\"#2b2c3a\">\n        {TranslateString(772, 'Show off your stats and collectibles with your unique profile')}\n      </Heading>\n      <Text color=\"#2b2c3a\" mb=\"24px\">\n        {TranslateString(999, 'Total cost: 1.5 CAKE')}\n      </Text>\n      <Breadcrumbs>\n        {steps.map(({ translationId, label }, index) => {\n          return (\n            <Text key={label} color={index <= currentStep ? '#2b2c3a' : 'textDisabled'}>\n              {TranslateString(translationId, label)}\n            </Text>\n          )\n        })}\n      </Breadcrumbs>\n    </Wrapper>\n  )\n}\n\nexport default Header\n","import React from 'react'\nimport { Heading, Text } from '@beswap/uikit'\nimport useI18n from 'hooks/useI18n'\nimport UnlockButton from 'components/UnlockButton'\n\nconst WalletNotConnected = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <div>\n      <Heading size=\"xl\" mb=\"8px\">\n        {TranslateString(852, 'Oops!')}\n      </Heading>\n      <Text as=\"p\" mb=\"16px\">\n        {TranslateString(999, 'Please connect your wallet to continue')}\n      </Text>\n      <UnlockButton />\n    </div>\n  )\n}\n\nexport default WalletNotConnected\n","import BigNumber from 'bignumber.js'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport useTokenBalance from './useTokenBalance'\n\n/**\n * A hook to check if a wallet's CAKE balance is at least the amount passed in\n */\nconst useHasCakeBalance = (minimumBalance: BigNumber) => {\n  const cakeBalance = useTokenBalance(getCakeAddress())\n  return cakeBalance.gte(minimumBalance)\n}\n\nexport default useHasCakeBalance\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card, Radio } from '@beswap/uikit'\n\ninterface SelectionCardProps {\n  name: string\n  value: string | number\n  isChecked?: boolean\n  onChange: (val: any) => void\n  image: string\n  disabled?: boolean\n}\n\nconst StyledCard = styled(Card)`\n  ${({ isSuccess }) => !isSuccess && 'box-shadow: none;'}\n  border-radius: 16px;\n  margin-bottom: 16px;\n`\n\nconst Label = styled.label<{ isDisabled: boolean }>`\n  cursor: ${({ isDisabled }) => (isDisabled ? 'not-allowed' : 'pointer')};\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  opacity: ${({ isDisabled }) => (isDisabled ? '0.6' : '1')};\n`\n\nconst Body = styled.div`\n  align-items: center;\n  border: 2px solid #2b2c3a;\n  border-radius: 16px 0 0 16px;\n  display: flex;\n  flex-grow: 1;\n  height: 80px;\n  padding: 8px 16px;\n`\n\nconst Children = styled.div`\n  margin-left: 16px;\n`\n\nconst StyledBackgroundImage = styled.div<{ src: string }>`\n  align-self: stretch;\n  background-image: url('${({ src }) => src}');\n  background-size: contain;\n  background-position: center;\n  background-repeat: no-repeat;\n  flex: none;\n  width: 80px;\n`\n\nconst SelectionCard: React.FC<SelectionCardProps> = ({\n  name,\n  value,\n  isChecked = false,\n  image,\n  onChange,\n  disabled,\n  children,\n  ...props\n}) => {\n  return (\n    <StyledCard isSuccess={isChecked} isDisabled={disabled} mb=\"16px\" {...props}>\n      <Label isDisabled={disabled}>\n        <Body>\n          <Radio\n            name={name}\n            checked={isChecked}\n            value={value}\n            onChange={(e) => onChange(e.target.value)}\n            disabled={disabled}\n            style={{ flex: 'none' }}\n          />\n          <Children>{children}</Children>\n        </Body>\n        <StyledBackgroundImage src={image} />\n      </Label>\n    </StyledCard>\n  )\n}\n\nexport default SelectionCard\n","import React from 'react'\nimport { ArrowForwardIcon, Button, ButtonProps } from '@beswap/uikit'\n\nconst NextStepButton: React.FC<ButtonProps> = (props) => {\n  return <Button endIcon={<ArrowForwardIcon color=\"currentColor\" />} {...props} />\n}\n\nexport default NextStepButton\n","import { useContext } from 'react'\nimport { ProfileCreationContext } from './ProfileCreationProvider'\n\nconst useProfileCreation = () => {\n  return useContext(ProfileCreationContext)\n}\n\nexport default useProfileCreation\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { Card, CardBody, Heading, Text } from '@beswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport useI18n from 'hooks/useI18n'\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\nimport { useCake, useBunnyFactory } from 'hooks/useContract'\nimport useHasCakeBalance from 'hooks/useHasCakeBalance'\nimport nftList from 'config/constants/nfts'\nimport SelectionCard from '../components/SelectionCard'\nimport NextStepButton from '../components/NextStepButton'\nimport ApproveConfirmButtons from '../components/ApproveConfirmButtons'\nimport useProfileCreation from './contexts/hook'\nimport { MINT_COST, STARTER_BUNNY_IDS } from './config'\n\nconst nfts = nftList.filter((nft) => STARTER_BUNNY_IDS.includes(nft.bunnyId))\nconst minimumCakeBalanceToMint = new BigNumber(MINT_COST).multipliedBy(new BigNumber(10).pow(18))\n\nconst Mint: React.FC = () => {\n  const [bunnyId, setBunnyId] = useState(null)\n  const { actions, minimumCakeRequired, allowance } = useProfileCreation()\n\n  const { account } = useWeb3React()\n  const cakeContract = useCake()\n  const bunnyFactoryContract = useBunnyFactory()\n  const TranslateString = useI18n()\n  const hasMinimumCakeRequired = useHasCakeBalance(minimumCakeBalanceToMint)\n  const {\n    isApproving,\n    isApproved,\n    isConfirmed,\n    isConfirming,\n    handleApprove,\n    handleConfirm,\n  } = useApproveConfirmTransaction({\n    onRequiresApproval: async () => {\n      // TODO: Move this to a helper, this check will be probably be used many times\n      try {\n        const response = await cakeContract.methods.allowance(account, bunnyFactoryContract.options.address).call()\n        const currentAllowance = new BigNumber(response)\n        return currentAllowance.gte(minimumCakeRequired)\n      } catch (error) {\n        return false\n      }\n    },\n    onApprove: () => {\n      return cakeContract.methods\n        .approve(bunnyFactoryContract.options.address, allowance.toJSON())\n        .send({ from: account })\n    },\n    onConfirm: () => {\n      return bunnyFactoryContract.methods.mintNFT(bunnyId).send({ from: account })\n    },\n    onSuccess: () => actions.nextStep(),\n  })\n\n  return (\n    <>\n      <Text fontSize=\"20px\" color=\"#2b2c3a\" bold>\n        {TranslateString(999, `Step ${1}`)}\n      </Text>\n      <Heading as=\"h3\" size=\"xl\" mb=\"24px\" color=\"#2b2c3a\">\n        {TranslateString(776, 'Get Starter Collectible')}\n      </Heading>\n      <Text as=\"p\" color=\"#2b2c3a\">{TranslateString(786, 'Every profile starts by making a “starter” collectible (NFT).')}</Text>\n      <Text as=\"p\" color=\"#2b2c3a\">{TranslateString(788, 'This starter will also become your first profile picture.')}</Text>\n      <Text as=\"p\" mb=\"24px\" color=\"#2b2c3a\">\n        {TranslateString(790, 'You can change your profile pic later if you get another approved Pancake Collectible.')}\n      </Text>\n      <Card mb=\"24px\">\n        <CardBody>\n          <Heading as=\"h4\" size=\"lg\" mb=\"8px\" color=\"#2b2c3a\">\n            {TranslateString(792, 'Choose your Starter!')}\n          </Heading>\n          <Text as=\"p\" color=\"#2b2c3a\">\n            {TranslateString(794, 'Choose wisely: you can only ever make one starter collectible!')}\n          </Text>\n          <Text as=\"p\" mb=\"24px\" color=\"#2b2c3a\">\n            {TranslateString(999, `Cost: ${MINT_COST} CAKE`, { num: MINT_COST })}\n          </Text>\n          {nfts.map((nft) => {\n            const handleChange = (value: string) => setBunnyId(parseInt(value, 10))\n\n            return (\n              <SelectionCard\n                key={nft.bunnyId}\n                name=\"mintStarter\"\n                value={nft.bunnyId}\n                image={`/images/nfts/${nft.images.md}`}\n                isChecked={bunnyId === nft.bunnyId}\n                onChange={handleChange}\n                disabled={isApproving || isConfirming || isConfirmed || !hasMinimumCakeRequired}\n              >\n                <Text bold color=\"#2b2c3a\">{nft.name}</Text>\n              </SelectionCard>\n            )\n          })}\n          {!hasMinimumCakeRequired && (\n            <Text color=\"failure\" mb=\"16px\">\n              {TranslateString(1098, `A minimum of ${MINT_COST} CAKE is required`)}\n            </Text>\n          )}\n          <ApproveConfirmButtons\n            isApproveDisabled={bunnyId === null || isConfirmed || isConfirming || isApproved}\n            isApproving={isApproving}\n            isConfirmDisabled={!isApproved || isConfirmed || !hasMinimumCakeRequired}\n            isConfirming={isConfirming}\n            onApprove={handleApprove}\n            onConfirm={handleConfirm}\n          />\n        </CardBody>\n      </Card>\n      <NextStepButton onClick={actions.nextStep} disabled={!isConfirmed}>\n        {TranslateString(798, 'Next Step')}\n      </NextStepButton>\n    </>\n  )\n}\n\nexport default Mint\n","import React, { useContext, useState } from 'react'\nimport styled from 'styled-components'\nimport { AutoRenewIcon, Button, Card, CardBody, Heading, Skeleton, Text } from '@beswap/uikit'\nimport { Link as RouterLink } from 'react-router-dom'\nimport { useWeb3React } from '@web3-react/core'\nimport nftList from 'config/constants/nfts'\nimport useI18n from 'hooks/useI18n'\nimport { useToast } from 'state/hooks'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\nimport { usePancakeRabbits } from 'hooks/useContract'\nimport useGetWalletNfts from 'hooks/useGetWalletNfts'\nimport SelectionCard from '../components/SelectionCard'\nimport NextStepButton from '../components/NextStepButton'\nimport { ProfileCreationContext } from './contexts/ProfileCreationProvider'\n\nconst Link = styled(RouterLink)`\n  color: ${({ theme }) => theme.colors.primary};\n`\n\nconst NftWrapper = styled.div`\n  margin-bottom: 24px;\n`\n\nconst ProfilePicture: React.FC = () => {\n  const [isApproved, setIsApproved] = useState(false)\n  const [isApproving, setIsApproving] = useState(false)\n  const { tokenId, actions } = useContext(ProfileCreationContext)\n  const TranslateString = useI18n()\n  const { isLoading, nfts: nftsInWallet } = useGetWalletNfts()\n  const pancakeRabbitsContract = usePancakeRabbits()\n  const { account } = useWeb3React()\n  const { toastError } = useToast()\n  const bunnyIds = Object.keys(nftsInWallet).map((nftWalletItem) => Number(nftWalletItem))\n  const walletNfts = nftList.filter((nft) => bunnyIds.includes(nft.bunnyId))\n\n  const handleApprove = () => {\n    pancakeRabbitsContract.methods\n      .approve(getPancakeProfileAddress(), tokenId)\n      .send({ from: account })\n      .on('sending', () => {\n        setIsApproving(true)\n      })\n      .on('receipt', () => {\n        setIsApproving(false)\n        setIsApproved(true)\n      })\n      .on('error', (error) => {\n        toastError('Error', error?.message)\n        setIsApproving(false)\n      })\n  }\n\n  if (!isLoading && walletNfts.length === 0) {\n    return (\n      <>\n        <Heading size=\"xl\" mb=\"24px\">\n          {TranslateString(852, 'Oops!')}\n        </Heading>\n        <Text bold fontSize=\"20px\" mb=\"24px\">\n          {TranslateString(854, 'We couldn’t find any Pancake Collectibles in your wallet.')}\n        </Text>\n        <Text as=\"p\">\n          {TranslateString(\n            856,\n            'You need a Pancake Collectible to finish setting up your profile. If you sold or transferred your starter collectible to another wallet, you’ll need to get it back or acquire a new one somehow. You can’t make a new starter with this wallet address.',\n          )}\n        </Text>\n      </>\n    )\n  }\n\n  return (\n    <>\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\n        {TranslateString(999, `Step ${2}`)}\n      </Text>\n      <Heading as=\"h3\" size=\"xl\" mb=\"24px\">\n        {TranslateString(778, 'Set Profile Picture')}\n      </Heading>\n      <Card mb=\"24px\">\n        <CardBody>\n          <Heading as=\"h4\" size=\"lg\" mb=\"8px\">\n            {TranslateString(812, 'Choose collectible')}\n          </Heading>\n          <Text as=\"p\" color=\"textSubtle\">\n            {TranslateString(\n              814,\n              'Choose a profile picture from the eligible collectibles (NFT) in your wallet, shown below.',\n            )}\n          </Text>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n            {TranslateString(816, 'Only approved Pancake Collectibles can be used.')}\n            <Link to=\"/collectibles\" style={{ marginLeft: '4px' }}>\n              {TranslateString(999, 'See the list >')}\n            </Link>\n          </Text>\n          <NftWrapper>\n            {isLoading ? (\n              <Skeleton height=\"80px\" mb=\"16px\" />\n            ) : (\n              walletNfts.map((walletNft) => {\n                const [firstTokenId] = nftsInWallet[walletNft.bunnyId].tokenIds\n\n                return (\n                  <SelectionCard\n                    name=\"profilePicture\"\n                    key={walletNft.bunnyId}\n                    value={firstTokenId}\n                    image={`/images/nfts/${walletNft.images.md}`}\n                    isChecked={firstTokenId === tokenId}\n                    onChange={(value: string) => actions.setTokenId(parseInt(value, 10))}\n                  >\n                    <Text bold>{walletNft.name}</Text>\n                  </SelectionCard>\n                )\n              })\n            )}\n          </NftWrapper>\n          <Heading as=\"h4\" size=\"lg\" mb=\"8px\">\n            {TranslateString(818, 'Allow collectible to be locked')}\n          </Heading>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"16px\">\n            {TranslateString(\n              820,\n              \"The collectible you've chosen will be locked in a smart contract while it’s being used as your profile picture. Don't worry - you'll be able to get it back at any time.\",\n            )}\n          </Text>\n          <Button\n            isLoading={isApproving}\n            disabled={isApproved || isApproving || tokenId === null}\n            onClick={handleApprove}\n            endIcon={isApproving ? <AutoRenewIcon spin color=\"currentColor\" /> : undefined}\n          >\n            {TranslateString(564, 'Approve')}\n          </Button>\n        </CardBody>\n      </Card>\n      <NextStepButton onClick={actions.nextStep} disabled={tokenId === null || !isApproved || isApproving}>\n        {TranslateString(798, 'Next Step')}\n      </NextStepButton>\n    </>\n  )\n}\n\nexport default ProfilePicture\n","import React, { useMemo } from 'react'\nimport { Card, CardBody, CommunityIcon, Flex, Heading, Text } from '@beswap/uikit'\nimport shuffle from 'lodash/shuffle'\nimport { useTeams } from 'state/hooks'\nimport useI18n from 'hooks/useI18n'\nimport SelectionCard from '../components/SelectionCard'\nimport NextStepButton from '../components/NextStepButton'\nimport useProfileCreation from './contexts/hook'\n\nconst Team: React.FC = () => {\n  const { teamId: currentTeamId, actions } = useProfileCreation()\n  const TranslateString = useI18n()\n  const { teams } = useTeams()\n  const handleTeamSelection = (value: string) => actions.setTeamId(parseInt(value, 10))\n  const teamValues = useMemo(() => shuffle(Object.values(teams)), [teams])\n\n  return (\n    <>\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\n        {TranslateString(999, `Step ${3}`)}\n      </Text>\n      <Heading as=\"h3\" size=\"xl\" mb=\"24px\">\n        {TranslateString(826, 'Join a Team')}\n      </Heading>\n      <Text as=\"p\" mb=\"24px\">\n        {TranslateString(828, 'It won’t be possible to undo the choice you make for the foreseeable future!')}\n      </Text>\n      <Card mb=\"24px\">\n        <CardBody>\n          <Heading as=\"h4\" size=\"lg\" mb=\"8px\">\n            {TranslateString(826, 'Join a Team')}\n          </Heading>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n            {TranslateString(\n              830,\n              'There’s currently no big difference between teams, and no benefit of joining one team over another for now. So pick whichever one you like!',\n            )}\n          </Text>\n          {teamValues &&\n            teamValues.map((team) => {\n              return (\n                <SelectionCard\n                  key={team.name}\n                  name=\"teams-selection\"\n                  value={team.id}\n                  isChecked={currentTeamId === team.id}\n                  image={`/images/teams/${team.images.md}`}\n                  onChange={handleTeamSelection}\n                  disabled={!team.isJoinable}\n                >\n                  <Text bold>{team.name}</Text>\n                  <Flex>\n                    <CommunityIcon mr=\"8px\" />\n                    <Text>{team.users.toLocaleString()}</Text>\n                  </Flex>\n                </SelectionCard>\n              )\n            })}\n        </CardBody>\n      </Card>\n      <NextStepButton onClick={actions.nextStep} disabled={currentTeamId === null}>\n        {TranslateString(798, 'Next Step')}\n      </NextStepButton>\n    </>\n  )\n}\n\nexport default Team\n","import React from 'react'\nimport { Modal, Flex, Text } from '@beswap/uikit'\nimport { useAppDispatch } from 'state'\nimport BigNumber from 'bignumber.js'\nimport useI18n from 'hooks/useI18n'\nimport { useCake, usePancakeRabbits, useProfile } from 'hooks/useContract'\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\nimport { fetchProfile } from 'state/profile'\nimport { useToast } from 'state/hooks'\nimport { REGISTER_COST } from '../ProfileCreation/config'\nimport ApproveConfirmButtons from './ApproveConfirmButtons'\n\ninterface Props {\n  userName: string\n  tokenId: number\n  account: string\n  teamId: number\n  minimumCakeRequired: BigNumber\n  allowance: BigNumber\n  onDismiss?: () => void\n}\n\nconst ConfirmProfileCreationModal: React.FC<Props> = ({\n  account,\n  teamId,\n  tokenId,\n  minimumCakeRequired,\n  allowance,\n  onDismiss,\n}) => {\n  const TranslateString = useI18n()\n  const profileContract = useProfile()\n  const pancakeRabbitsContract = usePancakeRabbits()\n  const dispatch = useAppDispatch()\n  const { toastSuccess } = useToast()\n  const cakeContract = useCake()\n\n  const {\n    isApproving,\n    isApproved,\n    isConfirmed,\n    isConfirming,\n    handleApprove,\n    handleConfirm,\n  } = useApproveConfirmTransaction({\n    onRequiresApproval: async () => {\n      try {\n        const response = await cakeContract.methods.allowance(account, profileContract.options.address).call()\n        const currentAllowance = new BigNumber(response)\n        return currentAllowance.gte(minimumCakeRequired)\n      } catch (error) {\n        return false\n      }\n    },\n    onApprove: () => {\n      return cakeContract.methods.approve(profileContract.options.address, allowance.toJSON()).send({ from: account })\n    },\n    onConfirm: () => {\n      return profileContract.methods\n        .createProfile(teamId, pancakeRabbitsContract.options.address, tokenId)\n        .send({ from: account })\n    },\n    onSuccess: async () => {\n      await dispatch(fetchProfile(account)as any) \n      onDismiss()\n      toastSuccess('Profile created!')\n    },\n  })\n\n  return (\n    <Modal title=\"Complete Profile\" onDismiss={onDismiss}>\n      <Text color=\"textSubtle\" mb=\"8px\">\n        {TranslateString(999, 'Submitting NFT to contract and confirming User Name and Team.')}\n      </Text>\n      <Flex justifyContent=\"space-between\" mb=\"16px\">\n        <Text>{TranslateString(999, 'Cost')}</Text>\n        <Text>{TranslateString(999, `${REGISTER_COST} CAKE`, { num: REGISTER_COST })}</Text>\n      </Flex>\n      <ApproveConfirmButtons\n        isApproveDisabled={isConfirmed || isConfirming || isApproved}\n        isApproving={isApproving}\n        isConfirmDisabled={!isApproved || isConfirmed}\n        isConfirming={isConfirming}\n        onApprove={handleApprove}\n        onConfirm={handleConfirm}\n      />\n    </Modal>\n  )\n}\n\nexport default ConfirmProfileCreationModal\n","import { useReducer } from 'react'\n\nexport enum Views {\n  START = 'start',\n  CHANGE = 'change',\n  REMOVE = 'remove',\n  APPROVE = 'approve',\n}\n\nexport type Actions =\n  | {\n      type: 'set_view'\n      view: Views\n    }\n  | {\n      type: 'go_previous'\n    }\n\nexport interface State {\n  currentView: Views\n  previousView: Views | null\n}\n\nconst reducer = (state: State, action: Actions): State => {\n  switch (action.type) {\n    case 'set_view':\n      return {\n        ...state,\n        currentView: action.view,\n        previousView: state.currentView,\n      }\n    case 'go_previous':\n      return {\n        ...state,\n        currentView: state.previousView,\n        previousView: state.currentView,\n      }\n    default:\n      return state\n  }\n}\n\nexport interface UseEditProfileResponse extends State {\n  goToStart: () => void\n  goToChange: () => void\n  goToApprove: () => void\n  goToRemove: () => void\n  goPrevious: () => void\n}\n\nconst useEditProfile = (): UseEditProfileResponse => {\n  const [state, dispatch] = useReducer(reducer, {\n    currentView: Views.START,\n    previousView: null,\n  })\n\n  const goToStart = () => dispatch({ type: 'set_view', view: Views.START })\n  const goToChange = () => dispatch({ type: 'set_view', view: Views.CHANGE })\n  const goToRemove = () => dispatch({ type: 'set_view', view: Views.REMOVE })\n  const goToApprove = () => dispatch({ type: 'set_view', view: Views.APPROVE })\n  const goPrevious = () => dispatch({ type: 'go_previous' })\n\n  return { ...state, goToStart, goToChange, goToRemove, goToApprove, goPrevious }\n}\n\nexport default useEditProfile\n","import React, { useContext } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport NoWalletConnected from '../components/WalletNotConnected'\nimport { ProfileCreationContext } from './contexts/ProfileCreationProvider'\nimport Mint from './Mint'\nimport ProfilePicture from './ProfilePicture'\nimport TeamSelection from './TeamSelection'\nimport UserName from './UserName'\n\nconst Steps = () => {\n  const { isInitialized, currentStep } = useContext(ProfileCreationContext)\n  const { account } = useWeb3React()\n\n  if (!account) {\n    return <NoWalletConnected />\n  }\n\n  if (!isInitialized) {\n    return <div>Loading...</div>\n  }\n\n  if (currentStep === 0) {\n    return <Mint />\n  }\n\n  if (currentStep === 1) {\n    return <ProfilePicture />\n  }\n\n  if (currentStep === 2) {\n    return <TeamSelection />\n  }\n\n  if (currentStep === 3) {\n    return <UserName />\n  }\n\n  return null\n}\n\nexport default Steps\n","import React from 'react'\nimport Page from 'components/layout/Page'\nimport Header from './Header'\nimport ProfileCreationProvider from './contexts/ProfileCreationProvider'\nimport Steps from './Steps'\n\nconst ProfileCreation = () => (\n  <ProfileCreationProvider>\n    <Page>\n      <Header />\n      <Steps />\n    </Page>\n  </ProfileCreationProvider>\n)\n\nexport default ProfileCreation\n","import React, { useCallback, useEffect, useState } from 'react'\nimport { Modal, Text, InjectedModalProps, Button, AutoRenewIcon } from '@beswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { useToast } from 'state/hooks'\nimport { useClaimRefundContract } from 'hooks/useContract'\nimport useI18n from 'hooks/useI18n'\nimport { getClaimRefundContract } from 'utils/contractHelpers'\n\ninterface ClaimGiftProps extends InjectedModalProps {\n  onSuccess: () => void\n}\n\nexport const useCanClaim = () => {\n  const [canClaim, setCanClaim] = useState(false)\n  const [refresh, setRefresh] = useState(1)\n  const { account } = useWeb3React()\n\n  const checkClaimStatus = useCallback(() => {\n    setRefresh((prevRefresh) => prevRefresh + 1)\n  }, [setRefresh])\n\n  useEffect(() => {\n    const fetchClaimStatus = async () => {\n      const claimRefundContract = getClaimRefundContract()\n      const walletCanClaim = await claimRefundContract.methods.canClaim(account).call()\n      setCanClaim(walletCanClaim)\n    }\n\n    if (account) {\n      fetchClaimStatus()\n    }\n  }, [account, refresh, setCanClaim])\n\n  return { canClaim, checkClaimStatus }\n}\n\nconst ClaimGift: React.FC<ClaimGiftProps> = ({ onSuccess, onDismiss }) => {\n  const [isConfirming, setIsConfirming] = useState(false)\n  const { account } = useWeb3React()\n  const TranslateString = useI18n()\n  const { canClaim } = useCanClaim()\n  const claimRefundContract = useClaimRefundContract()\n  const { toastSuccess, toastError } = useToast()\n\n  const handleClick = () => {\n    claimRefundContract.methods\n      .getCakeBack()\n      .send({ from: account })\n      .on('sending', () => {\n        setIsConfirming(true)\n      })\n      .on('receipt', () => {\n        toastSuccess('Success!')\n        onSuccess()\n        onDismiss()\n      })\n      .on('error', (error) => {\n        setIsConfirming(false)\n        toastError('Error', error?.message)\n      })\n  }\n\n  return (\n    <Modal title={TranslateString(999, 'Claim your Gift!')} onDismiss={onDismiss}>\n      <div style={{ maxWidth: '640px' }}>\n        <Text as=\"p\">{TranslateString(999, 'Thank you for being a day-one user of Pancake Profiles!')}</Text>\n        <Text as=\"p\" mb=\"8px\">\n          {TranslateString(\n            999,\n            \"If you haven't already noticed, we made a mistake and the starter bunny you chose got mixed up and changed into another bunny. Oops!\",\n          )}\n        </Text>\n        <Text as=\"p\">\n          {TranslateString(999, \"To make it up to you, we'll refund you the full 4 CAKE it cost to make your bunny.\")}\n        </Text>\n        <Text as=\"p\" mb=\"8px\">\n          {TranslateString(\n            999,\n            \"We're also preparing an all-new collectible for you to claim (for free!) in the near future.\",\n          )}\n        </Text>\n        <Text as=\"p\" mb=\"24px\">\n          {TranslateString(\n            999,\n            'Once you claim the refund, you can make another account with another wallet, mint a new bunny, and send it to your main account via the NFT page.',\n          )}\n        </Text>\n        <Button\n          endIcon={isConfirming ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          isLoading={isConfirming}\n          onClick={handleClick}\n          disabled={!canClaim}\n        >\n          {TranslateString(999, 'Claim Your CAKE')}\n        </Button>\n      </div>\n    </Modal>\n  )\n}\n\nexport default ClaimGift\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { getProfileContract } from 'utils/contractHelpers'\nimport makeBatchRequest from 'utils/makeBatchRequest'\nimport { useToast } from 'state/hooks'\n\nconst useGetProfileCosts = () => {\n  const [costs, setCosts] = useState({\n    numberCakeToReactivate: new BigNumber(0),\n    numberCakeToRegister: new BigNumber(0),\n    numberCakeToUpdate: new BigNumber(0),\n  })\n  const { toastError } = useToast()\n\n  useEffect(() => {\n    const fetchCosts = async () => {\n      try {\n        const profileContract = getProfileContract()\n        const [numberCakeToReactivate, numberCakeToRegister, numberCakeToUpdate] = await makeBatchRequest([\n          profileContract.methods.numberCakeToReactivate().call,\n          profileContract.methods.numberCakeToRegister().call,\n          profileContract.methods.numberCakeToUpdate().call,\n        ])\n\n        setCosts({\n          numberCakeToReactivate: new BigNumber(numberCakeToReactivate as string),\n          numberCakeToRegister: new BigNumber(numberCakeToRegister as string),\n          numberCakeToUpdate: new BigNumber(numberCakeToUpdate as string),\n        })\n      } catch (error) {\n        toastError('Error', 'Could not retrieve CAKE costs for profile')\n      }\n    }\n\n    fetchCosts()\n  }, [setCosts, toastError])\n\n  return costs\n}\n\nexport default useGetProfileCosts\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { Button, Flex, Text, InjectedModalProps } from '@beswap/uikit'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\nimport { useCake } from 'hooks/useContract'\nimport useI18n from 'hooks/useI18n'\nimport useGetProfileCosts from 'hooks/useGetProfileCosts'\nimport useHasCakeBalance from 'hooks/useHasCakeBalance'\nimport { useProfile } from 'state/hooks'\nimport { UseEditProfileResponse } from './reducer'\nimport ProfileAvatar from '../ProfileAvatar'\n\ninterface StartPageProps extends InjectedModalProps {\n  goToChange: UseEditProfileResponse['goToChange']\n  goToRemove: UseEditProfileResponse['goToRemove']\n  goToApprove: UseEditProfileResponse['goToApprove']\n}\n\nconst DangerOutline = styled(Button).attrs({ variant: 'secondary' })`\n  border-color: ${({ theme }) => theme.colors.failure};\n  color: ${({ theme }) => theme.colors.failure};\n  margin-bottom: 24px;\n\n  &:hover:not(:disabled):not(.button--disabled):not(:active) {\n    border-color: ${({ theme }) => theme.colors.failure};\n    opacity: 0.8;\n  }\n`\n\nconst AvatarWrapper = styled.div`\n  height: 64px;\n  width: 64px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    height: 128px;\n    width: 128px;\n  }\n`\n\nconst StartPage: React.FC<StartPageProps> = ({ goToApprove, goToChange, goToRemove, onDismiss }) => {\n  const [needsApproval, setNeedsApproval] = useState(null)\n  const { profile } = useProfile()\n  const { numberCakeToUpdate, numberCakeToReactivate } = useGetProfileCosts()\n  const minimumCakeRequired = profile.isActive ? numberCakeToUpdate : numberCakeToReactivate\n  const hasMinimumCakeRequired = useHasCakeBalance(minimumCakeRequired)\n  const TranslateString = useI18n()\n  const { account } = useWeb3React()\n  const cakeContract = useCake()\n  const cost = profile.isActive ? numberCakeToUpdate : numberCakeToReactivate\n\n  /**\n   * Check if the wallet has the required CAKE allowance to change their profile pic or reactivate\n   * If they don't, we send them to the approval screen first\n   */\n  useEffect(() => {\n    const checkApprovalStatus = async () => {\n      const response = await cakeContract.methods.allowance(account, getPancakeProfileAddress()).call()\n      const currentAllowance = new BigNumber(response)\n      setNeedsApproval(currentAllowance.lt(cost))\n    }\n\n    if (account) {\n      checkApprovalStatus()\n    }\n  }, [account, cost, setNeedsApproval, cakeContract])\n\n  if (!profile) {\n    return null\n  }\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"center\" flexDirection=\"column\">\n      <AvatarWrapper>\n        <ProfileAvatar profile={profile} />\n      </AvatarWrapper>\n      <Flex alignItems=\"center\" style={{ height: '48px' }} justifyContent=\"center\">\n        <Text as=\"p\" color=\"failure\">\n          {!hasMinimumCakeRequired &&\n            TranslateString(999, `${getFullDisplayBalance(minimumCakeRequired)} CAKE required to change profile pic`)}\n        </Text>\n      </Flex>\n      {profile.isActive ? (\n        <>\n          <Button\n            width=\"100%\"\n            mb=\"8px\"\n            onClick={needsApproval === true ? goToApprove : goToChange}\n            disabled={!hasMinimumCakeRequired || needsApproval === null}\n          >\n            {TranslateString(999, 'Change Profile Pic')}\n          </Button>\n          <DangerOutline width=\"100%\" onClick={goToRemove}>\n            {TranslateString(999, 'Remove Profile Pic')}\n          </DangerOutline>\n        </>\n      ) : (\n        <Button\n          width=\"100%\"\n          mb=\"8px\"\n          onClick={needsApproval === true ? goToApprove : goToChange}\n          disabled={!hasMinimumCakeRequired || needsApproval === null}\n        >\n          {TranslateString(999, 'Reactivate Profile')}\n        </Button>\n      )}\n      <Button variant=\"text\" width=\"100%\" onClick={onDismiss}>\n        {TranslateString(999, 'Close Window')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default StartPage\n","import React, { useState } from 'react'\nimport { AutoRenewIcon, Button, Checkbox, Flex, InjectedModalProps, Text } from '@beswap/uikit'\nimport useI18n from 'hooks/useI18n'\nimport useGetProfileCosts from 'hooks/useGetProfileCosts'\nimport { useAppDispatch } from 'state'\nimport { useProfile, useToast } from 'state/hooks'\nimport { fetchProfile } from 'state/profile'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useProfile as useProfileContract } from 'hooks/useContract'\nimport { useWeb3React } from '@web3-react/core'\n\ntype PauseProfilePageProps = InjectedModalProps\n\nconst PauseProfilePage: React.FC<PauseProfilePageProps> = ({ onDismiss }) => {\n  const [isAcknowledged, setIsAcknowledged] = useState(false)\n  const [isConfirming, setIsConfirming] = useState(false)\n  const { profile } = useProfile()\n  const { numberCakeToReactivate } = useGetProfileCosts()\n  const TranslateString = useI18n()\n  const pancakeProfileContract = useProfileContract()\n  const { account } = useWeb3React()\n  const { toastSuccess, toastError } = useToast()\n  const dispatch = useAppDispatch()\n\n  const handleChange = () => setIsAcknowledged(!isAcknowledged)\n\n  const handleDeactivateProfile = () => {\n    pancakeProfileContract.methods\n      .pauseProfile()\n      .send({ from: account })\n      .on('sending', () => {\n        setIsConfirming(true)\n      })\n      .on('receipt', async () => {\n        // Re-fetch profile\n        await dispatch(fetchProfile(account)as any) \n        toastSuccess('Profile Paused!')\n\n        onDismiss()\n      })\n      .on('error', (error) => {\n        toastError('Error', error?.message)\n        setIsConfirming(false)\n      })\n  }\n\n  if (!profile) {\n    return null\n  }\n\n  return (\n    <>\n      <Text as=\"p\" color=\"failure\" mb=\"24px\">\n        {TranslateString(999, 'This will suspend your profile and send your Collectible back to your wallet')}\n      </Text>\n      <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n        {TranslateString(\n          999,\n          \"While your profile is suspended, you won't be able to earn points, but your achievements and points will stay associated with your profile\",\n        )}\n      </Text>\n      <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n        {TranslateString(999, `Cost to reactivate in future: ${getBalanceNumber(numberCakeToReactivate)} CAKE`)}\n      </Text>\n      <label htmlFor=\"acknowledgement\" style={{ cursor: 'pointer', display: 'block', marginBottom: '24px' }}>\n        <Flex alignItems=\"center\">\n          <Checkbox id=\"acknowledgement\" checked={isAcknowledged} onChange={handleChange} scale=\"sm\" />\n          <Text ml=\"8px\">{TranslateString(476, 'I understand')}</Text>\n        </Flex>\n      </label>\n      <Button\n        width=\"100%\"\n        isLoading={isConfirming}\n        endIcon={isConfirming ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        disabled={!isAcknowledged || isConfirming}\n        onClick={handleDeactivateProfile}\n        mb=\"8px\"\n      >\n        {TranslateString(464, 'Confirm')}\n      </Button>\n      <Button variant=\"text\" width=\"100%\" onClick={onDismiss}>\n        {TranslateString(999, 'Close Window')}\n      </Button>\n    </>\n  )\n}\n\nexport default PauseProfilePage\n","import React, { useState } from 'react'\nimport { Button, InjectedModalProps, Skeleton, Text } from '@beswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport nftList from 'config/constants/nfts'\nimport { useProfile, useToast } from 'state/hooks'\nimport useI18n from 'hooks/useI18n'\nimport { fetchProfile } from 'state/profile'\nimport useGetWalletNfts from 'hooks/useGetWalletNfts'\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\nimport { usePancakeRabbits, useProfile as useProfileContract } from 'hooks/useContract'\nimport { getPancakeProfileAddress, getPancakeRabbitsAddress } from 'utils/addressHelpers'\nimport SelectionCard from '../SelectionCard'\nimport ApproveConfirmButtons from '../ApproveConfirmButtons'\n\ntype ChangeProfilePicPageProps = InjectedModalProps\n\nconst ChangeProfilePicPage: React.FC<ChangeProfilePicPageProps> = ({ onDismiss }) => {\n  const [tokenId, setTokenId] = useState(null)\n  const TranslateString = useI18n()\n  const { isLoading, nfts: nftsInWallet } = useGetWalletNfts()\n  const dispatch = useAppDispatch()\n  const { profile } = useProfile()\n  const pancakeRabbitsContract = usePancakeRabbits()\n  const profileContract = useProfileContract()\n  const { account } = useWeb3React()\n  const { toastSuccess } = useToast()\n  const {\n    isApproving,\n    isApproved,\n    isConfirmed,\n    isConfirming,\n    handleApprove,\n    handleConfirm,\n  } = useApproveConfirmTransaction({\n    onApprove: () => {\n      return pancakeRabbitsContract.methods.approve(getPancakeProfileAddress(), tokenId).send({ from: account })\n    },\n    onConfirm: () => {\n      if (!profile.isActive) {\n        return profileContract.methods.reactivateProfile(getPancakeRabbitsAddress(), tokenId).send({ from: account })\n      }\n\n      return profileContract.methods.updateProfile(getPancakeRabbitsAddress(), tokenId).send({ from: account })\n    },\n    onSuccess: async () => {\n      // Re-fetch profile\n      await dispatch(fetchProfile(account)as any) \n      toastSuccess('Profile Updated!')\n\n      onDismiss()\n    },\n  })\n  const bunnyIds = Object.keys(nftsInWallet).map((nftWalletItem) => Number(nftWalletItem))\n  const walletNfts = nftList.filter((nft) => bunnyIds.includes(nft.bunnyId))\n\n  return (\n    <>\n      <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n        {TranslateString(999, 'Choose a new Collectible to use as your profile pic.')}\n      </Text>\n      {isLoading ? (\n        <Skeleton height=\"80px\" mb=\"16px\" />\n      ) : (\n        walletNfts.map((walletNft) => {\n          const [firstTokenId] = nftsInWallet[walletNft.bunnyId].tokenIds\n\n          return (\n            <SelectionCard\n              name=\"profilePicture\"\n              key={walletNft.bunnyId}\n              value={firstTokenId}\n              image={`/images/nfts/${walletNft.images.md}`}\n              isChecked={firstTokenId === tokenId}\n              onChange={(value: string) => setTokenId(parseInt(value, 10))}\n              disabled={isApproving || isConfirming || isConfirmed}\n            >\n              <Text bold>{walletNft.name}</Text>\n            </SelectionCard>\n          )\n        })\n      )}\n      {!isLoading && walletNfts.length === 0 && (\n        <>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"16px\">\n            {TranslateString(999, 'Sorry! You don’t have any eligible Collectibles in your wallet to use!')}\n          </Text>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n            {TranslateString(999, 'Make sure you have a Pancake Collectible in your wallet and try again!')}\n          </Text>\n        </>\n      )}\n      <ApproveConfirmButtons\n        isApproveDisabled={isConfirmed || isConfirming || isApproved || tokenId === null}\n        isApproving={isApproving}\n        isConfirmDisabled={!isApproved || isConfirmed || tokenId === null}\n        isConfirming={isConfirming}\n        onApprove={handleApprove}\n        onConfirm={handleConfirm}\n      />\n      <Button variant=\"text\" width=\"100%\" onClick={onDismiss} disabled={isApproving || isConfirming}>\n        {TranslateString(999, 'Close Window')}\n      </Button>\n    </>\n  )\n}\n\nexport default ChangeProfilePicPage\n","import React, { useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { AutoRenewIcon, Button, Flex, InjectedModalProps, Text } from '@beswap/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { useCake } from 'hooks/useContract'\nimport { useProfile, useToast } from 'state/hooks'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport useGetProfileCosts from 'hooks/useGetProfileCosts'\nimport { UseEditProfileResponse } from './reducer'\n\ninterface ApproveCakePageProps extends InjectedModalProps {\n  goToChange: UseEditProfileResponse['goToChange']\n}\n\nconst ApproveCakePage: React.FC<ApproveCakePageProps> = ({ goToChange, onDismiss }) => {\n  const [isApproving, setIsApproving] = useState(false)\n  const { profile } = useProfile()\n  const TranslateString = useI18n()\n  const { account } = useWeb3React()\n  const { numberCakeToUpdate, numberCakeToReactivate } = useGetProfileCosts()\n  const cakeContract = useCake()\n  const { toastError } = useToast()\n  const cost = profile.isActive ? numberCakeToUpdate : numberCakeToReactivate\n\n  const handleApprove = () => {\n    cakeContract.methods\n      .approve(getPancakeProfileAddress(), cost.times(2).toJSON())\n      .send({ from: account })\n      .on('sending', () => {\n        setIsApproving(true)\n      })\n      .on('receipt', () => {\n        goToChange()\n      })\n      .on('error', (error) => {\n        toastError('Error', error?.message)\n        setIsApproving(false)\n      })\n  }\n\n  if (!profile) {\n    return null\n  }\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\n        <Text>\n          {profile.isActive ? TranslateString(999, 'Cost to update:') : TranslateString(999, 'Cost to reactivate:')}\n        </Text>\n        <Text>{TranslateString(999, `${getFullDisplayBalance(cost)} CAKE`)}</Text>\n      </Flex>\n      <Button\n        disabled={isApproving}\n        isLoading={isApproving}\n        endIcon={isApproving ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        width=\"100%\"\n        mb=\"8px\"\n        onClick={handleApprove}\n      >\n        {TranslateString(999, 'Approve')}\n      </Button>\n      <Button variant=\"text\" width=\"100%\" onClick={onDismiss} disabled={isApproving}>\n        {TranslateString(999, 'Close Window')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default ApproveCakePage\n","import React from 'react'\nimport { InjectedModalProps, Modal } from '@beswap/uikit'\nimport useI18n from 'hooks/useI18n'\nimport useEditProfile, { Views } from './reducer'\nimport StartView from './StartView'\nimport PauseProfileView from './PauseProfileView'\nimport ChangeProfilePicView from './ChangeProfilePicView'\nimport ApproveCakeView from './ApproveCakeView'\n\ntype EditProfileModalProps = InjectedModalProps\n\nconst viewTitle = {\n  [Views.START]: { id: 999, label: 'Edit Profile' },\n  [Views.CHANGE]: { id: 999, label: 'Change Profile Pic' },\n  [Views.REMOVE]: { id: 999, label: 'Remove Profile Pic' },\n  [Views.APPROVE]: { id: 999, label: 'Approve CAKE' },\n}\n\nconst EditProfileModal: React.FC<EditProfileModalProps> = ({ onDismiss }) => {\n  const { currentView, goToChange, goToRemove, goToApprove, goPrevious } = useEditProfile()\n  const TranslateString = useI18n()\n  const { id, label } = viewTitle[currentView]\n\n  const isStartView = currentView === Views.START\n  const handleBack = isStartView ? null : () => goPrevious()\n\n  return (\n    <Modal title={TranslateString(id, label)} onBack={handleBack} onDismiss={onDismiss} hideCloseButton={!isStartView}>\n      <div style={{ maxWidth: '400px' }}>\n        {currentView === Views.START && (\n          <StartView goToApprove={goToApprove} goToChange={goToChange} goToRemove={goToRemove} onDismiss={onDismiss} />\n        )}\n        {currentView === Views.REMOVE && <PauseProfileView onDismiss={onDismiss} />}\n        {currentView === Views.CHANGE && <ChangeProfilePicView onDismiss={onDismiss} />}\n        {currentView === Views.APPROVE && <ApproveCakeView goToChange={goToChange} onDismiss={onDismiss} />}\n      </div>\n    </Modal>\n  )\n}\n\nexport default EditProfileModal\n","import React from 'react'\nimport { Button, Flex, Heading, useModal, Won } from '@beswap/uikit'\nimport { useProfile } from 'state/hooks'\nimport useI18n from 'hooks/useI18n'\nimport ClaimNftAndCakeModal, { useCanClaim } from './ClaimGiftModal'\nimport HeaderWrapper from './HeaderWrapper'\nimport EditProfileModal from './EditProfileModal'\n\nconst ProfileHeader = () => {\n  const TranslateString = useI18n()\n  const { canClaim, checkClaimStatus } = useCanClaim()\n  const [onPresentClaimGiftModal] = useModal(<ClaimNftAndCakeModal onSuccess={checkClaimStatus} />)\n  const [onEditProfileModal] = useModal(<EditProfileModal />, false)\n  const { hasProfile } = useProfile()\n\n  return (\n    <HeaderWrapper>\n      <Flex\n        flexDirection={['column', null, 'row']}\n        alignItems={['start', null, 'center']}\n        justifyContent=\"space-between\"\n      >\n        <div>\n          <Heading as=\"h1\" size=\"xxl\" mb=\"8px\" color=\"secondary\">\n            {TranslateString(999, 'Your Profile')}\n          </Heading>\n          <Heading as=\"h2\" size=\"lg\" mb=\"16px\">\n            {TranslateString(999, 'Check your stats and collect achievements')}\n          </Heading>\n          {hasProfile && <Button onClick={onEditProfileModal}>{TranslateString(999, 'Edit Profile')}</Button>}\n        </div>\n        {canClaim && (\n          <Button variant=\"tertiary\" onClick={onPresentClaimGiftModal} startIcon={<Won />}>\n            {TranslateString(999, \"You've got a gift to claim!\")}\n          </Button>\n        )}\n      </Flex>\n    </HeaderWrapper>\n  )\n}\n\nexport default ProfileHeader\n","import React, { ImgHTMLAttributes } from 'react'\nimport styled from 'styled-components'\nimport { BunnyPlaceholderIcon } from '@beswap/uikit'\n\ninterface AchievementAvatarProps extends ImgHTMLAttributes<HTMLImageElement> {\n  badge?: string\n}\n\nconst NoBadgePlaceholder = styled(BunnyPlaceholderIcon)`\n  height: 48px;\n  width: 48px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    height: 64px;\n    width: 64px;\n  }\n`\n\nconst StyledAchievementAvatar = styled.img`\n  border-radius: 50%;\n  height: 48px;\n  width: 48px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    height: 64px;\n    width: 64px;\n  }\n`\n\nconst AchievementAvatar: React.FC<AchievementAvatarProps> = ({ badge, ...props }) => {\n  if (!badge) {\n    return <NoBadgePlaceholder />\n  }\n\n  return <StyledAchievementAvatar src={`/images/achievements/${badge}`} alt=\"achievement badge\" {...props} />\n}\n\nexport default AchievementAvatar\n","import React from 'react'\nimport { Text, TextProps } from '@beswap/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { TranslatableText as AchievementTitleType } from 'state/types'\n\ninterface AchievementTitleProps extends TextProps {\n  title: AchievementTitleType\n}\n\nconst AchievementTitle: React.FC<AchievementTitleProps> = ({ title, ...props }) => {\n  const TranslateString = useI18n()\n\n  if (typeof title === 'string') {\n    return (\n      <Text bold {...props}>\n        {title}\n      </Text>\n    )\n  }\n\n  const { id, fallback, data = {} } = title\n\n  return (\n    <Text bold {...props}>\n      {TranslateString(id, fallback, data)}\n    </Text>\n  )\n}\n\nexport default AchievementTitle\n","import React from 'react'\nimport { Text, TextProps } from '@beswap/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { TranslatableText as AchievementDescriptionType } from 'state/types'\nimport styled from 'styled-components'\n\ninterface AchievementDescriptionProps extends TextProps {\n  description?: AchievementDescriptionType\n}\n\nconst Description = styled(Text).attrs({ as: 'p', fontSize: '14px' })`\n  display: none;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: block;\n  }\n`\n\nconst AchievementDescription: React.FC<AchievementDescriptionProps> = ({ description, ...props }) => {\n  const TranslateString = useI18n()\n\n  if (!description) {\n    return null\n  }\n\n  if (typeof description === 'string') {\n    return (\n      <Text as=\"p\" color=\"textSubtle\" fontSize=\"14px\" {...props}>\n        {description}\n      </Text>\n    )\n  }\n\n  const { id, fallback, data = {} } = description\n\n  return (\n    <Description color=\"textSubtle\" {...props}>\n      {TranslateString(id, fallback, data)}\n    </Description>\n  )\n}\n\nexport default AchievementDescription\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, PrizeIcon, Text } from '@beswap/uikit'\nimport { Achievement } from 'state/types'\nimport AchievementAvatar from './AchievementAvatar'\nimport AchievementTitle from './AchievementTitle'\nimport AchievementDescription from './AchievementDescription'\n\ninterface AchievementCardProps {\n  achievement: Achievement\n}\n\nconst Details = styled(Flex)`\n  flex: 1;\n  flex-direction: column;\n  justify-content: center;\n  padding-left: 8px;\n  padding-right: 8px;\n`\n\nconst AchievementCard: React.FC<AchievementCardProps> = ({ achievement }) => {\n  return (\n    <Flex>\n      <AchievementAvatar badge={achievement.badge} />\n      <Details>\n        <AchievementTitle title={achievement.title} />\n        <AchievementDescription description={achievement.description} />\n      </Details>\n      <Flex alignItems=\"center\">\n        <PrizeIcon width=\"18px\" color=\"textSubtle\" mr=\"4px\" />\n        <Text color=\"textSubtle\">{achievement.points.toLocaleString()}</Text>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default AchievementCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Heading } from '@beswap/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { useAchievements } from 'state/hooks'\nimport AchievementCard from './AchievementCard'\n\nconst Grid = styled.div`\n  display: grid;\n  grid-gap: 16px;\n  grid-template-columns: 1fr;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    grid-template-columns: repeat(2, 1fr);\n  }\n`\n\nconst AchievementsList = () => {\n  const TranslateString = useI18n()\n  const achievements = useAchievements()\n\n  return (\n    <>\n      <Grid>\n        {achievements.map((achievement) => (\n          <AchievementCard key={achievement.id} achievement={achievement} />\n        ))}\n      </Grid>\n      {achievements.length === 0 && (\n        <Flex alignItems=\"center\" justifyContent=\"center\" style={{ height: '64px' }}>\n          <Heading as=\"h5\" size=\"md\" color=\"textDisabled\">\n            {TranslateString(999, 'No achievements yet!')}\n          </Heading>\n        </Flex>\n      )}\n    </>\n  )\n}\n\nexport default AchievementsList\n","import styled from 'styled-components'\n\nconst ActionColumn = styled.div`\n  flex: none;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    max-width: 160px;\n\n    & > button {\n      width: 100%;\n    }\n  }\n`\n\nexport default ActionColumn\n","import React from 'react'\nimport { Flex, FlexProps, PrizeIcon, Text } from '@beswap/uikit'\nimport useI18n from 'hooks/useI18n'\n\ninterface PointsLabelProps extends FlexProps {\n  points: number\n}\n\nconst PointsLabel: React.FC<PointsLabelProps> = ({ points, ...props }) => {\n  const TranslateString = useI18n()\n  const localePoints = points.toLocaleString()\n\n  return (\n    <Flex alignItems=\"center\" {...props}>\n      <PrizeIcon mr=\"4px\" color=\"textSubtle\" />\n      <Text color=\"textSubtle\">{TranslateString(999, `${localePoints} points`, { num: localePoints })}</Text>\n    </Flex>\n  )\n}\n\nexport default PointsLabel\n","import React, { useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport styled from 'styled-components'\nimport { AutoRenewIcon, Button, Flex } from '@beswap/uikit'\nimport { Achievement } from 'state/types'\nimport { useToast } from 'state/hooks'\nimport useI18n from 'hooks/useI18n'\nimport { usePointCenterIfoContract } from 'hooks/useContract'\nimport ActionColumn from '../ActionColumn'\nimport PointsLabel from './PointsLabel'\nimport AchievementTitle from '../AchievementTitle'\nimport AchievementAvatar from '../AchievementAvatar'\nimport AchievementDescription from '../AchievementDescription'\n\ninterface AchievementRowProps {\n  achievement: Achievement\n  onCollectSuccess?: (achievement: Achievement) => void\n}\n\nconst StyledAchievementRow = styled(Flex)`\n  border-bottom: 1px solid ${({ theme }) => theme.colors.borderColor};\n  padding-bottom: 16px;\n  padding-top: 16px;\n`\n\nconst Details = styled.div`\n  flex: 1;\n`\n\nconst Body = styled(Flex)`\n  flex-direction: column;\n  flex: 1;\n  margin-left: 8px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    align-items: center;\n    flex-direction: row;\n  }\n`\n\nconst AchievementRow: React.FC<AchievementRowProps> = ({ achievement, onCollectSuccess }) => {\n  const [isCollecting, setIsCollecting] = useState(false)\n  const TranslateString = useI18n()\n  const pointCenterContract = usePointCenterIfoContract()\n  const { account } = useWeb3React()\n  const { toastError, toastSuccess } = useToast()\n\n  const handleCollectPoints = () => {\n    pointCenterContract.methods\n      .getPoints(achievement.address)\n      .send({ from: account })\n      .on('sending', () => {\n        setIsCollecting(true)\n      })\n      .on('receipt', () => {\n        setIsCollecting(false)\n        onCollectSuccess(achievement)\n        toastSuccess('Points Collected!')\n      })\n      .on('error', (error) => {\n        toastError('Error', error?.message)\n        setIsCollecting(false)\n      })\n  }\n\n  return (\n    <StyledAchievementRow>\n      <AchievementAvatar badge={achievement.badge} />\n      <Body>\n        <Details>\n          <AchievementTitle title={achievement.title} />\n          <AchievementDescription description={achievement.description} />\n        </Details>\n        <PointsLabel points={achievement.points} px={[0, null, null, '32px']} mb={['16px', null, null, 0]} />\n        <ActionColumn>\n          <Button\n            onClick={handleCollectPoints}\n            isLoading={isCollecting}\n            endIcon={isCollecting ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n            disabled={isCollecting}\n            variant=\"secondary\"\n          >\n            {TranslateString(999, 'Collect')}\n          </Button>\n        </ActionColumn>\n      </Body>\n    </StyledAchievementRow>\n  )\n}\n\nexport default AchievementRow\n","import React, { useEffect, useState } from 'react'\nimport { sumBy } from 'lodash'\nimport { useAppDispatch } from 'state'\nimport { useWeb3React } from '@web3-react/core'\nimport { Card, CardBody, CardHeader, Flex, Heading, PrizeIcon } from '@beswap/uikit'\nimport { useProfile } from 'state/hooks'\nimport { Achievement } from 'state/types'\nimport { addPoints } from 'state/profile'\nimport { addAchievement } from 'state/achievements'\nimport useI18n from 'hooks/useI18n'\nimport { getClaimableIfoData } from 'utils/achievements'\nimport AchievementRow from './AchievementRow'\n\nconst ClaimPointsCallout = () => {\n  const [claimableAchievements, setClaimableAchievement] = useState<Achievement[]>([])\n  const TranslateString = useI18n()\n  const dispatch = useAppDispatch()\n  const { profile } = useProfile()\n  const { account } = useWeb3React()\n\n  useEffect(() => {\n    const fetchIfoClaims = async () => {\n      const ifoData = await getClaimableIfoData(account)\n      setClaimableAchievement(ifoData)\n    }\n\n    if (account) {\n      fetchIfoClaims()\n    }\n  }, [account, dispatch, setClaimableAchievement])\n\n  const handleCollectSuccess = (achievement: Achievement) => {\n    dispatch(addAchievement(achievement))\n    dispatch(addPoints(achievement.points))\n\n    setClaimableAchievement((prevClaimableAchievements) =>\n      prevClaimableAchievements.filter((prevClaimableAchievement) => prevClaimableAchievement.id !== achievement.id),\n    )\n  }\n\n  if (!profile?.isActive) {\n    return null\n  }\n\n  if (claimableAchievements.length === 0) {\n    return null\n  }\n\n  const totalPointsToCollect = sumBy(claimableAchievements, 'points')\n\n  return (\n    <Card isActive mb=\"32px\">\n      <CardHeader>\n        <Flex flexDirection={['column', null, 'row']} justifyContent={['start', null, 'space-between']}>\n          <Flex alignItems=\"center\" mb={['16px', null, 0]}>\n            <PrizeIcon width=\"32px\" mr=\"8px\" />\n            <Heading size=\"lg\">\n              {TranslateString(999, `${totalPointsToCollect} Points to Collect`, { num: totalPointsToCollect })}\n            </Heading>\n          </Flex>\n        </Flex>\n      </CardHeader>\n      <CardBody>\n        {claimableAchievements.map((achievement) => (\n          <AchievementRow key={achievement.address} achievement={achievement} onCollectSuccess={handleCollectSuccess} />\n        ))}\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default ClaimPointsCallout\n","import useI18n from 'hooks/useI18n'\nimport React from 'react'\nimport { Link as RouterLink } from 'react-router-dom'\nimport { ChevronLeftIcon, Flex, Text, ButtonMenu, ButtonMenuItem } from '@beswap/uikit'\n\ninterface MenuProps {\n  activeIndex?: number\n}\n\nconst Menu: React.FC<MenuProps> = ({ activeIndex = 0 }) => {\n  const TranslateString = useI18n()\n\n  return (\n    <>\n      <Flex mb=\"24px\">\n        <RouterLink to=\"/teams\">\n          <Flex alignItems=\"center\">\n            <ChevronLeftIcon color=\"primary\" />\n            <Text color=\"primary\">{TranslateString(1038, 'Teams Overview')}</Text>\n          </Flex>\n        </RouterLink>\n      </Flex>\n\n      <Flex mb=\"24px\" justifyContent=\"center\">\n        <ButtonMenu activeIndex={activeIndex} variant=\"subtle\" scale=\"sm\">\n          <ButtonMenuItem as={RouterLink} to=\"/profile/tasks\">\n            {TranslateString(1090, 'Task Center')}\n          </ButtonMenuItem>\n          <ButtonMenuItem as={RouterLink} to=\"/profile\">\n            {TranslateString(1104, 'Public Profile')}\n          </ButtonMenuItem>\n        </ButtonMenu>\n      </Flex>\n    </>\n  )\n}\n\nexport default Menu\n","import React from 'react'\nimport { Card, CardBody, CardHeader, Flex, Heading, Text } from '@beswap/uikit'\nimport useI18n from 'hooks/useI18n'\nimport AchievementsList from './components/AchievementsList'\nimport ClaimPointsCallout from './components/ClaimPointsCallout '\nimport ComingSoon from './components/ComingSoon'\nimport Menu from './components/Menu'\n\nconst TaskCenter = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <>\n      <Menu />\n      <ClaimPointsCallout />\n      <Card mb=\"32px\">\n        <CardHeader>\n          <Flex alignItems=\"center\" justifyContent=\"space-between\">\n            <div>\n              <Heading size=\"lg\" mb=\"8px\">\n                {TranslateString(1092, 'Achievements')}\n              </Heading>\n              <Text as=\"p\">{TranslateString(1084, 'Earn more points for completing larger quests!')}</Text>\n            </div>\n          </Flex>\n        </CardHeader>\n        <CardBody>\n          <AchievementsList />\n        </CardBody>\n      </Card>\n      <Card mb=\"32px\">\n        <CardHeader>\n          <Flex alignItems=\"center\" justifyContent=\"space-between\">\n            <div>\n              <Heading size=\"lg\" mb=\"8px\">\n                {TranslateString(1090, 'Task Center')}\n              </Heading>\n              <Text as=\"p\">{TranslateString(1088, 'Earn points by completing regular tasks!')}</Text>\n              <Text as=\"p\">\n                {TranslateString(1086, 'Collecting points for these tasks makes them available again.')}\n              </Text>\n            </div>\n          </Flex>\n        </CardHeader>\n        <CardBody>\n          <ComingSoon />\n        </CardBody>\n      </Card>\n    </>\n  )\n}\n\nexport default TaskCenter\n","import styled, { DefaultTheme } from 'styled-components'\nimport { CardHeader as UIKitCardHeader } from '@beswap/uikit'\n\nconst getBackground = (theme: DefaultTheme) => {\n  if (theme.isDark) {\n    return 'linear-gradient(139.73deg, #142339 0%, #24243D 47.4%, #37273F 100%)'\n  }\n\n  return 'linear-gradient(139.73deg, #E6FDFF 0%, #EFF4F5 46.87%, #F3EFFF 100%)'\n}\n\nconst CardHeader = styled(UIKitCardHeader)`\n  background: ${({ theme }) => getBackground(theme)};\n  position: relative;\n`\n\nexport default CardHeader\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text } from '@beswap/uikit'\nimport { Nft } from 'config/constants/types'\n\ninterface CollectibleCardProps {\n  nft: Nft\n}\n\nconst PreviewImage = styled.img`\n  border-radius: 4px;\n  margin-bottom: 8px;\n`\n\nconst CollectibleCard: React.FC<CollectibleCardProps> = ({ nft }) => {\n  return (\n    <div>\n      <PreviewImage src={`/images/nfts/${nft.images.lg}`} />\n      <Text bold mb=\"8px\">\n        {nft.name}\n      </Text>\n      <Text as=\"p\" fontSize=\"12px\" color=\"textSubtle\">\n        {nft.description}\n      </Text>\n    </div>\n  )\n}\n\nexport default CollectibleCard\n","import React from 'react'\nimport { Heading, Text, Flex, ChevronRightIcon } from '@beswap/uikit'\nimport { Link } from 'react-router-dom'\nimport useI18n from 'hooks/useI18n'\nimport nfts from 'config/constants/nfts'\nimport useGetWalletNfts from 'hooks/useGetWalletNfts'\nimport styled from 'styled-components'\nimport CollectibleCard from './CollectibleCard'\n\nconst CollectibleList = styled.div`\n  display: grid;\n  grid-gap: 16px;\n  grid-template-columns: repeat(2, 1fr);\n  padding: 16px 0;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    grid-gap: 24px;\n    grid-template-columns: repeat(3, 1fr);\n    padding: 24px 0;\n  }\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    grid-template-columns: repeat(4, 1fr);\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    grid-template-columns: repeat(5, 1fr);\n  }\n`\n\nconst Collectibles = () => {\n  const TranslateString = useI18n()\n  const { nfts: tokenIdsInWallet } = useGetWalletNfts()\n  const bunnyIds = Object.keys(tokenIdsInWallet).map((nftWalletItem) => Number(nftWalletItem))\n  const nftsInWallet = nfts.filter((nft) => bunnyIds.includes(nft.bunnyId))\n\n  return (\n    <>\n      <Heading as=\"h4\" size=\"md\" mb=\"8px\">\n        {TranslateString(999, 'Pancake Collectibles')}\n      </Heading>\n      <Text as=\"p\">\n        {TranslateString(\n          999,\n          'Pancake Collectibles are special ERC-721 NFTs that can be used on the BeSwap platform.',\n        )}\n      </Text>\n      <Text as=\"p\">\n        {TranslateString(\n          999,\n          \"NFTs in this user's wallet that aren't approved Pancake Collectibles won't be shown here.\",\n        )}\n      </Text>\n      {nftsInWallet.length > 0 && (\n        <CollectibleList>\n          {nftsInWallet.map((nftInWallet) => (\n            <CollectibleCard key={nftInWallet.bunnyId} nft={nftInWallet} />\n          ))}\n        </CollectibleList>\n      )}\n      {nftsInWallet.length === 0 && (\n        <Flex justifyContent=\"center\" p=\"32px\">\n          <Text fontSize=\"20px\" bold color=\"textDisabled\">\n            {TranslateString(999, 'No NFTs Found')}\n          </Text>\n        </Flex>\n      )}\n      <Flex alignItems=\"center\" justifyContent=\"flex-end\">\n        <Link to=\"/collectibles\">{TranslateString(999, 'See all approved Pancake Collectibles')}</Link>\n        <ChevronRightIcon />\n      </Flex>\n    </>\n  )\n}\n\nexport default Collectibles\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useModal } from '@beswap/uikit'\nimport EditProfileModal from './EditProfileModal'\nimport ProfileAvatar, { ProfileAvatarProps } from './ProfileAvatar'\n\nconst EditOverlay = styled.div`\n  background: rgba(0, 0, 0, 0.6) url('/images/camera.svg') no-repeat center center;\n  background-size: 24px;\n  border-radius: 50%;\n  left: 0;\n  height: 100%;\n  opacity: 0;\n  position: absolute;\n  top: 0;\n  transition: opacity 300ms;\n  width: 100%;\n  z-index: 3;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    background-size: 48px;\n  }\n`\n\nconst StyledEditProfileAvatar = styled.div`\n  position: relative;\n\n  &:hover {\n    cursor: pointer;\n\n    ${EditOverlay} {\n      opacity: 1;\n    }\n  }\n`\n\nconst AvatarWrapper = styled.div`\n  height: 64px;\n  width: 64px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    height: 128px;\n    width: 128px;\n  }\n`\n\nconst EditProfileAvatar: React.FC<ProfileAvatarProps> = ({ profile }) => {\n  const [onEditProfileModal] = useModal(<EditProfileModal />, false)\n\n  return (\n    <StyledEditProfileAvatar onClick={onEditProfileModal}>\n      <AvatarWrapper>\n        <ProfileAvatar profile={profile} />\n      </AvatarWrapper>\n      <EditOverlay />\n    </StyledEditProfileAvatar>\n  )\n}\n\nexport default EditProfileAvatar\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useWeb3React } from '@web3-react/core'\nimport {\n  Card,\n  CardBody,\n  CheckmarkCircleIcon,\n  Flex,\n  Heading,\n  Link,\n  Tag,\n  Text,\n  PrizeIcon,\n  OpenNewIcon,\n  BlockIcon,\n} from '@beswap/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { useProfile } from 'state/hooks'\nimport Menu from './components/Menu'\nimport CardHeader from './components/CardHeader'\nimport Collectibles from './components/Collectibles'\nimport WalletNotConnected from './components/WalletNotConnected'\nimport StatBox from './components/StatBox'\nimport EditProfileAvatar from './components/EditProfileAvatar'\nimport AchievementsList from './components/AchievementsList'\n\nconst Content = styled.div`\n  flex: 1;\n  padding: 16px 0;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding: 0 16px;\n  }\n`\n\nconst Username = styled(Heading)`\n  font-size: 16px;\n  line-height: 24px;\n  margin-bottom: 8px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    font-size: 40px;\n    line-height: 44px;\n  }\n`\n\nconst Status = styled.div`\n  position: absolute;\n  right: 24px;\n  top: 24px;\n`\n\nconst ResponsiveText = styled(Text)`\n  font-size: 12px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    font-size: 16px;\n  }\n`\n\nconst AddressLink = styled(Link)`\n  display: inline-block;\n  font-weight: 400;\n  font-size: 12px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  width: 80px;\n  white-space: nowrap;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    font-size: 16px;\n    width: auto;\n  }\n`\n\nconst Section = styled.div`\n  margin-bottom: 40px;\n`\n\nconst PublicProfile = () => {\n  const { account } = useWeb3React()\n  const { profile } = useProfile()\n  const TranslateString = useI18n()\n\n  if (!account) {\n    return <WalletNotConnected />\n  }\n\n  return (\n    <>\n      <Menu activeIndex={1} />\n      <div>\n        <Card>\n          <CardHeader>\n            <Flex alignItems={['start', null, 'center']} flexDirection={['column', null, 'row']}>\n              <EditProfileAvatar profile={profile} />\n              <Content>\n                <Username>{`@${profile.username}`}</Username>\n                <Flex alignItems=\"center\">\n                  <AddressLink href={`https://testnet.bscscan.com/address/${account}`} color=\"text\" external>\n                    {account}\n                  </AddressLink>\n                  <OpenNewIcon ml=\"4px\" />\n                </Flex>\n                <ResponsiveText bold>{profile.team.name}</ResponsiveText>\n              </Content>\n            </Flex>\n            <Status>\n              {profile.isActive ? (\n                <Tag startIcon={<CheckmarkCircleIcon width=\"18px\" />} outline>\n                  {TranslateString(698, 'Active')}\n                </Tag>\n              ) : (\n                <Tag variant=\"failure\" startIcon={<BlockIcon width=\"18px\" />} outline>\n                  {TranslateString(999, 'Paused')}\n                </Tag>\n              )}\n            </Status>\n          </CardHeader>\n          <CardBody>\n            <StatBox icon={PrizeIcon} title={profile.points} subtitle={TranslateString(999, 'Points')} mb=\"24px\" />\n            <Section>\n              <Heading as=\"h4\" size=\"md\" mb=\"16px\">\n                {TranslateString(1092, 'Achievements')}\n              </Heading>\n              <AchievementsList />\n            </Section>\n            <Collectibles />\n          </CardBody>\n        </Card>\n      </div>\n    </>\n  )\n}\n\nexport default PublicProfile\n","import React from 'react'\nimport { Route } from 'react-router-dom'\nimport { useWeb3React } from '@web3-react/core'\nimport Page from 'components/layout/Page'\nimport PageLoader from 'components/PageLoader'\nimport { useFetchAchievements, useProfile } from 'state/hooks'\nimport ProfileCreation from './ProfileCreation'\nimport Header from './components/Header'\nimport TaskCenter from './TaskCenter'\nimport PublicProfile from './PublicProfile'\nimport LeadInBanner from '../TradingCompetition/components/LeadInBanner'\n\nconst Profile = () => {\n  const { isInitialized, isLoading, hasProfile } = useProfile()\n  const { account } = useWeb3React()\n\n  useFetchAchievements()\n\n  if (!isInitialized || isLoading) {\n    return <PageLoader />\n  }\n\n  if (account && !hasProfile) {\n    return (\n      <Page>\n        <ProfileCreation />\n      </Page>\n    )\n  }\n\n  return (\n    <>\n      <LeadInBanner />\n      <Page>\n        <Header />\n        <Route exact path=\"/profile\">\n          <PublicProfile />\n        </Route>\n        <Route path=\"/profile/tasks\">\n          <TaskCenter />\n        </Route>\n      </Page>\n    </>\n  )\n}\n\nexport default Profile\n"],"sourceRoot":""}
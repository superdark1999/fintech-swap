{"version":3,"sources":["components/UnlockButton.tsx","components/Spacer/Spacer.tsx","components/ModalActions/ModalActions.tsx","components/ExpandableSectionButton/ExpandableSectionButton.tsx","contexts/PastLotteryDataContext.tsx","utils/lotteryUtils.ts","hooks/useGetLotteryHasDrawn.ts","hooks/useTimer.ts","views/Lottery/helpers/CountdownHelpers.ts","views/Lottery/components/LotteryProgress.tsx","views/Lottery/components/Hero.tsx","views/Lottery/components/Divider.tsx","hooks/useTickets.ts","views/Lottery/components/Loading.tsx","views/Lottery/components/TicketCard/UserTicketsModal.tsx","views/Lottery/components/YourPrizesCard/PrizesWonContent.tsx","hooks/useBuyLottery.ts","views/Lottery/components/YourPrizesCard/NoPrizesContent.tsx","views/Lottery/components/YourPrizesCard/index.tsx","views/Lottery/components/UnlockWalletCard.tsx","components/TicketInput/TicketInput.tsx","views/Lottery/components/TicketCard/BuyTicketModal.tsx","views/Lottery/components/TicketCard/PurchaseWarningModal.tsx","views/Lottery/components/TicketCard/TicketActions.tsx","views/Lottery/components/TicketCard/index.tsx","views/Home/components/CardBusdValue.tsx","views/Lottery/components/PrizeGrid.tsx","views/Lottery/components/TotalPrizesCard/index.tsx","views/Lottery/components/WinningNumbers.tsx","views/Lottery/components/HowItWorks.tsx","views/Lottery/NextDrawPage.tsx","utils/getLotteryRoundData.ts","hooks/useGetRecentLotteryRoundData.ts","views/Lottery/components/PastLotteryRoundViewer/PastLotterySearcher.tsx","views/Lottery/components/PastLotteryRoundViewer/PastRoundCardError.tsx","views/Lottery/components/LotteryCardHeading.tsx","views/Lottery/components/PastLotteryRoundViewer/PastLotteryActions.tsx","views/Lottery/helpers/formatLotteryDate.ts","views/Lottery/components/Timestamp.tsx","views/Lottery/components/PastLotteryRoundViewer/PastRoundCardDetails.tsx","views/Lottery/components/PastLotteryRoundViewer/PastRoundCard.tsx","views/Lottery/components/PastLotteryRoundViewer/index.tsx","views/Lottery/components/PastDrawsHistory/HistoryChart.tsx","views/Lottery/components/PastDrawsHistory/Legend.tsx","views/Lottery/components/PastDrawsHistory/PastDrawsHistoryCard.tsx","views/Lottery/PastDrawsPage.tsx","views/Lottery/Lottery.tsx"],"names":["UnlockButton","props","TranslateString","useI18n","useAuth","login","logout","onPresentConnectModal","useWalletModal","className","variant","onClick","StyledSpacer","styled","div","size","Spacer","s","spacing","useContext","ThemeContext","StyledModalActions","theme","colors","primaryDark","StyledModalAction","ModalActions","children","l","React","Children","toArray","length","map","child","i","Wrapper","primary","ExpandableSectionButton","expanded","aria-label","role","color","bold","defaultProps","createContext","mostRecentLotteryNumber","historyError","historyData","multiCall","abi","calls","a","web3","getWeb3NoAccount","multi","eth","Contract","MultiCallAbi","getMulticallAddress","itf","Interface","res","newCalls","slice","calldata","call","toLowerCase","encodeFunctionData","methods","aggregate","returnData","concat","index","decodeFunctionResult","multiBuy","lotteryContract","price","numbersList","account","BigNumber","times","pow","toString","then","tx","transactionHash","console","error","getTickets","ticketsContract","customLotteryNum","issueIndex","balanceOf","calls1","Array","apply","address","ticketAbi","tokenIds","id","calls2","ticketIssues","finalTokenids","forEach","ticketIssue","push","calls3","tickets","getTicketsAmount","multiClaim","claimedStatus","unClaimedIds","filter","lotteryAbi","rewards","finalTokenIds","r","getTotalClaim","getLotteryStatus","drawed","calls4","claim","reduce","p","c","sum","getTotalRewards","getMax","maxNumber","getLotteryIssueIndex","getMatchingRewardLength","matchNumber","historyAmount","amount","LOTTERY_TICKET_PRICE","toNumber","getWinningNumbers","numbers","parseInt","historyNumbers","winningNumbers","useGetLotteryHasDrawn","useState","lotteryHasDrawn","setLotteryHasDrawn","useContract","getLotteryAddress","useEffect","state","fetchLotteryStatus","useCurrentTime","Date","getTime","currentMillis","setCurrentMillis","timerID","setInterval","prevMillis","clearInterval","lotteryDrawHoursUtc","getNextLotteryDrawTime","millisTimeOfNextDraw","date","currentHour","getUTCHours","nextLotteryHour","getClosestLotteryHour","tomorrow","nextDay","getUTCDate","setUTCDate","setUTCHours","hoursAndMinutesString","hours","minutes","getTicketSaleTime","msUntilNextTicketSale","getNextTicketSaleTime","getTimePeriods","getLotteryDrawStep","ProgressWrapper","TopTextWrapper","BottomTextWrapper","StyledPrimaryText","Text","LotteryProgress","timeUntilTicketSale","timeUntilLotteryDraw","msUntilLotteryDraw","getLotteryDrawTime","primaryStep","secondaryStep","showProgressBunny","fontSize","Title","Heading","attrs","as","Blurb","StyledHero","StyledContainer","Container","mediaQueries","sm","LeftWrapper","lg","RightWrapper","Hero","textSubtle","useTotalClaim","claimAmount","setClaimAmount","claimLoading","setClaimLoading","useWeb3React","getLotteryTicketAddress","lotteryTicketAbi","fetchBalance","useCallback","useWinningNumbers","setWinningNumbers","fastRefresh","useRefresh","useMatchingRewardLength","matchingNumbers","setMatchingNumbers","matchedNumbaers","log","useTickets","lotteryNumber","setTickets","StyledLoading","Loading","RewardP","TicketsList","StyledButton","Button","UserTicketsModal","myTicketNumbers","onDismiss","from","winNumbers","rewardMatch","number","n","listItems","emoji","join","style","title","TICKETS","WinningsWrapper","IconWrapper","StyledCardActions","StyledCardContentInner","PrizesWonContent","requestedClaim","setRequestedClaim","onMultiClaim","lotteryTicketContract","txHash","useMultiClaimLottery","useModal","onPresentMyTickets","addTransaction","useTransactionAdder","handleClaim","summary","winnings","getBalanceNumber","toFixed","marginRight","width","disabled","TextWrapper","StyledText","Image","img","md","NoPrizesContent","src","alt","StyledCard","Card","isDisabled","textDisabled","YourPrizesCard","isAWin","isActive","StyledCardBody","CardBody","StyledHeading","UnlockWalletCard","StyledTokenInput","StyledTokenAdornmentWrapper","StyledMaxText","StyledTokenSymbol","span","TicketInput","max","symbol","availableSymbol","onChange","onSelectMax","value","alignItems","placeholder","toLocaleString","BuyTicketModal","val","setVal","pendingTx","setPendingTx","setRequestedBuy","fullBalance","useMemo","getFullDisplayBalance","maxTickets","onMultiBuy","useMultiBuyLottery","setMax","fetchMax","useMaxNumber","handleBuy","Math","floor","random","response","handleSelectMax","Number","LOTTERY_MAX_NUMBER_OF_TICKETS","e","currentTarget","Tips","num","Announce","Final","WarningModal","newTransactionsFirst","b","addedTime","spinnerIcon","spin","CardActions","TicketCard","balanceToken","setBalanceToken","allowance","setAllowance","contractBEP20","XLUCKY_TESTNET","bep20Abi","useContractTemp","ticketsLength","PurchaseWarningModal","tokenName","onPresentBuy","data","fetchApprovalData","requestedApproval","setRequestedApproval","useApproveCallbackCustom","approval","onAttemptToApprove","handleApprove","allTransactions","useAllTransactions","sortedRecentTransactions","Object","values","isTransactionRecent","sort","getStatus","receipt","hash","isSecondCard","CardHeader","TicketCountWrapper","TicketActions","CardBusdValue","CardValue","lineHeight","prefix","decimals","Grid","pastDraw","RightAlignedText","RightAlignedHeading","GridItem","marginBottom","PastDrawGridItem","PrizeGrid","lotteryPrizeAmount","jackpotMatches","twoTicketMatches","threeTicketMatches","fourMatchesAmount","threeMatchesAmount","twoMatchesAmount","burnAmount","cakeBusdPrice","usePriceCakeBusd","getCakeBusdValue","multipliedBy","textShadow","eq","CardHeading","Right","Left","PrizeCountWrapper","ExpandingWrapper","showFooter","TotalPrizesCard","setShowFooter","setRewards","useTotalRewards","lotteryPrizeAmountBusd","lotteryPrizeWithCommaSeparators","currentLotteryNumber","PastLotteryDataContext","mb","justifyContent","height","fontWeight","CardBodyNew","Link","Row","RowNoPadding","Column","CenteredText","CenteredTextWithPadding","TicketNumberBox","StyledCardHeader","CardWrapper","secondary","WinningNumbers","MatchedNumber4","MatchedNumber3","MatchedNumber2","href","target","LayoutWrapper","StyledLink","HowItWorks","Cards","BaseLayout","SecondCardColumnWrapper","NextDrawPage","getLotteryRoundData","fetch","json","Error","useGetRecentLotteryRoundData","isLoading","setIsLoading","setData","setError","roundData","fetchRecentLotteryData","SearchWrapper","InputWrapper","ButtonWrapper","PastLotterySearcher","initialLotteryNumber","onSubmit","setLotteryNumber","isError","setIsError","evt","preventDefault","type","isWarning","scale","PastRoundCardError","message","LotteryCardHeading","valueToDisplay","Icon","flexDirection","ExternalLinkWrap","LinkExternal","contractLink","formatLotteryDate","lotteryDate","dateString","toDateString","monthAndDay","split","splice","Timestamp","timeValue","TopLotteryCardHeading","PastRoundCardDetails","jackpotTicket","lotteryNumbers","match1Ticket","match2Ticket","match3Ticket","poolSize","oneTicketMatches","PastLotteryActions","PastRoundCard","PastLotteryRoundViewer","isInitialized","setState","initialLotteryData","prevState","handleSubmit","catch","Line","lazy","InnerWrapper","HistoryChart","getDataArray","kind","dataPoint","reverse","lineStyles","borderColor","fill","borderWidth","pointRadius","pointHitRadius","chartData","labels","datasets","label","yAxisID","axesStyles","borderCapStyle","gridLines","display","ticks","fontFamily","fontColor","maxRotation","beginAtZero","autoSkipPadding","userCallback","options","legend","scales","yAxes","position","xAxes","fallback","LegendItem","Circle","isPoolSize","Legend","PastDrawsHistoryCard","BunnyImageWrapper","PastDrawsPage","Lottery","activeIndex","setActiveIndex","setHistoryData","setHistoryError","setCurrentLotteryNumber","setMostRecentLotteryNumber","previousLotteryNumber","getInitialLotteryIndex","Page","onItemClick","Divider","Provider"],"mappings":"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","file":"static/js/16.d2f2fd99.chunk.js","sourcesContent":["import React from 'react'\nimport { Button, useWalletModal } from '@luckyswap/uikit'\nimport useAuth from 'hooks/useAuth'\nimport useI18n from 'hooks/useI18n'\n\nconst UnlockButton = (props) => {\n  const TranslateString = useI18n()\n  const { login, logout } = useAuth()\n  const { onPresentConnectModal } = useWalletModal(login, logout)\n\n  return (\n    <div className=\"custom-btn\">\n      <Button variant=\"secondary\" onClick={onPresentConnectModal} {...props}>\n        {TranslateString(292, 'Unlock Wallet')}\n      </Button>\n    </div>\n  )\n}\n\nexport default UnlockButton\n","import React, { useContext } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\ninterface SpacerProps {\n  size?: 'sm' | 'md' | 'lg'\n}\n\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\n  const { spacing } = useContext(ThemeContext)\n\n  let s: number\n  switch (size) {\n    case 'lg':\n      s = spacing[6]\n      break\n    case 'sm':\n      s = spacing[2]\n      break\n    case 'md':\n    default:\n      s = spacing[4]\n  }\n\n  return <StyledSpacer size={s} />\n}\n\ninterface StyledSpacerProps {\n  size: number\n}\n\nconst StyledSpacer = styled.div<StyledSpacerProps>`\n  height: ${(props) => props.size}px;\n  width: ${(props) => props.size}px;\n`\n\nexport default Spacer\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport Spacer from '../Spacer'\n\nconst ModalActions: React.FC = ({ children }) => {\n  const l = React.Children.toArray(children).length\n  return (\n    <StyledModalActions>\n      {React.Children.map(children, (child, i) => (\n        <>\n          <StyledModalAction>{child}</StyledModalAction>\n          {i < l - 1 && <Spacer />}\n        </>\n      ))}\n    </StyledModalActions>\n  )\n}\n\nconst StyledModalActions = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.primaryDark}00;\n  display: flex;\n  margin: 0;\n  padding: ${(props) => props.theme.spacing[4]}px 0;\n`\n\nconst StyledModalAction = styled.div`\n  flex: 1;\n`\n\nexport default ModalActions\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ChevronDownIcon, ChevronUpIcon, Text } from '@luckyswap/uikit'\nimport useI18n from 'hooks/useI18n'\n\nexport interface ExpandableSectionButtonProps {\n  onClick?: () => void\n  expanded?: boolean\n}\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n\n  svg {\n    fill: ${({ theme }) => theme.colors.primary};\n  }\n`\n\nconst ExpandableSectionButton: React.FC<ExpandableSectionButtonProps> = ({ onClick, expanded }) => {\n  const TranslateString = useI18n()\n\n  return (\n    <Wrapper aria-label=\"Hide or show expandable content\" role=\"button\" onClick={() => onClick()}>\n      <Text color=\"primary\" bold>\n        {expanded ? TranslateString(1066, 'Hide') : TranslateString(658, 'Details')}\n      </Text>\n      {expanded ? <ChevronUpIcon /> : <ChevronDownIcon />}\n    </Wrapper>\n  )\n}\n\nExpandableSectionButton.defaultProps = {\n  expanded: false,\n}\n\nexport default ExpandableSectionButton\n","import React from 'react'\n\nexport interface PastLotteryDataState {\n  mostRecentLotteryNumber: number\n  currentLotteryNumber: number\n  historyError: boolean\n  historyData: Array<any>\n}\n\nexport default React.createContext({\n  mostRecentLotteryNumber: 0,\n  historyError: false,\n  historyData: [],\n} as PastLotteryDataState)\n","/* eslint-disable no-await-in-loop */\nimport BigNumber from 'bignumber.js'\nimport { Interface } from '@ethersproject/abi'\nimport { getWeb3NoAccount } from 'utils/web3'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport ticketAbi from 'config/abi/lotteryNft.json'\nimport lotteryAbi from 'config/abi/lottery.json'\nimport { LOTTERY_TICKET_PRICE } from 'config'\nimport { AbiItem } from 'web3-utils'\nimport { useTransactionAdder } from 'state/transactions/hooks'\nimport { getMulticallAddress } from './addressHelpers'\n\nexport const multiCall = async (abi, calls) => {\n  const web3 = getWeb3NoAccount()\n  const multi = new web3.eth.Contract(MultiCallAbi as unknown as AbiItem, getMulticallAddress())\n  const itf = new Interface(abi)\n  let res = []\n  if (calls.length > 100) {\n    let i = 0\n    while (i < calls.length / 100) {\n      const newCalls = calls.slice(i * 100, 100 * (i + 1))\n      const calldata = newCalls.map((call) => [call[0].toLowerCase(), itf.encodeFunctionData(call[1], call[2])])\n      const { returnData } = await multi.methods.aggregate(calldata).call()\n      i++\n      res = res.concat(returnData.map((call, index) => itf.decodeFunctionResult(newCalls[index][1], call)))\n    }\n  } else {\n    const calldata = calls.map((call) => [call[0].toLowerCase(), itf.encodeFunctionData(call[1], call[2])])\n    const { returnData } = await multi.methods.aggregate(calldata).call()\n    res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i][1], call))\n  }\n  return res\n}\n\nexport const multiBuy = async (lotteryContract, price, numbersList, account) => {\n  try {\n    return lotteryContract\n      .multiBuy(new BigNumber(price).times(new BigNumber(10).pow(18)).toString(), numbersList)\n      .then((tx) => {\n        return tx.transactionHash\n      })\n  } catch (err) {\n    return console.error(err)\n  }\n}\n\nexport const getTickets = async (lotteryContract, ticketsContract, account, customLotteryNum) => {\n  const issueIndex = customLotteryNum || (await lotteryContract.issueIndex())\n\n  const length = await ticketsContract.balanceOf(account)\n\n  // eslint-disable-next-line prefer-spread\n  const calls1 = Array.apply(null, { length } as unknown[]).map((a, i) => [\n    ticketsContract.address,\n    'tokenOfOwnerByIndex',\n    [account, i],\n  ])\n  const res = await multiCall(ticketAbi, calls1)\n\n  const tokenIds = res.map((id) => id.toString())\n\n  const calls2 = tokenIds.map((id) => [ticketsContract.address, 'getLotteryIssueIndex', [id]])\n  const ticketIssues = await multiCall(ticketAbi, calls2)\n\n  const finalTokenids = []\n  ticketIssues.forEach(async (ticketIssue, i) => {\n    if (ticketIssue.toString() === issueIndex.toString()) {\n      finalTokenids.push(tokenIds[i])\n    }\n  })\n  const calls3 = finalTokenids.map((id) => [ticketsContract.address, 'getLotteryNumbers', [id]])\n  const tickets = await multiCall(ticketAbi, calls3)\n  return tickets\n}\n\nexport const getTicketsAmount = async (ticketsContract, account) => {\n  return ticketsContract.balanceOf(account)\n}\n\nexport const multiClaim = async (lotteryContract, ticketsContract, account) => {\n  await lotteryContract.issueIndex()\n  const length = await getTicketsAmount(ticketsContract, account)\n  // eslint-disable-next-line prefer-spread\n  const calls1 = Array.apply(null, { length } as unknown[]).map((a, i) => [\n    ticketsContract.address,\n    'tokenOfOwnerByIndex',\n    [account, i],\n  ])\n  const res = await multiCall(ticketAbi, calls1)\n  const tokenIds = res.map((id) => id.toString())\n\n  const calls2 = tokenIds.map((id) => [ticketsContract.address, 'getClaimStatus', [id]])\n  const claimedStatus = await multiCall(ticketAbi, calls2)\n\n  const unClaimedIds = tokenIds.filter((id, index) => !claimedStatus[index][0])\n\n  const calls3 = unClaimedIds.map((id) => [lotteryContract.address, 'getRewardView', [id]])\n  const rewards = await multiCall(lotteryAbi, calls3)\n\n  let finalTokenIds = []\n  rewards.forEach((r, i) => {\n    if (r > 0) {\n      finalTokenIds.push(unClaimedIds[i])\n    }\n  })\n\n  if (finalTokenIds.length > 200) {\n    finalTokenIds = finalTokenIds.slice(0, 200)\n  }\n\n  try {\n    return lotteryContract.multiClaim(finalTokenIds)\n  } catch (err) {\n    return console.error(err)\n  }\n}\n\nexport const getTotalClaim = async (lotteryContract, ticketsContract, account) => {\n  try {\n    const issueIndex = await lotteryContract.issueIndex()\n    const length = await getTicketsAmount(ticketsContract, account)\n    // eslint-disable-next-line prefer-spread\n    const calls1 = Array.apply(null, { length } as unknown[]).map((a, i) => [\n      ticketsContract.address,\n      'tokenOfOwnerByIndex',\n      [account, i],\n    ])\n    const res = await multiCall(ticketAbi, calls1)\n    const tokenIds = res.map((id) => id.toString())\n    const calls2 = tokenIds.map((id) => [ticketsContract.address, 'getLotteryIssueIndex', [id]])\n    const ticketIssues = await multiCall(ticketAbi, calls2)\n    const calls3 = tokenIds.map((id) => [ticketsContract.address, 'getClaimStatus', [id]])\n    const claimedStatus = await multiCall(ticketAbi, calls3)\n\n    const drawed = await getLotteryStatus(lotteryContract)\n    \n    const finalTokenIds = []\n    ticketIssues.forEach(async (ticketIssue, i) => {\n      // eslint-disable-next-line no-empty\n      if (!drawed && ticketIssue.toString() === issueIndex) {\n      } else if (!claimedStatus[i][0]) {\n        finalTokenIds.push(tokenIds[i])\n      }\n    })\n\n    const calls4 = finalTokenIds.map((id) => [lotteryContract.address, 'getRewardView', [id]])\n\n    const rewards = await multiCall(lotteryAbi, calls4)\n    const claim = rewards.reduce((p, c) => BigNumber.sum(p, c), new BigNumber(0))\n\n    return claim\n  } catch (err) {\n    console.error(err)\n  }\n  return new BigNumber(0)\n}\n\nexport const getTotalRewards = async (lotteryContract) => {\n  const issueIndex = await lotteryContract.issueIndex()\n  return lotteryContract.getTotalRewards(issueIndex)\n}\n\nexport const getMax = async (lotteryContract) => {\n  return lotteryContract.maxNumber()\n}\n\nexport const getLotteryIssueIndex = async (lotteryContract) => {\n  const issueIndex = await lotteryContract.issueIndex()\n  return issueIndex\n}\n\nexport const getLotteryStatus = async (lotteryContract) => {\n  return lotteryContract.drawed()\n}\n\nexport const getMatchingRewardLength = async (lotteryContract, matchNumber) => {\n  let issueIndex = await lotteryContract.issueIndex()\n  const drawed = await lotteryContract.drawed()\n  if (!drawed) {\n    issueIndex -= 1\n  }\n  try {\n    const amount = await lotteryContract.historyAmount(issueIndex, 5 - matchNumber)\n    return new BigNumber(amount.toString()).div(new BigNumber(10).pow(18)).div(LOTTERY_TICKET_PRICE).toNumber()\n  } catch (err) {\n    console.error(err)\n  }\n  return 0\n}\n\nexport const getWinningNumbers = async (lotteryContract) => {\n  const issueIndex = await lotteryContract.issueIndex()\n  const numbers = []\n  const drawed = await lotteryContract.drawed()\n\n  if (!drawed && parseInt(issueIndex, 10) === 0) {\n    return [0, 0, 0, 0]\n  }\n  if (!drawed) {\n    for (let i = 0; i < 4; i++) {\n      numbers.push(+(await lotteryContract.historyNumbers(issueIndex - 1, i)).toString())\n    }\n  } else {\n    for (let i = 0; i < 4; i++) {\n      numbers.push(+(await lotteryContract.winningNumbers(i)).toString())\n    }\n  }\n  return numbers\n}\n","import { useEffect, useState } from 'react'\nimport { getLotteryStatus } from 'utils/lotteryUtils'\nimport { useContract } from 'hooks/useContract'\nimport { getLotteryAddress } from 'utils/addressHelpers'\nimport lotteryAbi from 'config/abi/lottery.json'\n\n/**\n * Returns whether or not the current lottery has drawn numbers\n *\n * @return {Boolean}\n */\nconst useGetLotteryHasDrawn = () => {\n  const [lotteryHasDrawn, setLotteryHasDrawn] = useState(true)\n  const lotteryContract = useContract(getLotteryAddress(), lotteryAbi)\n\n  useEffect(() => {\n    if (lotteryContract) {\n      const fetchLotteryStatus = async () => {\n        const state = await getLotteryStatus(lotteryContract)\n        setLotteryHasDrawn(state)\n      }\n\n      fetchLotteryStatus()\n    }\n  }, [lotteryContract])\n\n  return lotteryHasDrawn\n}\n\nexport default useGetLotteryHasDrawn\n","import { useState, useEffect } from 'react'\n\nexport const useCurrentTime = () => {\n  const [currentMillis, setCurrentMillis] = useState(new Date().getTime())\n\n  useEffect(() => {\n    const tick = () => {\n      setCurrentMillis((prevMillis) => prevMillis + 1000)\n    }\n\n    const timerID = setInterval(() => tick(), 1000)\n\n    return () => clearInterval(timerID)\n  }, [])\n\n  return currentMillis\n}\n\nexport default useCurrentTime\n","import getTimePeriods from 'utils/getTimePeriods'\n\n// lottery draws UTC: 02:00 (10:00 SGT), 14:00 (22:00 SGT)\nconst lotteryDrawHoursUtc = [2, 14]\n\nconst getClosestLotteryHour = (currentHour) => {\n  switch (true) {\n    case currentHour < lotteryDrawHoursUtc[0] || currentHour >= lotteryDrawHoursUtc[1]:\n      return lotteryDrawHoursUtc[0]\n    case currentHour < lotteryDrawHoursUtc[1]:\n      return lotteryDrawHoursUtc[1]\n    default:\n      return 0\n  }\n}\n\nconst getNextLotteryDrawTime = (currentMillis) => {\n  const date = new Date(currentMillis)\n  const currentHour = date.getUTCHours()\n  const nextLotteryHour = getClosestLotteryHour(currentHour)\n  // next lottery is tomorrow if the next lottery is at 2am UTC...\n  // ...and current time is between 02:00am & 23:59pm UTC\n  const nextLotteryIsTomorrow = nextLotteryHour === 2 && currentHour >= 2 && currentHour <= 23\n  let millisTimeOfNextDraw\n\n  if (nextLotteryIsTomorrow) {\n    const tomorrow = new Date(currentMillis)\n    const nextDay = tomorrow.getUTCDate() + 1\n    tomorrow.setUTCDate(nextDay)\n    millisTimeOfNextDraw = tomorrow.setUTCHours(nextLotteryHour, 0, 0, 0)\n  } else {\n    millisTimeOfNextDraw = date.setUTCHours(nextLotteryHour, 0, 0, 0)\n  }\n\n  return millisTimeOfNextDraw\n}\n\n// @ts-ignore\nconst getNextTicketSaleTime = (currentMillis) => (parseInt(currentMillis / 3600000) + 1) * 3600000\nconst hoursAndMinutesString = (hours, minutes) => `${parseInt(hours)}h, ${parseInt(minutes)}m`\n\nexport const getTicketSaleTime = (currentMillis): string => {\n  const nextTicketSaleTime = getNextTicketSaleTime(currentMillis)\n  const msUntilNextTicketSale = nextTicketSaleTime - currentMillis\n  const { minutes } = getTimePeriods(msUntilNextTicketSale / 1000)\n  const { hours } = getTimePeriods(msUntilNextTicketSale / 1000)\n  return hoursAndMinutesString(hours, minutes)\n}\n\nexport const getLotteryDrawTime = (currentMillis): string => {\n  const nextLotteryDrawTime = getNextLotteryDrawTime(currentMillis)\n  const msUntilLotteryDraw = nextLotteryDrawTime - currentMillis\n  const { minutes } = getTimePeriods(msUntilLotteryDraw / 1000)\n  const { hours } = getTimePeriods(msUntilLotteryDraw / 1000)\n  return hoursAndMinutesString(hours, minutes)\n}\n\nexport const getTicketSaleStep = () => (1 / 12) * 100\n\nexport const getLotteryDrawStep = (currentMillis) => {\n  const msBetweenLotteries = 43200000\n  const endTime = getNextLotteryDrawTime(currentMillis)\n  const msUntilLotteryDraw = endTime - currentMillis\n  const percentageRemaining = (msUntilLotteryDraw / msBetweenLotteries) * 100\n  return 100 - percentageRemaining\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Progress } from '@luckyswap/uikit'\nimport useI18n from 'hooks/useI18n'\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\nimport { useCurrentTime } from 'hooks/useTimer'\nimport {\n  getLotteryDrawTime,\n  getLotteryDrawStep,\n  getTicketSaleTime,\n  getTicketSaleStep,\n} from '../helpers/CountdownHelpers'\n\nconst ProgressWrapper = styled.div`\n  display: block;\n  width: 100%;\n`\n\nconst TopTextWrapper = styled.div`\n  margin-top: 16px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n`\n\nconst BottomTextWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n`\n\nconst StyledPrimaryText = styled(Text)`\n  margin-right: 16px;\n`\nconst LotteryProgress = () => {\n  const TranslateString = useI18n()\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\n  const currentMillis = useCurrentTime()\n  const timeUntilTicketSale = getTicketSaleTime(currentMillis)\n  const timeUntilLotteryDraw = getLotteryDrawTime(currentMillis)\n\n  return (\n    <ProgressWrapper>\n      <Progress primaryStep={getLotteryDrawStep(currentMillis)} secondaryStep={getTicketSaleStep()} showProgressBunny />\n      <TopTextWrapper>\n        <StyledPrimaryText fontSize=\"20px\" bold color=\"yellow\">\n          {lotteryHasDrawn ? timeUntilTicketSale : timeUntilLotteryDraw}\n        </StyledPrimaryText>\n        <Text fontSize=\"20px\" bold color=\"invertedContrast\">\n          {lotteryHasDrawn ? TranslateString(434, 'Until ticket sale') : TranslateString(492, 'Until lottery draw')}\n        </Text>\n      </TopTextWrapper>\n      {lotteryHasDrawn && (\n        <BottomTextWrapper>\n          <Text color=\"invertedContrast\">\n            {timeUntilLotteryDraw} {TranslateString(492, 'Until lottery draw')}\n          </Text>\n        </BottomTextWrapper>\n      )}\n    </ProgressWrapper>\n  )\n}\n\nexport default LotteryProgress\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Text } from '@luckyswap/uikit'\nimport useI18n from 'hooks/useI18n'\nimport Container from 'components/layout/Container'\nimport LotteryProgress from './LotteryProgress'\n\nconst Title = styled(Heading).attrs({ as: 'h1', size: 'xl' })`\n  color: rgb(243, 193, 17);\n  margin-bottom: 24px;\n`\n\nconst Blurb = styled(Text)`\n  color: #ffffff;\n  font-size: 20px;\n  font-weight: 600;\n`\n\nconst StyledHero = styled.div`\n  // background: url('../images/large-pc.png');\n  background-repeat: no-repeat;\n  background-size: cover;\n  padding-bottom: 60px;\n  padding-top: 60px;\n  background-color:#0000001a\n`\n\nconst StyledContainer = styled(Container)`\n  display: flex;\n\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n  }\n`\n\nconst LeftWrapper = styled.div`\n  flex: 1;\n  padding-right: 0;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-right: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-right: 32px;\n  }\n`\n\nconst RightWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex: 1;\n  padding-left: 0;\n  margin-top: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-top: 0;\n    padding-left: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-left: 32px;\n  }\n`\n\nconst Hero = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <StyledHero>\n      <StyledContainer>\n        <LeftWrapper>\n          <Title>{TranslateString(708, 'The LUCKY Lottery')}</Title>\n          <Blurb>{TranslateString(710, 'Buy tickets with LUCKY for collect more NFTs')}</Blurb>\n          <Blurb>{TranslateString(712, 'Win if 2, 3, or 4 of your ticket numbers match!')}</Blurb>\n        </LeftWrapper>\n        <RightWrapper>\n          <LotteryProgress />\n        </RightWrapper>\n      </StyledContainer>\n    </StyledHero>\n  )\n}\n\nexport default Hero\n","import styled from 'styled-components'\n\nexport default styled.div`\n  background-color: ${({ theme }) => theme.colors.textSubtle};\n  height: 1px;\n  margin: 0 auto 32px;\n  width: 100%;\n`\n","import { useCallback, useState, useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport {useContract, useLottery, useLotteryTicket } from 'hooks/useContract'\nimport { getLotteryAddress, getLotteryTicketAddress } from 'utils/addressHelpers'\nimport lotteryTicketAbi from 'config/abi/lotteryNft.json'\nimport lotteryAbi from 'config/abi/lottery.json'\nimport useRefresh from './useRefresh'\nimport {\n  getTotalRewards,\n  getTotalClaim,\n  getMatchingRewardLength,\n  getWinningNumbers,\n  getTickets,\n} from '../utils/lotteryUtils'\n\nconst useTickets = (lotteryNumber = null) => {\n  const [tickets, setTickets] = useState([])\n  const { account } = useWeb3React()\n  const ticketsContract = useContract(getLotteryTicketAddress(), lotteryTicketAbi)\n  const lotteryContract = useContract(getLotteryAddress(), lotteryAbi)\n  const { fastRefresh } = useRefresh()\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await getTickets(lotteryContract, ticketsContract, account, lotteryNumber)\n      setTickets(res)\n    }\n\n    if (account && lotteryContract && ticketsContract) {\n      fetchBalance()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [account, lotteryContract, ticketsContract, fastRefresh, lotteryNumber])\n\n  return tickets\n}\n\nexport const useTotalRewards = () => {\n  const [rewards, setRewards] = useState(new BigNumber(0))\n  const { fastRefresh } = useRefresh()\n  const lotteryContract = useContract(getLotteryAddress(), lotteryAbi)\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await getTotalRewards(lotteryContract)\n\n      setRewards(new BigNumber(res.toString()))\n    }\n\n    if (lotteryContract) {\n      fetchBalance()\n    }\n  }, [lotteryContract, fastRefresh])\n  console.log('rewards>>',rewards)\n  return rewards\n}\n\nexport const useTotalClaim = () => {\n  const [claimAmount, setClaimAmount] = useState(new BigNumber(0))\n  const [claimLoading, setClaimLoading] = useState(false)\n  const { account } = useWeb3React()\n  const lotteryContract = useContract(getLotteryAddress(), lotteryAbi)\n  const ticketsContract = useContract(getLotteryTicketAddress(), lotteryTicketAbi)\n\n  const fetchBalance = useCallback(async () => {\n    setClaimLoading(true)\n    const claim =  await getTotalClaim(lotteryContract, ticketsContract, account)\n    setClaimAmount(claim)\n    setClaimLoading(false)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [account, lotteryContract, ticketsContract])\n\n  useEffect(() => {\n    if (account && lotteryContract && ticketsContract) {\n      fetchBalance()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [account, fetchBalance, lotteryContract, ticketsContract])\n  return { claimLoading, claimAmount }\n}\n\nexport const useWinningNumbers = () => {\n  const [winningNumbers, setWinningNumbers] = useState([0, 0, 0, 0])\n  const lotteryContract = useContract(getLotteryAddress(), lotteryAbi)\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const rewards = await getWinningNumbers(lotteryContract)\n      setWinningNumbers(rewards)\n    }\n\n    if (lotteryContract) {\n      fetchBalance()\n    }\n  }, [fastRefresh, lotteryContract, setWinningNumbers])\n\n  return winningNumbers\n}\n\nexport const useMatchingRewardLength = (numbers) => {\n  const [matchingNumbers, setMatchingNumbers] = useState(0)\n  const lotteryContract = useContract(getLotteryAddress(), lotteryAbi)\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const matchedNumbaers = await getMatchingRewardLength(lotteryContract, numbers)\n      console.log('matchedNumbaers??',matchedNumbaers,numbers)\n\n      setMatchingNumbers(matchedNumbaers)\n    }\n\n    if (lotteryContract) {\n      fetchBalance()\n    }\n  }, [lotteryContract, numbers, fastRefresh])\n  return matchingNumbers\n}\n\nexport default useTickets\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Loading: React.FC = () => <StyledLoading />\n\nconst StyledLoading = styled.div`\n  border: 8px solid #f3f3f3;\n  border-radius: 50%;\n  border-top: 8px solid #ddd;\n  border-bottom: 8px solid #ddd;\n  width: 20px;\n  height: 20px;\n  -webkit-animation: spin 2s linear infinite;\n  animation: spin 2s linear infinite;\n  @-webkit-keyframes spin {\n    0% {\n      -webkit-transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`\n\nexport default Loading\n","import React, { useCallback } from 'react'\nimport { Button, Modal } from '@luckyswap/uikit'\nimport styled from 'styled-components'\nimport { useWinningNumbers } from 'hooks/useTickets'\nimport useI18n from 'hooks/useI18n'\n\ninterface UserTicketsModalProps {\n  myTicketNumbers: Array<any>\n  from?: string\n  onDismiss?: () => void\n}\n\nconst UserTicketsModal: React.FC<UserTicketsModalProps> = ({ myTicketNumbers, onDismiss, from }) => {\n  const winNumbers = useWinningNumbers()\n  const TranslateString = useI18n()\n  const rewardMatch = useCallback(\n    (number) => {\n      let n = 0\n      for (let i = winNumbers.length - 1; i >= 0; i--) {\n        // eslint-disable-next-line eqeqeq\n        if (winNumbers[i] == number[i]) n++\n      }\n      return n\n    },\n    [winNumbers],\n  )\n\n  const listItems = myTicketNumbers.map((number, index) => {\n    if (rewardMatch(number[0]) > 1 && from !== 'buy') {\n      const emoji = new Array(rewardMatch(number[0]) + 1).join('🤑')\n      return (\n        // eslint-disable-next-line react/no-array-index-key\n        <RewardP key={index}>\n          {emoji}\n          {number.toString()}\n          {emoji}\n        </RewardP>\n      )\n    }\n    // eslint-disable-next-line react/no-array-index-key\n    return <p style={{color:\"yellow\"}} key={index}>{number.toString()}</p>\n  })\n\n  return (\n    <Modal\n      title={TranslateString(490, `My Tickets (Total: ${myTicketNumbers.length})`, { TICKETS: myTicketNumbers.length })}\n      onDismiss={onDismiss}\n    >\n      <TicketsList>\n        <h2>{listItems}</h2>\n      </TicketsList>\n      <StyledButton variant=\"secondary\" onClick={onDismiss}>\n        {TranslateString(438, 'Close')}\n      </StyledButton>\n    </Modal>\n  )\n}\n\nconst RewardP = styled.div`\n  color: #ff8c28;\n`\n\nconst TicketsList = styled.div`\n  text-align: center;\n  overflow-y: auto;\n  max-height: 400px;\n  color: ${(props) => props.theme.colors.primary};\n`\n\nconst StyledButton = styled(Button)`\n  margin-top: ${(props) => props.theme.spacing[2]}px;\n`\n\nexport default UserTicketsModal\n","import React, { useCallback, useState } from 'react'\nimport styled from 'styled-components'\nimport { Button, Heading, Won, useModal } from '@luckyswap/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useMultiClaimLottery } from 'hooks/useBuyLottery'\nimport useTickets, { useTotalClaim } from 'hooks/useTickets'\nimport { useTransactionAdder } from 'state/transactions/hooks'\nimport Loading from '../Loading'\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\n\nconst WinningsWrapper = styled.div`\n  display: flex;\n  align-items: baseline;\n`\n\nconst IconWrapper = styled.div`\n  margin-bottom: 16px;\n\n  svg {\n    width: 80px;\n    height: 80px;\n  }\n`\n\nconst StyledCardActions = styled.div`\n  margin-top: ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledCardContentInner = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: space-between;\n`\n\nconst StyledButton = styled(Button)`\n  margin-top: ${(props) => props.theme.spacing[1]}px;\n`\n\nconst PrizesWonContent: React.FC = () => {\n  const [requestedClaim, setRequestedClaim] = useState(false)\n  const TranslateString = useI18n()\n  const { claimLoading, claimAmount } = useTotalClaim()\n  const { onMultiClaim } = useMultiClaimLottery()\n  const tickets = useTickets()\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\n  const addTransaction = useTransactionAdder()\n\n  const handleClaim = useCallback(async () => {\n    try {\n      setRequestedClaim(true)\n      const txHash = await onMultiClaim()\n      addTransaction(txHash, {\n        summary: 'Claim successfully!',\n      })\n      // user rejected tx or didn't go thru\n      if (txHash) {\n        setRequestedClaim(false)\n      }\n    } catch (e) {\n      console.error(e)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [onMultiClaim, setRequestedClaim])\n\n  const winnings = getBalanceNumber(claimAmount).toFixed(2)\n\n  return (\n    <StyledCardContentInner>\n      <IconWrapper>\n        <Won />\n      </IconWrapper>\n      <Heading as=\"h3\" size=\"lg\" color=\"secondary\">\n        {TranslateString(660, 'You won!')}\n      </Heading>\n      {claimLoading && <Loading />}\n      {!claimLoading && (\n        <>\n          <WinningsWrapper>\n            <Heading as=\"h4\" size=\"xl\" style={{ marginRight: '6px' }}>\n              {winnings}\n            </Heading>\n            <Heading as=\"h4\" size=\"lg\">\n              LUCKY\n            </Heading>\n          </WinningsWrapper>\n        </>\n      )}\n      <StyledCardActions>\n        <Button variant=\"secondary\" width=\"100%\" disabled={requestedClaim} onClick={handleClaim}>\n          {TranslateString(1056, 'Collect')}\n        </Button>\n      </StyledCardActions>\n      <StyledButton variant=\"text\" onClick={onPresentMyTickets}>\n        {TranslateString(432, 'View your tickets')}\n      </StyledButton>\n    </StyledCardContentInner>\n  )\n}\n\nexport default PrizesWonContent\n","import { useCallback, useState, useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useLottery, useContract } from 'hooks/useContract'\nimport { getLotteryAddress ,getLotteryTicketAddress} from 'utils/addressHelpers'\nimport lotteryAbi from 'config/abi/lottery.json'\nimport lotteryTicketAbi from 'config/abi/lotteryNft.json'\nimport { multiClaim, getMax, multiBuy } from '../utils/lotteryUtils'\n\nexport const useMultiClaimLottery = () => {\n  const { account } = useWeb3React()\n  const lotteryContract = useContract(getLotteryAddress(), lotteryAbi)\n  const lotteryTicketContract = useContract(getLotteryTicketAddress(), lotteryTicketAbi)\n\n  const handleClaim = useCallback(async () => {\n    try {\n      const txHash = await multiClaim(lotteryContract, lotteryTicketContract, account)\n      return txHash\n    } catch (e) {\n      return false\n    }\n  }, [account, lotteryContract, lotteryTicketContract])\n\n  return { onMultiClaim: handleClaim }\n}\n\nexport const useMultiBuyLottery = () => {\n  const { account } = useWeb3React()\n  const lotteryContract = useContract(getLotteryAddress(), lotteryAbi)\n\n  const handleBuy = useCallback(\n    async (amount: string, numbers: Array<any>) => {\n      try {\n        const txHash = await multiBuy(lotteryContract, amount, numbers, account)\n        return txHash\n      } catch (e) {\n        return false\n      }\n    },\n    [account, lotteryContract],\n  )\n\n  return { onMultiBuy: handleBuy }\n}\n\nexport const useMaxNumber = () => {\n  const [max, setMax] = useState(5)\n  const lotteryContract = useContract(getLotteryAddress(), lotteryAbi)\n\n  const fetchMax = useCallback(async () => {\n    const maxNumber = await getMax(lotteryContract)\n    setMax(maxNumber)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [lotteryContract])\n\n  useEffect(() => {\n    if (lotteryContract) {\n      fetchMax()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [lotteryContract, fetchMax])\n\n  return max\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Button, useModal } from '@luckyswap/uikit'\nimport useI18n from 'hooks/useI18n'\nimport useTickets from 'hooks/useTickets'\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\n\nconst Wrapper = styled.div`\n  display: flex;\n`\n\nconst TextWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst StyledText = styled(Text)`\n  padding-left: 12px;\n`\n\nconst Image = styled.img`\n  margin-right: 6px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    margin-right: 20px;\n  }\n`\nconst StyledButton = styled(Button)`\n  padding: 0 12px;\n  height: unset;\n`\n\nconst NoPrizesContent: React.FC = () => {\n  const TranslateString = useI18n()\n  const tickets = useTickets()\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\n\n  return (\n    <Wrapper>\n      <Image src=\"/images/no-prize.svg\" alt=\"no prizes won\" />\n      <TextWrapper>\n        <StyledText >{TranslateString(726, 'Sorry, no prizes to collect')}</StyledText>\n        <StyledButton variant=\"text\" onClick={onPresentMyTickets}>\n          {TranslateString(432, 'View your tickets and NFTs')}\n        </StyledButton>\n      </TextWrapper>\n    </Wrapper>\n  )\n}\n\nexport default NoPrizesContent\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card, CardBody } from '@luckyswap/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useTotalClaim } from 'hooks/useTickets'\nimport PrizesWonContent from './PrizesWonContent'\nimport NoPrizesContent from './NoPrizesContent'\n\nconst StyledCard = styled(Card)`\n  ${(props) =>\n    props.isDisabled\n      ? `  \n        margin-top: 16px;\n        background-color: unset;\n        box-shadow: unset;\n        border: 1px solid ${props.theme.colors.textDisabled};\n\n        ${props.theme.mediaQueries.sm} {\n          margin-top: 24px;\n        }\n\n        ${props.theme.mediaQueries.lg} {\n          margin-top: 32px;\n        }\n        `\n      : ``}\n`\n\nconst YourPrizesCard: React.FC = () => {\n  const { claimAmount } = useTotalClaim()\n\n  const winnings = getBalanceNumber(claimAmount)\n  console.log('winnings?',claimAmount,winnings)\n  const isAWin = winnings > 0\n\n  return (\n    <StyledCard isDisabled={!isAWin} isActive={isAWin}>\n      <CardBody>{isAWin ? <PrizesWonContent /> : <NoPrizesContent />}</CardBody>\n    </StyledCard>\n  )\n}\n\nexport default YourPrizesCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Card, CardBody, Ticket } from '@luckyswap/uikit'\nimport useI18n from 'hooks/useI18n'\nimport UnlockButton from 'components/UnlockButton'\n\nconst StyledCardBody = styled(CardBody)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`\n\nconst StyledHeading = styled(Heading)`\n  margin: 16px 0;\n`\n\nconst IconWrapper = styled.div`\n  svg {\n    width: 80px;\n    height: 80px;\n  }\n`\n\nconst UnlockWalletCard = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <Card isActive>\n      <StyledCardBody>\n        <IconWrapper>\n          <Ticket />\n        </IconWrapper>\n        <StyledHeading size=\"md\">{TranslateString(1080, 'Unlock wallet to access lottery')}</StyledHeading>\n        <UnlockButton />\n      </StyledCardBody>\n    </Card>\n  )\n}\n\nexport default UnlockWalletCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button, Flex, Input, InputProps } from '@luckyswap/uikit'\nimport useI18n from 'hooks/useI18n'\n\ninterface TokenInputProps extends InputProps {\n  max: number | string\n  symbol: string\n  availableSymbol: string\n  value: string\n  onSelectMax?: () => void\n  onChange: (evt: React.FormEvent<HTMLInputElement>) => void\n}\n\nconst TicketInput: React.FC<TokenInputProps> = ({ max, symbol, availableSymbol, onChange, onSelectMax, value }) => {\n  const TranslateString = useI18n()\n\n  return (\n    <StyledTokenInput>\n      <Flex alignItems=\"center\">\n        <Input onChange={onChange} placeholder=\"0\" value={value} />\n        <StyledTokenAdornmentWrapper>\n          <StyledTokenSymbol>{symbol}</StyledTokenSymbol>\n          <StyledSpacer />\n          <div>\n            <Button size=\"sm\" variant=\"secondary\" onClick={onSelectMax}>\n              {TranslateString(452, 'Max')}\n            </Button>\n          </div>\n        </StyledTokenAdornmentWrapper>\n      </Flex>\n      <StyledMaxText>{TranslateString(454, `${max.toLocaleString()} ${availableSymbol} Available`)}</StyledMaxText>\n    </StyledTokenInput>\n  )\n}\n\nconst StyledTokenInput = styled.div``\n\nconst StyledSpacer = styled.div`\n  width: ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledTokenAdornmentWrapper = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst StyledMaxText = styled.div`\n  align-items: center;\n  color: ${(props) => props.theme.colors.primary};\n  display: flex;\n  font-size: 14px;\n  font-weight: 700;\n  height: 44px;\n  justify-content: flex-end;\n`\n\nconst StyledTokenSymbol = styled.span`\n  color: ${(props) => props.theme.colors.primary};\n  font-weight: 700;\n`\n\nexport default TicketInput\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { Button, Modal } from '@luckyswap/uikit'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport TicketInput from 'components/TicketInput'\nimport ModalActions from 'components/ModalActions'\nimport { useMultiBuyLottery, useMaxNumber } from 'hooks/useBuyLottery'\nimport useI18n from 'hooks/useI18n'\nimport { LOTTERY_MAX_NUMBER_OF_TICKETS, LOTTERY_TICKET_PRICE } from 'config'\nimport { useWeb3React } from '@web3-react/core'\nimport { useContract } from 'hooks/useContract'\nimport { getLotteryAddress } from 'utils/addressHelpers'\nimport lotteryAbi from 'config/abi/lottery.json'\nimport { useTransactionAdder } from 'state/transactions/hooks'\n\ninterface BuyTicketModalProps {\n  max: BigNumber\n  onConfirm?: (amount: string, numbers: Array<number>) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst BuyTicketModal: React.FC<BuyTicketModalProps> = ({ max, onDismiss }) => {\n  const [val, setVal] = useState('1')\n  const [pendingTx, setPendingTx] = useState(false)\n  const [, setRequestedBuy] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max, 18)\n  }, [max])\n  const maxTickets = useMemo(() => {\n    return parseInt(getFullDisplayBalance(max.div(LOTTERY_TICKET_PRICE)), 10)\n  }, [max])\n\n  const handleChange = (e: React.FormEvent<HTMLInputElement>) => setVal(e.currentTarget.value)\n\n  const { onMultiBuy } = useMultiBuyLottery()\n  const maxNumber = useMaxNumber()\n  const lotteryContract = useContract(getLotteryAddress(), lotteryAbi)\n  const addTransaction = useTransactionAdder()\n\n  const handleBuy = useCallback(async () => {\n    try {\n      setRequestedBuy(true)\n      const length = parseInt(val)\n      // @ts-ignore\n      // eslint-disable-next-line prefer-spread\n      const numbers = Array.apply(null, { length }).map(() => [\n        Math.floor(Math.random() * maxNumber) + 1,\n        Math.floor(Math.random() * maxNumber) + 1,\n        Math.floor(Math.random() * maxNumber) + 1,\n        Math.floor(Math.random() * maxNumber) + 1,\n      ])\n      // await onMultiBuy(LOTTERY_TICKET_PRICE.toString(), numbers)\n      const txHash = await lotteryContract\n        .multiBuy(new BigNumber(LOTTERY_TICKET_PRICE.toString()).times(new BigNumber(10).pow(18)).toString(), numbers)\n        .then((response) => {\n          addTransaction(response, {\n            summary: 'Buy ticket successfully!',\n          })\n        })\n      // user rejected tx or didn't go thru\n      if (txHash) {\n        setRequestedBuy(false)\n      }\n    } catch (e) {\n      console.error(e)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [onMultiBuy, setRequestedBuy, maxNumber, val])\n\n  const handleSelectMax = useCallback(() => {\n    if (Number(maxTickets) > LOTTERY_MAX_NUMBER_OF_TICKETS) {\n      setVal(LOTTERY_MAX_NUMBER_OF_TICKETS.toString())\n    } else {\n      setVal(maxTickets.toString())\n    }\n  }, [maxTickets])\n\n  const cakeCosts = (amount: string): number => {\n    return +amount * LOTTERY_TICKET_PRICE\n  }\n  return (\n    <Modal title={TranslateString(450, 'Enter amount of tickets to buy')} onDismiss={onDismiss}>\n      <TicketInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol=\"TICKET\"\n        availableSymbol=\"LUCKY\"\n      />\n      <div>\n        <Tips>{TranslateString(999, `1 Ticket = ${LOTTERY_TICKET_PRICE} LUCKY`, { num: LOTTERY_TICKET_PRICE })}</Tips>\n      </div>\n      <div>\n        <Announce>\n          {TranslateString(\n            478,\n            'Ticket purchases are final. Your LUCKY cannot be returned to you after buying tickets.',\n          )}\n        </Announce>\n        <Final>{TranslateString(460, `You will spend: ${cakeCosts(val)} LUCKY`)}</Final>\n      </div>\n      <ModalActions>\n        <Button width=\"100%\" variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          id=\"lottery-buy-complete\"\n          width=\"100%\"\n          variant=\"secondary\"\n          disabled={\n            pendingTx ||\n            parseInt(val) > Number(maxTickets) ||\n            parseInt(val) > LOTTERY_MAX_NUMBER_OF_TICKETS ||\n            parseInt(val) < 1\n          }\n          onClick={async () => {\n            setPendingTx(true)\n            await handleBuy()\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default BuyTicketModal\n\nconst Tips = styled.div`\n  margin-left: 0.4em;\n  font-size: 14px;\n  font-weight: 600;\n  color: ${(props) => props.theme.colors.primary};\n`\n\nconst Final = styled.div`\n  margin-top: 1em;\n  text-align: center;\n  font-size: 20px;\n  font-weight: 600;\n  color: ${(props) => props.theme.colors.primary};\n`\nconst Announce = styled.div`\n  margin-top: 1em;\n  margin-left: 0.4em;\n  color: #fff;\n`\n","import React from 'react'\nimport { Button, Modal } from '@luckyswap/uikit'\nimport ModalActions from 'components/ModalActions'\nimport styled from 'styled-components'\nimport useI18n from 'hooks/useI18n'\n\nconst WarningModal: React.FC<{ onDismiss?: () => void }> = ({ onDismiss }) => {\n  const TranslateString = useI18n()\n\n  return (\n    <Modal title={TranslateString(466, 'Warning')} onDismiss={onDismiss}>\n      <TicketsList>\n        {TranslateString(468, 'Lottery ticket purchases are final.')}\n        <br />\n        {TranslateString(470, 'Your CAKE will not be returned to you after you spend it to buy tickets.')}\n        <br />\n        {TranslateString(472, 'Tickets are only valid for one lottery draw, and will be burned after the draw.')}\n        <br />\n        {TranslateString(\n          474,\n          'Buying tickets does not guarantee you will win anything. Please only participate once you understand the risks.',\n        )}\n      </TicketsList>\n      <ModalActions>\n        <Button width=\"100%\" onClick={onDismiss}>\n          {TranslateString(476, 'I understand')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nconst TicketsList = styled.div`\n  text-align: left;\n  overflow-y: auto;\n  max-height: 400px;\n  color: ${(props) => props.theme.colors.primary};\n`\n\nexport default WarningModal\n","import React, { useMemo, useCallback, useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { AutoRenewIcon, Button, useModal } from '@luckyswap/uikit'\nimport useI18n from 'hooks/useI18n'\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { useContract } from 'hooks/useContract'\nimport { useApproveCallbackCustom } from 'hooks/useApproveCallback'\nimport { XLUCKY_TESTNET } from 'config'\nimport bep20Abi from 'config/abi/erc20.json'\nimport lotteryAbi from 'config/abi/lottery.json'\nimport useRefresh from 'hooks/useRefresh'\nimport { getLotteryAddress, getLotteryTicketAddress } from 'utils/addressHelpers'\nimport lotteryTicketAbi from 'config/abi/lotteryNft.json'\nimport { isTransactionRecent, useAllTransactions } from 'state/transactions/hooks'\nimport { TransactionDetails } from 'state/transactions/reducer'\nimport { getTickets } from 'utils/lotteryUtils'\nimport BuyTicketModal from './BuyTicketModal'\nimport MyTicketsModal from './UserTicketsModal'\nimport PurchaseWarningModal from './PurchaseWarningModal'\n\n// we want the latest one to come first, so return negative if a is after b\nfunction newTransactionsFirst(a: TransactionDetails, b: TransactionDetails) {\n  return b.addedTime - a.addedTime\n}\n\nconst spinnerIcon = <AutoRenewIcon spin color=\"currentColor\" />\n\nconst CardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: ${(props) => props.theme.spacing[3]}px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    justify-content: space-between;\n  }\n`\n\nconst TicketCard: React.FC = () => {\n  const TranslateString = useI18n()\n  const [balanceToken, setBalanceToken] = useState(0)\n  const [tickets, setTickets] = useState([])\n  const [allowance, setAllowance] = useState(0)\n  // const allowance = useLotteryAllowance()\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\n\n  const { account } = useWeb3React()\n  const contractBEP20 = useContract(XLUCKY_TESTNET, bep20Abi)\n\n  const useContractTemp = useContract(XLUCKY_TESTNET, bep20Abi)\n\n  const ticketsContract = useContract(getLotteryTicketAddress(), lotteryTicketAbi)\n  const lotteryContract = useContract(getLotteryAddress(), lotteryAbi)\n  const { fastRefresh } = useRefresh()\n\n  const ticketsLength = tickets.length\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\n  const [onPresentApprove] = useModal(<PurchaseWarningModal />)\n  const [onPresentBuy] = useModal(<BuyTicketModal max={new BigNumber(balanceToken)} tokenName=\"CAKE\" />)\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await getTickets(lotteryContract, ticketsContract, account, null)\n      setTickets(res)\n    }\n\n    if (account && lotteryContract && ticketsContract) {\n      fetchBalance()\n    }\n  }, [account, lotteryContract, fastRefresh, ticketsContract])\n\n  useEffect(() => {\n    if (useContractTemp) {\n      useContractTemp.balanceOf(account).then((data) => {\n        setBalanceToken(data.toString())\n      })\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [account])\n\n  useEffect(() => {\n    if (useContractTemp) {\n      useContractTemp.balanceOf(account).then((data) => {\n        setBalanceToken(data.toString())\n      })\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [account, fastRefresh])\n\n  useEffect(() => {\n    const fetchApprovalData = async () => {\n      if (account && contractBEP20) {\n        try {\n          const response = await contractBEP20?.allowance?.(account, getLotteryAddress())\n          setAllowance(response.toString())\n        } catch (error) {\n          console.log(' error fetch approval data')\n        }\n      }\n    }\n\n    fetchApprovalData()\n  }, [account, contractBEP20])\n  const [requestedApproval, setRequestedApproval] = useState(false)\n\n  const [approval] = useApproveCallbackCustom(XLUCKY_TESTNET, getLotteryAddress())\n\n  async function onAttemptToApprove() {\n    return approval()\n  }\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      await onAttemptToApprove()\n    } catch (e) {\n      console.error(e)\n    }\n    /* eslint-disable react-hooks/exhaustive-deps */\n  }, [approval, setRequestedApproval])\n\n  const allTransactions = useAllTransactions()\n\n  const sortedRecentTransactions = useMemo(() => {\n    const txs = Object.values(allTransactions)\n    return txs.filter(isTransactionRecent).sort(newTransactionsFirst)\n  }, [allTransactions])\n\n  const getStatus = () => {\n    const pending = sortedRecentTransactions.filter((tx) => !tx.receipt).map((tx) => tx.hash)\n    return !!pending.length\n  }\n\n  const renderLotteryTicketButtons = () => {\n    if (allowance.toString() === '0') {\n      return (\n        <>\n          <Button variant=\"secondary\" width=\"100%\">\n            {TranslateString(432, 'View your tickets')}\n          </Button>\n          <Button variant=\"secondary\" width=\"100%\" disabled={requestedApproval || getStatus()} onClick={handleApprove}>\n            {getStatus() ? spinnerIcon : ''}\n            {TranslateString(494, 'Approve LUCKY')}\n          </Button>\n        </>\n      )\n    }\n    return (\n      <>\n        <Button\n          style={{ marginRight: '8px' }}\n          width=\"100%\"\n          disabled={ticketsLength === 0}\n          variant=\"secondary\"\n          onClick={onPresentMyTickets}\n        >\n          {TranslateString(432, 'View your tickets')}\n        </Button>\n        <Button variant=\"secondary\" id=\"lottery-buy-start\" width=\"100%\" onClick={onPresentBuy}>\n          {getStatus() ? spinnerIcon : ''}\n          {TranslateString(430, 'Buy ticket')}\n        </Button>\n      </>\n    )\n  }\n\n  return (\n    <CardActions>\n      {lotteryHasDrawn ? (\n        <Button disabled> {TranslateString(874, 'On sale soon')}</Button>\n      ) : (\n        renderLotteryTicketButtons()\n      )}\n    </CardActions>\n  )\n}\n\nexport default TicketCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card, CardBody, TicketRound, Text, Heading } from '@luckyswap/uikit'\nimport useI18n from 'hooks/useI18n'\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\nimport useTickets from 'hooks/useTickets'\nimport { useCurrentTime } from 'hooks/useTimer'\nimport TicketActions from './TicketActions'\nimport { getTicketSaleTime } from '../../helpers/CountdownHelpers'\n\ninterface CardProps {\n  isSecondCard?: boolean\n}\n\nconst StyledCard = styled(Card)<CardProps>`\n  ${(props) =>\n    props.isSecondCard\n      ? `  \n        margin-top: 16px;\n\n        ${props.theme.mediaQueries.sm} {\n          margin-top: 24px;\n        }\n\n        ${props.theme.mediaQueries.lg} {\n          margin-top: 32px;\n        }\n        `\n      : ``}\n`\n\nconst CardHeader = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst IconWrapper = styled.div`\n  margin-right: 16px;\n  svg {\n    width: 48px;\n    height: 48px;\n  }\n`\n\nconst TicketCountWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst TicketCard: React.FC<CardProps> = ({ isSecondCard = false }) => {\n  const TranslateString = useI18n()\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\n\n  const tickets = useTickets()\n  const ticketsLength = tickets.length\n\n  const currentMillis = useCurrentTime()\n  const timeUntilTicketSale = lotteryHasDrawn && getTicketSaleTime(currentMillis)\n  // 12\n  return (\n    <StyledCard isSecondCard={isSecondCard}>\n      <CardBody>\n        <CardHeader>\n          <IconWrapper>\n            <img alt=\"\" src=\"https://merlinlab.com/assets/lottery/lottery.svg\"/>\n          </IconWrapper>\n          {lotteryHasDrawn ? (\n            <TicketCountWrapper>\n              <Text fontSize=\"14px\" color=\"textSubtle\">\n                {TranslateString(870, 'Until ticket sale:')}\n              </Text>\n              <Heading size=\"lg\">{timeUntilTicketSale}</Heading>\n            </TicketCountWrapper>\n          ) : (\n            <TicketCountWrapper>\n              <Text fontSize=\"14px\" color=\"textSubtle\">\n                {TranslateString(724, 'Your tickets for this round')}\n              </Text>\n              <Heading size=\"lg\">{ticketsLength}</Heading>\n            </TicketCountWrapper>\n          )}\n        </CardHeader>\n        <TicketActions />\n      </CardBody>\n    </StyledCard>\n  )\n}\n\nexport default TicketCard\n","import React from 'react'\nimport CardValue, { CardValueProps } from './CardValue'\n\nconst CardBusdValue: React.FC<CardValueProps> = (props) => {\n  return (\n    <CardValue fontSize=\"14px\" lineHeight=\"1.1\" color=\"#2b2c3a\" prefix=\"~$\" bold={false} decimals={2} {...props} />\n  )\n}\n\nexport default CardBusdValue\n","import React from 'react'\nimport styled from 'styled-components'\nimport useI18n from 'hooks/useI18n'\nimport { Heading, Text } from '@luckyswap/uikit'\nimport { BigNumber } from 'bignumber.js'\nimport { usePriceCakeBusd } from 'state/hooks'\nimport CardBusdValue from '../../Home/components/CardBusdValue'\n\nexport interface PrizeGridProps {\n  lotteryPrizeAmount?: number\n  pastDraw?: boolean\n  jackpotMatches?: number\n  oneTicketMatches?: number\n  twoTicketMatches?: number\n  threeTicketMatches?: number\n}\n\nconst Grid = styled.div<{ pastDraw?: boolean }>`\n  display: grid;\n  grid-template-columns: repeat(${(props) => (props.pastDraw ? 3 : 2)}, 1fr);\n  grid-template-rows: repeat(4, auto);\n`\n\nconst RightAlignedText = styled(Text)`\n  text-align: right;\n`\n\nconst RightAlignedHeading = styled(Heading)`\n  text-align: right;\n`\n\nconst GridItem = styled.div<{ marginBottom?: string }>`\n  margin-bottom: ${(props) => (props.marginBottom ? props.marginBottom : '10px')};\n`\n\nconst PastDrawGridItem = styled(GridItem)`\n  transform: translate(-40%, 0%);\n`\n\nconst PrizeGrid: React.FC<PrizeGridProps> = ({\n  lotteryPrizeAmount = 0,\n  pastDraw = false,\n  jackpotMatches,\n  twoTicketMatches,\n  threeTicketMatches,\n}) => {\n  const fourMatchesAmount = +((lotteryPrizeAmount / 100) * 50).toFixed(0)\n  const threeMatchesAmount = +((lotteryPrizeAmount / 100) * 20).toFixed(0)\n  const twoMatchesAmount = +((lotteryPrizeAmount / 100) * 10).toFixed(0)\n  const burnAmount = +((lotteryPrizeAmount / 100) * 20).toFixed(0)\n  const TranslateString = useI18n()\n  const cakeBusdPrice = usePriceCakeBusd()\n\n  const getCakeBusdValue = (amount: number) => {\n    return new BigNumber(amount).multipliedBy(cakeBusdPrice).toNumber()\n  }\n\n  return (\n    <Grid pastDraw={pastDraw}>\n      <GridItem>\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {TranslateString(756, 'No. Matched')}\n        </Text>\n      </GridItem>\n      {pastDraw && (\n        <PastDrawGridItem>\n          <RightAlignedText fontSize=\"14px\" color=\"textSubtle\">\n            {TranslateString(754, 'Winners')}\n          </RightAlignedText>\n        </PastDrawGridItem>\n      )}\n      <GridItem>\n        <RightAlignedText fontSize=\"14px\" color=\"textSubtle\">\n          {TranslateString(752, 'Prize Pot')}\n        </RightAlignedText>\n      </GridItem>\n      {/* 4 matches row */}\n      <GridItem>\n        <Heading style={{ textShadow: 'rgb(255 214 0) 0px 0px 25px' }} size=\"md\">\n          4\n        </Heading>\n      </GridItem>\n      {pastDraw && (\n        <PastDrawGridItem>\n          <RightAlignedHeading size=\"md\">{jackpotMatches}</RightAlignedHeading>\n        </PastDrawGridItem>\n      )}\n      <GridItem>\n        <RightAlignedHeading size=\"md\">\n          {fourMatchesAmount.toLocaleString()}\n          {!pastDraw && !cakeBusdPrice.eq(0) && <CardBusdValue value={getCakeBusdValue(fourMatchesAmount)} />}\n        </RightAlignedHeading>\n      </GridItem>\n      {/* 3 matches row */}\n      <GridItem style={{ textShadow: 'rgb(255 214 0) 0px 0px 25px' }}>\n        <Text bold>3</Text>\n      </GridItem>\n      {pastDraw && (\n        <PastDrawGridItem>\n          <RightAlignedText bold>{threeTicketMatches}</RightAlignedText>\n        </PastDrawGridItem>\n      )}\n      <GridItem>\n        <RightAlignedText>\n          {threeMatchesAmount.toLocaleString()}\n          {!pastDraw && !cakeBusdPrice.eq(0) && <CardBusdValue value={getCakeBusdValue(threeMatchesAmount)} />}\n        </RightAlignedText>\n      </GridItem>\n      {/* 2 matches row */}\n      <GridItem style={{ textShadow: 'rgb(255 214 0) 0px 0px 25px' }}>\n        <Text>2</Text>\n      </GridItem>\n      {pastDraw && (\n        <PastDrawGridItem>\n          <RightAlignedText>{twoTicketMatches}</RightAlignedText>\n        </PastDrawGridItem>\n      )}\n      <GridItem>\n        <RightAlignedText>\n          {twoMatchesAmount.toLocaleString()}\n          {!pastDraw && !cakeBusdPrice.eq(0) && <CardBusdValue value={getCakeBusdValue(twoMatchesAmount)} />}\n        </RightAlignedText>\n      </GridItem>\n      {/* Burn row */}\n      <GridItem marginBottom=\"0\">\n        <Text>{TranslateString(999, `${pastDraw ? 'Burned' : 'To burn'}`)}:</Text>\n      </GridItem>\n      {pastDraw ? (\n        <>\n          <GridItem marginBottom=\"0\" />\n          <GridItem marginBottom=\"0\">\n            <RightAlignedText>{burnAmount.toLocaleString()}</RightAlignedText>\n          </GridItem>\n        </>\n      ) : (\n        <GridItem marginBottom=\"0\">\n          <RightAlignedText>{burnAmount.toLocaleString()}</RightAlignedText>\n        </GridItem>\n      )}\n    </Grid>\n  )\n}\n\nexport default PrizeGrid\n","import React, { useContext, useState } from 'react'\nimport styled from 'styled-components'\nimport { useWeb3React } from '@web3-react/core'\nimport { Heading, Card, CardBody, CardFooter, Text, PancakeRoundIcon, Flex, Skeleton } from '@luckyswap/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport useI18n from 'hooks/useI18n'\nimport { useTotalRewards } from 'hooks/useTickets'\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\nimport ExpandableSectionButton from 'components/ExpandableSectionButton/ExpandableSectionButton'\nimport { BigNumber } from 'bignumber.js'\nimport { usePriceCakeBusd } from 'state/hooks'\nimport PrizeGrid from '../PrizeGrid'\nimport CardBusdValue from '../../../Home/components/CardBusdValue'\n\nconst CardHeading = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n`\n\nconst Right = styled.div`\n  display: flex;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    display: none;\n  }\n`\n\nconst Left = styled.div`\n  display: flex;\n`\n\nconst IconWrapper = styled.div`\n  margin-right: 16px;\n  svg {\n    width: 48px;\n    height: 48px;\n  }\n`\n\nconst PrizeCountWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst ExpandingWrapper = styled.div<{ showFooter: boolean }>`\n  height: ${(props) => (props.showFooter ? '100%' : '0px')};\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    height: 100%;\n  }\n`\nconst CardBodyNew = styled.div`\n  background-color: rgba(255, 255, 255, 0.1);\n  border: 0.0625rem solid rgba(255, 255, 255, 0.2);\n  border-radius: 1.25rem;\n  padding: 24px;\n`\n\nconst TotalPrizesCard = () => {\n  const TranslateString = useI18n()\n  const { account } = useWeb3React()\n  const [showFooter, setShowFooter] = useState(false)\n  const lotteryPrizeAmount = +getBalanceNumber(useTotalRewards()).toFixed(0)\n  const lotteryPrizeAmountBusd = new BigNumber(lotteryPrizeAmount).multipliedBy(usePriceCakeBusd()).toNumber()\n  const lotteryPrizeWithCommaSeparators = lotteryPrizeAmount.toLocaleString()\n  const { currentLotteryNumber } = useContext(PastLotteryDataContext)\n\n  return (\n    <Card>\n      <CardBody>\n        {account && (\n          <Flex mb=\"16px\" alignItems=\"center\" justifyContent=\"space-between\" style={{ height: '20px' }}>\n            {currentLotteryNumber === 0 && <Skeleton height={20} width={56} />}\n            {currentLotteryNumber > 0 && (\n              <>\n                <Text fontSize=\"12px\" style={{ fontWeight: 600 }}>\n                  {TranslateString(720, `Round #${currentLotteryNumber}`, { num: currentLotteryNumber })}\n                </Text>\n              </>\n            )}\n          </Flex>\n        )}\n        <CardHeading>\n          <Left>\n            <IconWrapper>\n              <img width=\"35px\" alt=\"\" src=\"/images/logo-icon.png\" />\n            </IconWrapper>\n            <PrizeCountWrapper>\n              <Text fontSize=\"14px\" color=\"textSubtle\">\n                {TranslateString(722, 'Total Pot:')}\n              </Text>\n              <Heading style={{ 'textShadow': 'rgb(255 214 0) 0px 0px 25px' }} size=\"lg\">\n                {lotteryPrizeWithCommaSeparators} LUCKY\n              </Heading>\n              {lotteryPrizeAmountBusd !== 0 && <CardBusdValue value={lotteryPrizeAmountBusd} />}\n            </PrizeCountWrapper>\n          </Left>\n          <Right>\n            <ExpandableSectionButton onClick={() => setShowFooter(!showFooter)} expanded={showFooter} />\n          </Right>\n        </CardHeading>\n      </CardBody>\n      <ExpandingWrapper showFooter={showFooter}>\n        <CardFooter>\n          <PrizeGrid lotteryPrizeAmount={lotteryPrizeAmount} />\n        </CardFooter>\n      </ExpandingWrapper>\n    </Card>\n  )\n}\n\nexport default TotalPrizesCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useWeb3React } from '@web3-react/core'\nimport { Image, Card, CardBody } from '@luckyswap/uikit'\nimport { useWinningNumbers, useMatchingRewardLength } from 'hooks/useTickets'\nimport useI18n from 'hooks/useI18n'\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\n\nconst WinningNumbers: React.FC = () => {\n  const { account } = useWeb3React()\n  const winNumbers = useWinningNumbers()\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\n  const MatchedNumber4 = useMatchingRewardLength(4)\n  const MatchedNumber3 = useMatchingRewardLength(3)\n  const MatchedNumber2 = useMatchingRewardLength(2)\n  const TranslateString = useI18n()\n\n  return (\n    <CardWrapper>\n      <CardBodyNew>\n        <StyledCardContentInner>\n          <StyledCardHeader>\n            <Title style={{ color: 'rgb(243, 193, 17)' }}>\n              {account && lotteryHasDrawn\n                ? `🥳${TranslateString(570, 'Winning Numbers This Round')}🥳`\n                : TranslateString(440, 'Latest Winning Numbers')}\n            </Title>\n          </StyledCardHeader>\n          <Row>\n            {/* <img\n              alt=\"\"\n              src=\"https://merlinlab.com/static/media/leftGoldenCoin.6aef3b76.svg\"\n              className=\"sc-iCfLBT sc-ezbkgU gvyEtt jElfkq\"\n            />\n            <img\n              alt=\"\"\n              src=\"https://merlinlab.com/static/media/rightGoldenCoin.e795d41c.svg\"\n              className=\"sc-iCfLBT sc-ezbkgU KkWOV jElfkq\"\n            /> */}\n            {winNumbers.map((number, index) => (\n              // eslint-disable-next-line react/no-array-index-key\n              <TicketNumberBox key={index}>\n                <CenteredText>{number}</CenteredText>\n              </TicketNumberBox>\n            ))}\n          </Row>\n          <Column>\n            <RowNoPadding>\n              <CenteredTextWithPadding style={{color:'white'}}>{TranslateString(442, 'Tickets matching 4 numbers:')}</CenteredTextWithPadding>\n              <CenteredTextWithPadding>\n                <strong style={{color:'yellow'}}>{MatchedNumber4}</strong>\n              </CenteredTextWithPadding>\n            </RowNoPadding>\n            <RowNoPadding>\n              <CenteredTextWithPadding style={{color:'white'}}>{TranslateString(444, 'Tickets matching 3 numbers:')}</CenteredTextWithPadding>\n              <CenteredTextWithPadding>\n                <strong style={{color:'yellow'}}>{MatchedNumber3}</strong>\n              </CenteredTextWithPadding>\n            </RowNoPadding>\n            <RowNoPadding>\n              <CenteredTextWithPadding style={{color:'white'}}>{TranslateString(446, 'Tickets matching 2 numbers:')}</CenteredTextWithPadding>\n              <CenteredTextWithPadding>\n                <strong style={{color:'yellow'}}>{MatchedNumber2}</strong>\n              </CenteredTextWithPadding>\n            </RowNoPadding>\n          </Column>\n\n          <Link href=\"/\" target=\"_blank\">\n            {TranslateString(448, 'Export recent winning numbers')}\n          </Link>\n        </StyledCardContentInner>\n      </CardBodyNew>\n    </CardWrapper>\n  )\n}\n\nconst CardBodyNew = styled.div`\n  background-color: rgba(255, 255, 255, 0.1);\n  border: 0.0625rem solid rgba(255, 255, 255, 0.2);\n  border-radius: 1.25rem;\n  padding: 24px;\n`\n\nconst Link = styled.a`\n  margin-top: 1em;\n  text-decoration: none;\n  color: #25beca;\n`\n\nconst Row = styled.div`\n  margin-top: 1em;\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n`\n\nconst RabbitRow = styled.div`\n  margin-top: -2.3em;\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n\n  @media (max-width: 768px) {\n    display: none;\n  }\n`\n\nconst RabbitRowSmall = styled.div`\n  margin-top: -2.3em;\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n\n  @media (min-width: 768px) {\n    display: none;\n  }\n`\n\nconst CardImage = styled.div`\n  text-align: center;\n`\n\nconst CardImageFirst = styled.div`\n  text-align: center;\n  margin-left: -1.2em;\n\n  @media (max-width: 600) {\n    margin-left: -0.2em;\n  }\n`\n\nconst RowNoPadding = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n`\n\nconst Column = styled.div`\n  margin-top: 1em;\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n`\n\nconst CenteredText = styled.div`\n  text-align: center;\n  align-items: center;\n`\n\nconst CenteredTextWithPadding = styled.div`\n  text-align: center;\n  align-items: center;\n  padding-left: 2px;\n  padding-right: 2px;\n`\n\nconst TicketNumberBox = styled.div`\n  padding: 10px;\n  border-radius: 12px;\n  text-shadow: rgb(255 214 0) 0px 0px 12px;\n  // background: linear-gradient(180deg, #54dade 0%, #24c7d6 76.22%);\n  color: white;\n  font-size: 20px;\n  font-weight: 900;\n  margin: 10px;\n  margin-bottom: 7px;\n  width: 40px;\n\n  @media (min-width: 768px) {\n    font-size: 40px;\n    margin: 20px;\n    width: 60px;\n  }\n`\n\nconst RabbitBox = styled.div`\n  /* padding: 10px; */\n  border-radius: 12px;\n  margin: 16px 20px;\n  width: 60px;\n`\n\nconst RabbitBoxSmall = styled.div`\n  padding-top: 10px;\n  padding-left: 10px;\n  border-radius: 12px;\n  margin: 20px;\n  width: 20px;\n`\n\nconst StyledCardHeader = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n`\n\nconst CardWrapper = styled.div``\n\nconst Title = styled.div`\n  color: ${(props) => props.theme.colors.secondary};\n  font-size: 24px;\n  width: 50vw;\n  text-align: center;\n  font-weight: 1000;\n`\n\nconst StyledCardContentInner = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: space-between;\n`\n\nexport default WinningNumbers\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Heading, Link, Image } from '@luckyswap/uikit'\nimport useI18n from 'hooks/useI18n'\n\nconst LayoutWrapper = styled.div`\n  max-width: 500px;\n  margin: 0 auto 40px;\n  display: flex;\n  flex-direction: column;\n`\n\nconst StyledHeading = styled(Heading)`\n  margin: 16px 0;\n`\n\nconst StyledImage = styled(Image)`\n  align-self: center;\n`\n\nconst StyledLink = styled(Link)`\n  align-self: center;\n  margin-top: 16px;\n`\n\nconst HowItWorks = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <LayoutWrapper>\n      <StyledHeading size=\"lg\" as=\"h3\" color=\"rgb(243, 193, 17)\">\n        {TranslateString(632, 'How it works')}\n      </StyledHeading>\n      <Text fontSize=\"16px\">\n        {TranslateString(\n          426,\n          'Spend LUCKY to buy tickets, contributing to the lottery pot. Win prizes if 2, 3, or 4 of your ticket numbers match the winning numbers and their exact order!',\n        )}\n      </Text>\n      <StyledLink href=\"https://docs.luckyswap.io\">{TranslateString(610, 'Read more')}</StyledLink>\n    </LayoutWrapper>\n  )\n}\nexport default HowItWorks\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useWeb3React } from '@web3-react/core'\nimport { BaseLayout } from '@luckyswap/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useTotalClaim } from 'hooks/useTickets'\nimport YourPrizesCard from './components/YourPrizesCard'\nimport UnlockWalletCard from './components/UnlockWalletCard'\nimport TicketCard from './components/TicketCard'\nimport TotalPrizesCard from './components/TotalPrizesCard'\nimport WinningNumbers from './components/WinningNumbers'\nimport HowItWorks from './components/HowItWorks'\n\nconst Cards = styled(BaseLayout)`\n  align-items: start;\n  margin-bottom: 32px;\n\n  & > div {\n    grid-column: span 6;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    & > div {\n      grid-column: span 12;\n    }\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    & > div {\n      grid-column: span 6;\n    }\n  }\n`\n\nconst SecondCardColumnWrapper = styled.div<{ isAWin?: boolean }>`\n  display: flex;\n  flex-direction: ${(props) => (props.isAWin ? 'column' : 'column-reverse')};\n`\n\nconst NextDrawPage: React.FC = () => {\n  const { account } = useWeb3React()\n  const { claimAmount } = useTotalClaim()\n  const winnings = getBalanceNumber(claimAmount)\n  const isAWin = winnings > 0\n\n  return (\n    <>\n      <Cards>\n        <div>\n          <TotalPrizesCard />\n        </div>\n        <SecondCardColumnWrapper isAWin={isAWin}>\n          {!account ? (\n            <UnlockWalletCard />\n          ) : (\n            <>\n              <YourPrizesCard />\n              <TicketCard isSecondCard={isAWin} />\n            </>\n          )}\n        </SecondCardColumnWrapper>\n      </Cards>\n      <HowItWorks />\n      {/* legacy page content */}\n      <WinningNumbers />\n    </>\n  )\n}\n\nexport default NextDrawPage\n","export type DataResponse = {\n  lotteryNumber: number\n  lotteryDate: string\n  lotteryNumbers: number[]\n  poolSize: number\n  burned: number\n  contractLink: string\n  jackpotTicket: number\n  match1Ticket: number | null\n  match2Ticket: number\n  match3Ticket: number\n  match4Ticket: number\n  poolJackpot: number\n  poolMatch3: number\n  poolMatch2: number\n  poolMatch1: number | null\n\n  // TODO: Fill in the error type\n  error: any\n}\n\n/**\n * Get data for a specific lottery\n */\nconst getLotteryRoundData = async (lotteryNumber: number): Promise<DataResponse> => {\n  try {\n    const response = await fetch(`https://api.pancakeswap.com/api/singleLottery?lotteryNumber=${lotteryNumber}`)\n    const data = await response.json()\n\n    return data\n  } catch (error) {\n    throw new Error(error)\n  }\n}\n\nexport default getLotteryRoundData\n","import { useContext, useEffect, useState } from 'react'\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\nimport getLotteryRoundData, { DataResponse } from 'utils/getLotteryRoundData'\n\ntype GetRecentLotteryRoundDataReturn = {\n  isLoading: boolean\n  data: DataResponse\n  mostRecentLotteryNumber: number\n  error: any\n}\n\nconst useGetRecentLotteryRoundData = (): GetRecentLotteryRoundDataReturn => {\n  const [isLoading, setIsLoading] = useState(true)\n  const [data, setData] = useState(null)\n  const [error, setError] = useState(null)\n  const { mostRecentLotteryNumber } = useContext(PastLotteryDataContext)\n\n  useEffect(() => {\n    const fetchRecentLotteryData = async () => {\n      try {\n        setIsLoading(true)\n\n        const roundData = await getLotteryRoundData(mostRecentLotteryNumber)\n        setData(roundData)\n      } catch (err) {\n        setError(err)\n      } finally {\n        setIsLoading(false)\n      }\n    }\n\n    if (mostRecentLotteryNumber > 0) {\n      fetchRecentLotteryData()\n    }\n  }, [mostRecentLotteryNumber, setData, setIsLoading, setError])\n\n  return { isLoading, data, mostRecentLotteryNumber, error }\n}\n\nexport default useGetRecentLotteryRoundData\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Text, Input, Button } from '@luckyswap/uikit'\nimport useI18n from 'hooks/useI18n'\n\ninterface PastLotterySearcherProps {\n  initialLotteryNumber: number\n  onSubmit: (num: number) => void\n}\n\nconst Wrapper = styled.div`\n  margin-bottom: 24px;\n`\n\nconst SearchWrapper = styled.div`\n  position: relative;\n`\nconst InputWrapper = styled.div`\n  input::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n\n  /* Firefox */\n  input[type='number'] {\n    -moz-appearance: textfield;\n  }\n`\n\nconst ButtonWrapper = styled.div`\n  position: absolute;\n  right: 8px;\n  top: 50%;\n  transform: translate(0%, -50%);\n  width: auto;\n`\n\nconst PastLotterySearcher: React.FC<PastLotterySearcherProps> = ({ initialLotteryNumber, onSubmit }) => {\n  const [lotteryNumber, setLotteryNumber] = useState(initialLotteryNumber)\n  const [isError, setIsError] = useState(false)\n  const TranslateString = useI18n()\n\n  const handleSubmit = (evt: React.FormEvent<HTMLFormElement>) => {\n    evt.preventDefault()\n    onSubmit(lotteryNumber)\n  }\n\n  const handleChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\n    const value = parseInt(evt.currentTarget.value, 10)\n\n    // The max value will always be the initialLotteryNumber which equals\n    // the latest lottery round\n    setIsError(value > initialLotteryNumber)\n    setLotteryNumber(value)\n  }\n\n  return (\n    <Wrapper>\n      <Text>{TranslateString(742, 'Select lottery number:')}</Text>\n      <form onSubmit={handleSubmit}>\n        <SearchWrapper>\n          <InputWrapper>\n            <Input\n              value={lotteryNumber}\n              type=\"number\"\n              isWarning={isError}\n              max={initialLotteryNumber}\n              onChange={handleChange}\n            />\n          </InputWrapper>\n          <ButtonWrapper>\n            <Button variant=\"secondary\" type=\"submit\" scale=\"sm\" disabled={isError}>\n              {TranslateString(744, 'Search')}\n            </Button>\n          </ButtonWrapper>\n        </SearchWrapper>\n      </form>\n    </Wrapper>\n  )\n}\n\nexport default PastLotterySearcher\n","import React from 'react'\nimport { Text } from '@luckyswap/uikit'\n\ninterface PastRoundCardErrorProps {\n  error: {\n    message: string\n  }\n}\n\nconst PastRoundCardError: React.FC<PastRoundCardErrorProps> = ({ error }) => {\n  return <Text p=\"24px\">{error.message}</Text>\n}\n\nexport default PastRoundCardError\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Heading, Text } from '@luckyswap/uikit'\n\ninterface HeadingProps {\n  valueToDisplay?: string\n  children?: string\n  Icon?: React.ComponentType\n}\n\nconst IconWrapper = styled.div`\n  margin-right: 16px;\n  svg {\n    width: 48px;\n    height: 48px;\n  }\n`\n\nconst LotteryCardHeading: React.FC<HeadingProps> = ({ valueToDisplay, children, Icon, ...props }) => {\n  return (\n    <Flex {...props}>\n      {Icon && (\n        <IconWrapper>\n          <Icon />\n        </IconWrapper>\n      )}\n      <Flex flexDirection=\"column\">\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {children}\n        </Text>\n        <Heading size=\"lg\">{valueToDisplay}</Heading>\n      </Flex>\n    </Flex>\n  )\n}\n\nLotteryCardHeading.defaultProps = {\n  valueToDisplay: '',\n  Icon: () => <div />,\n  children: '',\n}\n\nexport default LotteryCardHeading\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button, LinkExternal, useModal } from '@luckyswap/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { useWeb3React } from '@web3-react/core'\nimport useTickets from 'hooks/useTickets'\nimport UnlockButton from 'components/UnlockButton'\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\n\nconst Wrapper = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  padding-top: 24px;\n\n  & > div {\n    flex: 1;\n    width: 100%;\n  }\n`\n\nconst ExternalLinkWrap = styled(LinkExternal)`\n  align-items: center;\n  display: flex;\n  height: 48px;\n  justify-content: center;\n  text-decoration: none;\n  width: 100%;\n`\n\nconst TicketCard: React.FC<{ contractLink?: string; lotteryNumber?: number }> = ({ contractLink, lotteryNumber }) => {\n  const TranslateString = useI18n()\n  const tickets = useTickets(lotteryNumber)\n  const ticketsLength = tickets.length\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\n  const { account } = useWeb3React()\n\n  if (!account) {\n    return (\n      <Wrapper>\n        <UnlockButton />\n      </Wrapper>\n    )\n  }\n\n  return (\n    <Wrapper>\n      <div>\n        <Button disabled={ticketsLength === 0} onClick={onPresentMyTickets} width=\"100%\">\n          {TranslateString(432, 'View your tickets')}\n        </Button>\n      </div>\n      <div>\n        <ExternalLinkWrap href={contractLink}>{TranslateString(356, 'View on BscScan')}</ExternalLinkWrap>\n      </div>\n    </Wrapper>\n  )\n}\n\nexport default TicketCard\n","const formatLotteryDate = (lotteryDate: string) => {\n  if (!lotteryDate) {\n    return {}\n  }\n\n  const date = new Date(lotteryDate)\n\n  const dateString = date.toDateString()\n  const hours = date.getUTCHours()\n  const monthAndDay = dateString.split(' ').splice(1, 2).join(' ')\n\n  return { hours, monthAndDay }\n}\n\nexport default formatLotteryDate\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text } from '@luckyswap/uikit'\nimport formatLotteryDate from '../helpers/formatLotteryDate'\n\nconst Wrapper = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n`\n\nconst Timestamp = ({ timeValue }) => {\n  const { monthAndDay, hours } = formatLotteryDate(timeValue)\n\n  return (\n    <Wrapper>\n      <Text fontSize=\"14px\">\n        {monthAndDay}, {hours}:00 UTC\n      </Text>\n    </Wrapper>\n  )\n}\n\nexport default Timestamp\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, CardBody, CardFooter, PancakeRoundIcon, TicketRound } from '@luckyswap/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { DataResponse } from 'utils/getLotteryRoundData'\nimport LotteryCardHeading from '../LotteryCardHeading'\nimport PastLotteryActions from './PastLotteryActions'\nimport PrizeGrid from '../PrizeGrid'\nimport Timestamp from '../Timestamp'\n\ninterface PastRoundCardDetailsProps {\n  data: DataResponse\n}\n\nconst CardHeading = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`\n\nconst TopLotteryCardHeading = styled(LotteryCardHeading)`\n  margin-bottom: ${(props) => props.theme.spacing[4]}px;\n`\n\nconst PastRoundCardDetails: React.FC<PastRoundCardDetailsProps> = ({ data }) => {\n  const TranslateString = useI18n()\n\n  const {\n    contractLink,\n    jackpotTicket,\n    lotteryDate,\n    lotteryNumber,\n    lotteryNumbers,\n    match1Ticket,\n    match2Ticket,\n    match3Ticket,\n    poolSize,\n  } = data\n\n  return (\n    !data.error &&\n    data && (\n      <>\n        <CardBody>\n          <CardHeading>\n            <Timestamp timeValue={lotteryDate} />\n            <Heading size=\"md\" mb=\"24px\">\n              Round #{lotteryNumber}\n            </Heading>\n            <TopLotteryCardHeading\n              valueToDisplay={`${lotteryNumbers[0]}, ${lotteryNumbers[1]}, ${lotteryNumbers[2]}, ${lotteryNumbers[3]}`}\n              // Icon={TicketRound}\n            >\n              {TranslateString(999, 'Winning numbers')}\n            </TopLotteryCardHeading>\n            <LotteryCardHeading\n              valueToDisplay={TranslateString(999, `${poolSize.toLocaleString()} LUCKY`)}\n              // Icon={PancakeRoundIcon}\n            >\n              {TranslateString(999, 'Total prizes')}\n            </LotteryCardHeading>\n          </CardHeading>\n        </CardBody>\n        <CardFooter>\n          <PrizeGrid\n            lotteryPrizeAmount={poolSize}\n            jackpotMatches={jackpotTicket}\n            oneTicketMatches={match1Ticket}\n            twoTicketMatches={match2Ticket}\n            threeTicketMatches={match3Ticket}\n            pastDraw\n          />\n          <PastLotteryActions contractLink={contractLink} lotteryNumber={lotteryNumber} />\n        </CardFooter>\n      </>\n    )\n  )\n}\n\nexport default PastRoundCardDetails\n","import React from 'react'\nimport { Card } from '@luckyswap/uikit'\nimport { DataResponse } from 'utils/getLotteryRoundData'\nimport PastRoundCardError from './PastRoundCardError'\nimport PastRoundCardDetails from './PastRoundCardDetails'\n\ninterface PastRoundCardProps {\n  error: {\n    message: string\n  }\n  data: DataResponse\n}\n\nconst PastRoundCard: React.FC<PastRoundCardProps> = ({ error, data }) => {\n  return <Card>{error.message ? <PastRoundCardError error={error} /> : <PastRoundCardDetails data={data} />}</Card>\n}\n\nexport default PastRoundCard\n","import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { Card, CardBody } from '@luckyswap/uikit'\nimport getLotteryRoundData from 'utils/getLotteryRoundData'\nimport useI18n from 'hooks/useI18n'\nimport useGetRecentLotteryRoundData from 'hooks/useGetRecentLotteryRoundData'\nimport PastLotterySearcher from './PastLotterySearcher'\nimport PastRoundCard from './PastRoundCard'\nimport Loading from '../Loading'\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst StyledCardBody = styled(CardBody)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 552px; // height of final card\n`\n\nconst PastLotteryRoundViewer = () => {\n  const [state, setState] = useState({\n    roundData: null,\n    error: { message: null, type: null },\n    isInitialized: false,\n    isLoading: true,\n  })\n  const { data: initialLotteryData, mostRecentLotteryNumber } = useGetRecentLotteryRoundData()\n  const TranslateString = useI18n()\n  const { roundData, error, isInitialized, isLoading } = state\n\n  useEffect(() => {\n    if (initialLotteryData) {\n      setState((prevState) => ({ ...prevState, isLoading: false, isInitialized: true, roundData: initialLotteryData }))\n    }\n  }, [initialLotteryData, setState])\n\n  const handleSubmit = async (lotteryNumber: number) => {\n    setState((prevState) => ({\n      ...prevState,\n      isLoading: true,\n    }))\n\n    getLotteryRoundData(lotteryNumber)\n      .then((data) => {\n        if (data.error) {\n          setState((prevState) => ({\n            ...prevState,\n            error: {\n              message: TranslateString(1076, 'The lottery number you provided does not exist'),\n              type: 'out of range',\n            },\n            isLoading: false,\n            isInitialized: true,\n          }))\n        } else {\n          setState((prevState) => ({\n            ...prevState,\n            error: { message: null, type: null },\n            roundData: data,\n            isLoading: false,\n            isInitialized: true,\n          }))\n        }\n      })\n      .catch(() => {\n        setState((prevState) => ({\n          ...prevState,\n          error: { message: TranslateString(1078, 'Error fetching data'), type: 'api' },\n          isLoading: false,\n          isInitialized: true,\n        }))\n      })\n  }\n\n  return (\n    <Wrapper>\n      <PastLotterySearcher initialLotteryNumber={mostRecentLotteryNumber} onSubmit={handleSubmit} />\n      {!isInitialized || isLoading ? (\n        <Card>\n          <StyledCardBody>\n            <Loading />\n          </StyledCardBody>\n        </Card>\n      ) : (\n        <PastRoundCard error={error} data={roundData} />\n      )}\n    </Wrapper>\n  )\n}\n\nexport default PastLotteryRoundViewer\n","import React, { lazy, Suspense, useContext } from 'react'\nimport styled from 'styled-components'\nimport { Text } from '@luckyswap/uikit'\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\nimport Loading from '../Loading'\n\nconst Line = lazy(() => import('./LineChartWrapper'))\n\nconst InnerWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n\nconst HistoryChart: React.FC = () => {\n  const { historyData, historyError } = useContext(PastLotteryDataContext)\n  const getDataArray = (kind) => {\n    return historyData\n      .map((dataPoint) => {\n        return dataPoint[kind]\n      })\n      .reverse()\n  }\n\n  const lineStyles = ({ color }) => {\n    return {\n      borderColor: color,\n      fill: false,\n      borderWidth: 2,\n      pointRadius: 0,\n      pointHitRadius: 10,\n    }\n  }\n\n  const chartData = {\n    labels: getDataArray('lotteryNumber'),\n    datasets: [\n      {\n        label: 'Pool Size',\n        data: getDataArray('poolSize'),\n        yAxisID: 'y-axis-pool',\n        ...lineStyles({ color: '#8F80BA' }),\n      },\n      {\n        label: 'Burned',\n        data: getDataArray('burned'),\n        yAxisID: 'y-axis-burned',\n        ...lineStyles({ color: '#2b2c3a' }),\n      },\n    ],\n  }\n\n  const axesStyles = ({ color, lineHeight }) => {\n    return {\n      borderCapStyle: 'round',\n      gridLines: { display: false },\n      ticks: {\n        fontFamily: 'Kanit, sans-serif',\n        fontColor: color,\n        fontSize: 14,\n        lineHeight,\n        maxRotation: 0,\n        beginAtZero: true,\n        autoSkipPadding: 15,\n        userCallback: (value) => {\n          return value.toLocaleString()\n        },\n      },\n    }\n  }\n\n  const options = {\n    legend: { display: false },\n    scales: {\n      yAxes: [\n        {\n          type: 'linear',\n          display: true,\n          position: 'left',\n          id: 'y-axis-pool',\n          ...axesStyles({ color: '#8f80ba', lineHeight: 1.6 }),\n        },\n        {\n          type: 'linear',\n          display: true,\n          position: 'right',\n          id: 'y-axis-burned',\n          ...axesStyles({ color: '#2b2c3a', lineHeight: 1.5 }),\n        },\n      ],\n      xAxes: [\n        {\n          ...axesStyles({ color: '#2b2c3a', lineHeight: 1 }),\n        },\n      ],\n    },\n  }\n\n  return (\n    <>\n      {historyError && (\n        <InnerWrapper>\n          <Text>Error fetching data</Text>\n        </InnerWrapper>\n      )}\n      {!historyError && historyData.length > 1 ? (\n        <Suspense fallback={<div>Loading...</div>}>\n          <Line data={chartData} options={options} type=\"line\" />\n        </Suspense>\n      ) : (\n        <InnerWrapper>\n          <Loading />\n        </InnerWrapper>\n      )}\n    </>\n  )\n}\n\nexport default HistoryChart\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text } from '@luckyswap/uikit'\nimport useI18n from 'hooks/useI18n'\n\nconst Wrapper = styled.div`\n  display: flex;\n  margin: 36px 0 28px;\n`\n\nconst LegendItem = styled.div`\n  display: flex;\n  margin-right: 18px;\n  align-items: center;\n`\n\nconst Circle = styled.div<{ isPoolSize?: boolean }>`\n  width: 20px;\n  height: 20px;\n  border-radius: 10px;\n  background-color: ${({ isPoolSize, theme }) => theme.colors[isPoolSize ? 'textSubtle' : 'primary']};\n  margin-right: 6px;\n`\n\nconst Legend = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <Wrapper>\n      <LegendItem>\n        <Circle isPoolSize />\n        <Text>{TranslateString(748, 'Pool Size')}</Text>\n      </LegendItem>\n      <LegendItem>\n        <Circle />\n        <Text>{TranslateString(750, 'Burned')}</Text>\n      </LegendItem>\n    </Wrapper>\n  )\n}\n\nexport default Legend\n","import React from 'react'\nimport { Heading, Card, CardBody } from '@luckyswap/uikit'\nimport useI18n from 'hooks/useI18n'\nimport HistoryChart from './HistoryChart'\nimport Legend from './Legend'\n\nconst PastDrawsHistoryCard: React.FC = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <Card>\n      <CardBody>\n        <Heading size=\"md\">{TranslateString(746, 'History')}</Heading>\n        <Legend />\n        <HistoryChart />\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default PastDrawsHistoryCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { BaseLayout } from '@luckyswap/uikit'\nimport PastLotteryRoundViewer from './components/PastLotteryRoundViewer'\nimport PastDrawsHistoryCard from './components/PastDrawsHistory/PastDrawsHistoryCard'\n\nconst Cards = styled(BaseLayout)`\n  align-items: start;\n  margin-bottom: 32px;\n\n  & > div {\n    grid-column: span 6;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    & > div {\n      grid-column: span 12;\n    }\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    & > div {\n      grid-column: span 6;\n    }\n  }\n`\n\nconst SecondCardColumnWrapper = styled.div<{ isAWin?: boolean }>`\n  display: flex;\n  flex-direction: column;\n`\n\nconst BunnyImageWrapper = styled.div`\n  display: flex;\n  margin-top: 32px;\n  justify-content: center;\n`\n\nconst PastDrawsPage: React.FC = () => {\n  return (\n    <Cards>\n      <PastLotteryRoundViewer />\n      <SecondCardColumnWrapper>\n        <PastDrawsHistoryCard />\n        <BunnyImageWrapper>\n          <img src=\"/images/pancake-lottery-bunny.png\" alt=\"lottery bunny\" />\n        </BunnyImageWrapper>\n      </SecondCardColumnWrapper>\n    </Cards>\n  )\n}\n\nexport default PastDrawsPage\n","import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { ButtonMenu, ButtonMenuItem } from '@luckyswap/uikit'\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\nimport { getLotteryIssueIndex } from 'utils/lotteryUtils'\nimport useI18n from 'hooks/useI18n'\nimport Page from 'components/layout/Page'\nimport { useLottery, useContract } from 'hooks/useContract'\nimport { getLotteryAddress } from 'utils/addressHelpers'\nimport lotteryAbi from 'config/abi/lottery.json'\n\nimport Hero from './components/Hero'\nimport Divider from './components/Divider'\nimport NextDrawPage from './NextDrawPage'\nimport PastDrawsPage from './PastDrawsPage'\n\nconst Wrapper = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 32px;\n`\n\nconst Lottery: React.FC = () => {\n  const lotteryContract = useContract(getLotteryAddress(), lotteryAbi)\n\n  const TranslateString = useI18n()\n  const [activeIndex, setActiveIndex] = useState(0)\n  const [historyData, setHistoryData] = useState([])\n  const [historyError, setHistoryError] = useState(false)\n  const [currentLotteryNumber, setCurrentLotteryNumber] = useState(0)\n  const [mostRecentLotteryNumber, setMostRecentLotteryNumber] = useState(1)\n\n  useEffect(() => {\n    fetch(`https://api.pancakeswap.com/api/lotteryHistory`)\n      .then((response) => response.json())\n      .then((data) => setHistoryData(data))\n      .catch(() => {\n        setHistoryError(true)\n      })\n  }, [])\n\n  useEffect(() => {\n    const getInitialLotteryIndex = async () => {\n      const index = await getLotteryIssueIndex(lotteryContract)\n      const previousLotteryNumber = index - 1\n\n      setCurrentLotteryNumber(index)\n      setMostRecentLotteryNumber(previousLotteryNumber)\n    }\n\n    if (lotteryContract) {\n      getInitialLotteryIndex()\n    }\n  }, [lotteryContract])\n\n  const handleClick = (index) => {\n    setActiveIndex(index)\n  }\n\n  return (\n    <>\n      <Hero />\n      <Page>\n        <Wrapper>\n          <ButtonMenu activeIndex={activeIndex} onItemClick={handleClick} scale=\"sm\" variant=\"subtle\">\n            <ButtonMenuItem>{TranslateString(716, 'Next draw')}</ButtonMenuItem>\n            <ButtonMenuItem>{TranslateString(718, 'Past draws')}</ButtonMenuItem>\n          </ButtonMenu>\n        </Wrapper>\n        <Divider />\n        <PastLotteryDataContext.Provider\n          value={{ historyError, historyData, mostRecentLotteryNumber, currentLotteryNumber }}\n        >\n          {activeIndex === 0 ? <NextDrawPage /> : <PastDrawsPage />}\n        </PastLotteryDataContext.Provider>\n      </Page>\n    </>\n  )\n}\n\nexport default Lottery\n"],"sourceRoot":""}
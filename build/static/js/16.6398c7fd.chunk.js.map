{"version":3,"sources":["components/UnlockButton.tsx","components/Spacer/Spacer.tsx","components/ModalActions/ModalActions.tsx","components/ExpandableSectionButton/ExpandableSectionButton.tsx","utils/lotteryUtils.ts","hooks/useTickets.ts","hooks/useGetLotteryHasDrawn.ts","hooks/useTimer.ts","views/Lottery/helpers/CountdownHelpers.ts","views/Lottery/components/LotteryProgress.tsx","views/Lottery/components/Hero.tsx","views/Lottery/components/WinningNumbers.tsx","contexts/PastLotteryDataContext.tsx","views/Home/components/CardBusdValue.tsx","views/Lottery/components/PrizeGrid.tsx","views/Lottery/components/TotalPrizesCard/index.tsx","views/Lottery/components/Loading.tsx","views/Lottery/components/TicketCard/UserTicketsModal.tsx","views/Lottery/components/YourPrizesCard/PrizesWonContent.tsx","hooks/useBuyLottery.ts","views/Lottery/components/YourPrizesCard/NoPrizesContent.tsx","views/Lottery/components/YourPrizesCard/index.tsx","views/Lottery/components/UnlockWalletCard.tsx","components/TicketInput/TicketInput.tsx","views/Lottery/components/TicketCard/BuyTicketModal.tsx","views/Lottery/components/TicketCard/PurchaseWarningModal.tsx","views/Lottery/components/TicketCard/TicketActions.tsx","views/Lottery/components/TicketCard/index.tsx","views/Lottery/components/HowItWorks.tsx","utils/getLotteryRoundData.ts","hooks/useGetRecentLotteryRoundData.ts","views/Lottery/components/PastLotteryRoundViewer/PastLotterySearcher.tsx","views/Lottery/components/PastLotteryRoundViewer/PastRoundCardError.tsx","views/Lottery/components/LotteryCardHeading.tsx","views/Lottery/components/PastLotteryRoundViewer/PastLotteryActions.tsx","views/Lottery/helpers/formatLotteryDate.ts","views/Lottery/components/Timestamp.tsx","views/Lottery/components/PastLotteryRoundViewer/PastRoundCardDetails.tsx","views/Lottery/components/PastLotteryRoundViewer/PastRoundCard.tsx","views/Lottery/components/PastLotteryRoundViewer/index.tsx","views/Lottery/components/PastDrawsHistory/HistoryChart.tsx","views/Lottery/components/PastDrawsHistory/Legend.tsx","views/Lottery/components/PastDrawsHistory/PastDrawsHistoryCard.tsx","views/Lottery/Lottery.tsx"],"names":["UnlockButton","props","TranslateString","useI18n","useAuth","login","logout","onPresentConnectModal","useWalletModal","className","variant","onClick","StyledSpacer","styled","div","size","Spacer","s","spacing","useContext","ThemeContext","StyledModalActions","theme","colors","primaryDark","StyledModalAction","ModalActions","children","l","React","Children","toArray","length","map","child","i","Wrapper","primary","ExpandableSectionButton","expanded","aria-label","role","color","bold","defaultProps","multiCall","abi","calls","a","web3","getWeb3NoAccount","multi","eth","Contract","MultiCallAbi","getMulticallAddress","itf","Interface","res","newCalls","slice","calldata","call","toLowerCase","encodeFunctionData","methods","aggregate","returnData","concat","index","decodeFunctionResult","multiBuy","lotteryContract","price","numbersList","account","BigNumber","times","pow","toString","then","tx","transactionHash","console","error","getTickets","ticketsContract","customLotteryNum","issueIndex","balanceOf","calls1","Array","apply","address","ticketAbi","tokenIds","id","calls2","ticketIssues","finalTokenids","forEach","ticketIssue","push","calls3","tickets","getTicketsAmount","multiClaim","claimedStatus","unClaimedIds","filter","lotteryAbi","rewards","finalTokenIds","r","getTotalClaim","getLotteryStatus","drawed","calls4","claim","reduce","p","c","sum","getTotalRewards","getMax","maxNumber","getLotteryIssueIndex","getMatchingRewardLength","matchNumber","historyAmount","amount","LOTTERY_TICKET_PRICE","toNumber","getWinningNumbers","numbers","parseInt","historyNumbers","winningNumbers","useTotalClaim","useState","claimAmount","setClaimAmount","claimLoading","setClaimLoading","useWeb3React","useContract","getLotteryAddress","getLotteryTicketAddress","lotteryTicketAbi","fetchBalance","useCallback","useEffect","useWinningNumbers","setWinningNumbers","fastRefresh","useRefresh","useMatchingRewardLength","matchingNumbers","setMatchingNumbers","matchedNumbaers","useTickets","lotteryNumber","setTickets","useGetLotteryHasDrawn","lotteryHasDrawn","setLotteryHasDrawn","state","fetchLotteryStatus","useCurrentTime","Date","getTime","currentMillis","setCurrentMillis","timerID","setInterval","prevMillis","clearInterval","lotteryDrawHoursUtc","getNextLotteryDrawTime","millisTimeOfNextDraw","date","currentHour","getUTCHours","nextLotteryHour","getClosestLotteryHour","tomorrow","nextDay","getUTCDate","setUTCDate","setUTCHours","hoursAndMinutesString","hours","minutes","getTicketSaleTime","msUntilNextTicketSale","getNextTicketSaleTime","getTimePeriods","getLotteryDrawStep","ProgressWrapper","TopTextWrapper","BottomTextWrapper","StyledPrimaryText","Text","LotteryProgress","timeUntilTicketSale","timeUntilLotteryDraw","msUntilLotteryDraw","getLotteryDrawTime","primaryStep","secondaryStep","showProgressBunny","fontSize","Title","Heading","attrs","as","Blurb","StyledHero","StyledContainer","Container","mediaQueries","sm","LeftWrapper","lg","RightWrapper","ContentDes","Hero","src","alt","CardBodyNew","Link","Row","RowNoPadding","Column","CenteredText","CenteredTextWithPadding","TicketNumberBox","StyledCardHeader","CardWrapper","secondary","StyledCardContentInner","WinningNumbers","winNumbers","MatchedNumber4","MatchedNumber3","MatchedNumber2","style","number","href","target","createContext","mostRecentLotteryNumber","historyError","historyData","CardBusdValue","CardValue","lineHeight","prefix","decimals","Grid","pastDraw","RightAlignedText","RightAlignedHeading","GridItem","marginBottom","PastDrawGridItem","PrizeGrid","lotteryPrizeAmount","jackpotMatches","twoTicketMatches","threeTicketMatches","fourMatchesAmount","toFixed","threeMatchesAmount","twoMatchesAmount","burnAmount","cakeBusdPrice","usePriceLuckyBusd","getCakeBusdValue","multipliedBy","textShadow","toLocaleString","eq","value","BoxTotal","CardHeading","Right","Left","IconWrapper","PrizeCountWrapper","ExpandingWrapper","showFooter","BoxLucky","Dollar","TotalPrizesCard","setShowFooter","getBalanceNumber","setRewards","useTotalRewards","lotteryPrizeAmountBusd","lotteryPrizeWithCommaSeparators","currentLotteryNumber","PastLotteryDataContext","mb","alignItems","justifyContent","height","width","fontWeight","num","StyledLoading","Loading","RewardP","TicketsList","StyledButton","Button","UserTicketsModal","myTicketNumbers","onDismiss","from","rewardMatch","n","listItems","emoji","join","title","TICKETS","WinningsWrapper","StyledCardActions","PrizesWonContent","requestedClaim","setRequestedClaim","onMultiClaim","lotteryTicketContract","txHash","useMultiClaimLottery","useModal","onPresentMyTickets","addTransaction","useTransactionAdder","handleClaim","summary","winnings","marginRight","disabled","TextWrapper","StyledText","Image","img","md","NoPrizesContent","StyledCard","Card","isDisabled","textDisabled","YourPrizesCard","isAWin","isActive","StyledCardBody","CardBody","StyledHeading","UnlockWalletCard","StyledTokenInput","StyledTokenAdornmentWrapper","StyledMaxText","StyledTokenSymbol","span","TicketInput","max","symbol","availableSymbol","onChange","onSelectMax","placeholder","BuyTicketModal","val","setVal","pendingTx","setPendingTx","setRequestedBuy","fullBalance","useMemo","getFullDisplayBalance","maxTickets","onMultiBuy","useMultiBuyLottery","setMax","fetchMax","useMaxNumber","handleBuy","Math","floor","random","response","handleSelectMax","Number","LOTTERY_MAX_NUMBER_OF_TICKETS","e","currentTarget","Tips","Announce","Final","WarningModal","newTransactionsFirst","b","addedTime","spinnerIcon","spin","CardActions","Dflex","TicketCard","balanceToken","setBalanceToken","allowance","setAllowance","contractBEP20","XLUCKY_TESTNET","bep20Abi","useContractTemp","ticketsLength","PurchaseWarningModal","tokenName","onPresentBuy","data","log","fetchApprovalData","requestedApproval","setRequestedApproval","useApproveCallbackCustom","approval","onAttemptToApprove","handleApprove","allTransactions","useAllTransactions","sortedRecentTransactions","Object","values","isTransactionRecent","sort","getStatus","receipt","hash","isSecondCard","CardHeader","TicketCountWrapper","TicketActions","LayoutWrapper","StyledLink","HowItWorks","getLotteryRoundData","fetch","json","Error","useGetRecentLotteryRoundData","isLoading","setIsLoading","setData","setError","roundData","fetchRecentLotteryData","SearchWrapper","InputWrapper","ButtonWrapper","PastLotterySearcher","initialLotteryNumber","onSubmit","setLotteryNumber","isError","setIsError","evt","preventDefault","type","isWarning","scale","PastRoundCardError","message","LotteryCardHeading","valueToDisplay","Icon","flexDirection","ExternalLinkWrap","LinkExternal","contractLink","formatLotteryDate","lotteryDate","dateString","toDateString","monthAndDay","split","splice","Timestamp","timeValue","TopLotteryCardHeading","BoxCard","PastRoundCardDetails","jackpotTicket","lotteryNumbers","match1Ticket","match2Ticket","match3Ticket","poolSize","oneTicketMatches","PastLotteryActions","FullWidth","PastRoundCard","PastLotteryRoundViewer","isInitialized","setState","initialLotteryData","prevState","handleSubmit","catch","Line","lazy","InnerWrapper","HistoryChart","getDataArray","kind","dataPoint","reverse","lineStyles","borderColor","fill","borderWidth","pointRadius","pointHitRadius","chartData","labels","datasets","label","yAxisID","axesStyles","borderCapStyle","gridLines","display","ticks","fontFamily","fontColor","maxRotation","beginAtZero","autoSkipPadding","userCallback","options","legend","scales","yAxes","position","xAxes","fallback","LegendItem","Circle","isPoolSize","Legend","PastDrawsHistoryCard","SecondCardColumnWrapper","Lottery","setHistoryData","setHistoryError","setCurrentLotteryNumber","setMostRecentLotteryNumber","previousLotteryNumber","getInitialLotteryIndex","Page"],"mappings":"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","file":"static/js/16.6398c7fd.chunk.js","sourcesContent":["import React from 'react'\nimport { Button, useWalletModal } from '@luckyswap/uikit'\nimport useAuth from 'hooks/useAuth'\nimport useI18n from 'hooks/useI18n'\n\nconst UnlockButton = (props) => {\n  const TranslateString = useI18n()\n  const { login, logout } = useAuth()\n  const { onPresentConnectModal } = useWalletModal(login, logout)\n\n  return (\n    <div className=\"custom-btn\">\n      <Button variant=\"secondary\" onClick={onPresentConnectModal} {...props}>\n        {TranslateString(292, 'Unlock Wallet')}\n      </Button>\n    </div>\n  )\n}\n\nexport default UnlockButton\n","import React, { useContext } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\ninterface SpacerProps {\n  size?: 'sm' | 'md' | 'lg'\n}\n\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\n  const { spacing } = useContext(ThemeContext)\n\n  let s: number\n  switch (size) {\n    case 'lg':\n      s = spacing[6]\n      break\n    case 'sm':\n      s = spacing[2]\n      break\n    case 'md':\n    default:\n      s = spacing[4]\n  }\n\n  return <StyledSpacer size={s} />\n}\n\ninterface StyledSpacerProps {\n  size: number\n}\n\nconst StyledSpacer = styled.div<StyledSpacerProps>`\n  height: ${(props) => props.size}px;\n  width: ${(props) => props.size}px;\n`\n\nexport default Spacer\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport Spacer from '../Spacer'\n\nconst ModalActions: React.FC = ({ children }) => {\n  const l = React.Children.toArray(children).length\n  return (\n    <StyledModalActions>\n      {React.Children.map(children, (child, i) => (\n        <>\n          <StyledModalAction>{child}</StyledModalAction>\n          {i < l - 1 && <Spacer />}\n        </>\n      ))}\n    </StyledModalActions>\n  )\n}\n\nconst StyledModalActions = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.primaryDark}00;\n  display: flex;\n  margin: 0;\n  padding: ${(props) => props.theme.spacing[4]}px 0;\n`\n\nconst StyledModalAction = styled.div`\n  flex: 1;\n`\n\nexport default ModalActions\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ChevronDownIcon, ChevronUpIcon, Text } from '@luckyswap/uikit'\nimport useI18n from 'hooks/useI18n'\n\nexport interface ExpandableSectionButtonProps {\n  onClick?: () => void\n  expanded?: boolean\n}\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n\n  svg {\n    fill: ${({ theme }) => theme.colors.primary};\n  }\n`\n\nconst ExpandableSectionButton: React.FC<ExpandableSectionButtonProps> = ({ onClick, expanded }) => {\n  const TranslateString = useI18n()\n\n  return (\n    <Wrapper aria-label=\"Hide or show expandable content\" role=\"button\" onClick={() => onClick()}>\n      <Text color=\"primary\" bold>\n        {expanded ? TranslateString(1066, 'Hide') : TranslateString(658, 'Details')}\n      </Text>\n      {expanded ? <ChevronUpIcon /> : <ChevronDownIcon />}\n    </Wrapper>\n  )\n}\n\nExpandableSectionButton.defaultProps = {\n  expanded: false,\n}\n\nexport default ExpandableSectionButton\n","/* eslint-disable no-await-in-loop */\nimport BigNumber from 'bignumber.js'\nimport { Interface } from '@ethersproject/abi'\nimport { getWeb3NoAccount } from 'utils/web3'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport ticketAbi from 'config/abi/lotteryNft.json'\nimport lotteryAbi from 'config/abi/lottery.json'\nimport { LOTTERY_TICKET_PRICE } from 'config'\nimport { AbiItem } from 'web3-utils'\nimport { useTransactionAdder } from 'state/transactions/hooks'\nimport { getMulticallAddress } from './addressHelpers'\n\nexport const multiCall = async (abi, calls) => {\n  const web3 = getWeb3NoAccount()\n  const multi = new web3.eth.Contract(MultiCallAbi as unknown as AbiItem, getMulticallAddress())\n  const itf = new Interface(abi)\n  let res = []\n  if (calls.length > 100) {\n    let i = 0\n    while (i < calls.length / 100) {\n      const newCalls = calls.slice(i * 100, 100 * (i + 1))\n      const calldata = newCalls.map((call) => [call[0].toLowerCase(), itf.encodeFunctionData(call[1], call[2])])\n      const { returnData } = await multi.methods.aggregate(calldata).call()\n      i++\n      res = res.concat(returnData.map((call, index) => itf.decodeFunctionResult(newCalls[index][1], call)))\n    }\n  } else {\n    const calldata = calls.map((call) => [call[0].toLowerCase(), itf.encodeFunctionData(call[1], call[2])])\n    const { returnData } = await multi.methods.aggregate(calldata).call()\n    res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i][1], call))\n  }\n  return res\n}\n\nexport const multiBuy = async (lotteryContract, price, numbersList, account) => {\n  try {\n    return lotteryContract\n      .multiBuy(new BigNumber(price).times(new BigNumber(10).pow(18)).toString(), numbersList)\n      .then((tx) => {\n        return tx.transactionHash\n      })\n  } catch (err) {\n    return console.error(err)\n  }\n}\n\nexport const getTickets = async (lotteryContract, ticketsContract, account, customLotteryNum) => {\n  const issueIndex = customLotteryNum || (await lotteryContract.issueIndex())\n\n  const length = await ticketsContract.balanceOf(account)\n\n  // eslint-disable-next-line prefer-spread\n  const calls1 = Array.apply(null, { length } as unknown[]).map((a, i) => [\n    ticketsContract.address,\n    'tokenOfOwnerByIndex',\n    [account, i],\n  ])\n  const res = await multiCall(ticketAbi, calls1)\n\n  const tokenIds = res.map((id) => id.toString())\n\n  const calls2 = tokenIds.map((id) => [ticketsContract.address, 'getLotteryIssueIndex', [id]])\n  const ticketIssues = await multiCall(ticketAbi, calls2)\n\n  const finalTokenids = []\n  ticketIssues.forEach(async (ticketIssue, i) => {\n    if (ticketIssue.toString() === issueIndex.toString()) {\n      finalTokenids.push(tokenIds[i])\n    }\n  })\n  const calls3 = finalTokenids.map((id) => [ticketsContract.address, 'getLotteryNumbers', [id]])\n  const tickets = await multiCall(ticketAbi, calls3)\n  return tickets\n}\n\nexport const getTicketsAmount = async (ticketsContract, account) => {\n  return ticketsContract.balanceOf(account)\n}\n\nexport const multiClaim = async (lotteryContract, ticketsContract, account) => {\n  await lotteryContract.issueIndex()\n  const length = await getTicketsAmount(ticketsContract, account)\n  // eslint-disable-next-line prefer-spread\n  const calls1 = Array.apply(null, { length } as unknown[]).map((a, i) => [\n    ticketsContract.address,\n    'tokenOfOwnerByIndex',\n    [account, i],\n  ])\n  const res = await multiCall(ticketAbi, calls1)\n  const tokenIds = res.map((id) => id.toString())\n\n  const calls2 = tokenIds.map((id) => [ticketsContract.address, 'getClaimStatus', [id]])\n  const claimedStatus = await multiCall(ticketAbi, calls2)\n\n  const unClaimedIds = tokenIds.filter((id, index) => !claimedStatus[index][0])\n\n  const calls3 = unClaimedIds.map((id) => [lotteryContract.address, 'getRewardView', [id]])\n  const rewards = await multiCall(lotteryAbi, calls3)\n\n  let finalTokenIds = []\n  rewards.forEach((r, i) => {\n    if (r > 0) {\n      finalTokenIds.push(unClaimedIds[i])\n    }\n  })\n\n  if (finalTokenIds.length > 200) {\n    finalTokenIds = finalTokenIds.slice(0, 200)\n  }\n\n  try {\n    return lotteryContract.multiClaim(finalTokenIds)\n  } catch (err) {\n    return console.error(err)\n  }\n}\n\nexport const getTotalClaim = async (lotteryContract, ticketsContract, account) => {\n  try {\n    const issueIndex = await lotteryContract.issueIndex()\n    const length = await getTicketsAmount(ticketsContract, account)\n    // eslint-disable-next-line prefer-spread\n    const calls1 = Array.apply(null, { length } as unknown[]).map((a, i) => [\n      ticketsContract.address,\n      'tokenOfOwnerByIndex',\n      [account, i],\n    ])\n    const res = await multiCall(ticketAbi, calls1)\n    const tokenIds = res.map((id) => id.toString())\n    const calls2 = tokenIds.map((id) => [ticketsContract.address, 'getLotteryIssueIndex', [id]])\n    const ticketIssues = await multiCall(ticketAbi, calls2)\n    const calls3 = tokenIds.map((id) => [ticketsContract.address, 'getClaimStatus', [id]])\n    const claimedStatus = await multiCall(ticketAbi, calls3)\n\n    const drawed = await getLotteryStatus(lotteryContract)\n    \n    const finalTokenIds = []\n    ticketIssues.forEach(async (ticketIssue, i) => {\n      // eslint-disable-next-line no-empty\n      if (!drawed && ticketIssue.toString() === issueIndex) {\n      } else if (!claimedStatus[i][0]) {\n        finalTokenIds.push(tokenIds[i])\n      }\n    })\n\n    const calls4 = finalTokenIds.map((id) => [lotteryContract.address, 'getRewardView', [id]])\n\n    const rewards = await multiCall(lotteryAbi, calls4)\n    const claim = rewards.reduce((p, c) => BigNumber.sum(p, c), new BigNumber(0))\n\n    return claim\n  } catch (err) {\n    console.error(err)\n  }\n  return new BigNumber(0)\n}\n\nexport const getTotalRewards = async (lotteryContract) => {\n  const issueIndex = await lotteryContract.issueIndex()\n  return lotteryContract.getTotalRewards(issueIndex)\n}\n\nexport const getMax = async (lotteryContract) => {\n  return lotteryContract.maxNumber()\n}\n\nexport const getLotteryIssueIndex = async (lotteryContract) => {\n  const issueIndex = await lotteryContract.issueIndex()\n  return issueIndex\n}\n\nexport const getLotteryStatus = async (lotteryContract) => {\n  return lotteryContract.drawed()\n}\n\nexport const getMatchingRewardLength = async (lotteryContract, matchNumber) => {\n  let issueIndex = await lotteryContract.issueIndex()\n  const drawed = await lotteryContract.drawed()\n  if (!drawed) {\n    issueIndex -= 1\n  }\n  try {\n    const amount = await lotteryContract.historyAmount(issueIndex, 5 - matchNumber)\n    return new BigNumber(amount.toString()).div(new BigNumber(10).pow(18)).div(LOTTERY_TICKET_PRICE).toNumber()\n  } catch (err) {\n    console.error(err)\n  }\n  return 0\n}\n\nexport const getWinningNumbers = async (lotteryContract) => {\n  const issueIndex = await lotteryContract.issueIndex()\n  const numbers = []\n  const drawed = await lotteryContract.drawed()\n\n  if (!drawed && parseInt(issueIndex, 10) === 0) {\n    return [0, 0, 0, 0]\n  }\n  if (!drawed) {\n    for (let i = 0; i < 4; i++) {\n      numbers.push(+(await lotteryContract.historyNumbers(issueIndex - 1, i)).toString())\n    }\n  } else {\n    for (let i = 0; i < 4; i++) {\n      numbers.push(+(await lotteryContract.winningNumbers(i)).toString())\n    }\n  }\n  return numbers\n}\n","import { useCallback, useState, useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport {useContract, useLottery, useLotteryTicket } from 'hooks/useContract'\nimport { getLotteryAddress, getLotteryTicketAddress } from 'utils/addressHelpers'\nimport lotteryTicketAbi from 'config/abi/lotteryNft.json'\nimport lotteryAbi from 'config/abi/lottery.json'\nimport useRefresh from './useRefresh'\nimport {\n  getTotalRewards,\n  getTotalClaim,\n  getMatchingRewardLength,\n  getWinningNumbers,\n  getTickets,\n} from '../utils/lotteryUtils'\n\nconst useTickets = (lotteryNumber = null) => {\n  const [tickets, setTickets] = useState([])\n  const { account } = useWeb3React()\n  const ticketsContract = useContract(getLotteryTicketAddress(), lotteryTicketAbi)\n  const lotteryContract = useContract(getLotteryAddress(), lotteryAbi)\n  const { fastRefresh } = useRefresh()\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await getTickets(lotteryContract, ticketsContract, account, lotteryNumber)\n      setTickets(res)\n    }\n\n    if (account && lotteryContract && ticketsContract) {\n      fetchBalance()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [account, lotteryContract, ticketsContract, fastRefresh, lotteryNumber])\n\n  return tickets\n}\n\nexport const useTotalRewards = () => {\n  const [rewards, setRewards] = useState(new BigNumber(0))\n  const { fastRefresh } = useRefresh()\n  const lotteryContract = useContract(getLotteryAddress(), lotteryAbi)\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await getTotalRewards(lotteryContract)\n\n      setRewards(new BigNumber(res.toString()))\n    }\n\n    if (lotteryContract) {\n      fetchBalance()\n    }\n  }, [lotteryContract, fastRefresh])\n  return rewards\n}\n\nexport const useTotalClaim = () => {\n  const [claimAmount, setClaimAmount] = useState(new BigNumber(0))\n  const [claimLoading, setClaimLoading] = useState(false)\n  const { account } = useWeb3React()\n  const lotteryContract = useContract(getLotteryAddress(), lotteryAbi)\n  const ticketsContract = useContract(getLotteryTicketAddress(), lotteryTicketAbi)\n\n  const fetchBalance = useCallback(async () => {\n    setClaimLoading(true)\n    const claim =  await getTotalClaim(lotteryContract, ticketsContract, account)\n    setClaimAmount(claim)\n    setClaimLoading(false)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [account, lotteryContract, ticketsContract])\n\n  useEffect(() => {\n    if (account && lotteryContract && ticketsContract) {\n      fetchBalance()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [account, fetchBalance, lotteryContract, ticketsContract])\n  return { claimLoading, claimAmount }\n}\n\nexport const useWinningNumbers = () => {\n  const [winningNumbers, setWinningNumbers] = useState([0, 0, 0, 0])\n  const lotteryContract = useContract(getLotteryAddress(), lotteryAbi)\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const rewards = await getWinningNumbers(lotteryContract)\n      setWinningNumbers(rewards)\n    }\n\n    if (lotteryContract) {\n      fetchBalance()\n    }\n  }, [fastRefresh, lotteryContract, setWinningNumbers])\n\n  return winningNumbers\n}\n\nexport const useMatchingRewardLength = (numbers) => {\n  const [matchingNumbers, setMatchingNumbers] = useState(0)\n  const lotteryContract = useContract(getLotteryAddress(), lotteryAbi)\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const matchedNumbaers = await getMatchingRewardLength(lotteryContract, numbers)\n\n      setMatchingNumbers(matchedNumbaers)\n    }\n\n    if (lotteryContract) {\n      fetchBalance()\n    }\n  }, [lotteryContract, numbers, fastRefresh])\n  return matchingNumbers\n}\n\nexport default useTickets\n","import { useEffect, useState } from 'react'\nimport { getLotteryStatus } from 'utils/lotteryUtils'\nimport { useContract } from 'hooks/useContract'\nimport { getLotteryAddress } from 'utils/addressHelpers'\nimport lotteryAbi from 'config/abi/lottery.json'\n\n/**\n * Returns whether or not the current lottery has drawn numbers\n *\n * @return {Boolean}\n */\nconst useGetLotteryHasDrawn = () => {\n  const [lotteryHasDrawn, setLotteryHasDrawn] = useState(true)\n  const lotteryContract = useContract(getLotteryAddress(), lotteryAbi)\n\n  useEffect(() => {\n    if (lotteryContract) {\n      const fetchLotteryStatus = async () => {\n        const state = await getLotteryStatus(lotteryContract)\n        setLotteryHasDrawn(state)\n      }\n\n      fetchLotteryStatus()\n    }\n  }, [lotteryContract])\n\n  return lotteryHasDrawn\n}\n\nexport default useGetLotteryHasDrawn\n","import { useState, useEffect } from 'react'\n\nexport const useCurrentTime = () => {\n  const [currentMillis, setCurrentMillis] = useState(new Date().getTime())\n\n  useEffect(() => {\n    const tick = () => {\n      setCurrentMillis((prevMillis) => prevMillis + 1000)\n    }\n\n    const timerID = setInterval(() => tick(), 1000)\n\n    return () => clearInterval(timerID)\n  }, [])\n\n  return currentMillis\n}\n\nexport default useCurrentTime\n","import getTimePeriods from 'utils/getTimePeriods'\n\n// lottery draws UTC: 02:00 (10:00 SGT), 14:00 (22:00 SGT)\nconst lotteryDrawHoursUtc = [2, 14]\n\nconst getClosestLotteryHour = (currentHour) => {\n  switch (true) {\n    case currentHour < lotteryDrawHoursUtc[0] || currentHour >= lotteryDrawHoursUtc[1]:\n      return lotteryDrawHoursUtc[0]\n    case currentHour < lotteryDrawHoursUtc[1]:\n      return lotteryDrawHoursUtc[1]\n    default:\n      return 0\n  }\n}\n\nconst getNextLotteryDrawTime = (currentMillis) => {\n  const date = new Date(currentMillis)\n  const currentHour = date.getUTCHours()\n  const nextLotteryHour = getClosestLotteryHour(currentHour)\n  // next lottery is tomorrow if the next lottery is at 2am UTC...\n  // ...and current time is between 02:00am & 23:59pm UTC\n  const nextLotteryIsTomorrow = nextLotteryHour === 2 && currentHour >= 2 && currentHour <= 23\n  let millisTimeOfNextDraw\n\n  if (nextLotteryIsTomorrow) {\n    const tomorrow = new Date(currentMillis)\n    const nextDay = tomorrow.getUTCDate() + 1\n    tomorrow.setUTCDate(nextDay)\n    millisTimeOfNextDraw = tomorrow.setUTCHours(nextLotteryHour, 0, 0, 0)\n  } else {\n    millisTimeOfNextDraw = date.setUTCHours(nextLotteryHour, 0, 0, 0)\n  }\n\n  return millisTimeOfNextDraw\n}\n\n// @ts-ignore\nconst getNextTicketSaleTime = (currentMillis) => (parseInt(currentMillis / 3600000) + 1) * 3600000\nconst hoursAndMinutesString = (hours, minutes) => `${parseInt(hours)}h, ${parseInt(minutes)}m`\n\nexport const getTicketSaleTime = (currentMillis): string => {\n  const nextTicketSaleTime = getNextTicketSaleTime(currentMillis)\n  const msUntilNextTicketSale = nextTicketSaleTime - currentMillis\n  const { minutes } = getTimePeriods(msUntilNextTicketSale / 1000)\n  const { hours } = getTimePeriods(msUntilNextTicketSale / 1000)\n  return hoursAndMinutesString(hours, minutes)\n}\n\nexport const getLotteryDrawTime = (currentMillis): string => {\n  const nextLotteryDrawTime = getNextLotteryDrawTime(currentMillis)\n  const msUntilLotteryDraw = nextLotteryDrawTime - currentMillis\n  const { minutes } = getTimePeriods(msUntilLotteryDraw / 1000)\n  const { hours } = getTimePeriods(msUntilLotteryDraw / 1000)\n  return hoursAndMinutesString(hours, minutes)\n}\n\nexport const getTicketSaleStep = () => (1 / 12) * 100\n\nexport const getLotteryDrawStep = (currentMillis) => {\n  const msBetweenLotteries = 43200000\n  const endTime = getNextLotteryDrawTime(currentMillis)\n  const msUntilLotteryDraw = endTime - currentMillis\n  const percentageRemaining = (msUntilLotteryDraw / msBetweenLotteries) * 100\n  return 100 - percentageRemaining\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Progress } from '@luckyswap/uikit'\nimport useI18n from 'hooks/useI18n'\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\nimport { useCurrentTime } from 'hooks/useTimer'\nimport {\n  getLotteryDrawTime,\n  getLotteryDrawStep,\n  getTicketSaleTime,\n  getTicketSaleStep,\n} from '../helpers/CountdownHelpers'\n\nconst ProgressWrapper = styled.div`\n  display: block;\n  width: 100%;\n`\n\nconst TopTextWrapper = styled.div`\n  margin-top: 16px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n`\n\nconst BottomTextWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n`\n\nconst StyledPrimaryText = styled(Text)`\n  margin-right: 16px;\n`\nconst LotteryProgress = () => {\n  const TranslateString = useI18n()\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\n  const currentMillis = useCurrentTime()\n  const timeUntilTicketSale = getTicketSaleTime(currentMillis)\n  const timeUntilLotteryDraw = getLotteryDrawTime(currentMillis)\n\n  return (\n    <ProgressWrapper>\n      <Progress primaryStep={getLotteryDrawStep(currentMillis)} secondaryStep={getTicketSaleStep()} showProgressBunny />\n      <TopTextWrapper>\n        <StyledPrimaryText fontSize=\"20px\" bold color=\"yellow\">\n          {lotteryHasDrawn ? timeUntilTicketSale : timeUntilLotteryDraw}\n        </StyledPrimaryText>\n        <Text fontSize=\"20px\" bold color=\"invertedContrast\">\n          {lotteryHasDrawn ? TranslateString(434, 'Until ticket sale') : TranslateString(492, 'Until lottery draw')}\n        </Text>\n      </TopTextWrapper>\n      {lotteryHasDrawn && (\n        <BottomTextWrapper>\n          <Text color=\"invertedContrast\">\n            {timeUntilLotteryDraw} {TranslateString(492, 'Until lottery draw')}\n          </Text>\n        </BottomTextWrapper>\n      )}\n    </ProgressWrapper>\n  )\n}\n\nexport default LotteryProgress\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Text } from '@luckyswap/uikit'\nimport useI18n from 'hooks/useI18n'\nimport Container from 'components/layout/Container'\nimport LotteryProgress from './LotteryProgress'\n\nconst Title = styled(Heading).attrs({ as: 'h1', size: 'xl' })`\n  color: rgb(243, 193, 17);\n  margin-bottom: 5px;\n`\n\nconst Blurb = styled(Text)`\n  color: #ffffff;\n  font-size: 20px;\n  font-weight: 600;\n`\n\nconst StyledHero = styled.div`\n  // background: url('../images/large-pc.png');\n  background-repeat: no-repeat;\n  background-size: cover;\n  padding-bottom: 60px;\n  padding-top: 60px;\n  background-color:#0000001a;\n`\n\nconst StyledContainer = styled(Container)`\n  display: grid;\n  grid-template-columns: 1fr;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    grid-template-columns: 1fr 400px;\n  }\n`\n\nconst LeftWrapper = styled.div`\n  flex: 1;\n  padding-right: 0;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-right: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-right: 32px;\n  }\n`\n\nconst RightWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  flex: 1;\n  padding-left: 0;\n  margin-top: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-top: 0;\n    padding-left: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-left: 32px;\n  }\n`\n\nconst ContentDes = styled.div`\n  margin-bottom: 20px;\n`\n\nconst Hero = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <StyledHero>\n      <StyledContainer>\n        <LeftWrapper>\n          <img src=\"images/banner-jackpot.png\" alt=\"\"/>\n        </LeftWrapper>\n\n        <RightWrapper>\n          <ContentDes>\n            <Title>{TranslateString(708, 'The LUCKY Lottery')}</Title>\n            <Blurb>{TranslateString(710, 'Buy tickets with LUCKY for collect more NFTs')}</Blurb>\n            <Blurb>{TranslateString(712, 'Win if 2, 3, or 4 of your ticket numbers match!')}</Blurb>\n          </ContentDes>\n          <LotteryProgress />\n        </RightWrapper>\n      </StyledContainer>\n    </StyledHero>\n  )\n}\n\nexport default Hero\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useWeb3React } from '@web3-react/core'\nimport { Image, Card, CardBody } from '@luckyswap/uikit'\nimport { useWinningNumbers, useMatchingRewardLength } from 'hooks/useTickets'\nimport useI18n from 'hooks/useI18n'\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\n\nconst WinningNumbers: React.FC = () => {\n  const { account } = useWeb3React()\n  const winNumbers = useWinningNumbers()\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\n  const MatchedNumber4 = useMatchingRewardLength(4)\n  const MatchedNumber3 = useMatchingRewardLength(3)\n  const MatchedNumber2 = useMatchingRewardLength(2)\n  const TranslateString = useI18n()\n\n  return (\n    <CardWrapper>\n      <CardBodyNew>\n        <StyledCardContentInner>\n          <StyledCardHeader>\n            <Title style={{ color: 'rgb(243, 193, 17)' }}>\n              {account && lotteryHasDrawn\n                ? `${TranslateString(570, 'Latest Winning Numbers')}`\n                : TranslateString(440, 'Latest Winning Numbers')}\n            </Title>\n          </StyledCardHeader>\n          <Row>\n            {/* <img\n              alt=\"\"\n              src=\"https://merlinlab.com/static/media/leftGoldenCoin.6aef3b76.svg\"\n              className=\"sc-iCfLBT sc-ezbkgU gvyEtt jElfkq\"\n            />\n            <img\n              alt=\"\"\n              src=\"https://merlinlab.com/static/media/rightGoldenCoin.e795d41c.svg\"\n              className=\"sc-iCfLBT sc-ezbkgU KkWOV jElfkq\"\n            /> */}\n            {winNumbers.map((number, index) => (\n              // eslint-disable-next-line react/no-array-index-key\n              <TicketNumberBox key={index}>\n                <CenteredText>{number}</CenteredText>\n              </TicketNumberBox>\n            ))}\n          </Row>\n          <Column>\n            <RowNoPadding>\n              <CenteredTextWithPadding style={{color:'#fff'}}>{TranslateString(442, 'Tickets matching 4 numbers:')}</CenteredTextWithPadding>\n              <CenteredTextWithPadding>\n                <strong style={{color:'#F3C111'}}>{MatchedNumber4}</strong>\n              </CenteredTextWithPadding>\n            </RowNoPadding>\n            <RowNoPadding>\n              <CenteredTextWithPadding style={{color:'#fff'}}>{TranslateString(444, 'Tickets matching 3 numbers:')}</CenteredTextWithPadding>\n              <CenteredTextWithPadding>\n                <strong style={{color:'#F3C111'}}>{MatchedNumber3}</strong>\n              </CenteredTextWithPadding>\n            </RowNoPadding>\n            <RowNoPadding>\n              <CenteredTextWithPadding style={{color:'#fff'}}>{TranslateString(446, 'Tickets matching 2 numbers:')}</CenteredTextWithPadding>\n              <CenteredTextWithPadding>\n                <strong style={{color:'#F3C111'}}>{MatchedNumber2}</strong>\n              </CenteredTextWithPadding>\n            </RowNoPadding>\n          </Column>\n\n          <Link href=\"/\" target=\"_blank\">\n            {TranslateString(448, 'Export recent winning numbers')}\n          </Link>\n        </StyledCardContentInner>\n      </CardBodyNew>\n    </CardWrapper>\n  )\n}\n\nconst CardBodyNew = styled.div`\n  position: relative;\n  background-color: rgb(43 41 41);\n  border: 0.0625rem solid rgba(255, 255, 255, 0.2);\n  border-radius: 1.25rem;\n  padding: 24px;\n  min-height: 496px;\n`\n\nconst Link = styled.a`\n  margin-top: 1em;\n  text-decoration: none;\n  color: #101010;\n  background-color: #F3C111;\n  border-radius: 12px;\n  padding: 17px 25px;\n  font-weight: 500;\n  white-space: nowrap;\n\n  @media (min-width) {\n    padding: 10px 25px;\n  }\n\n  &:hover {\n    background-color: #ffda3b;\n    color: #101010;\n    transition: .5s;\n  }\n`\n\nconst Row = styled.div`\n  margin-top: 1em;\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n  border: 1px solid #F3C111;\n  border-radius: 14px;\n`\n\nconst RabbitRow = styled.div`\n  margin-top: -2.3em;\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n\n  @media (max-width: 768px) {\n    display: none;\n  }\n`\n\nconst RabbitRowSmall = styled.div`\n  margin-top: -2.3em;\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n\n  @media (min-width: 768px) {\n    display: none;\n  }\n`\n\nconst CardImage = styled.div`\n  text-align: center;\n`\n\nconst CardImageFirst = styled.div`\n  text-align: center;\n  margin-left: -1.2em;\n\n  @media (max-width: 600) {\n    margin-left: -0.2em;\n  }\n`\n\nconst RowNoPadding = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n  margin-bottom: 10px;\n`\n\nconst Column = styled.div`\n  margin-top: 1em;\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n`\n\nconst CenteredText = styled.div`\n  text-align: center;\n  align-items: center;\n`\n\nconst CenteredTextWithPadding = styled.div`\n  text-align: center;\n  align-items: center;\n  padding-left: 2px;\n  padding-right: 2px;\n  font-weight: 600;\n`\n\nconst TicketNumberBox = styled.div`\n  padding: 10px;\n  border-radius: 12px;\n  text-shadow: rgb(255 214 0) 0px 0px 12px;\n  // background: linear-gradient(180deg, #54dade 0%, #24c7d6 76.22%);\n  color: white;\n  font-size: 20px;\n  font-weight: 900;\n  margin: 10px;\n  margin-bottom: 7px;\n  width: 40px;\n\n  @media (min-width: 768px) {\n    font-size: 40px;\n    margin: 20px;\n    background: url('../images/bg-number.svg');\n    background-repeat: no-repeat;\n    width: 120px;\n    min-height: 150px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n`\n\nconst RabbitBox = styled.div`\n  /* padding: 10px; */\n  border-radius: 12px;\n  margin: 16px 20px;\n  width: 60px;\n`\n\nconst RabbitBoxSmall = styled.div`\n  padding-top: 10px;\n  padding-left: 10px;\n  border-radius: 12px;\n  margin: 20px;\n  width: 20px;\n`\n\nconst StyledCardHeader = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n`\n\nconst CardWrapper = styled.div`\n  margin-bottom: 30px;\n`\n\nconst Title = styled.div`\n  color: ${(props) => props.theme.colors.secondary};\n  font-size: 24px;\n  width: 50vw;\n  text-align: center;\n  font-weight: 1000;\n`\n\nconst StyledCardContentInner = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: space-between;\n\n  &:before {\n    position: absolute;\n    top: 0;\n    left: 0;\n    content: '';\n    background: url('../images/jackpot-l.png');\n    width: 220px;\n    height: 496px;\n\n    @media (max-width: 991px) {\n      opacity: 0.2;\n    }\n  }\n\n  &:after {\n    position: absolute;\n    top: 0;\n    right: 0;\n    content: '';\n    background: url('../images/jackpot-r.png');\n    width: 220px;\n    height: 496px;\n\n    @media (max-width: 991px) {\n      opacity: 0.2;\n    }\n  }\n`\n\nexport default WinningNumbers\n","import React from 'react'\n\nexport interface PastLotteryDataState {\n  mostRecentLotteryNumber: number\n  currentLotteryNumber: number\n  historyError: boolean\n  historyData: Array<any>\n}\n\nexport default React.createContext({\n  mostRecentLotteryNumber: 0,\n  historyError: false,\n  historyData: [],\n} as PastLotteryDataState)\n","import React from 'react'\nimport CardValue, { CardValueProps } from './CardValue'\n\nconst CardBusdValue: React.FC<CardValueProps> = (props) => {\n  return (\n    <CardValue fontSize=\"14px\" lineHeight=\"1.1\" color=\"#2b2c3a\" prefix=\"~$\" bold={false} decimals={2} {...props} />\n  )\n}\n\nexport default CardBusdValue\n","import React from 'react'\nimport styled from 'styled-components'\nimport useI18n from 'hooks/useI18n'\nimport { Heading, Text } from '@luckyswap/uikit'\nimport { BigNumber } from 'bignumber.js'\nimport { usePriceLuckyBusd } from 'state/hooks'\nimport CardBusdValue from '../../Home/components/CardBusdValue'\n\nexport interface PrizeGridProps {\n  lotteryPrizeAmount?: number\n  pastDraw?: boolean\n  jackpotMatches?: number\n  oneTicketMatches?: number\n  twoTicketMatches?: number\n  threeTicketMatches?: number\n}\n\nconst Grid = styled.div<{ pastDraw?: boolean }>`\n  display: grid;\n  grid-template-columns: repeat(${(props) => (props.pastDraw ? 3 : 2)}, 1fr);\n  grid-template-rows: repeat(4, auto);\n`\n\nconst RightAlignedText = styled(Text)`\n  text-align: right;\n`\n\nconst RightAlignedHeading = styled(Heading)`\n  text-align: right;\n`\n\nconst GridItem = styled.div<{ marginBottom?: string }>`\n  margin-bottom: ${(props) => (props.marginBottom ? props.marginBottom : '10px')};\n`\n\nconst PastDrawGridItem = styled(GridItem)`\n  transform: translate(-40%, 0%);\n`\n\nconst PrizeGrid: React.FC<PrizeGridProps> = ({\n  lotteryPrizeAmount = 0,\n  pastDraw = false,\n  jackpotMatches,\n  twoTicketMatches,\n  threeTicketMatches,\n}) => {\n  const fourMatchesAmount = +((lotteryPrizeAmount / 100) * 50).toFixed(0)\n  const threeMatchesAmount = +((lotteryPrizeAmount / 100) * 20).toFixed(0)\n  const twoMatchesAmount = +((lotteryPrizeAmount / 100) * 10).toFixed(0)\n  const burnAmount = +((lotteryPrizeAmount / 100) * 20).toFixed(0)\n  const TranslateString = useI18n()\n  const cakeBusdPrice = usePriceLuckyBusd()\n\n  const getCakeBusdValue = (amount: number) => {\n    return new BigNumber(amount).multipliedBy(cakeBusdPrice).toNumber()\n  }\n\n  return (\n    <Grid pastDraw={pastDraw}>\n      <GridItem>\n        <Text fontSize=\"24px\" color=\"#F3C111\">\n          {TranslateString(756, 'No. Matched')}\n        </Text>\n      </GridItem>\n      {pastDraw && (\n        <PastDrawGridItem>\n          <RightAlignedText fontSize=\"14px\" color=\"textSubtle\">\n            {TranslateString(754, 'Winners')}\n          </RightAlignedText>\n        </PastDrawGridItem>\n      )}\n      <GridItem>\n        <RightAlignedText fontSize=\"24px\" color=\"#F3C111\">\n          {TranslateString(752, 'Prize Pot')}\n        </RightAlignedText>\n      </GridItem>\n      {/* 4 matches row */}\n      <GridItem>\n        <Heading style={{ textShadow: 'rgb(255 214 0) 0px 0px 25px' }} size=\"md\">\n          4\n        </Heading>\n      </GridItem>\n      {pastDraw && (\n        <PastDrawGridItem>\n          <RightAlignedHeading size=\"md\">{jackpotMatches}</RightAlignedHeading>\n        </PastDrawGridItem>\n      )}\n      <GridItem>\n        <RightAlignedHeading size=\"md\">\n          {fourMatchesAmount.toLocaleString()}\n          {!pastDraw && !cakeBusdPrice.eq(0) && <CardBusdValue value={getCakeBusdValue(fourMatchesAmount)} />}\n        </RightAlignedHeading>\n      </GridItem>\n      {/* 3 matches row */}\n      <GridItem style={{ textShadow: 'rgb(255 214 0) 0px 0px 25px' }}>\n        <Text bold>3</Text>\n      </GridItem>\n      {pastDraw && (\n        <PastDrawGridItem>\n          <RightAlignedText bold>{threeTicketMatches}</RightAlignedText>\n        </PastDrawGridItem>\n      )}\n      <GridItem>\n        <RightAlignedText>\n          {threeMatchesAmount.toLocaleString()}\n          {!pastDraw && !cakeBusdPrice.eq(0) && <CardBusdValue value={getCakeBusdValue(threeMatchesAmount)} />}\n        </RightAlignedText>\n      </GridItem>\n      {/* 2 matches row */}\n      <GridItem style={{ textShadow: 'rgb(255 214 0) 0px 0px 25px' }}>\n        <Text>2</Text>\n      </GridItem>\n      {pastDraw && (\n        <PastDrawGridItem>\n          <RightAlignedText>{twoTicketMatches}</RightAlignedText>\n        </PastDrawGridItem>\n      )}\n      <GridItem>\n        <RightAlignedText>\n          {twoMatchesAmount.toLocaleString()}\n          {!pastDraw && !cakeBusdPrice.eq(0) && <CardBusdValue value={getCakeBusdValue(twoMatchesAmount)} />}\n        </RightAlignedText>\n      </GridItem>\n      {/* Burn row */}\n      <GridItem marginBottom=\"0\">\n        <Text>{TranslateString(999, `${pastDraw ? 'Burned' : 'To burn'}`)}:</Text>\n      </GridItem>\n      {pastDraw ? (\n        <>\n          <GridItem marginBottom=\"0\" />\n          <GridItem marginBottom=\"0\">\n            <RightAlignedText>{burnAmount.toLocaleString()}</RightAlignedText>\n          </GridItem>\n        </>\n      ) : (\n        <GridItem marginBottom=\"0\">\n          <RightAlignedText>{burnAmount.toLocaleString()}</RightAlignedText>\n        </GridItem>\n      )}\n    </Grid>\n  )\n}\n\nexport default PrizeGrid\n","import React, { useContext, useState } from 'react'\nimport styled from 'styled-components'\nimport { useWeb3React } from '@web3-react/core'\nimport { Heading, Card, CardBody, CardFooter, Text, PancakeRoundIcon, Flex, Skeleton } from '@luckyswap/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport useI18n from 'hooks/useI18n'\nimport { useTotalRewards } from 'hooks/useTickets'\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\nimport ExpandableSectionButton from 'components/ExpandableSectionButton/ExpandableSectionButton'\nimport { BigNumber } from 'bignumber.js'\nimport { usePriceLuckyBusd } from 'state/hooks'\nimport PrizeGrid from '../PrizeGrid'\nimport CardBusdValue from '../../../Home/components/CardBusdValue'\n\n// const Container = styled.div`\n//   margin-left: auto;\n//   margin-right: auto;\n//   max-width: 1200px;\n//   margin-bottom: 30px;\n// `\n\nconst BoxTotal = styled.div `\n  background: linear-gradient(45deg,rgb(35 35 35) 30%,rgb(45 45 45) 100%);\n  box-shadow: 0px 0px 11px 0px rgb(16 16 16 / 57%);\n  color: #ffffff;\n  overflow: hidden;\n  position: relative;\n  width: 100%;\n  margin-bottom: 20px;\n  display: grid;\n  grid-template-columns: 1fr;\n\n  @media (min-width: 991px) {\n    grid-template-columns: 1fr 1fr;\n    margin: 0 auto 60px;\n  }\n`\n\nconst CardHeading = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n`\n\nconst Right = styled.div`\n  display: flex;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    display: none;\n  }\n`\n\nconst Left = styled.div`\n  display: flex;\n`\n\nconst IconWrapper = styled.div`\n  margin-right: 16px;\n  svg {\n    width: 48px;\n    height: 48px;\n  }\n`\n\nconst PrizeCountWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst ExpandingWrapper = styled.div<{ showFooter: boolean }>`\n  height: ${(props) => (props.showFooter ? '100%' : '0px')};\n  padding: 15px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    height: 100%;\n  }\n`\nconst CardBodyNew = styled.div`\n  background-color: rgba(255, 255, 255, 0.1);\n  border: 0.0625rem solid rgba(255, 255, 255, 0.2);\n  border-radius: 1.25rem;\n  padding: 24px;\n`\n\nconst BoxLucky = styled.div `\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  align-items: center;\n  padding: 15px 0 5px;\n\n  h2 {\n    font-size: 44px;\n    position: relative;\n    color: #F3C111;\n    font-weight: 700;\n  }\n\n  span {\n    font-size: 16px;\n    position: absolute;\n    top: 0;\n  }\n`\n\nconst Dollar = styled.div `\n  padding-left: 60px;\n`\n\nconst TotalPrizesCard = () => {\n  const TranslateString = useI18n()\n  const { account } = useWeb3React()\n  const [showFooter, setShowFooter] = useState(false)\n  const lotteryPrizeAmount = +getBalanceNumber(useTotalRewards()).toFixed(0)\n  const lotteryPrizeAmountBusd = new BigNumber(lotteryPrizeAmount).multipliedBy(usePriceLuckyBusd()).toNumber()\n  const lotteryPrizeWithCommaSeparators = lotteryPrizeAmount.toLocaleString()\n  const { currentLotteryNumber } = useContext(PastLotteryDataContext)\n\n  return (\n      <BoxTotal>\n        <CardBody>\n          {account && (\n            <Flex mb=\"16px\" alignItems=\"center\" justifyContent=\"space-between\" style={{ height: '20px' }}>\n              {currentLotteryNumber === 0 && <Skeleton height={20} width={56} />}\n              <>\n                <Text fontSize=\"12px\" style={{ fontWeight: 600 }}>\n                  {TranslateString(720, `Round #${currentLotteryNumber}`, { num: currentLotteryNumber })}\n                </Text>\n              </>\n              {/* {currentLotteryNumber > 0 && (\n                <>\n                  <Text fontSize=\"12px\" style={{ fontWeight: 600 }}>\n                    {TranslateString(720, `Round #${currentLotteryNumber}`, { num: currentLotteryNumber })}\n                  </Text>\n                </>\n              )} */}\n            </Flex>\n          )}\n          \n          <CardHeading>\n            <Left>\n              <PrizeCountWrapper>\n                <Text fontSize=\"24px\" fontWeight=\"500\" color=\"textSubtle\">\n                  {TranslateString(722, 'Total Pot:')}\n                </Text>\n                <BoxLucky>\n                  <IconWrapper>\n                    <img width=\"55px\" alt=\"\" src=\"/images/icon-logo-y.png\" />\n                  </IconWrapper>\n                  <Heading style={{ 'textShadow': 'rgb(255 214 0) 0px 0px 25px', fontSize : '44' }} size=\"lg\">\n                    {lotteryPrizeWithCommaSeparators} <span>LUCKY</span>\n                  </Heading>\n                </BoxLucky>\n                <Dollar>{lotteryPrizeAmountBusd !== 0 && <CardBusdValue value={lotteryPrizeAmountBusd} />}</Dollar>\n              </PrizeCountWrapper>\n            </Left>\n            <Right>\n              <ExpandableSectionButton onClick={() => setShowFooter(!showFooter)} expanded={showFooter} />\n            </Right>\n          </CardHeading>\n        </CardBody>\n        <ExpandingWrapper showFooter={showFooter}>\n          <CardFooter className=\"no-border\">\n            <PrizeGrid lotteryPrizeAmount={lotteryPrizeAmount} />\n          </CardFooter>\n        </ExpandingWrapper>\n      </BoxTotal>\n  )\n}\n\nexport default TotalPrizesCard\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Loading: React.FC = () => <StyledLoading />\n\nconst StyledLoading = styled.div`\n  border: 8px solid #f3f3f3;\n  border-radius: 50%;\n  border-top: 8px solid #ddd;\n  border-bottom: 8px solid #ddd;\n  width: 20px;\n  height: 20px;\n  -webkit-animation: spin 2s linear infinite;\n  animation: spin 2s linear infinite;\n  @-webkit-keyframes spin {\n    0% {\n      -webkit-transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`\n\nexport default Loading\n","import React, { useCallback } from 'react'\nimport { Button, Modal } from '@luckyswap/uikit'\nimport styled from 'styled-components'\nimport { useWinningNumbers } from 'hooks/useTickets'\nimport useI18n from 'hooks/useI18n'\n\ninterface UserTicketsModalProps {\n  myTicketNumbers: Array<any>\n  from?: string\n  onDismiss?: () => void\n}\n\nconst UserTicketsModal: React.FC<UserTicketsModalProps> = ({ myTicketNumbers, onDismiss, from }) => {\n  const winNumbers = useWinningNumbers()\n  const TranslateString = useI18n()\n  const rewardMatch = useCallback(\n    (number) => {\n      let n = 0\n      for (let i = winNumbers.length - 1; i >= 0; i--) {\n        // eslint-disable-next-line eqeqeq\n        if (winNumbers[i] == number[i]) n++\n      }\n      return n\n    },\n    [winNumbers],\n  )\n\n  const listItems = myTicketNumbers.map((number, index) => {\n    if (rewardMatch(number[0]) > 1 && from !== 'buy') {\n      const emoji = new Array(rewardMatch(number[0]) + 1).join('🤑')\n      return (\n        // eslint-disable-next-line react/no-array-index-key\n        <RewardP key={index}>\n          {emoji}\n          {number.toString()}\n          {emoji}\n        </RewardP>\n      )\n    }\n    // eslint-disable-next-line react/no-array-index-key\n    return <p style={{color:\"yellow\"}} key={index}>{number.toString()}</p>\n  })\n\n  return (\n    <Modal\n      title={TranslateString(490, `My Tickets (Total: ${myTicketNumbers.length})`, { TICKETS: myTicketNumbers.length })}\n      onDismiss={onDismiss}\n    >\n      <TicketsList>\n        <h2>{listItems}</h2>\n      </TicketsList>\n      <StyledButton variant=\"secondary\" onClick={onDismiss}>\n        {TranslateString(438, 'Close')}\n      </StyledButton>\n    </Modal>\n  )\n}\n\nconst RewardP = styled.div`\n  color: #ff8c28;\n`\n\nconst TicketsList = styled.div`\n  text-align: center;\n  overflow-y: auto;\n  max-height: 400px;\n  color: ${(props) => props.theme.colors.primary};\n`\n\nconst StyledButton = styled(Button)`\n  margin-top: ${(props) => props.theme.spacing[2]}px;\n`\n\nexport default UserTicketsModal\n","import React, { useCallback, useState } from 'react'\nimport styled from 'styled-components'\nimport { Button, Heading, Won, useModal } from '@luckyswap/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useMultiClaimLottery } from 'hooks/useBuyLottery'\nimport useTickets, { useTotalClaim } from 'hooks/useTickets'\nimport { useTransactionAdder } from 'state/transactions/hooks'\nimport Loading from '../Loading'\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\n\nconst WinningsWrapper = styled.div`\n  display: flex;\n  align-items: baseline;\n`\n\nconst IconWrapper = styled.div`\n  margin-bottom: 16px;\n\n  svg {\n    width: 80px;\n    height: 80px;\n  }\n`\n\nconst StyledCardActions = styled.div`\n  margin-top: ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledCardContentInner = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: space-between;\n`\n\nconst StyledButton = styled(Button)`\n  margin-top: ${(props) => props.theme.spacing[1]}px;\n`\n\nconst PrizesWonContent: React.FC = () => {\n  const [requestedClaim, setRequestedClaim] = useState(false)\n  const TranslateString = useI18n()\n  const { claimLoading, claimAmount } = useTotalClaim()\n  const { onMultiClaim } = useMultiClaimLottery()\n  const tickets = useTickets()\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\n  const addTransaction = useTransactionAdder()\n\n  const handleClaim = useCallback(async () => {\n    try {\n      setRequestedClaim(true)\n      const txHash = await onMultiClaim()\n      addTransaction(txHash, {\n        summary: 'Claim successfully!',\n      })\n      // user rejected tx or didn't go thru\n      if (txHash) {\n        setRequestedClaim(false)\n      }\n    } catch (e) {\n      console.error(e)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [onMultiClaim, setRequestedClaim])\n\n  const winnings = getBalanceNumber(claimAmount).toFixed(2)\n\n  return (\n    <StyledCardContentInner>\n      <IconWrapper>\n        <img src=\"images/icon-gif.svg\" alt=\"gif\"/>\n      </IconWrapper>\n      <Heading as=\"h3\" size=\"lg\" color=\"#1CFFBB\">\n        {TranslateString(660, 'You won!')}\n      </Heading>\n      {claimLoading && <Loading />}\n      {!claimLoading && (\n        <>\n          <WinningsWrapper>\n            <Heading as=\"h4\" size=\"xl\" style={{ marginRight: '6px' }}>\n              {winnings}\n            </Heading>\n            <Heading as=\"h4\" size=\"lg\">\n              LUCKY\n            </Heading>\n          </WinningsWrapper>\n        </>\n      )}\n      <StyledCardActions>\n        <Button className=\"border-yellow\" variant=\"secondary\" width=\"100%\" disabled={requestedClaim} onClick={handleClaim}>\n          {TranslateString(1056, 'Collect')}\n        </Button>\n      </StyledCardActions>\n      <StyledButton variant=\"text\" onClick={onPresentMyTickets}>\n        {TranslateString(432, 'View your tickets')}\n      </StyledButton>\n    </StyledCardContentInner>\n  )\n}\n\nexport default PrizesWonContent\n","import { useCallback, useState, useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useLottery, useContract } from 'hooks/useContract'\nimport { getLotteryAddress ,getLotteryTicketAddress} from 'utils/addressHelpers'\nimport lotteryAbi from 'config/abi/lottery.json'\nimport lotteryTicketAbi from 'config/abi/lotteryNft.json'\nimport { multiClaim, getMax, multiBuy } from '../utils/lotteryUtils'\n\nexport const useMultiClaimLottery = () => {\n  const { account } = useWeb3React()\n  const lotteryContract = useContract(getLotteryAddress(), lotteryAbi)\n  const lotteryTicketContract = useContract(getLotteryTicketAddress(), lotteryTicketAbi)\n\n  const handleClaim = useCallback(async () => {\n    try {\n      const txHash = await multiClaim(lotteryContract, lotteryTicketContract, account)\n      return txHash\n    } catch (e) {\n      return false\n    }\n  }, [account, lotteryContract, lotteryTicketContract])\n\n  return { onMultiClaim: handleClaim }\n}\n\nexport const useMultiBuyLottery = () => {\n  const { account } = useWeb3React()\n  const lotteryContract = useContract(getLotteryAddress(), lotteryAbi)\n\n  const handleBuy = useCallback(\n    async (amount: string, numbers: Array<any>) => {\n      try {\n        const txHash = await multiBuy(lotteryContract, amount, numbers, account)\n        return txHash\n      } catch (e) {\n        return false\n      }\n    },\n    [account, lotteryContract],\n  )\n\n  return { onMultiBuy: handleBuy }\n}\n\nexport const useMaxNumber = () => {\n  const [max, setMax] = useState(5)\n  const lotteryContract = useContract(getLotteryAddress(), lotteryAbi)\n\n  const fetchMax = useCallback(async () => {\n    const maxNumber = await getMax(lotteryContract)\n    setMax(maxNumber)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [lotteryContract])\n\n  useEffect(() => {\n    if (lotteryContract) {\n      fetchMax()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [lotteryContract, fetchMax])\n\n  return max\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Button, useModal } from '@luckyswap/uikit'\nimport useI18n from 'hooks/useI18n'\nimport useTickets from 'hooks/useTickets'\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\n\nconst Wrapper = styled.div`\n  display: flex;\n`\n\nconst TextWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst StyledText = styled(Text)`\n  padding-left: 12px;\n`\n\nconst Image = styled.img`\n  margin-right: 6px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    margin-right: 20px;\n  }\n`\nconst StyledButton = styled(Button)`\n  padding: 0 12px;\n  height: unset;\n`\n\nconst NoPrizesContent: React.FC = () => {\n  const TranslateString = useI18n()\n  const tickets = useTickets()\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\n\n  return (\n    <Wrapper>\n      <Image src=\"/images/no-prize.svg\" alt=\"no prizes won\" />\n      <TextWrapper>\n        <StyledText >{TranslateString(726, 'Sorry, no prizes to collect')}</StyledText>\n        <StyledButton variant=\"text\" onClick={onPresentMyTickets}>\n          {TranslateString(432, 'View your tickets and NFTs')}\n        </StyledButton>\n      </TextWrapper>\n    </Wrapper>\n  )\n}\n\nexport default NoPrizesContent\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card, CardBody } from '@luckyswap/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useTotalClaim } from 'hooks/useTickets'\nimport PrizesWonContent from './PrizesWonContent'\nimport NoPrizesContent from './NoPrizesContent'\n\nconst StyledCard = styled(Card)`\n  margin: 0 !important;\n  max-width: 100% !important;\n  border-radius: 14px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  \n  ${(props) =>\n    props.isDisabled\n      ? `  \n        margin-top: 0;\n        background-color: unset;\n        box-shadow: unset;\n        border: 1px solid ${props.theme.colors.textDisabled};\n\n        ${props.theme.mediaQueries.sm} {\n          margin-top: 0;\n        }\n\n        ${props.theme.mediaQueries.lg} {\n          margin-top: 0;\n        }\n        `\n      : ``}\n`\n\nconst YourPrizesCard: React.FC = () => {\n  const { claimAmount } = useTotalClaim()\n\n  const winnings = getBalanceNumber(claimAmount)\n  const isAWin = winnings > 0\n\n  return (\n    <StyledCard isDisabled={!isAWin} isActive={isAWin}>\n      <CardBody>{isAWin ? <PrizesWonContent /> : <NoPrizesContent />}</CardBody>\n    </StyledCard>\n  )\n}\n\nexport default YourPrizesCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Card, CardBody, Ticket } from '@luckyswap/uikit'\nimport useI18n from 'hooks/useI18n'\nimport UnlockButton from 'components/UnlockButton'\n\nconst StyledCardBody = styled(CardBody)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`\n\nconst StyledHeading = styled(Heading)`\n  margin: 16px 0;\n`\n\nconst IconWrapper = styled.div`\n  svg {\n    width: 80px;\n    height: 80px;\n  }\n`\n\nconst UnlockWalletCard = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <Card isActive>\n      <StyledCardBody>\n        <IconWrapper>\n          <img src=\"https://merlinlab.com/assets/lottery/lottery.svg\" alt=\"\" />\n        </IconWrapper>\n        <StyledHeading size=\"md\">{TranslateString(1080, 'Unlock wallet to access lottery')}</StyledHeading>\n        <UnlockButton />\n      </StyledCardBody>\n    </Card>\n  )\n}\n\nexport default UnlockWalletCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button, Flex, Input, InputProps } from '@luckyswap/uikit'\nimport useI18n from 'hooks/useI18n'\n\ninterface TokenInputProps extends InputProps {\n  max: number | string\n  symbol: string\n  availableSymbol: string\n  value: string\n  onSelectMax?: () => void\n  onChange: (evt: React.FormEvent<HTMLInputElement>) => void\n}\n\nconst TicketInput: React.FC<TokenInputProps> = ({ max, symbol, availableSymbol, onChange, onSelectMax, value }) => {\n  const TranslateString = useI18n()\n\n  return (\n    <StyledTokenInput>\n      <Flex alignItems=\"center\">\n        <Input onChange={onChange} placeholder=\"0\" value={value} />\n        <StyledTokenAdornmentWrapper>\n          <StyledTokenSymbol>{symbol}</StyledTokenSymbol>\n          <StyledSpacer />\n          <div>\n            <Button size=\"sm\" variant=\"secondary\" onClick={onSelectMax}>\n              {TranslateString(452, 'Max')}\n            </Button>\n          </div>\n        </StyledTokenAdornmentWrapper>\n      </Flex>\n      <StyledMaxText>{TranslateString(454, `${max.toLocaleString()} ${availableSymbol} Available`)}</StyledMaxText>\n    </StyledTokenInput>\n  )\n}\n\nconst StyledTokenInput = styled.div``\n\nconst StyledSpacer = styled.div`\n  width: ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledTokenAdornmentWrapper = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst StyledMaxText = styled.div`\n  align-items: center;\n  color: ${(props) => props.theme.colors.primary};\n  display: flex;\n  font-size: 14px;\n  font-weight: 700;\n  height: 44px;\n  justify-content: flex-end;\n`\n\nconst StyledTokenSymbol = styled.span`\n  color: ${(props) => props.theme.colors.primary};\n  font-weight: 700;\n`\n\nexport default TicketInput\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { Button, Modal } from '@luckyswap/uikit'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport TicketInput from 'components/TicketInput'\nimport ModalActions from 'components/ModalActions'\nimport { useMultiBuyLottery, useMaxNumber } from 'hooks/useBuyLottery'\nimport useI18n from 'hooks/useI18n'\nimport { LOTTERY_MAX_NUMBER_OF_TICKETS, LOTTERY_TICKET_PRICE } from 'config'\nimport { useWeb3React } from '@web3-react/core'\nimport { useContract } from 'hooks/useContract'\nimport { getLotteryAddress } from 'utils/addressHelpers'\nimport lotteryAbi from 'config/abi/lottery.json'\nimport { useTransactionAdder } from 'state/transactions/hooks'\n\ninterface BuyTicketModalProps {\n  max: BigNumber\n  onConfirm?: (amount: string, numbers: Array<number>) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst BuyTicketModal: React.FC<BuyTicketModalProps> = ({ max, onDismiss }) => {\n  const [val, setVal] = useState('1')\n  const [pendingTx, setPendingTx] = useState(false)\n  const [, setRequestedBuy] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max, 18)\n  }, [max])\n  const maxTickets = useMemo(() => {\n    return parseInt(getFullDisplayBalance(max.div(LOTTERY_TICKET_PRICE)), 10)\n  }, [max])\n\n  const handleChange = (e: React.FormEvent<HTMLInputElement>) => setVal(e.currentTarget.value)\n\n  const { onMultiBuy } = useMultiBuyLottery()\n  const maxNumber = useMaxNumber()\n  const lotteryContract = useContract(getLotteryAddress(), lotteryAbi)\n  const addTransaction = useTransactionAdder()\n\n  const handleBuy = useCallback(async () => {\n    try {\n      setRequestedBuy(true)\n      const length = parseInt(val)\n      // @ts-ignore\n      // eslint-disable-next-line prefer-spread\n      const numbers = Array.apply(null, { length }).map(() => [\n        Math.floor(Math.random() * maxNumber) + 1,\n        Math.floor(Math.random() * maxNumber) + 1,\n        Math.floor(Math.random() * maxNumber) + 1,\n        Math.floor(Math.random() * maxNumber) + 1,\n      ])\n      // await onMultiBuy(LOTTERY_TICKET_PRICE.toString(), numbers)\n      const txHash = await lotteryContract\n        .multiBuy(new BigNumber(LOTTERY_TICKET_PRICE.toString()).times(new BigNumber(10).pow(18)).toString(), numbers)\n        .then((response) => {\n          addTransaction(response, {\n            summary: 'Buy ticket successfully!',\n          })\n        })\n      // user rejected tx or didn't go thru\n      if (txHash) {\n        setRequestedBuy(false)\n      }\n    } catch (e) {\n      console.error(e)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [onMultiBuy, setRequestedBuy, maxNumber, val])\n\n  const handleSelectMax = useCallback(() => {\n    if (Number(maxTickets) > LOTTERY_MAX_NUMBER_OF_TICKETS) {\n      setVal(LOTTERY_MAX_NUMBER_OF_TICKETS.toString())\n    } else {\n      setVal(maxTickets.toString())\n    }\n  }, [maxTickets])\n\n  const cakeCosts = (amount: string): number => {\n    return +amount * LOTTERY_TICKET_PRICE\n  }\n  return (\n    <Modal title={TranslateString(450, 'Enter amount of tickets to buy')} onDismiss={onDismiss}>\n      <TicketInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol=\"TICKET\"\n        availableSymbol=\"LUCKY\"\n      />\n      <div>\n        <Tips>{TranslateString(999, `1 Ticket = ${LOTTERY_TICKET_PRICE} LUCKY`, { num: LOTTERY_TICKET_PRICE })}</Tips>\n      </div>\n      <div>\n        <Announce>\n          {TranslateString(\n            478,\n            'Ticket purchases are final. Your LUCKY cannot be returned to you after buying tickets.',\n          )}\n        </Announce>\n        <Final>{TranslateString(460, `You will spend: ${cakeCosts(val)} LUCKY`)}</Final>\n      </div>\n      <ModalActions>\n        <Button width=\"100%\" variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          id=\"lottery-buy-complete\"\n          width=\"100%\"\n          variant=\"secondary\"\n          disabled={\n            pendingTx ||\n            parseInt(val) > Number(maxTickets) ||\n            parseInt(val) > LOTTERY_MAX_NUMBER_OF_TICKETS ||\n            parseInt(val) < 1\n          }\n          onClick={async () => {\n            setPendingTx(true)\n            await handleBuy()\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default BuyTicketModal\n\nconst Tips = styled.div`\n  margin-left: 0.4em;\n  font-size: 14px;\n  font-weight: 600;\n  color: ${(props) => props.theme.colors.primary};\n`\n\nconst Final = styled.div`\n  margin-top: 1em;\n  text-align: center;\n  font-size: 20px;\n  font-weight: 600;\n  color: ${(props) => props.theme.colors.primary};\n`\nconst Announce = styled.div`\n  margin-top: 1em;\n  margin-left: 0.4em;\n  color: #fff;\n`\n","import React from 'react'\nimport { Button, Modal } from '@luckyswap/uikit'\nimport ModalActions from 'components/ModalActions'\nimport styled from 'styled-components'\nimport useI18n from 'hooks/useI18n'\n\nconst WarningModal: React.FC<{ onDismiss?: () => void }> = ({ onDismiss }) => {\n  const TranslateString = useI18n()\n\n  return (\n    <Modal title={TranslateString(466, 'Warning')} onDismiss={onDismiss}>\n      <TicketsList>\n        {TranslateString(468, 'Lottery ticket purchases are final.')}\n        <br />\n        {TranslateString(470, 'Your CAKE will not be returned to you after you spend it to buy tickets.')}\n        <br />\n        {TranslateString(472, 'Tickets are only valid for one lottery draw, and will be burned after the draw.')}\n        <br />\n        {TranslateString(\n          474,\n          'Buying tickets does not guarantee you will win anything. Please only participate once you understand the risks.',\n        )}\n      </TicketsList>\n      <ModalActions>\n        <Button width=\"100%\" onClick={onDismiss}>\n          {TranslateString(476, 'I understand')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nconst TicketsList = styled.div`\n  text-align: left;\n  overflow-y: auto;\n  max-height: 400px;\n  color: ${(props) => props.theme.colors.primary};\n`\n\nexport default WarningModal\n","import React, { useMemo, useCallback, useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { AutoRenewIcon, Button, useModal } from '@luckyswap/uikit'\nimport useI18n from 'hooks/useI18n'\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { useContract } from 'hooks/useContract'\nimport { useApproveCallbackCustom } from 'hooks/useApproveCallback'\nimport { XLUCKY_TESTNET } from 'config'\nimport bep20Abi from 'config/abi/erc20.json'\nimport lotteryAbi from 'config/abi/lottery.json'\nimport useRefresh from 'hooks/useRefresh'\nimport { getLotteryAddress, getLotteryTicketAddress } from 'utils/addressHelpers'\nimport lotteryTicketAbi from 'config/abi/lotteryNft.json'\nimport { isTransactionRecent, useAllTransactions } from 'state/transactions/hooks'\nimport { TransactionDetails } from 'state/transactions/reducer'\nimport { getTickets } from 'utils/lotteryUtils'\nimport BuyTicketModal from './BuyTicketModal'\nimport MyTicketsModal from './UserTicketsModal'\nimport PurchaseWarningModal from './PurchaseWarningModal'\n\n// we want the latest one to come first, so return negative if a is after b\nfunction newTransactionsFirst(a: TransactionDetails, b: TransactionDetails) {\n  return b.addedTime - a.addedTime\n}\n\nconst spinnerIcon = <AutoRenewIcon spin color=\"currentColor\" />\n\nconst CardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: ${(props) => props.theme.spacing[3]}px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    justify-content: space-between;\n  }\n`\n\nconst TicketCard: React.FC = () => {\n  const TranslateString = useI18n()\n  const [balanceToken, setBalanceToken] = useState(0)\n  const [tickets, setTickets] = useState([])\n  const [allowance, setAllowance] = useState(0)\n  // const allowance = useLotteryAllowance()\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\n\n  const { account } = useWeb3React()\n  const contractBEP20 = useContract(XLUCKY_TESTNET, bep20Abi)\n\n  const useContractTemp = useContract(XLUCKY_TESTNET, bep20Abi)\n\n  const ticketsContract = useContract(getLotteryTicketAddress(), lotteryTicketAbi)\n  const lotteryContract = useContract(getLotteryAddress(), lotteryAbi)\n  const { fastRefresh } = useRefresh()\n\n  const ticketsLength = tickets.length\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\n  const [onPresentApprove] = useModal(<PurchaseWarningModal />)\n  const [onPresentBuy] = useModal(<BuyTicketModal max={new BigNumber(balanceToken)} tokenName=\"CAKE\" />)\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await getTickets(lotteryContract, ticketsContract, account, null)\n      setTickets(res)\n    }\n\n    if (account && lotteryContract && ticketsContract) {\n      fetchBalance()\n    }\n  }, [account, lotteryContract, fastRefresh, ticketsContract])\n\n  useEffect(() => {\n    if (useContractTemp) {\n      useContractTemp.balanceOf(account).then((data) => {\n        setBalanceToken(data.toString())\n      })\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [account])\n\n  useEffect(() => {\n    if (useContractTemp) {\n      useContractTemp.balanceOf(account).then((data) => {\n        setBalanceToken(data.toString())\n      })\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [account, fastRefresh])\n\n  useEffect(() => {\n    const fetchApprovalData = async () => {\n      if (account && contractBEP20) {\n        try {\n          const response = await contractBEP20?.allowance?.(account, getLotteryAddress())\n          setAllowance(response.toString())\n        } catch (error) {\n          console.log(' error fetch approval data')\n        }\n      }\n    }\n\n    fetchApprovalData()\n  }, [account, contractBEP20])\n  const [requestedApproval, setRequestedApproval] = useState(false)\n\n  const [approval] = useApproveCallbackCustom(XLUCKY_TESTNET, getLotteryAddress())\n\n  async function onAttemptToApprove() {\n    return approval()\n  }\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      await onAttemptToApprove()\n    } catch (e) {\n      console.error(e)\n    }\n    /* eslint-disable react-hooks/exhaustive-deps */\n  }, [approval, setRequestedApproval])\n\n  const allTransactions = useAllTransactions()\n\n  const sortedRecentTransactions = useMemo(() => {\n    const txs = Object.values(allTransactions)\n    return txs.filter(isTransactionRecent).sort(newTransactionsFirst)\n  }, [allTransactions])\n\n  const getStatus = () => {\n    const pending = sortedRecentTransactions.filter((tx) => !tx.receipt).map((tx) => tx.hash)\n    return !!pending.length\n  }\n\n  const renderLotteryTicketButtons = () => {\n    if (allowance.toString() === '0') {\n      return (\n        <Dflex>\n          <Button className=\"bg-yellow\" width=\"100%\">\n            {TranslateString(432, 'Connect Wallet')}\n          </Button>\n          <Button className=\"border-yellow\" width=\"100%\" disabled={requestedApproval || getStatus()} onClick={handleApprove}>\n            {getStatus() ? spinnerIcon : ''}\n            {TranslateString(494, 'View your tickets')}\n          </Button>\n        </Dflex>\n      )\n    }\n    return (\n      <>\n        <Button\n          style={{ marginRight: '8px' }}\n          width=\"100%\"\n          disabled={ticketsLength === 0}\n          variant=\"secondary\"\n          onClick={onPresentMyTickets}\n        >\n          {TranslateString(432, 'View your tickets')}\n        </Button>\n        <Button variant=\"secondary\" id=\"lottery-buy-start\" width=\"100%\" onClick={onPresentBuy}>\n          {getStatus() ? spinnerIcon : ''}\n          {TranslateString(430, 'Buy ticket')}\n        </Button>\n      </>\n    )\n  }\n\n  return (\n    <CardActions>\n      {!lotteryHasDrawn ? (\n        <Button disabled> {TranslateString(874, 'On sale soon')}</Button>\n      ) : (\n        renderLotteryTicketButtons()\n      )}\n    </CardActions>\n  )\n}\n\nconst Dflex = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-gap: 20px;\n  width: 100%;\n`\n\nexport default TicketCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card, CardBody, TicketRound, Text, Heading } from '@luckyswap/uikit'\nimport useI18n from 'hooks/useI18n'\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\nimport useTickets from 'hooks/useTickets'\nimport { useCurrentTime } from 'hooks/useTimer'\nimport TicketActions from './TicketActions'\nimport { getTicketSaleTime } from '../../helpers/CountdownHelpers'\n\ninterface CardProps {\n  isSecondCard?: boolean\n}\n\nconst StyledCard = styled(Card)<CardProps>`\n  margin: 0 !important;\n  max-width: 100% !important;\n  border-radius: 14px;\n\n  ${(props) =>\n    props.isSecondCard\n      ? `  \n        margin-top: 0;\n\n        ${props.theme.mediaQueries.sm} {\n          margin-top: 0;\n        }\n\n        ${props.theme.mediaQueries.lg} {\n          margin-top: 0;\n        }\n        `\n      : ``}\n`\n\nconst CardHeader = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n`\n\nconst IconWrapper = styled.div`\n  margin-bottom: 16px;\n  svg {\n    width: 48px;\n    height: 48px;\n  }\n`\n\nconst TicketCountWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 10px;\n`\n\nconst TicketCard: React.FC<CardProps> = ({ isSecondCard = false }) => {\n  const TranslateString = useI18n()\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\n\n  const tickets = useTickets()\n  const ticketsLength = tickets.length\n\n  const currentMillis = useCurrentTime()\n  const timeUntilTicketSale = lotteryHasDrawn && getTicketSaleTime(currentMillis)\n  // 12\n  return (\n    <StyledCard isSecondCard={isSecondCard}>\n      <CardBody>\n        <CardHeader>\n          <IconWrapper>\n            <img alt=\"\" src=\"../images/icon-lottery.svg\"/>\n          </IconWrapper>\n          {lotteryHasDrawn ? (\n            <TicketCountWrapper>\n              <Text fontSize=\"20px\" color=\"textSubtle\">\n                {TranslateString(870, 'Your tickets for this round')}\n              </Text>\n              <Heading size=\"lg\" style={{color: '#F3C111', fontSize: '30px'}}>{timeUntilTicketSale}</Heading>\n            </TicketCountWrapper>\n          ) : (\n            <TicketCountWrapper>\n              <Text fontSize=\"14px\" color=\"textSubtle\">\n                {TranslateString(724, 'Your tickets for this round')}\n              </Text>\n              <Heading size=\"lg\">{ticketsLength}</Heading>\n            </TicketCountWrapper>\n          )}\n        </CardHeader>\n        <TicketActions />\n      </CardBody>\n    </StyledCard>\n  )\n}\n\nexport default TicketCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Heading, Link, Image } from '@luckyswap/uikit'\nimport useI18n from 'hooks/useI18n'\n\nconst LayoutWrapper = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 1200px;\n  margin-bottom: 30px;\n  margin: 0 auto 40px;\n  display: flex;\n  flex-direction: column;\n  border-radius: 14px;\n  padding: 20px;\n  background-color: #2b2a2a;\n  text-align: center;\n`\n\nconst StyledHeading = styled(Heading)`\n  margin: 16px 0;\n`\n\nconst StyledImage = styled(Image)`\n  align-self: center;\n`\n\nconst StyledLink = styled(Link)`\n  align-self: center;\n  margin-top: 16px;\n  border: 1px solid #F3C111;\n  background-color: transparent;\n  color: #F3C111;\n  padding: 10px 20px;\n  border-radius: 14px;\n\n  &:hover {\n    color: #ecf023;\n  }\n`\n\nconst HowItWorks = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <LayoutWrapper>\n      <StyledHeading size=\"lg\" as=\"h3\" color=\"rgb(243, 193, 17)\">\n        {TranslateString(632, 'How it works')}\n      </StyledHeading>\n      <Text fontSize=\"16px\">\n        Spend LUCKY to buy tickets, contributing to the lottery pot.<br/> Win prizes if 2, 3, or 4 of your ticket numbers match the winning numbers and their exact order!\n      </Text>\n      <StyledLink href=\"https://docs.luckyswap.io\">{TranslateString(610, 'Read more')}</StyledLink>\n    </LayoutWrapper>\n  )\n}\nexport default HowItWorks\n","export type DataResponse = {\n  lotteryNumber: number\n  lotteryDate: string\n  lotteryNumbers: number[]\n  poolSize: number\n  burned: number\n  contractLink: string\n  jackpotTicket: number\n  match1Ticket: number | null\n  match2Ticket: number\n  match3Ticket: number\n  match4Ticket: number\n  poolJackpot: number\n  poolMatch3: number\n  poolMatch2: number\n  poolMatch1: number | null\n\n  // TODO: Fill in the error type\n  error: any\n}\n\n/**\n * Get data for a specific lottery\n */\nconst getLotteryRoundData = async (lotteryNumber: number): Promise<DataResponse> => {\n  try {\n    const response = await fetch(`https://api.pancakeswap.com/api/singleLottery?lotteryNumber=${lotteryNumber || 0}`)\n    const data = await response.json()\n\n    return data\n  } catch (error) {\n    throw new Error(error)\n  }\n}\n\nexport default getLotteryRoundData\n","import { useContext, useEffect, useState } from 'react'\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\nimport getLotteryRoundData, { DataResponse } from 'utils/getLotteryRoundData'\n\ntype GetRecentLotteryRoundDataReturn = {\n  isLoading: boolean\n  data: DataResponse\n  mostRecentLotteryNumber: number\n  error: any\n}\n\nconst useGetRecentLotteryRoundData = (): GetRecentLotteryRoundDataReturn => {\n  const [isLoading, setIsLoading] = useState(true)\n  const [data, setData] = useState(null)\n  const [error, setError] = useState(null)\n  const { mostRecentLotteryNumber } = useContext(PastLotteryDataContext)\n\n  useEffect(() => {\n    const fetchRecentLotteryData = async () => {\n      try {\n        setIsLoading(true)\n\n        const roundData = await getLotteryRoundData(mostRecentLotteryNumber)\n        setData(roundData)\n      } catch (err) {\n        setError(err)\n      } finally {\n        setIsLoading(false)\n      }\n    }\n    // if (mostRecentLotteryNumber > 0) {\n    //   fetchRecentLotteryData()\n    // }\n    fetchRecentLotteryData()\n  }, [mostRecentLotteryNumber, setData, setIsLoading, setError])\n\n  return { isLoading, data, mostRecentLotteryNumber, error }\n}\n\nexport default useGetRecentLotteryRoundData\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Text, Input, Button } from '@luckyswap/uikit'\nimport useI18n from 'hooks/useI18n'\n\ninterface PastLotterySearcherProps {\n  initialLotteryNumber: number\n  onSubmit: (num: number) => void\n}\n\nconst Wrapper = styled.div`\n  margin-bottom: 24px;\n`\n\nconst SearchWrapper = styled.div`\n  position: relative;\n`\nconst InputWrapper = styled.div`\n  input::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n\n  /* Firefox */\n  input[type='number'] {\n    -moz-appearance: textfield;\n  }\n`\n\nconst ButtonWrapper = styled.div`\n  position: absolute;\n  right: 8px;\n  top: 50%;\n  transform: translate(0%, -50%);\n  width: auto;\n`\n\nconst PastLotterySearcher: React.FC<PastLotterySearcherProps> = ({ initialLotteryNumber, onSubmit }) => {\n  const [lotteryNumber, setLotteryNumber] = useState(initialLotteryNumber)\n  const [isError, setIsError] = useState(false)\n  const TranslateString = useI18n()\n\n  const handleSubmit = (evt: React.FormEvent<HTMLFormElement>) => {\n    evt.preventDefault()\n    onSubmit(0)\n  }\n\n  const handleChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\n    const value = parseInt(evt.currentTarget.value, 10)\n\n    // The max value will always be the initialLotteryNumber which equals\n    // the latest lottery round\n    setIsError(value > initialLotteryNumber)\n    setLotteryNumber(value)\n  }\n\n  return (\n    <Wrapper>\n      <Text>{TranslateString(742, 'Select lottery number:')}</Text>\n      <form onSubmit={handleSubmit}>\n        <SearchWrapper>\n          <InputWrapper>\n            <Input\n              value={lotteryNumber}\n              type=\"number\"\n              isWarning={isError}\n              max={initialLotteryNumber}\n              onChange={handleChange}\n            />\n          </InputWrapper>\n          <ButtonWrapper>\n            <Button variant=\"secondary\" type=\"submit\" scale=\"sm\" disabled={isError}>\n              {TranslateString(744, 'Search')}\n            </Button>\n          </ButtonWrapper>\n        </SearchWrapper>\n      </form>\n    </Wrapper>\n  )\n}\n\nexport default PastLotterySearcher\n","import React from 'react'\nimport { Text } from '@luckyswap/uikit'\n\ninterface PastRoundCardErrorProps {\n  error: {\n    message: string\n  }\n}\n\nconst PastRoundCardError: React.FC<PastRoundCardErrorProps> = ({ error }) => {\n  return <Text p=\"24px\">{error.message}</Text>\n}\n\nexport default PastRoundCardError\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Heading, Text } from '@luckyswap/uikit'\n\ninterface HeadingProps {\n  valueToDisplay?: string\n  children?: string\n  Icon?: React.ComponentType\n}\n\nconst IconWrapper = styled.div`\n  margin-right: 16px;\n  \n  svg {\n    width: 48px;\n    height: 48px;\n  }\n`\n\nconst LotteryCardHeading: React.FC<HeadingProps> = ({ valueToDisplay, children, Icon, ...props }) => {\n  return (\n    <Flex {...props}>\n      {Icon && (\n        <IconWrapper>\n          <Icon />\n        </IconWrapper>\n      )}\n      <Flex className=\"box-lucky\" flexDirection=\"column\">\n        <Text fontSize=\"16px\" color=\"textSubtle\">\n          {children}\n        </Text>\n        <Heading size=\"lg\">{valueToDisplay}</Heading>\n      </Flex>\n    </Flex>\n  )\n}\n\nLotteryCardHeading.defaultProps = {\n  valueToDisplay: '',\n  Icon: () => <div />,\n  children: '',\n}\n\nexport default LotteryCardHeading\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button, LinkExternal, useModal } from '@luckyswap/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { useWeb3React } from '@web3-react/core'\nimport useTickets from 'hooks/useTickets'\nimport UnlockButton from 'components/UnlockButton'\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\n\nconst Wrapper = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  padding-top: 24px;\n\n  & > div {\n    flex: 1;\n    width: 100%;\n  }\n`\n\nconst ExternalLinkWrap = styled(LinkExternal)`\n  align-items: center;\n  display: flex;\n  height: 48px;\n  justify-content: center;\n  text-decoration: none;\n  width: 100%;\n`\n\nconst TicketCard: React.FC<{ contractLink?: string; lotteryNumber?: number }> = ({ contractLink, lotteryNumber }) => {\n  const TranslateString = useI18n()\n  const tickets = useTickets(lotteryNumber)\n  const ticketsLength = tickets.length\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\n  const { account } = useWeb3React()\n\n  if (!account) {\n    return (\n      <Wrapper>\n        <UnlockButton />\n      </Wrapper>\n    )\n  }\n\n  return (\n    <Wrapper>\n      <div>\n        <Button disabled={ticketsLength === 0} onClick={onPresentMyTickets} width=\"100%\">\n          {TranslateString(432, 'View your tickets')}\n        </Button>\n      </div>\n      <div>\n        <ExternalLinkWrap href={contractLink}>{TranslateString(356, 'View on BscScan')}</ExternalLinkWrap>\n      </div>\n    </Wrapper>\n  )\n}\n\nexport default TicketCard\n","const formatLotteryDate = (lotteryDate: string) => {\n  if (!lotteryDate) {\n    return {}\n  }\n\n  const date = new Date(lotteryDate)\n\n  const dateString = date.toDateString()\n  const hours = date.getUTCHours()\n  const monthAndDay = dateString.split(' ').splice(1, 2).join(' ')\n\n  return { hours, monthAndDay }\n}\n\nexport default formatLotteryDate\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text } from '@luckyswap/uikit'\nimport formatLotteryDate from '../helpers/formatLotteryDate'\n\nconst Wrapper = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n`\n\nconst Timestamp = ({ timeValue }) => {\n  const { monthAndDay, hours } = formatLotteryDate(timeValue)\n\n  return (\n    <Wrapper>\n      <Text fontSize=\"14px\">\n        {monthAndDay}, {hours}:00 UTC\n      </Text>\n    </Wrapper>\n  )\n}\n\nexport default Timestamp\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, CardBody, CardFooter, PancakeRoundIcon, TicketRound } from '@luckyswap/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { DataResponse } from 'utils/getLotteryRoundData'\nimport LotteryCardHeading from '../LotteryCardHeading'\nimport PastLotteryActions from './PastLotteryActions'\nimport PrizeGrid from '../PrizeGrid'\nimport Timestamp from '../Timestamp'\n\ninterface PastRoundCardDetailsProps {\n  data: DataResponse\n}\n\nconst CardHeading = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`\n\nconst TopLotteryCardHeading = styled(LotteryCardHeading)`\n  margin-bottom: ${(props) => props.theme.spacing[4]}px;\n`\n\nconst BoxCard = styled.div`\n  padding: 10px;\n`\n\nconst Dflex = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  align-items: center;\n`\n\nconst PastRoundCardDetails: React.FC<PastRoundCardDetailsProps> = ({ data }) => {\n  const TranslateString = useI18n()\n\n  const {\n    contractLink,\n    jackpotTicket,\n    lotteryDate,\n    lotteryNumber,\n    lotteryNumbers,\n    match1Ticket,\n    match2Ticket,\n    match3Ticket,\n    poolSize,\n  } = data\n\n  return (\n    !data.error &&\n    data && (\n      <>\n        <CardBody>\n          <CardHeading>\n            <Timestamp timeValue={lotteryDate} />\n            <Heading size=\"md\" mb=\"24px\">\n              Round #{lotteryNumber}\n            </Heading>\n            <TopLotteryCardHeading\n              valueToDisplay={`${lotteryNumbers[0]}, ${lotteryNumbers[1]}, ${lotteryNumbers[2]}, ${lotteryNumbers[3]}`}\n              // Icon={TicketRound}\n            >\n              {TranslateString(999, 'Winning numbers')}\n            </TopLotteryCardHeading>\n            <Dflex>\n              <img src=\"../images/icon-logo-y.png\" alt=\"\"/>\n              <LotteryCardHeading\n                valueToDisplay={TranslateString(999, `${poolSize.toLocaleString()}`)}\n              >\n                {TranslateString(999, 'Total prizes')}\n              </LotteryCardHeading>\n            </Dflex>\n          </CardHeading>\n        </CardBody>\n        <BoxCard>\n          <CardFooter className=\"no-border\">\n            <PrizeGrid\n              lotteryPrizeAmount={poolSize}\n              jackpotMatches={jackpotTicket}\n              oneTicketMatches={match1Ticket}\n              twoTicketMatches={match2Ticket}\n              threeTicketMatches={match3Ticket}\n              pastDraw\n            />\n            <PastLotteryActions contractLink={contractLink} lotteryNumber={lotteryNumber} />\n          </CardFooter>\n        </BoxCard>\n      </>\n    )\n  )\n}\n\nexport default PastRoundCardDetails\n","import React from 'react'\nimport styled from 'styled-components'\n// import { Card } from '@luckyswap/uikit'\nimport { DataResponse } from 'utils/getLotteryRoundData'\nimport PastRoundCardError from './PastRoundCardError'\nimport PastRoundCardDetails from './PastRoundCardDetails'\n\ninterface PastRoundCardProps {\n  error: {\n    message: string\n  }\n  data: DataResponse\n}\n\nconst PastRoundCard: React.FC<PastRoundCardProps> = ({ error, data }) => {\n  return <FullWidth>{error.message ? <PastRoundCardError error={error} /> : <PastRoundCardDetails data={data} />}</FullWidth>\n}\n\nconst FullWidth = styled.div`\n  width: 100%;\n  background: linear-gradient(45deg,rgb(35 35 35) 30%,rgb(45 45 45) 100%);\n  box-shadow: none;\n  display: grid;\n  grid-template-columns: 1fr;\n  margin-bottom: 20px;\n  border-radius: 14px;\n\n  @media (min-width: 991px) {\n    grid-template-columns: 1fr 1fr;\n    margin-bottom: 30px;\n  }\n`\n\nexport default PastRoundCard\n","import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { Card, CardBody } from '@luckyswap/uikit'\nimport getLotteryRoundData from 'utils/getLotteryRoundData'\nimport useI18n from 'hooks/useI18n'\nimport useGetRecentLotteryRoundData from 'hooks/useGetRecentLotteryRoundData'\nimport PastLotterySearcher from './PastLotterySearcher'\nimport PastRoundCard from './PastRoundCard'\nimport Loading from '../Loading'\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst StyledCardBody = styled(CardBody)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 552px; // height of final card\n`\n\nconst PastLotteryRoundViewer = () => {\n  const [state, setState] = useState({\n    roundData: null,\n    error: { message: null, type: null },\n    isInitialized: false,\n    isLoading: true,\n  })\n  const { data: initialLotteryData, mostRecentLotteryNumber } = useGetRecentLotteryRoundData()\n  const TranslateString = useI18n()\n  const { roundData, error, isInitialized, isLoading } = state\n\n  useEffect(() => {\n    if (initialLotteryData) {\n      setState((prevState) => ({ ...prevState, isLoading: false, isInitialized: true, roundData: initialLotteryData }))\n    }\n  }, [initialLotteryData, setState])\n\n  const handleSubmit = async (lotteryNumber: number) => {\n    setState((prevState) => ({\n      ...prevState,\n      isLoading: true,\n    }))\n\n    getLotteryRoundData(lotteryNumber)\n      .then((data) => {\n        if (data.error) {\n          setState((prevState) => ({\n            ...prevState,\n            error: {\n              message: TranslateString(1076, 'The lottery number you provided does not exist'),\n              type: 'out of range',\n            },\n            isLoading: false,\n            isInitialized: true,\n          }))\n        } else {\n          setState((prevState) => ({\n            ...prevState,\n            error: { message: null, type: null },\n            roundData: data,\n            isLoading: false,\n            isInitialized: true,\n          }))\n        }\n      })\n      .catch(() => {\n        setState((prevState) => ({\n          ...prevState,\n          error: { message: TranslateString(1078, 'Error fetching data'), type: 'api' },\n          isLoading: false,\n          isInitialized: true,\n        }))\n      })\n  }\n\n  return (\n    <Wrapper>\n      <PastLotterySearcher initialLotteryNumber={mostRecentLotteryNumber} onSubmit={handleSubmit} />\n      {!isInitialized || isLoading ? (\n        <Card>\n          <StyledCardBody>\n            <Loading />\n          </StyledCardBody>\n        </Card>\n      ) : (\n        <PastRoundCard error={error} data={roundData} />\n      )}\n    </Wrapper>\n  )\n}\n\nexport default PastLotteryRoundViewer\n","import React, { lazy, Suspense, useContext } from 'react'\nimport styled from 'styled-components'\nimport { Text } from '@luckyswap/uikit'\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\nimport Loading from '../Loading'\n\nconst Line = lazy(() => import('./LineChartWrapper'))\n\nconst InnerWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n\nconst HistoryChart: React.FC = () => {\n  const { historyData, historyError } = useContext(PastLotteryDataContext)\n  const getDataArray = (kind) => {\n    return historyData\n      .map((dataPoint) => {\n        return dataPoint[kind]\n      })\n      .reverse()\n  }\n\n  const lineStyles = ({ color }) => {\n    return {\n      borderColor: color,\n      fill: false,\n      borderWidth: 2,\n      pointRadius: 0,\n      pointHitRadius: 10,\n    }\n  }\n\n  const chartData = {\n    labels: getDataArray('lotteryNumber'),\n    datasets: [\n      {\n        label: 'Pool Size',\n        data: getDataArray('poolSize'),\n        yAxisID: 'y-axis-pool',\n        ...lineStyles({ color: '#8F80BA' }),\n      },\n      {\n        label: 'Burned',\n        data: getDataArray('burned'),\n        yAxisID: 'y-axis-burned',\n        ...lineStyles({ color: '#2b2c3a' }),\n      },\n    ],\n  }\n\n  const axesStyles = ({ color, lineHeight }) => {\n    return {\n      borderCapStyle: 'round',\n      gridLines: { display: false },\n      ticks: {\n        fontFamily: 'Kanit, sans-serif',\n        fontColor: color,\n        fontSize: 14,\n        lineHeight,\n        maxRotation: 0,\n        beginAtZero: true,\n        autoSkipPadding: 15,\n        userCallback: (value) => {\n          return value.toLocaleString()\n        },\n      },\n    }\n  }\n\n  const options = {\n    legend: { display: false },\n    scales: {\n      yAxes: [\n        {\n          type: 'linear',\n          display: true,\n          position: 'left',\n          id: 'y-axis-pool',\n          ...axesStyles({ color: '#8f80ba', lineHeight: 1.6 }),\n        },\n        {\n          type: 'linear',\n          display: true,\n          position: 'right',\n          id: 'y-axis-burned',\n          ...axesStyles({ color: '#2b2c3a', lineHeight: 1.5 }),\n        },\n      ],\n      xAxes: [\n        {\n          ...axesStyles({ color: '#2b2c3a', lineHeight: 1 }),\n        },\n      ],\n    },\n  }\n\n  return (\n    <>\n      {historyError && (\n        <InnerWrapper>\n          <Text>Error fetching data</Text>\n        </InnerWrapper>\n      )}\n      {!historyError && historyData.length > 0 ? (\n        <Suspense fallback={<div>Loading...</div>}>\n          <Line data={chartData} options={options} type=\"line\" />\n        </Suspense>\n      ) : (\n        <InnerWrapper>\n          <Loading />\n        </InnerWrapper>\n      )}\n    </>\n  )\n}\n\nexport default HistoryChart\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text } from '@luckyswap/uikit'\nimport useI18n from 'hooks/useI18n'\n\nconst Wrapper = styled.div`\n  display: flex;\n  margin: 36px 0 28px;\n`\n\nconst LegendItem = styled.div`\n  display: flex;\n  margin-right: 18px;\n  align-items: center;\n`\n\nconst Circle = styled.div<{ isPoolSize?: boolean }>`\n  width: 20px;\n  height: 20px;\n  border-radius: 10px;\n  background-color: ${({ isPoolSize, theme }) => theme.colors[isPoolSize ? 'textSubtle' : 'primary']};\n  margin-right: 6px;\n`\n\nconst Legend = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <Wrapper>\n      <LegendItem>\n        <Circle isPoolSize />\n        <Text>{TranslateString(748, 'Pool Size')}</Text>\n      </LegendItem>\n      <LegendItem>\n        <Circle />\n        <Text>{TranslateString(750, 'Burned')}</Text>\n      </LegendItem>\n    </Wrapper>\n  )\n}\n\nexport default Legend\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Card, CardBody } from '@luckyswap/uikit'\nimport useI18n from 'hooks/useI18n'\nimport HistoryChart from './HistoryChart'\nimport Legend from './Legend'\n\nconst PastDrawsHistoryCard: React.FC = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <FullWidth>\n      <CardBody>\n        <Heading size=\"md\">{TranslateString(746, 'History')}</Heading>\n        <Legend />\n        <HistoryChart />\n      </CardBody>\n    </FullWidth>\n  )\n}\n\n\nconst FullWidth = styled(Card)`\n  max-width: 100%;\n  background: linear-gradient(45deg,rgb(35 35 35) 30%,rgb(45 45 45) 100%);\n  box-shadow: none;\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  margin-bottom: 60px;\n  border-radius: 14px;\n`\n\nexport default PastDrawsHistoryCard\n","import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { ButtonMenu, ButtonMenuItem } from '@luckyswap/uikit'\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\nimport { getLotteryIssueIndex } from 'utils/lotteryUtils'\nimport useI18n from 'hooks/useI18n'\nimport Page from 'components/layout/Page'\nimport { useLottery, useContract } from 'hooks/useContract'\nimport { getLotteryAddress } from 'utils/addressHelpers'\nimport lotteryAbi from 'config/abi/lottery.json'\n\nimport { useWeb3React } from '@web3-react/core'\nimport { useTotalClaim } from 'hooks/useTickets'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport Hero from './components/Hero'\nimport WinningNumbers from './components/WinningNumbers'\nimport TotalPrizesCard from './components/TotalPrizesCard'\nimport YourPrizesCard from './components/YourPrizesCard'\nimport UnlockWalletCard from './components/UnlockWalletCard'\nimport TicketCard from './components/TicketCard'\nimport HowItWorks from './components/HowItWorks'\nimport PastLotteryRoundViewer from './components/PastLotteryRoundViewer'\n// import { BaseLayout } from '@luckyswap/uikit'\nimport PastDrawsHistoryCard from './components/PastDrawsHistory/PastDrawsHistoryCard'\nimport Divider from './components/Divider'\nimport NextDrawPage from './NextDrawPage'\nimport PastDrawsPage from './PastDrawsPage'\n\nconst Wrapper = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 32px;\n`\n\n\nconst SecondCardColumnWrapper = styled.div<{ isAWin?: boolean }>`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-gap: 40px;\n  margin-bottom: 30px;\n\n  @media (min-width: 991px) {\n    grid-template-columns: 1fr 1fr;\n  }\n`\n\nconst Dflex = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 40px;\n    margin-left: auto;\n    margin-right: auto;\n    max-width: 1200px;\n    margin-bottom: 30px;\n`\n\nconst Lottery: React.FC = () => {\n  const lotteryContract = useContract(getLotteryAddress(), lotteryAbi)\n\n  const TranslateString = useI18n()\n  const [activeIndex, setActiveIndex] = useState(0)\n  const [historyData, setHistoryData] = useState([])\n  const [historyError, setHistoryError] = useState(false)\n  const [currentLotteryNumber, setCurrentLotteryNumber] = useState(0)\n  const [mostRecentLotteryNumber, setMostRecentLotteryNumber] = useState(1)\n\n  const { account } = useWeb3React()\n  const { claimAmount } = useTotalClaim()\n  const winnings = getBalanceNumber(claimAmount)\n  const isAWin = winnings > 0\n\n  useEffect(() => {\n    fetch(`https://api.pancakeswap.com/api/lotteryHistory`)\n      .then((response) => response.json())\n      .then((data) => setHistoryData(data))\n      .catch(() => {\n        setHistoryError(true)\n      })\n  }, [])\n\n  useEffect(() => {\n    const getInitialLotteryIndex = async () => {\n      const index = await getLotteryIssueIndex(lotteryContract)\n      const previousLotteryNumber = index - 1\n\n      setCurrentLotteryNumber(index)\n      setMostRecentLotteryNumber(previousLotteryNumber)\n    }\n\n    if (lotteryContract) {\n      getInitialLotteryIndex()\n    }\n  }, [lotteryContract])\n\n  const handleClick = (index) => {\n    setActiveIndex(index)\n  }\n\n\n  return (\n    <>      \n      <Page>\n        <Hero/>\n        <TotalPrizesCard />\n        <SecondCardColumnWrapper isAWin={isAWin}>\n          {!account ? (\n            <UnlockWalletCard />\n          ) : (\n            <>\n              <TicketCard isSecondCard={isAWin} />\n              <YourPrizesCard />\n            </>\n          )}\n        </SecondCardColumnWrapper>\n        <WinningNumbers />\n        <HowItWorks />\n        <PastLotteryRoundViewer />\n        <PastDrawsHistoryCard />\n        \n        {/* <Wrapper>\n          <ButtonMenu activeIndex={activeIndex} onItemClick={handleClick} scale=\"sm\" variant=\"subtle\">\n            <ButtonMenuItem>{TranslateString(716, 'Next draw')}</ButtonMenuItem>\n            <ButtonMenuItem>{TranslateString(718, 'Past draws')}</ButtonMenuItem>\n          </ButtonMenu>\n        </Wrapper>\n        <Divider />\n        <PastLotteryDataContext.Provider\n          value={{ historyError, historyData, mostRecentLotteryNumber, currentLotteryNumber }}\n        >\n          {activeIndex === 0 ? <NextDrawPage /> : <PastDrawsPage />}\n        </PastLotteryDataContext.Provider> */}\n      </Page>\n    </>\n  )\n}\n\nexport default Lottery\n"],"sourceRoot":""}
{"version":3,"sources":["components/UnlockButton.tsx","utils/callHelpers.ts","components/Spacer/Spacer.tsx","components/ModalActions/ModalActions.tsx","components/ExpandableSectionButton/ExpandableSectionButton.tsx","hooks/useApprove.ts","contexts/PastLotteryDataContext.tsx","hooks/useGetLotteryHasDrawn.ts","hooks/useTimer.ts","views/Lottery/helpers/CountdownHelpers.ts","views/Lottery/components/LotteryProgress.tsx","views/Lottery/components/Hero.tsx","views/Lottery/components/Divider.tsx","utils/lotteryUtils.ts","hooks/useTickets.ts","views/Lottery/components/Loading.tsx","views/Lottery/components/TicketCard/UserTicketsModal.tsx","views/Lottery/components/YourPrizesCard/PrizesWonContent.tsx","hooks/useBuyLottery.ts","views/Lottery/components/YourPrizesCard/NoPrizesContent.tsx","views/Lottery/components/YourPrizesCard/index.tsx","views/Lottery/components/UnlockWalletCard.tsx","hooks/useApproval.ts","components/TicketInput/TicketInput.tsx","views/Lottery/components/TicketCard/BuyTicketModal.tsx","views/Lottery/components/TicketCard/PurchaseWarningModal.tsx","views/Lottery/components/TicketCard/TicketActions.tsx","views/Lottery/components/TicketCard/index.tsx","views/Home/components/CardBusdValue.tsx","views/Lottery/components/PrizeGrid.tsx","views/Lottery/components/TotalPrizesCard/index.tsx","views/Lottery/components/WinningNumbers.tsx","views/Lottery/components/HowItWorks.tsx","views/Lottery/NextDrawPage.tsx","utils/getLotteryRoundData.ts","hooks/useGetRecentLotteryRoundData.ts","views/Lottery/components/PastLotteryRoundViewer/PastLotterySearcher.tsx","views/Lottery/components/PastLotteryRoundViewer/PastRoundCardError.tsx","views/Lottery/components/LotteryCardHeading.tsx","views/Lottery/components/PastLotteryRoundViewer/PastLotteryActions.tsx","views/Lottery/helpers/formatLotteryDate.ts","views/Lottery/components/Timestamp.tsx","views/Lottery/components/PastLotteryRoundViewer/PastRoundCardDetails.tsx","views/Lottery/components/PastLotteryRoundViewer/PastRoundCard.tsx","views/Lottery/components/PastLotteryRoundViewer/index.tsx","views/Lottery/components/PastDrawsHistory/HistoryChart.tsx","views/Lottery/components/PastDrawsHistory/Legend.tsx","views/Lottery/components/PastDrawsHistory/PastDrawsHistoryCard.tsx","views/Lottery/PastDrawsPage.tsx","views/Lottery/Lottery.tsx"],"names":["UnlockButton","props","TranslateString","useI18n","useAuth","login","logout","onPresentConnectModal","useWalletModal","className","onClick","approve","lpContract","masterChefContract","account","a","methods","options","address","ethers","constants","MaxUint256","send","from","stake","pid","amount","enterStaking","BigNumber","times","pow","toString","gas","on","tx","transactionHash","deposit","sousStake","sousChefContract","decimals","sousStakeBnb","value","unstake","leaveStaking","withdraw","sousUnstake","emergencyWithdraw","sousEmergencyUnstake","harvest","soushHarvest","soushHarvestBnb","StyledSpacer","styled","div","size","Spacer","s","spacing","useContext","ThemeContext","StyledModalActions","theme","colors","primaryDark","StyledModalAction","ModalActions","children","l","React","Children","toArray","length","map","child","i","Wrapper","primary","ExpandableSectionButton","expanded","aria-label","role","color","bold","defaultProps","useApprove","dispatch","useAppDispatch","useWeb3React","useMasterchef","onApprove","useCallback","fetchFarmUserDataAsync","useLotteryApprove","cakeContract","useCake","lotteryContract","useLottery","createContext","mostRecentLotteryNumber","historyError","historyData","useGetLotteryHasDrawn","useState","lotteryHasDrawn","setLotteryHasDrawn","useEffect","fetchLotteryStatus","useCurrentTime","Date","getTime","currentMillis","setCurrentMillis","timerID","setInterval","prevMillis","clearInterval","lotteryDrawHoursUtc","getNextLotteryDrawTime","millisTimeOfNextDraw","date","currentHour","getUTCHours","nextLotteryHour","getClosestLotteryHour","tomorrow","nextDay","getUTCDate","setUTCDate","setUTCHours","hoursAndMinutesString","hours","minutes","parseInt","getTicketSaleTime","msUntilNextTicketSale","getNextTicketSaleTime","getTimePeriods","getLotteryDrawStep","ProgressWrapper","TopTextWrapper","BottomTextWrapper","StyledPrimaryText","Text","LotteryProgress","timeUntilTicketSale","timeUntilLotteryDraw","msUntilLotteryDraw","getLotteryDrawTime","primaryStep","secondaryStep","showProgressBunny","fontSize","Title","Heading","attrs","as","secondary","Blurb","StyledHero","StyledContainer","Container","mediaQueries","sm","LeftWrapper","lg","RightWrapper","Hero","textSubtle","multiCall","abi","calls","web3","getWeb3NoAccount","multi","eth","Contract","MultiCallAbi","getMulticallAddress","itf","Interface","res","newCalls","slice","calldata","call","toLowerCase","encodeFunctionData","aggregate","returnData","concat","index","decodeFunctionResult","multiBuy","price","numbersList","console","error","getTickets","ticketsContract","customLotteryNum","issueIndex","getTicketsAmount","calls1","Array","apply","ticketAbi","tokenIds","id","calls2","ticketIssues","finalTokenids","forEach","ticketIssue","eq","push","calls3","tickets","balanceOf","multiClaim","claimedStatus","unClaimedIds","filter","lotteryAbi","rewards","finalTokenIds","r","getTotalClaim","getLotteryStatus","drawed","calls4","claim","reduce","p","c","sum","getMax","maxNumber","getMatchingRewardLength","matchNumber","useTotalClaim","claimAmount","setClaimAmount","claimLoading","setClaimLoading","undefined","fetchBalance","useWinningNumbers","winningNumbers","setWinningNumbers","fastRefresh","useRefresh","useMatchingRewardLength","numbers","matchingNumbers","setMatchingNumbers","matchedNumbaers","useTickets","lotteryNumber","setTickets","StyledLoading","Loading","RewardP","TicketsList","StyledButton","Button","UserTicketsModal","myTicketNumbers","onDismiss","winNumbers","rewardMatch","number","n","listItems","emoji","join","title","TICKETS","variant","WinningsWrapper","IconWrapper","StyledCardActions","StyledCardContentInner","PrizesWonContent","requestedClaim","setRequestedClaim","onMultiClaim","lotteryTicketContract","txHash","useMultiClaimLottery","useModal","onPresentMyTickets","handleClaim","winnings","getBalanceNumber","toFixed","style","marginRight","width","disabled","TextWrapper","StyledText","Image","img","md","NoPrizesContent","src","alt","StyledCard","Card","isDisabled","textDisabled","YourPrizesCard","isAWin","isActive","StyledCardBody","CardBody","StyledHeading","UnlockWalletCard","useApproval","onPresentApprove","requestedApproval","setRequestedApproval","handleApprove","StyledTokenInput","StyledTokenAdornmentWrapper","StyledMaxText","StyledTokenSymbol","span","TicketInput","max","symbol","availableSymbol","onChange","onSelectMax","alignItems","placeholder","toLocaleString","BuyTicketModal","val","setVal","pendingTx","setPendingTx","setRequestedBuy","fullBalance","useMemo","getFullDisplayBalance","maxTickets","LOTTERY_TICKET_PRICE","onMultiBuy","useMultiBuyLottery","setMax","fetchMax","useMaxNumber","handleBuy","Math","floor","random","handleSelectMax","Number","LOTTERY_MAX_NUMBER_OF_TICKETS","e","currentTarget","Tips","num","Announce","Final","WarningModal","CardActions","TicketCard","allowance","cakeBalance","ticketsLength","PurchaseWarningModal","tokenName","onPresentBuy","toNumber","isSecondCard","CardHeader","TicketCountWrapper","TicketActions","CardBusdValue","CardValue","lineHeight","prefix","Grid","pastDraw","RightAlignedText","RightAlignedHeading","GridItem","marginBottom","PastDrawGridItem","PrizeGrid","lotteryPrizeAmount","jackpotMatches","twoTicketMatches","threeTicketMatches","fourMatchesAmount","threeMatchesAmount","twoMatchesAmount","burnAmount","cakeBusdPrice","usePriceCakeBusd","getCakeBusdValue","multipliedBy","CardHeading","Right","Left","PrizeCountWrapper","ExpandingWrapper","showFooter","TotalPrizesCard","setShowFooter","setRewards","useTotalRewards","lotteryPrizeAmountBusd","lotteryPrizeWithCommaSeparators","currentLotteryNumber","PastLotteryDataContext","mb","justifyContent","height","fontWeight","Link","Row","RabbitRow","RabbitRowSmall","CardImage","CardImageFirst","RowNoPadding","Column","CenteredText","CenteredTextWithPadding","TicketNumberBox","RabbitBox","RabbitBoxSmall","StyledCardHeader","CardWrapper","WinningNumbers","MatchedNumber4","MatchedNumber3","MatchedNumber2","responsive","marginLeft","href","target","LayoutWrapper","StyledImage","StyledLink","HowItWorks","Cards","BaseLayout","SecondCardColumnWrapper","NextDrawPage","getLotteryRoundData","fetch","response","json","data","Error","useGetRecentLotteryRoundData","isLoading","setIsLoading","setData","setError","roundData","fetchRecentLotteryData","SearchWrapper","InputWrapper","ButtonWrapper","PastLotterySearcher","initialLotteryNumber","onSubmit","setLotteryNumber","isError","setIsError","evt","preventDefault","type","isWarning","scale","PastRoundCardError","message","LotteryCardHeading","valueToDisplay","Icon","flexDirection","ExternalLinkWrap","LinkExternal","contractLink","formatLotteryDate","lotteryDate","dateString","toDateString","monthAndDay","split","splice","Timestamp","timeValue","TopLotteryCardHeading","PastRoundCardDetails","jackpotTicket","lotteryNumbers","match1Ticket","match2Ticket","match3Ticket","poolSize","TicketRound","PancakeRoundIcon","oneTicketMatches","PastLotteryActions","PastRoundCard","PastLotteryRoundViewer","isInitialized","state","setState","initialLotteryData","prevState","handleSubmit","then","catch","Line","lazy","InnerWrapper","HistoryChart","getDataArray","kind","dataPoint","reverse","lineStyles","borderColor","fill","borderWidth","pointRadius","pointHitRadius","chartData","labels","datasets","label","yAxisID","axesStyles","borderCapStyle","gridLines","display","ticks","fontFamily","fontColor","maxRotation","beginAtZero","autoSkipPadding","userCallback","legend","scales","yAxes","position","xAxes","fallback","LegendItem","Circle","isPoolSize","Legend","PastDrawsHistoryCard","BunnyImageWrapper","PastDrawsPage","Lottery","activeIndex","setActiveIndex","setHistoryData","setHistoryError","setCurrentLotteryNumber","setMostRecentLotteryNumber","getInitialLotteryIndex","Page","onItemClick","Divider","Provider"],"mappings":"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","file":"static/js/13.1054b75a.chunk.js","sourcesContent":["import React from 'react'\nimport { Button, useWalletModal } from '@luckyswap/uikit'\nimport useAuth from 'hooks/useAuth'\nimport useI18n from 'hooks/useI18n'\n\nconst UnlockButton = (props) => {\n  const TranslateString = useI18n()\n  const { login, logout } = useAuth()\n  const { onPresentConnectModal } = useWalletModal(login, logout)\n\n  return (\n    <div className=\"custom-btn\">\n      <Button onClick={onPresentConnectModal} {...props}>\n        {TranslateString(292, 'Unlock Wallet')}\n      </Button>\n    </div>\n  )\n}\n\nexport default UnlockButton\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\n\nexport const approve = async (lpContract, masterChefContract, account) => {\n  return lpContract.methods\n    .approve(masterChefContract.options.address, ethers.constants.MaxUint256)\n    .send({ from: account })\n}\n\nexport const stake = async (masterChefContract, pid, amount, account) => {\n  if (pid === 0) {\n    return masterChefContract.methods\n      .enterStaking(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n      .send({ from: account, gas: 200000 })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n\n  return masterChefContract.methods\n    .deposit(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account, gas: 200000 })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousStake = async (sousChefContract, amount, decimals = 18, account) => {\n  return sousChefContract.methods\n    .deposit(new BigNumber(amount).times(new BigNumber(10).pow(decimals)).toString())\n    .send({ from: account, gas: 200000 })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousStakeBnb = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods\n    .deposit()\n    .send({ from: account, gas: 200000, value: new BigNumber(amount).times(new BigNumber(10).pow(18)).toString() })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const unstake = async (masterChefContract, pid, amount, account) => {\n  if (pid === 0) {\n    return masterChefContract.methods\n      .leaveStaking(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n      .send({ from: account, gas: 200000 })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n\n  return masterChefContract.methods\n    .withdraw(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account, gas: 200000 })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousUnstake = async (sousChefContract, amount, decimals = 18, account) => {\n  // shit code: hard fix for old CTK and BLK\n  if (sousChefContract.options.address === '0x3B9B74f48E89Ebd8b45a53444327013a2308A9BC') {\n    return sousChefContract.methods\n      .emergencyWithdraw()\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n  if (sousChefContract.options.address === '0xBb2B66a2c7C2fFFB06EA60BeaD69741b3f5BF831') {\n    return sousChefContract.methods\n      .emergencyWithdraw()\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n  if (sousChefContract.options.address === '0x453a75908fb5a36d482d5f8fe88eca836f32ead5') {\n    return sousChefContract.methods\n      .emergencyWithdraw()\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n\n  return sousChefContract.methods\n    .withdraw(new BigNumber(amount).times(new BigNumber(10).pow(decimals)).toString())\n    .send({ from: account, gas: 200000 })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousEmergencyUnstake = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods\n    .emergencyWithdraw()\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const harvest = async (masterChefContract, pid, account) => {\n  if (pid === 0) {\n    return masterChefContract.methods\n      .leaveStaking('0')\n      .send({ from: account, gas: 200000 })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n\n  return masterChefContract.methods\n    .deposit(pid, '0')\n    .send({ from: account, gas: 200000 })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const soushHarvest = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .deposit('0')\n    .send({ from: account, gas: 200000 })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const soushHarvestBnb = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .deposit()\n    .send({ from: account, gas: 200000, value: new BigNumber(0) })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n","import React, { useContext } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\ninterface SpacerProps {\n  size?: 'sm' | 'md' | 'lg'\n}\n\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\n  const { spacing } = useContext(ThemeContext)\n\n  let s: number\n  switch (size) {\n    case 'lg':\n      s = spacing[6]\n      break\n    case 'sm':\n      s = spacing[2]\n      break\n    case 'md':\n    default:\n      s = spacing[4]\n  }\n\n  return <StyledSpacer size={s} />\n}\n\ninterface StyledSpacerProps {\n  size: number\n}\n\nconst StyledSpacer = styled.div<StyledSpacerProps>`\n  height: ${(props) => props.size}px;\n  width: ${(props) => props.size}px;\n`\n\nexport default Spacer\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport Spacer from '../Spacer'\n\nconst ModalActions: React.FC = ({ children }) => {\n  const l = React.Children.toArray(children).length\n  return (\n    <StyledModalActions>\n      {React.Children.map(children, (child, i) => (\n        <>\n          <StyledModalAction>{child}</StyledModalAction>\n          {i < l - 1 && <Spacer />}\n        </>\n      ))}\n    </StyledModalActions>\n  )\n}\n\nconst StyledModalActions = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.primaryDark}00;\n  display: flex;\n  margin: 0;\n  padding: ${(props) => props.theme.spacing[4]}px 0;\n`\n\nconst StyledModalAction = styled.div`\n  flex: 1;\n`\n\nexport default ModalActions\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ChevronDownIcon, ChevronUpIcon, Text } from '@luckyswap/uikit'\nimport useI18n from 'hooks/useI18n'\n\nexport interface ExpandableSectionButtonProps {\n  onClick?: () => void\n  expanded?: boolean\n}\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n\n  svg {\n    fill: ${({ theme }) => theme.colors.primary};\n  }\n`\n\nconst ExpandableSectionButton: React.FC<ExpandableSectionButtonProps> = ({ onClick, expanded }) => {\n  const TranslateString = useI18n()\n\n  return (\n    <Wrapper aria-label=\"Hide or show expandable content\" role=\"button\" onClick={() => onClick()}>\n      <Text color=\"primary\" bold>\n        {expanded ? TranslateString(1066, 'Hide') : TranslateString(658, 'Details')}\n      </Text>\n      {expanded ? <ChevronUpIcon /> : <ChevronDownIcon />}\n    </Wrapper>\n  )\n}\n\nExpandableSectionButton.defaultProps = {\n  expanded: false,\n}\n\nexport default ExpandableSectionButton\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { Contract } from 'web3-eth-contract'\nimport { ethers } from 'ethers'\nimport { useAppDispatch } from 'state'\nimport { updateUserAllowance, fetchFarmUserDataAsync } from 'state/actions'\nimport { approve } from 'utils/callHelpers'\nimport { useMasterchef, useCake, useSousChef, useLottery } from './useContract'\n\n// Approve a Farm\nexport const useApprove = (lpContract: Contract) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, masterChefContract, account)\n      dispatch(fetchFarmUserDataAsync(account) as any) \n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, masterChefContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve a Pool\nexport const useSousApprove = (lpContract: Contract, sousId) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, sousChefContract, account)\n      dispatch(updateUserAllowance(sousId, account)as any) \n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, sousChefContract, sousId])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve the lottery\nexport const useLotteryApprove = () => {\n  const { account } = useWeb3React()\n  const cakeContract = useCake()\n  const lotteryContract = useLottery()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(cakeContract, lotteryContract, account)\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, cakeContract, lotteryContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve an IFO\nexport const useIfoApprove = (tokenContract: Contract, spenderAddress: string) => {\n  const { account } = useWeb3React()\n  const onApprove = useCallback(async () => {\n    const tx = await tokenContract.methods.approve(spenderAddress, ethers.constants.MaxUint256).send({ from: account })\n    return tx\n  }, [account, spenderAddress, tokenContract])\n\n  return onApprove\n}\n","import React from 'react'\n\nexport interface PastLotteryDataState {\n  mostRecentLotteryNumber: number\n  currentLotteryNumber: number\n  historyError: boolean\n  historyData: Array<any>\n}\n\nexport default React.createContext({\n  mostRecentLotteryNumber: 0,\n  historyError: false,\n  historyData: [],\n} as PastLotteryDataState)\n","import { useEffect, useState } from 'react'\nimport { useLottery } from 'hooks/useContract'\nimport { getLotteryStatus } from 'utils/lotteryUtils'\n\n/**\n * Returns whether or not the current lottery has drawn numbers\n *\n * @return {Boolean}\n */\nconst useGetLotteryHasDrawn = () => {\n  const [lotteryHasDrawn, setLotteryHasDrawn] = useState(true)\n  const lotteryContract = useLottery()\n\n  useEffect(() => {\n    if (lotteryContract) {\n      const fetchLotteryStatus = async () => {\n        // const state = await getLotteryStatus(lotteryContract)\n        setLotteryHasDrawn(true)\n      }\n\n      fetchLotteryStatus()\n    }\n  }, [lotteryContract])\n\n  return lotteryHasDrawn\n}\n\nexport default useGetLotteryHasDrawn\n","import { useState, useEffect } from 'react'\n\nexport const useCurrentTime = () => {\n  const [currentMillis, setCurrentMillis] = useState(new Date().getTime())\n\n  useEffect(() => {\n    const tick = () => {\n      setCurrentMillis((prevMillis) => prevMillis + 1000)\n    }\n\n    const timerID = setInterval(() => tick(), 1000)\n\n    return () => clearInterval(timerID)\n  }, [])\n\n  return currentMillis\n}\n\nexport default useCurrentTime\n","import getTimePeriods from 'utils/getTimePeriods'\n\n// lottery draws UTC: 02:00 (10:00 SGT), 14:00 (22:00 SGT)\nconst lotteryDrawHoursUtc = [2, 14]\n\nconst getClosestLotteryHour = (currentHour) => {\n  switch (true) {\n    case currentHour < lotteryDrawHoursUtc[0] || currentHour >= lotteryDrawHoursUtc[1]:\n      return lotteryDrawHoursUtc[0]\n    case currentHour < lotteryDrawHoursUtc[1]:\n      return lotteryDrawHoursUtc[1]\n    default:\n      return 0\n  }\n}\n\nconst getNextLotteryDrawTime = (currentMillis) => {\n  const date = new Date(currentMillis)\n  const currentHour = date.getUTCHours()\n  const nextLotteryHour = getClosestLotteryHour(currentHour)\n  // next lottery is tomorrow if the next lottery is at 2am UTC...\n  // ...and current time is between 02:00am & 23:59pm UTC\n  const nextLotteryIsTomorrow = nextLotteryHour === 2 && currentHour >= 2 && currentHour <= 23\n  let millisTimeOfNextDraw\n\n  if (nextLotteryIsTomorrow) {\n    const tomorrow = new Date(currentMillis)\n    const nextDay = tomorrow.getUTCDate() + 1\n    tomorrow.setUTCDate(nextDay)\n    millisTimeOfNextDraw = tomorrow.setUTCHours(nextLotteryHour, 0, 0, 0)\n  } else {\n    millisTimeOfNextDraw = date.setUTCHours(nextLotteryHour, 0, 0, 0)\n  }\n\n  return millisTimeOfNextDraw\n}\n\n// @ts-ignore\nconst getNextTicketSaleTime = (currentMillis) => (parseInt(currentMillis / 3600000) + 1) * 3600000\nconst hoursAndMinutesString = (hours, minutes) => `${parseInt(hours)}h, ${parseInt(minutes)}m`\n\nexport const getTicketSaleTime = (currentMillis): string => {\n  const nextTicketSaleTime = getNextTicketSaleTime(currentMillis)\n  const msUntilNextTicketSale = nextTicketSaleTime - currentMillis\n  const { minutes } = getTimePeriods(msUntilNextTicketSale / 1000)\n  const { hours } = getTimePeriods(msUntilNextTicketSale / 1000)\n  return hoursAndMinutesString(hours, minutes)\n}\n\nexport const getLotteryDrawTime = (currentMillis): string => {\n  const nextLotteryDrawTime = getNextLotteryDrawTime(currentMillis)\n  const msUntilLotteryDraw = nextLotteryDrawTime - currentMillis\n  const { minutes } = getTimePeriods(msUntilLotteryDraw / 1000)\n  const { hours } = getTimePeriods(msUntilLotteryDraw / 1000)\n  return hoursAndMinutesString(hours, minutes)\n}\n\nexport const getTicketSaleStep = () => (1 / 12) * 100\n\nexport const getLotteryDrawStep = (currentMillis) => {\n  const msBetweenLotteries = 43200000\n  const endTime = getNextLotteryDrawTime(currentMillis)\n  const msUntilLotteryDraw = endTime - currentMillis\n  const percentageRemaining = (msUntilLotteryDraw / msBetweenLotteries) * 100\n  return 100 - percentageRemaining\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Progress } from '@luckyswap/uikit'\nimport useI18n from 'hooks/useI18n'\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\nimport { useCurrentTime } from 'hooks/useTimer'\nimport {\n  getLotteryDrawTime,\n  getLotteryDrawStep,\n  getTicketSaleTime,\n  getTicketSaleStep,\n} from '../helpers/CountdownHelpers'\n\nconst ProgressWrapper = styled.div`\n  display: block;\n  width: 100%;\n`\n\nconst TopTextWrapper = styled.div`\n  margin-top: 16px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n`\n\nconst BottomTextWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n`\n\nconst StyledPrimaryText = styled(Text)`\n  margin-right: 16px;\n`\nconst LotteryProgress = () => {\n  const TranslateString = useI18n()\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\n  const currentMillis = useCurrentTime()\n  const timeUntilTicketSale = getTicketSaleTime(currentMillis)\n  const timeUntilLotteryDraw = getLotteryDrawTime(currentMillis)\n\n  return (\n    <ProgressWrapper>\n      <Progress primaryStep={getLotteryDrawStep(currentMillis)} secondaryStep={getTicketSaleStep()} showProgressBunny />\n      <TopTextWrapper>\n        <StyledPrimaryText fontSize=\"20px\" bold color=\"contrast\">\n          {lotteryHasDrawn ? timeUntilTicketSale : timeUntilLotteryDraw}\n        </StyledPrimaryText>\n        <Text fontSize=\"20px\" bold color=\"invertedContrast\">\n          {lotteryHasDrawn ? TranslateString(434, 'Until ticket sale') : TranslateString(492, 'Until lottery draw')}\n        </Text>\n      </TopTextWrapper>\n      {lotteryHasDrawn && (\n        <BottomTextWrapper>\n          <Text color=\"invertedContrast\">\n            {timeUntilLotteryDraw} {TranslateString(492, 'Until lottery draw')}\n          </Text>\n        </BottomTextWrapper>\n      )}\n    </ProgressWrapper>\n  )\n}\n\nexport default LotteryProgress\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Text } from '@luckyswap/uikit'\nimport useI18n from 'hooks/useI18n'\nimport Container from 'components/layout/Container'\nimport LotteryProgress from './LotteryProgress'\n\nconst Title = styled(Heading).attrs({ as: 'h1', size: 'xl' })`\n  color: ${({ theme }) => theme.colors.secondary};\n  margin-bottom: 24px;\n`\n\nconst Blurb = styled(Text)`\n  color: #ffffff;\n  font-size: 20px;\n  font-weight: 600;\n`\n\nconst StyledHero = styled.div`\n  background-image: linear-gradient(180deg,#f5bf7a 0%,#2b2c3a 100%);\n  padding-bottom: 40px;\n  padding-top: 40px;\n`\n\nconst StyledContainer = styled(Container)`\n  display: flex;\n\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n  }\n`\n\nconst LeftWrapper = styled.div`\n  flex: 1;\n  padding-right: 0;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-right: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-right: 32px;\n  }\n`\n\nconst RightWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex: 1;\n  padding-left: 0;\n  margin-top: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-top: 0;\n    padding-left: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-left: 32px;\n  }\n`\n\nconst Hero = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <StyledHero>\n      <StyledContainer>\n        <LeftWrapper>\n          <Title>{TranslateString(708, 'The CAKE Lottery')}</Title>\n          <Blurb>{TranslateString(710, 'Buy tickets with CAKE')}</Blurb>\n          <Blurb>{TranslateString(712, 'Win if 2, 3, or 4 of your ticket numbers match!')}</Blurb>\n        </LeftWrapper>\n        <RightWrapper>\n          <LotteryProgress />\n        </RightWrapper>\n      </StyledContainer>\n    </StyledHero>\n  )\n}\n\nexport default Hero\n","import styled from 'styled-components'\n\nexport default styled.div`\n  background-color: ${({ theme }) => theme.colors.textSubtle};\n  height: 1px;\n  margin: 0 auto 32px;\n  width: 100%;\n`\n","/* eslint-disable no-await-in-loop */\nimport BigNumber from 'bignumber.js'\nimport { Interface } from '@ethersproject/abi'\nimport { getWeb3NoAccount } from 'utils/web3'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport ticketAbi from 'config/abi/lotteryNft.json'\nimport lotteryAbi from 'config/abi/lottery.json'\nimport { LOTTERY_TICKET_PRICE } from 'config'\nimport { AbiItem } from 'web3-utils'\nimport { getMulticallAddress } from './addressHelpers'\n\nexport const multiCall = async (abi, calls) => {\n  const web3 = getWeb3NoAccount()\n  const multi = new web3.eth.Contract((MultiCallAbi as unknown) as AbiItem, getMulticallAddress())\n  const itf = new Interface(abi)\n  let res = []\n  if (calls.length > 100) {\n    let i = 0\n    while (i < calls.length / 100) {\n      const newCalls = calls.slice(i * 100, 100 * (i + 1))\n      const calldata = newCalls.map((call) => [call[0].toLowerCase(), itf.encodeFunctionData(call[1], call[2])])\n      const { returnData } = await multi.methods.aggregate(calldata).call()\n      i++\n      res = res.concat(returnData.map((call, index) => itf.decodeFunctionResult(newCalls[index][1], call)))\n    }\n  } else {\n    const calldata = calls.map((call) => [call[0].toLowerCase(), itf.encodeFunctionData(call[1], call[2])])\n    const { returnData } = await multi.methods.aggregate(calldata).call()\n    res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i][1], call))\n  }\n  return res\n}\n\nexport const multiBuy = async (lotteryContract, price, numbersList, account) => {\n  try {\n    return lotteryContract.methods\n      .multiBuy(new BigNumber(price).times(new BigNumber(10).pow(18)).toString(), numbersList)\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  } catch (err) {\n    return console.error(err)\n  }\n}\n\nexport const getTickets = async (lotteryContract, ticketsContract, account, customLotteryNum) => {\n  const issueIndex = customLotteryNum || (await lotteryContract.methods.issueIndex().call())\n  const length = await getTicketsAmount(ticketsContract, account)\n\n  // eslint-disable-next-line prefer-spread\n  const calls1 = Array.apply(null, { length } as unknown[]).map((a, i) => [\n    ticketsContract.options.address,\n    'tokenOfOwnerByIndex',\n    [account, i],\n  ])\n  const res = await multiCall(ticketAbi, calls1)\n\n  const tokenIds = res.map((id) => id.toString())\n\n  const calls2 = tokenIds.map((id) => [ticketsContract.options.address, 'getLotteryIssueIndex', [id]])\n  const ticketIssues = await multiCall(ticketAbi, calls2)\n\n  const finalTokenids = []\n  ticketIssues.forEach(async (ticketIssue, i) => {\n    if (new BigNumber(ticketIssue).eq(issueIndex)) {\n      finalTokenids.push(tokenIds[i])\n    }\n  })\n  const calls3 = finalTokenids.map((id) => [ticketsContract.options.address, 'getLotteryNumbers', [id]])\n  const tickets = await multiCall(ticketAbi, calls3)\n\n  // TODO: await getLotteryStatus(lotteryContract)\n  return tickets\n}\n\nexport const getTicketsAmount = async (ticketsContract, account) => {\n  return ticketsContract.methods.balanceOf(account).call()\n}\n\nexport const multiClaim = async (lotteryContract, ticketsContract, account) => {\n  await lotteryContract.methods.issueIndex().call()\n  const length = await getTicketsAmount(ticketsContract, account)\n  // eslint-disable-next-line prefer-spread\n  const calls1 = Array.apply(null, { length } as unknown[]).map((a, i) => [\n    ticketsContract.options.address,\n    'tokenOfOwnerByIndex',\n    [account, i],\n  ])\n  const res = await multiCall(ticketAbi, calls1)\n  const tokenIds = res.map((id) => id.toString())\n\n  const calls2 = tokenIds.map((id) => [ticketsContract.options.address, 'getClaimStatus', [id]])\n  const claimedStatus = await multiCall(ticketAbi, calls2)\n\n  const unClaimedIds = tokenIds.filter((id, index) => !claimedStatus[index][0])\n\n  const calls3 = unClaimedIds.map((id) => [lotteryContract.options.address, 'getRewardView', [id]])\n  const rewards = await multiCall(lotteryAbi, calls3)\n\n  let finalTokenIds = []\n  rewards.forEach((r, i) => {\n    if (r > 0) {\n      finalTokenIds.push(unClaimedIds[i])\n    }\n  })\n\n  if (finalTokenIds.length > 200) {\n    finalTokenIds = finalTokenIds.slice(0, 200)\n  }\n\n  try {\n    return lotteryContract.methods\n      .multiClaim(finalTokenIds)\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  } catch (err) {\n    return console.error(err)\n  }\n}\n\nexport const getTotalClaim = async (lotteryContract, ticketsContract, account) => {\n  try {\n    const issueIndex = await lotteryContract.methods.issueIndex().call()\n    const length = await getTicketsAmount(ticketsContract, account)\n    // eslint-disable-next-line prefer-spread\n    const calls1 = Array.apply(null, { length } as unknown[]).map((a, i) => [\n      ticketsContract.options.address,\n      'tokenOfOwnerByIndex',\n      [account, i],\n    ])\n    const res = await multiCall(ticketAbi, calls1)\n    const tokenIds = res.map((id) => id.toString())\n    const calls2 = tokenIds.map((id) => [ticketsContract.options.address, 'getLotteryIssueIndex', [id]])\n    const ticketIssues = await multiCall(ticketAbi, calls2)\n    const calls3 = tokenIds.map((id) => [ticketsContract.options.address, 'getClaimStatus', [id]])\n    const claimedStatus = await multiCall(ticketAbi, calls3)\n\n    const drawed = await getLotteryStatus(lotteryContract)\n\n    const finalTokenIds = []\n    ticketIssues.forEach(async (ticketIssue, i) => {\n      // eslint-disable-next-line no-empty\n      if (!drawed && ticketIssue.toString() === issueIndex) {\n      } else if (!claimedStatus[i][0]) {\n        finalTokenIds.push(tokenIds[i])\n      }\n    })\n\n    const calls4 = finalTokenIds.map((id) => [lotteryContract.options.address, 'getRewardView', [id]])\n\n    const rewards = await multiCall(lotteryAbi, calls4)\n    const claim = rewards.reduce((p, c) => BigNumber.sum(p, c), new BigNumber(0))\n\n    return claim\n  } catch (err) {\n    console.error(err)\n  }\n  return new BigNumber(0)\n}\n\nexport const getTotalRewards = async (lotteryContract) => {\n  const issueIndex = await lotteryContract.methods.issueIndex().call()\n  return lotteryContract.methods.getTotalRewards(issueIndex).call()\n}\n\nexport const getMax = async (lotteryContract) => {\n  return lotteryContract.methods.maxNumber().call()\n}\n\nexport const getLotteryIssueIndex = async (lotteryContract) => {\n  const issueIndex = await lotteryContract.methods.issueIndex().call()\n  return issueIndex\n}\n\nexport const getLotteryStatus = async (lotteryContract) => {\n  return lotteryContract.methods.drawed().call()\n}\n\nexport const getMatchingRewardLength = async (lotteryContract, matchNumber) => {\n  // TODO: \n  // let issueIndex = await lotteryContract.methods.issueIndex().call()\n  // const drawed = await lotteryContract.methods.drawed().call()\n  // if (!drawed) {\n  //   issueIndex -= 1\n  // }\n  // try {\n  //   const amount = await lotteryContract.methods.historyAmount(issueIndex, 5 - matchNumber).call()\n\n  //   return new BigNumber(amount).div(new BigNumber(10).pow(18)).div(LOTTERY_TICKET_PRICE).toNumber()\n  // } catch (err) {\n  //   console.error(err)\n  // }\n  return 0\n}\n\nexport const getWinningNumbers = async (lotteryContract) => {\n  const issueIndex = await lotteryContract.methods.issueIndex().call()\n  const numbers = []\n  const drawed = await lotteryContract.methods.drawed().call()\n\n  if (!drawed && parseInt(issueIndex, 10) === 0) {\n    return [0, 0, 0, 0]\n  }\n  if (!drawed) {\n    for (let i = 0; i < 4; i++) {\n      numbers.push(+(await lotteryContract.methods.historyNumbers(issueIndex - 1, i).call()).toString())\n    }\n  } else {\n    for (let i = 0; i < 4; i++) {\n      numbers.push(+(await lotteryContract.methods.winningNumbers(i).call()).toString())\n    }\n  }\n  return numbers\n}\n","import { useCallback, useState, useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { useLottery } from 'hooks/useContract'\nimport useRefresh from './useRefresh'\nimport {\n  getTotalRewards,\n  getTotalClaim,\n  getMatchingRewardLength,\n  getWinningNumbers,\n  getTickets,\n} from '../utils/lotteryUtils'\n\nconst useTickets = (lotteryNumber = null) => {\n  const [tickets, setTickets] = useState([])\n  const { account } = useWeb3React()\n  const ticketsContract = undefined\n  const lotteryContract = useLottery()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await getTickets(lotteryContract, ticketsContract, account, lotteryNumber)\n      setTickets(res)\n    }\n\n    if (account && lotteryContract && ticketsContract) {\n      fetchBalance()\n    }\n  }, [account, lotteryContract, ticketsContract, fastRefresh, lotteryNumber])\n\n  return tickets\n}\n\nexport const useTotalRewards = () => {\n  const [rewards, setRewards] = useState(new BigNumber(0))\n  const lotteryContract = useLottery()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res =  0 // TODO: await getTotalRewards(lotteryContract)\n      setRewards(new BigNumber(res))\n    }\n\n    if (lotteryContract) {\n      fetchBalance()\n    }\n  }, [lotteryContract, fastRefresh])\n\n  return rewards\n}\n\nexport const useTotalClaim = () => {\n  const [claimAmount, setClaimAmount] = useState(new BigNumber(0))\n  const [claimLoading, setClaimLoading] = useState(false)\n  const { account } = useWeb3React()\n  const ticketsContract = undefined\n  const lotteryContract = useLottery()\n\n  const fetchBalance = useCallback(async () => {\n    setClaimLoading(true)\n    const claim = await getTotalClaim(lotteryContract, ticketsContract, account)\n    setClaimAmount(claim)\n    setClaimLoading(false)\n  }, [account, lotteryContract, ticketsContract])\n\n  useEffect(() => {\n    if (account && lotteryContract && ticketsContract) {\n      fetchBalance()\n    }\n  }, [account, fetchBalance, lotteryContract, ticketsContract])\n\n  return { claimLoading, claimAmount }\n}\n\nexport const useWinningNumbers = () => {\n  const [winningNumbers, setWinningNumbers] = useState([0, 0, 0, 0])\n  const lotteryContract = useLottery()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      // TODO: const rewards =  await getWinningNumbers(lotteryContract)\n      // setWinningNumbers(rewards)\n    }\n\n    if (lotteryContract) {\n      fetchBalance()\n    }\n  }, [fastRefresh, lotteryContract, setWinningNumbers])\n\n  return winningNumbers\n}\n\nexport const useMatchingRewardLength = (numbers) => {\n  const [matchingNumbers, setMatchingNumbers] = useState(0)\n  const lotteryContract = useLottery()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const matchedNumbaers = await getMatchingRewardLength(lotteryContract, numbers)\n      setMatchingNumbers(matchedNumbaers)\n    }\n\n    if (lotteryContract) {\n      fetchBalance()\n    }\n  }, [lotteryContract, numbers, fastRefresh])\n\n  return matchingNumbers\n}\n\nexport default useTickets\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Loading: React.FC = () => <StyledLoading />\n\nconst StyledLoading = styled.div`\n  border: 8px solid #f3f3f3;\n  border-radius: 50%;\n  border-top: 8px solid #ddd;\n  border-bottom: 8px solid #ddd;\n  width: 20px;\n  height: 20px;\n  -webkit-animation: spin 2s linear infinite;\n  animation: spin 2s linear infinite;\n  @-webkit-keyframes spin {\n    0% {\n      -webkit-transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`\n\nexport default Loading\n","import React, { useCallback } from 'react'\nimport { Button, Modal } from '@luckyswap/uikit'\nimport styled from 'styled-components'\nimport { useWinningNumbers } from 'hooks/useTickets'\nimport useI18n from 'hooks/useI18n'\n\ninterface UserTicketsModalProps {\n  myTicketNumbers: Array<any>\n  from?: string\n  onDismiss?: () => void\n}\n\nconst UserTicketsModal: React.FC<UserTicketsModalProps> = ({ myTicketNumbers, onDismiss, from }) => {\n  const winNumbers = useWinningNumbers()\n  const TranslateString = useI18n()\n  const rewardMatch = useCallback(\n    (number) => {\n      let n = 0\n      for (let i = winNumbers.length - 1; i >= 0; i--) {\n        // eslint-disable-next-line eqeqeq\n        if (winNumbers[i] == number[i]) n++\n      }\n      return n\n    },\n    [winNumbers],\n  )\n\n  const listItems = myTicketNumbers.map((number, index) => {\n    if (rewardMatch(number[0]) > 1 && from !== 'buy') {\n      const emoji = new Array(rewardMatch(number[0]) + 1).join('🤑')\n      return (\n        // eslint-disable-next-line react/no-array-index-key\n        <RewardP key={index}>\n          {emoji}\n          {number.toString()}\n          {emoji}\n        </RewardP>\n      )\n    }\n    // eslint-disable-next-line react/no-array-index-key\n    return <p key={index}>{number.toString()}</p>\n  })\n\n  return (\n    <Modal\n      title={TranslateString(490, `My Tickets (Total: ${myTicketNumbers.length})`, { TICKETS: myTicketNumbers.length })}\n      onDismiss={onDismiss}\n    >\n      <TicketsList>\n        <h2>{listItems}</h2>\n      </TicketsList>\n      <StyledButton variant=\"secondary\" onClick={onDismiss}>\n        {TranslateString(438, 'Close')}\n      </StyledButton>\n    </Modal>\n  )\n}\n\nconst RewardP = styled.div`\n  color: #ff8c28;\n`\n\nconst TicketsList = styled.div`\n  text-align: center;\n  overflow-y: auto;\n  max-height: 400px;\n  color: ${(props) => props.theme.colors.primary};\n`\n\nconst StyledButton = styled(Button)`\n  margin-top: ${(props) => props.theme.spacing[2]}px;\n`\n\nexport default UserTicketsModal\n","import React, { useCallback, useState } from 'react'\nimport styled from 'styled-components'\nimport { Button, Heading, Won, useModal } from '@luckyswap/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useMultiClaimLottery } from 'hooks/useBuyLottery'\nimport useTickets, { useTotalClaim } from 'hooks/useTickets'\nimport Loading from '../Loading'\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\n\nconst WinningsWrapper = styled.div`\n  display: flex;\n  align-items: baseline;\n`\n\nconst IconWrapper = styled.div`\n  margin-bottom: 16px;\n\n  svg {\n    width: 80px;\n    height: 80px;\n  }\n`\n\nconst StyledCardActions = styled.div`\n  margin-top: ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledCardContentInner = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: space-between;\n`\n\nconst StyledButton = styled(Button)`\n  margin-top: ${(props) => props.theme.spacing[1]}px;\n`\n\nconst PrizesWonContent: React.FC = () => {\n  const [requestedClaim, setRequestedClaim] = useState(false)\n  const TranslateString = useI18n()\n  const { claimLoading, claimAmount } = useTotalClaim()\n  const { onMultiClaim } = useMultiClaimLottery()\n  const tickets = useTickets()\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\n\n  const handleClaim = useCallback(async () => {\n    try {\n      setRequestedClaim(true)\n      const txHash = await onMultiClaim()\n      // user rejected tx or didn't go thru\n      if (txHash) {\n        setRequestedClaim(false)\n      }\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onMultiClaim, setRequestedClaim])\n\n  const winnings = getBalanceNumber(claimAmount).toFixed(2)\n\n  return (\n    <StyledCardContentInner>\n      <IconWrapper>\n        <Won />\n      </IconWrapper>\n      <Heading as=\"h3\" size=\"lg\" color=\"secondary\">\n        {TranslateString(660, 'You won!')}\n      </Heading>\n      {claimLoading && <Loading />}\n      {!claimLoading && (\n        <>\n          <WinningsWrapper>\n            <Heading as=\"h4\" size=\"xl\" style={{ marginRight: '6px' }}>\n              {winnings}\n            </Heading>\n            <Heading as=\"h4\" size=\"lg\">\n              CAKE\n            </Heading>\n          </WinningsWrapper>\n        </>\n      )}\n      <StyledCardActions>\n        <Button width=\"100%\" disabled={requestedClaim} onClick={handleClaim}>\n          {TranslateString(1056, 'Collect')}\n        </Button>\n      </StyledCardActions>\n      <StyledButton variant=\"text\" onClick={onPresentMyTickets}>\n        {TranslateString(432, 'View your tickets')}\n      </StyledButton>\n    </StyledCardContentInner>\n  )\n}\n\nexport default PrizesWonContent\n","import { useCallback, useState, useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useLottery } from 'hooks/useContract'\nimport { multiClaim, getMax, multiBuy } from '../utils/lotteryUtils'\n\nexport const useMultiClaimLottery = () => {\n  const { account } = useWeb3React()\n  const lotteryContract = useLottery()\n  const lotteryTicketContract = undefined\n\n  const handleClaim = useCallback(async () => {\n    try {\n      const txHash = await multiClaim(lotteryContract, lotteryTicketContract, account)\n      return txHash\n    } catch (e) {\n      return false\n    }\n  }, [account, lotteryContract, lotteryTicketContract])\n\n  return { onMultiClaim: handleClaim }\n}\n\nexport const useMultiBuyLottery = () => {\n  const { account } = useWeb3React()\n  const lotteryContract = useLottery()\n\n  const handleBuy = useCallback(\n    async (amount: string, numbers: Array<any>) => {\n      try {\n        const txHash = await multiBuy(lotteryContract, amount, numbers, account)\n        return txHash\n      } catch (e) {\n        return false\n      }\n    },\n    [account, lotteryContract],\n  )\n\n  return { onMultiBuy: handleBuy }\n}\n\nexport const useMaxNumber = () => {\n  const [max, setMax] = useState(5)\n  const lotteryContract = useLottery()\n\n  const fetchMax = useCallback(async () => {\n    const maxNumber = await getMax(lotteryContract)\n    setMax(maxNumber)\n  }, [lotteryContract])\n\n  useEffect(() => {\n    if (lotteryContract) {\n      fetchMax()\n    }\n  }, [lotteryContract, fetchMax])\n\n  return max\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Button, useModal } from '@luckyswap/uikit'\nimport useI18n from 'hooks/useI18n'\nimport useTickets from 'hooks/useTickets'\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\n\nconst Wrapper = styled.div`\n  display: flex;\n`\n\nconst TextWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst StyledText = styled(Text)`\n  padding-left: 12px;\n`\n\nconst Image = styled.img`\n  margin-right: 6px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    margin-right: 20px;\n  }\n`\nconst StyledButton = styled(Button)`\n  padding: 0 12px;\n  height: unset;\n`\n\nconst NoPrizesContent: React.FC = () => {\n  const TranslateString = useI18n()\n  const tickets = useTickets()\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\n\n  return (\n    <Wrapper>\n      <Image src=\"/images/no-prize.svg\" alt=\"no prizes won\" />\n      <TextWrapper>\n        <StyledText color=\"textDisabled\">{TranslateString(726, 'Sorry, no prizes to collect')}</StyledText>\n        <StyledButton variant=\"text\" onClick={onPresentMyTickets}>\n          {TranslateString(432, 'View your tickets')}\n        </StyledButton>\n      </TextWrapper>\n    </Wrapper>\n  )\n}\n\nexport default NoPrizesContent\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card, CardBody } from '@luckyswap/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useTotalClaim } from 'hooks/useTickets'\nimport PrizesWonContent from './PrizesWonContent'\nimport NoPrizesContent from './NoPrizesContent'\n\nconst StyledCard = styled(Card)`\n  ${(props) =>\n    props.isDisabled\n      ? `  \n        margin-top: 16px;\n        background-color: unset;\n        box-shadow: unset;\n        border: 1px solid ${props.theme.colors.textDisabled};\n\n        ${props.theme.mediaQueries.sm} {\n          margin-top: 24px;\n        }\n\n        ${props.theme.mediaQueries.lg} {\n          margin-top: 32px;\n        }\n        `\n      : ``}\n`\n\nconst YourPrizesCard: React.FC = () => {\n  const { claimAmount } = useTotalClaim()\n\n  const winnings = getBalanceNumber(claimAmount)\n  const isAWin = winnings > 0\n\n  return (\n    <StyledCard isDisabled={!isAWin} isActive={isAWin}>\n      <CardBody>{isAWin ? <PrizesWonContent /> : <NoPrizesContent />}</CardBody>\n    </StyledCard>\n  )\n}\n\nexport default YourPrizesCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Card, CardBody, Ticket } from '@luckyswap/uikit'\nimport useI18n from 'hooks/useI18n'\nimport UnlockButton from 'components/UnlockButton'\n\nconst StyledCardBody = styled(CardBody)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`\n\nconst StyledHeading = styled(Heading)`\n  margin: 16px 0;\n`\n\nconst IconWrapper = styled.div`\n  svg {\n    width: 80px;\n    height: 80px;\n  }\n`\n\nconst UnlockWalletCard = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <Card isActive>\n      <StyledCardBody>\n        <IconWrapper>\n          <Ticket />\n        </IconWrapper>\n        <StyledHeading size=\"md\">{TranslateString(1080, 'Unlock wallet to access lottery')}</StyledHeading>\n        <UnlockButton />\n      </StyledCardBody>\n    </Card>\n  )\n}\n\nexport default UnlockWalletCard\n","import { useCallback, useState } from 'react'\nimport { useLotteryApprove } from './useApprove'\n\nexport const useApproval = (onPresentApprove: () => void) => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { onApprove } = useLotteryApprove()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      const txHash = await onApprove()\n      // user rejected tx or didn't go thru\n      if (!txHash) {\n        setRequestedApproval(false)\n      }\n      onPresentApprove()\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onApprove, onPresentApprove])\n\n  return { handleApprove, requestedApproval }\n}\n\nexport default useApproval\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button, Flex, Input, InputProps } from '@luckyswap/uikit'\nimport useI18n from 'hooks/useI18n'\n\ninterface TokenInputProps extends InputProps {\n  max: number | string\n  symbol: string\n  availableSymbol: string\n  value: string\n  onSelectMax?: () => void\n  onChange: (evt: React.FormEvent<HTMLInputElement>) => void\n}\n\nconst TicketInput: React.FC<TokenInputProps> = ({ max, symbol, availableSymbol, onChange, onSelectMax, value }) => {\n  const TranslateString = useI18n()\n\n  return (\n    <StyledTokenInput>\n      <Flex alignItems=\"center\">\n        <Input onChange={onChange} placeholder=\"0\" value={value} />\n        <StyledTokenAdornmentWrapper>\n          <StyledTokenSymbol>{symbol}</StyledTokenSymbol>\n          <StyledSpacer />\n          <div>\n            <Button size=\"sm\" onClick={onSelectMax}>\n              {TranslateString(452, 'Max')}\n            </Button>\n          </div>\n        </StyledTokenAdornmentWrapper>\n      </Flex>\n      <StyledMaxText>{TranslateString(454, `${max.toLocaleString()} ${availableSymbol} Available`)}</StyledMaxText>\n    </StyledTokenInput>\n  )\n}\n\nconst StyledTokenInput = styled.div``\n\nconst StyledSpacer = styled.div`\n  width: ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledTokenAdornmentWrapper = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst StyledMaxText = styled.div`\n  align-items: center;\n  color: ${(props) => props.theme.colors.primary};\n  display: flex;\n  font-size: 14px;\n  font-weight: 700;\n  height: 44px;\n  justify-content: flex-end;\n`\n\nconst StyledTokenSymbol = styled.span`\n  color: ${(props) => props.theme.colors.primary};\n  font-weight: 700;\n`\n\nexport default TicketInput\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { Button, Modal } from '@luckyswap/uikit'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport TicketInput from 'components/TicketInput'\nimport ModalActions from 'components/ModalActions'\nimport { useMultiBuyLottery, useMaxNumber } from 'hooks/useBuyLottery'\nimport useI18n from 'hooks/useI18n'\nimport { LOTTERY_MAX_NUMBER_OF_TICKETS, LOTTERY_TICKET_PRICE } from 'config'\n\ninterface BuyTicketModalProps {\n  max: BigNumber\n  onConfirm?: (amount: string, numbers: Array<number>) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst BuyTicketModal: React.FC<BuyTicketModalProps> = ({ max, onDismiss }) => {\n  const [val, setVal] = useState('1')\n  const [pendingTx, setPendingTx] = useState(false)\n  const [, setRequestedBuy] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const maxTickets = useMemo(() => {\n    return parseInt(getFullDisplayBalance(max.div(LOTTERY_TICKET_PRICE)), 10)\n  }, [max])\n\n  const handleChange = (e: React.FormEvent<HTMLInputElement>) => setVal(e.currentTarget.value)\n\n  const { onMultiBuy } = useMultiBuyLottery()\n  const maxNumber = useMaxNumber()\n  const handleBuy = useCallback(async () => {\n    try {\n      setRequestedBuy(true)\n      const length = parseInt(val)\n      // @ts-ignore\n      // eslint-disable-next-line prefer-spread\n      const numbers = Array.apply(null, { length }).map(() => [\n        Math.floor(Math.random() * maxNumber) + 1,\n        Math.floor(Math.random() * maxNumber) + 1,\n        Math.floor(Math.random() * maxNumber) + 1,\n        Math.floor(Math.random() * maxNumber) + 1,\n      ])\n      const txHash = await onMultiBuy(LOTTERY_TICKET_PRICE.toString(), numbers)\n      // user rejected tx or didn't go thru\n      if (txHash) {\n        setRequestedBuy(false)\n      }\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onMultiBuy, setRequestedBuy, maxNumber, val])\n\n  const handleSelectMax = useCallback(() => {\n    if (Number(maxTickets) > LOTTERY_MAX_NUMBER_OF_TICKETS) {\n      setVal(LOTTERY_MAX_NUMBER_OF_TICKETS.toString())\n    } else {\n      setVal(maxTickets.toString())\n    }\n  }, [maxTickets])\n\n  const cakeCosts = (amount: string): number => {\n    return +amount * LOTTERY_TICKET_PRICE\n  }\n  return (\n    <Modal title={TranslateString(450, 'Enter amount of tickets to buy')} onDismiss={onDismiss}>\n      <TicketInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol=\"TICKET\"\n        availableSymbol=\"CAKE\"\n      />\n      <div>\n        <Tips>{TranslateString(999, `1 Ticket = ${LOTTERY_TICKET_PRICE} CAKE`, { num: LOTTERY_TICKET_PRICE })}</Tips>\n      </div>\n      <div>\n        <Announce>\n          {TranslateString(\n            478,\n            'Ticket purchases are final. Your CAKE cannot be returned to you after buying tickets.',\n          )}\n        </Announce>\n        <Final>{TranslateString(460, `You will spend: ${cakeCosts(val)} CAKE`)}</Final>\n      </div>\n      <ModalActions>\n        <Button width=\"100%\" variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          id=\"lottery-buy-complete\"\n          width=\"100%\"\n          disabled={\n            pendingTx ||\n            parseInt(val) > Number(maxTickets) ||\n            parseInt(val) > LOTTERY_MAX_NUMBER_OF_TICKETS ||\n            parseInt(val) < 1\n          }\n          onClick={async () => {\n            setPendingTx(true)\n            await handleBuy()\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default BuyTicketModal\n\nconst Tips = styled.div`\n  margin-left: 0.4em;\n  font-size: 14px;\n  font-weight: 600;\n  color: ${(props) => props.theme.colors.primary};\n`\n\nconst Final = styled.div`\n  margin-top: 1em;\n  text-align: center;\n  font-size: 20px;\n  font-weight: 600;\n  color: ${(props) => props.theme.colors.primary};\n`\nconst Announce = styled.div`\n  margin-top: 1em;\n  margin-left: 0.4em;\n  color: #fff;\n`\n","import React from 'react'\nimport { Button, Modal } from '@luckyswap/uikit'\nimport ModalActions from 'components/ModalActions'\nimport styled from 'styled-components'\nimport useI18n from 'hooks/useI18n'\n\nconst WarningModal: React.FC<{ onDismiss?: () => void }> = ({ onDismiss }) => {\n  const TranslateString = useI18n()\n\n  return (\n    <Modal title={TranslateString(466, 'Warning')} onDismiss={onDismiss}>\n      <TicketsList>\n        {TranslateString(468, 'Lottery ticket purchases are final.')}\n        <br />\n        {TranslateString(470, 'Your CAKE will not be returned to you after you spend it to buy tickets.')}\n        <br />\n        {TranslateString(472, 'Tickets are only valid for one lottery draw, and will be burned after the draw.')}\n        <br />\n        {TranslateString(\n          474,\n          'Buying tickets does not guarantee you will win anything. Please only participate once you understand the risks.',\n        )}\n      </TicketsList>\n      <ModalActions>\n        <Button width=\"100%\" onClick={onDismiss}>\n          {TranslateString(476, 'I understand')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nconst TicketsList = styled.div`\n  text-align: left;\n  overflow-y: auto;\n  max-height: 400px;\n  color: ${(props) => props.theme.colors.primary};\n`\n\nexport default WarningModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button, useModal } from '@luckyswap/uikit'\nimport useI18n from 'hooks/useI18n'\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\nimport { useLotteryAllowance } from 'hooks/useAllowance'\nimport useTickets from 'hooks/useTickets'\nimport useTokenBalance from 'hooks/useTokenBalance' //\nimport BigNumber from 'bignumber.js'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport { useApproval } from 'hooks/useApproval'\nimport BuyTicketModal from './BuyTicketModal'\nimport MyTicketsModal from './UserTicketsModal'\nimport PurchaseWarningModal from './PurchaseWarningModal'\n\nconst CardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: ${(props) => props.theme.spacing[3]}px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    justify-content: space-between;\n  }\n`\n\nconst TicketCard: React.FC = () => {\n  const TranslateString = useI18n()\n  const allowance =new BigNumber(0) // useLotteryAllowance()\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\n  const cakeBalance = new BigNumber(0) // useTokenBalance(getCakeAddress())\n  const tickets = useTickets()\n  const ticketsLength = tickets.length\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\n  const [onPresentApprove] = useModal(<PurchaseWarningModal />)\n  const [onPresentBuy] = useModal(<BuyTicketModal max={cakeBalance} tokenName=\"CAKE\" />)\n  const { handleApprove, requestedApproval } = useApproval(onPresentApprove)\n\n  const renderLotteryTicketButtons = () => {\n    if (!allowance.toNumber()) {\n      return (\n        <>\n          <Button width=\"100%\" disabled>\n            {TranslateString(432, 'View your tickets')}\n          </Button>\n          <Button width=\"100%\" disabled={requestedApproval} onClick={handleApprove}>\n            {TranslateString(494, 'Approve CAKE')}\n          </Button>\n        </>\n      )\n    }\n    return (\n      <>\n        <Button\n          style={{ marginRight: '8px' }}\n          width=\"100%\"\n          disabled={ticketsLength === 0}\n          variant=\"secondary\"\n          onClick={onPresentMyTickets}\n        >\n          {TranslateString(432, 'View your tickets')}\n        </Button>\n        <Button id=\"lottery-buy-start\" width=\"100%\" onClick={onPresentBuy}>\n          {TranslateString(430, 'Buy ticket')}\n        </Button>\n      </>\n    )\n  }\n\n  return (\n    <CardActions>\n      {lotteryHasDrawn ? (\n        <Button disabled> {TranslateString(874, 'On sale soon')}</Button>\n      ) : (\n        renderLotteryTicketButtons()\n      )}\n    </CardActions>\n  )\n}\n\nexport default TicketCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card, CardBody, TicketRound, Text, Heading } from '@luckyswap/uikit'\nimport useI18n from 'hooks/useI18n'\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\nimport useTickets from 'hooks/useTickets'\nimport { useCurrentTime } from 'hooks/useTimer'\nimport TicketActions from './TicketActions'\nimport { getTicketSaleTime } from '../../helpers/CountdownHelpers'\n\ninterface CardProps {\n  isSecondCard?: boolean\n}\n\nconst StyledCard = styled(Card)<CardProps>`\n  ${(props) =>\n    props.isSecondCard\n      ? `  \n        margin-top: 16px;\n\n        ${props.theme.mediaQueries.sm} {\n          margin-top: 24px;\n        }\n\n        ${props.theme.mediaQueries.lg} {\n          margin-top: 32px;\n        }\n        `\n      : ``}\n`\n\nconst CardHeader = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst IconWrapper = styled.div`\n  margin-right: 16px;\n  svg {\n    width: 48px;\n    height: 48px;\n  }\n`\n\nconst TicketCountWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst TicketCard: React.FC<CardProps> = ({ isSecondCard = false }) => {\n  const TranslateString = useI18n()\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\n\n  const tickets = useTickets()\n  const ticketsLength = tickets.length\n\n  const currentMillis = useCurrentTime()\n  const timeUntilTicketSale = lotteryHasDrawn && getTicketSaleTime(currentMillis)\n\n  return (\n    <StyledCard isSecondCard={isSecondCard}>\n      <CardBody>\n        <CardHeader>\n          <IconWrapper>\n            <TicketRound />\n          </IconWrapper>\n          {lotteryHasDrawn ? (\n            <TicketCountWrapper>\n              <Text fontSize=\"14px\" color=\"textSubtle\">\n                {TranslateString(870, 'Until ticket sale:')}\n              </Text>\n              <Heading size=\"lg\">{timeUntilTicketSale}</Heading>\n            </TicketCountWrapper>\n          ) : (\n            <TicketCountWrapper>\n              <Text fontSize=\"14px\" color=\"textSubtle\">\n                {TranslateString(724, 'Your tickets for this round')}\n              </Text>\n              <Heading size=\"lg\">{ticketsLength}</Heading>\n            </TicketCountWrapper>\n          )}\n        </CardHeader>\n        <TicketActions />\n      </CardBody>\n    </StyledCard>\n  )\n}\n\nexport default TicketCard\n","import React from 'react'\nimport CardValue, { CardValueProps } from './CardValue'\n\nconst CardBusdValue: React.FC<CardValueProps> = (props) => {\n  return (\n    <CardValue fontSize=\"14px\" lineHeight=\"1.1\" color=\"#2b2c3a\" prefix=\"~$\" bold={false} decimals={2} {...props} />\n  )\n}\n\nexport default CardBusdValue\n","import React from 'react'\nimport styled from 'styled-components'\nimport useI18n from 'hooks/useI18n'\nimport { Heading, Text } from '@luckyswap/uikit'\nimport { BigNumber } from 'bignumber.js'\nimport { usePriceCakeBusd } from 'state/hooks'\nimport CardBusdValue from '../../Home/components/CardBusdValue'\n\nexport interface PrizeGridProps {\n  lotteryPrizeAmount?: number\n  pastDraw?: boolean\n  jackpotMatches?: number\n  oneTicketMatches?: number\n  twoTicketMatches?: number\n  threeTicketMatches?: number\n}\n\nconst Grid = styled.div<{ pastDraw?: boolean }>`\n  display: grid;\n  grid-template-columns: repeat(${(props) => (props.pastDraw ? 3 : 2)}, 1fr);\n  grid-template-rows: repeat(4, auto);\n`\n\nconst RightAlignedText = styled(Text)`\n  text-align: right;\n`\n\nconst RightAlignedHeading = styled(Heading)`\n  text-align: right;\n`\n\nconst GridItem = styled.div<{ marginBottom?: string }>`\n  margin-bottom: ${(props) => (props.marginBottom ? props.marginBottom : '10px')};\n`\n\nconst PastDrawGridItem = styled(GridItem)`\n  transform: translate(-40%, 0%);\n`\n\nconst PrizeGrid: React.FC<PrizeGridProps> = ({\n  lotteryPrizeAmount = 0,\n  pastDraw = false,\n  jackpotMatches,\n  twoTicketMatches,\n  threeTicketMatches,\n}) => {\n  const fourMatchesAmount = +((lotteryPrizeAmount / 100) * 50).toFixed(0)\n  const threeMatchesAmount = +((lotteryPrizeAmount / 100) * 20).toFixed(0)\n  const twoMatchesAmount = +((lotteryPrizeAmount / 100) * 10).toFixed(0)\n  const burnAmount = +((lotteryPrizeAmount / 100) * 20).toFixed(0)\n  const TranslateString = useI18n()\n  const cakeBusdPrice = usePriceCakeBusd()\n\n  const getCakeBusdValue = (amount: number) => {\n    return new BigNumber(amount).multipliedBy(cakeBusdPrice).toNumber()\n  }\n\n  return (\n    <Grid pastDraw={pastDraw}>\n      <GridItem>\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {TranslateString(756, 'No. Matched')}\n        </Text>\n      </GridItem>\n      {pastDraw && (\n        <PastDrawGridItem>\n          <RightAlignedText fontSize=\"14px\" color=\"textSubtle\">\n            {TranslateString(754, 'Winners')}\n          </RightAlignedText>\n        </PastDrawGridItem>\n      )}\n      <GridItem>\n        <RightAlignedText fontSize=\"14px\" color=\"textSubtle\">\n          {TranslateString(752, 'Prize Pot')}\n        </RightAlignedText>\n      </GridItem>\n      {/* 4 matches row */}\n      <GridItem>\n        <Heading size=\"md\">4</Heading>\n      </GridItem>\n      {pastDraw && (\n        <PastDrawGridItem>\n          <RightAlignedHeading size=\"md\">{jackpotMatches}</RightAlignedHeading>\n        </PastDrawGridItem>\n      )}\n      <GridItem>\n        <RightAlignedHeading size=\"md\">\n          {fourMatchesAmount.toLocaleString()}\n          {!pastDraw && !cakeBusdPrice.eq(0) && <CardBusdValue value={getCakeBusdValue(fourMatchesAmount)} />}\n        </RightAlignedHeading>\n      </GridItem>\n      {/* 3 matches row */}\n      <GridItem>\n        <Text bold>3</Text>\n      </GridItem>\n      {pastDraw && (\n        <PastDrawGridItem>\n          <RightAlignedText bold>{threeTicketMatches}</RightAlignedText>\n        </PastDrawGridItem>\n      )}\n      <GridItem>\n        <RightAlignedText>\n          {threeMatchesAmount.toLocaleString()}\n          {!pastDraw && !cakeBusdPrice.eq(0) && <CardBusdValue value={getCakeBusdValue(threeMatchesAmount)} />}\n        </RightAlignedText>\n      </GridItem>\n      {/* 2 matches row */}\n      <GridItem>\n        <Text>2</Text>\n      </GridItem>\n      {pastDraw && (\n        <PastDrawGridItem>\n          <RightAlignedText>{twoTicketMatches}</RightAlignedText>\n        </PastDrawGridItem>\n      )}\n      <GridItem>\n        <RightAlignedText>\n          {twoMatchesAmount.toLocaleString()}\n          {!pastDraw && !cakeBusdPrice.eq(0) && <CardBusdValue value={getCakeBusdValue(twoMatchesAmount)} />}\n        </RightAlignedText>\n      </GridItem>\n      {/* Burn row */}\n      <GridItem marginBottom=\"0\">\n        <Text>{TranslateString(999, `${pastDraw ? 'Burned' : 'To burn'}`)}:</Text>\n      </GridItem>\n      {pastDraw ? (\n        <>\n          <GridItem marginBottom=\"0\" />\n          <GridItem marginBottom=\"0\">\n            <RightAlignedText>{burnAmount.toLocaleString()}</RightAlignedText>\n          </GridItem>\n        </>\n      ) : (\n        <GridItem marginBottom=\"0\">\n          <RightAlignedText>{burnAmount.toLocaleString()}</RightAlignedText>\n        </GridItem>\n      )}\n    </Grid>\n  )\n}\n\nexport default PrizeGrid\n","import React, { useContext, useState } from 'react'\nimport styled from 'styled-components'\nimport { useWeb3React } from '@web3-react/core'\nimport { Heading, Card, CardBody, CardFooter, Text, PancakeRoundIcon, Flex, Skeleton } from '@luckyswap/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport useI18n from 'hooks/useI18n'\nimport { useTotalRewards } from 'hooks/useTickets'\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\nimport ExpandableSectionButton from 'components/ExpandableSectionButton/ExpandableSectionButton'\nimport { BigNumber } from 'bignumber.js'\nimport { usePriceCakeBusd } from 'state/hooks'\nimport PrizeGrid from '../PrizeGrid'\nimport CardBusdValue from '../../../Home/components/CardBusdValue'\n\nconst CardHeading = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n`\n\nconst Right = styled.div`\n  display: flex;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    display: none;\n  }\n`\n\nconst Left = styled.div`\n  display: flex;\n`\n\nconst IconWrapper = styled.div`\n  margin-right: 16px;\n  svg {\n    width: 48px;\n    height: 48px;\n  }\n`\n\nconst PrizeCountWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst ExpandingWrapper = styled.div<{ showFooter: boolean }>`\n  height: ${(props) => (props.showFooter ? '100%' : '0px')};\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    height: 100%;\n  }\n`\n\nconst TotalPrizesCard = () => {\n  const TranslateString = useI18n()\n  const { account } = useWeb3React()\n  const [showFooter, setShowFooter] = useState(false)\n  const lotteryPrizeAmount = +getBalanceNumber(useTotalRewards()).toFixed(0)\n  const lotteryPrizeAmountBusd = new BigNumber(lotteryPrizeAmount).multipliedBy(usePriceCakeBusd()).toNumber()\n  const lotteryPrizeWithCommaSeparators = lotteryPrizeAmount.toLocaleString()\n  const { currentLotteryNumber } = useContext(PastLotteryDataContext)\n\n  return (\n    <Card>\n      <CardBody>\n        {account && (\n          <Flex mb=\"16px\" alignItems=\"center\" justifyContent=\"space-between\" style={{ height: '20px' }}>\n            {currentLotteryNumber === 0 && <Skeleton height={20} width={56} />}\n            {currentLotteryNumber > 0 && (\n              <>\n                <Text fontSize=\"12px\" style={{ fontWeight: 600 }}>\n                  {TranslateString(720, `Round #${currentLotteryNumber}`, { num: currentLotteryNumber })}\n                </Text>\n              </>\n            )}\n          </Flex>\n        )}\n        <CardHeading>\n          <Left>\n            <IconWrapper>\n              <PancakeRoundIcon />\n            </IconWrapper>\n            <PrizeCountWrapper>\n              <Text fontSize=\"14px\" color=\"textSubtle\">\n                {TranslateString(722, 'Total Pot:')}\n              </Text>\n              <Heading size=\"lg\">{lotteryPrizeWithCommaSeparators} CAKE</Heading>\n              {lotteryPrizeAmountBusd !== 0 && <CardBusdValue value={lotteryPrizeAmountBusd} />}\n            </PrizeCountWrapper>\n          </Left>\n          <Right>\n            <ExpandableSectionButton onClick={() => setShowFooter(!showFooter)} expanded={showFooter} />\n          </Right>\n        </CardHeading>\n      </CardBody>\n      <ExpandingWrapper showFooter={showFooter}>\n        <CardFooter>\n          <PrizeGrid lotteryPrizeAmount={lotteryPrizeAmount} />\n        </CardFooter>\n      </ExpandingWrapper>\n    </Card>\n  )\n}\n\nexport default TotalPrizesCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useWeb3React } from '@web3-react/core'\nimport { Image, Card, CardBody } from '@luckyswap/uikit'\nimport { useWinningNumbers, useMatchingRewardLength } from 'hooks/useTickets'\nimport useI18n from 'hooks/useI18n'\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\n\nconst WinningNumbers: React.FC = () => {\n  const { account } = useWeb3React()\n  const winNumbers = useWinningNumbers()\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\n  const MatchedNumber4 = useMatchingRewardLength(4)\n  const MatchedNumber3 = useMatchingRewardLength(3)\n  const MatchedNumber2 = useMatchingRewardLength(2)\n  const TranslateString = useI18n()\n\n  return (\n    <CardWrapper>\n      <Card>\n        <CardBody>\n          <StyledCardContentInner>\n            <StyledCardHeader>\n              <Title>\n                {account && lotteryHasDrawn\n                  ? `🥳${TranslateString(570, 'Winning Numbers This Round')}🥳`\n                  : TranslateString(440, 'Latest Winning Numbers')}\n              </Title>\n              <br />\n            </StyledCardHeader>\n            <Row>\n              {winNumbers.map((number, index) => (\n                // eslint-disable-next-line react/no-array-index-key\n                <TicketNumberBox key={index}>\n                  <CenteredText>{number}</CenteredText>\n                </TicketNumberBox>\n              ))}\n            </Row>\n            <RabbitRow>\n              <RabbitBox>\n                <CardImageFirst>\n                  <Image src=\"/images/sign bunny 1@2x.png\" alt=\"Number 1\" width={200} height={150} responsive />\n                </CardImageFirst>\n              </RabbitBox>\n              <RabbitBox>\n                <CardImage style={{ marginLeft: '-1.2em' }}>\n                  <Image src=\"/images/sign bunny 2@2x.png\" alt=\"Number 2\" width={200} height={150} responsive />\n                </CardImage>\n              </RabbitBox>\n              <RabbitBox>\n                <CardImage style={{ marginLeft: '-1.2em' }}>\n                  <Image src=\"/images/sign bunny 3@2x.png\" alt=\"Number 3\" width={200} height={150} responsive />\n                </CardImage>\n              </RabbitBox>\n              <RabbitBox>\n                <CardImage style={{ marginLeft: '-1.2em' }}>\n                  <Image src=\"/images/sign bunny 4@2x.png\" alt=\"Number 4\" width={200} height={150} responsive />\n                </CardImage>\n              </RabbitBox>\n            </RabbitRow>\n            <RabbitRowSmall>\n              <RabbitBoxSmall>\n                <CardImageFirst>\n                  <Image src=\"/images/sign bunny 1@2x.png\" alt=\"Number 1\" width={200} height={150} responsive />\n                </CardImageFirst>\n              </RabbitBoxSmall>\n              <RabbitBoxSmall>\n                <CardImage style={{ marginLeft: '-1.2em' }}>\n                  <Image src=\"/images/sign bunny 2@2x.png\" alt=\"Number 2\" width={200} height={150} responsive />\n                </CardImage>\n              </RabbitBoxSmall>\n              <RabbitBoxSmall>\n                <CardImage style={{ marginLeft: '-1.2em' }}>\n                  <Image src=\"/images/sign bunny 3@2x.png\" alt=\"Number 3\" width={200} height={150} responsive />\n                </CardImage>\n              </RabbitBoxSmall>\n              <RabbitBoxSmall>\n                <CardImage style={{ marginLeft: '-1.2em' }}>\n                  <Image src=\"/images/sign bunny 4@2x.png\" alt=\"Number 4\" width={200} height={150} responsive />\n                </CardImage>\n              </RabbitBoxSmall>\n            </RabbitRowSmall>\n            <Column>\n              <RowNoPadding>\n                <CenteredTextWithPadding>{TranslateString(442, 'Tickets matching 4 numbers:')}</CenteredTextWithPadding>\n                <CenteredTextWithPadding>\n                  <strong>{MatchedNumber4}</strong>\n                </CenteredTextWithPadding>\n              </RowNoPadding>\n              <RowNoPadding>\n                <CenteredTextWithPadding>{TranslateString(444, 'Tickets matching 3 numbers:')}</CenteredTextWithPadding>\n                <CenteredTextWithPadding>\n                  <strong>{MatchedNumber3}</strong>\n                </CenteredTextWithPadding>\n              </RowNoPadding>\n              <RowNoPadding>\n                <CenteredTextWithPadding>{TranslateString(446, 'Tickets matching 2 numbers:')}</CenteredTextWithPadding>\n                <CenteredTextWithPadding>\n                  <strong>{MatchedNumber2}</strong>\n                </CenteredTextWithPadding>\n              </RowNoPadding>\n            </Column>\n            <Link href=\"https://api.pancakeswap.com/api/lottery?page=0&pageSize=25\" target=\"_blank\">\n              {TranslateString(448, 'Export recent winning numbers')}\n            </Link>\n          </StyledCardContentInner>\n        </CardBody>\n      </Card>\n    </CardWrapper>\n  )\n}\nconst Link = styled.a`\n  margin-top: 1em;\n  text-decoration: none;\n  color: #25beca;\n`\n\nconst Row = styled.div`\n  margin-top: 1em;\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n`\n\nconst RabbitRow = styled.div`\n  margin-top: -2.3em;\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n\n  @media (max-width: 768px) {\n    display: none;\n  }\n`\n\nconst RabbitRowSmall = styled.div`\n  margin-top: -2.3em;\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n\n  @media (min-width: 768px) {\n    display: none;\n  }\n`\n\nconst CardImage = styled.div`\n  text-align: center;\n`\n\nconst CardImageFirst = styled.div`\n  text-align: center;\n  margin-left: -1.2em;\n\n  @media (max-width: 600) {\n    margin-left: -0.2em;\n  }\n`\n\nconst RowNoPadding = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n`\n\nconst Column = styled.div`\n  margin-top: 1em;\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n`\n\nconst CenteredText = styled.div`\n  text-align: center;\n  align-items: center;\n`\n\nconst CenteredTextWithPadding = styled.div`\n  text-align: center;\n  align-items: center;\n  padding-left: 2px;\n  padding-right: 2px;\n`\n\nconst TicketNumberBox = styled.div`\n  padding: 10px;\n  border-radius: 12px;\n  background: linear-gradient(180deg, #54dade 0%, #24c7d6 76.22%);\n  color: white;\n  font-size: 20px;\n  font-weight: 900;\n  margin: 10px;\n  margin-bottom: 7px;\n  width: 40px;\n\n  @media (min-width: 768px) {\n    font-size: 40px;\n    margin: 20px;\n    width: 60px;\n  }\n`\n\nconst RabbitBox = styled.div`\n  /* padding: 10px; */\n  border-radius: 12px;\n  margin: 16px 20px;\n  width: 60px;\n`\n\nconst RabbitBoxSmall = styled.div`\n  padding-top: 10px;\n  padding-left: 10px;\n  border-radius: 12px;\n  margin: 20px;\n  width: 20px;\n`\n\nconst StyledCardHeader = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n`\n\nconst CardWrapper = styled.div``\n\nconst Title = styled.div`\n  color: ${(props) => props.theme.colors.secondary};\n  font-size: 24px;\n  width: 50vw;\n  text-align: center;\n  font-weight: 1000;\n`\n\nconst StyledCardContentInner = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: space-between;\n`\n\nexport default WinningNumbers\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Heading, Link, Image } from '@luckyswap/uikit'\nimport useI18n from 'hooks/useI18n'\n\nconst LayoutWrapper = styled.div`\n  max-width: 500px;\n  margin: 0 auto 40px;\n  display: flex;\n  flex-direction: column;\n`\n\nconst StyledHeading = styled(Heading)`\n  margin: 16px 0;\n`\n\nconst StyledImage = styled(Image)`\n  align-self: center;\n`\n\nconst StyledLink = styled(Link)`\n  align-self: center;\n  margin-top: 16px;\n`\n\nconst HowItWorks = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <LayoutWrapper>\n      <StyledImage src=\"/images/pancake-lottery-bunny.png\" alt=\"lottery bunny\" width={163} height={140} />\n      <StyledHeading size=\"lg\" as=\"h3\" color=\"secondary\">\n        {TranslateString(632, 'How it works')}\n      </StyledHeading>\n      <Text fontSize=\"16px\">\n        {TranslateString(\n          426,\n          'Spend CAKE to buy tickets, contributing to the lottery pot. Win prizes if 2, 3, or 4 of your ticket numbers match the winning numbers and their exact order!',\n        )}\n      </Text>\n      <StyledLink href=\"https://docs.pancakeswap.finance/lottery-1\">{TranslateString(610, 'Read more')}</StyledLink>\n    </LayoutWrapper>\n  )\n}\n\nexport default HowItWorks\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useWeb3React } from '@web3-react/core'\nimport { BaseLayout } from '@luckyswap/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useTotalClaim } from 'hooks/useTickets'\nimport YourPrizesCard from './components/YourPrizesCard'\nimport UnlockWalletCard from './components/UnlockWalletCard'\nimport TicketCard from './components/TicketCard'\nimport TotalPrizesCard from './components/TotalPrizesCard'\nimport WinningNumbers from './components/WinningNumbers'\nimport HowItWorks from './components/HowItWorks'\n\nconst Cards = styled(BaseLayout)`\n  align-items: start;\n  margin-bottom: 32px;\n\n  & > div {\n    grid-column: span 6;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    & > div {\n      grid-column: span 12;\n    }\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    & > div {\n      grid-column: span 6;\n    }\n  }\n`\n\nconst SecondCardColumnWrapper = styled.div<{ isAWin?: boolean }>`\n  display: flex;\n  flex-direction: ${(props) => (props.isAWin ? 'column' : 'column-reverse')};\n`\n\nconst NextDrawPage: React.FC = () => {\n  const { account } = useWeb3React()\n  const { claimAmount } = useTotalClaim()\n  const winnings = getBalanceNumber(claimAmount)\n  const isAWin = winnings > 0\n\n  return (\n    <>\n      <Cards>\n        <div>\n          <TotalPrizesCard />\n        </div>\n        <SecondCardColumnWrapper isAWin={isAWin}>\n          {!account ? (\n            <UnlockWalletCard />\n          ) : (\n            <>\n              <YourPrizesCard />\n              <TicketCard isSecondCard={isAWin} />\n            </>\n          )}\n        </SecondCardColumnWrapper>\n      </Cards>\n      <HowItWorks />\n      {/* legacy page content */}\n      <WinningNumbers />\n    </>\n  )\n}\n\nexport default NextDrawPage\n","export type DataResponse = {\n  lotteryNumber: number\n  lotteryDate: string\n  lotteryNumbers: number[]\n  poolSize: number\n  burned: number\n  contractLink: string\n  jackpotTicket: number\n  match1Ticket: number | null\n  match2Ticket: number\n  match3Ticket: number\n  match4Ticket: number\n  poolJackpot: number\n  poolMatch3: number\n  poolMatch2: number\n  poolMatch1: number | null\n\n  // TODO: Fill in the error type\n  error: any\n}\n\n/**\n * Get data for a specific lottery\n */\nconst getLotteryRoundData = async (lotteryNumber: number): Promise<DataResponse> => {\n  try {\n    const response = await fetch(`https://api.pancakeswap.com/api/singleLottery?lotteryNumber=${lotteryNumber}`)\n    const data = await response.json()\n\n    return data\n  } catch (error) {\n    throw new Error(error)\n  }\n}\n\nexport default getLotteryRoundData\n","import { useContext, useEffect, useState } from 'react'\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\nimport getLotteryRoundData, { DataResponse } from 'utils/getLotteryRoundData'\n\ntype GetRecentLotteryRoundDataReturn = {\n  isLoading: boolean\n  data: DataResponse\n  mostRecentLotteryNumber: number\n  error: any\n}\n\nconst useGetRecentLotteryRoundData = (): GetRecentLotteryRoundDataReturn => {\n  const [isLoading, setIsLoading] = useState(true)\n  const [data, setData] = useState(null)\n  const [error, setError] = useState(null)\n  const { mostRecentLotteryNumber } = useContext(PastLotteryDataContext)\n\n  useEffect(() => {\n    const fetchRecentLotteryData = async () => {\n      try {\n        setIsLoading(true)\n\n        const roundData = await getLotteryRoundData(mostRecentLotteryNumber)\n        setData(roundData)\n      } catch (err) {\n        setError(err)\n      } finally {\n        setIsLoading(false)\n      }\n    }\n\n    if (mostRecentLotteryNumber > 0) {\n      fetchRecentLotteryData()\n    }\n  }, [mostRecentLotteryNumber, setData, setIsLoading, setError])\n\n  return { isLoading, data, mostRecentLotteryNumber, error }\n}\n\nexport default useGetRecentLotteryRoundData\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Text, Input, Button } from '@luckyswap/uikit'\nimport useI18n from 'hooks/useI18n'\n\ninterface PastLotterySearcherProps {\n  initialLotteryNumber: number\n  onSubmit: (num: number) => void\n}\n\nconst Wrapper = styled.div`\n  margin-bottom: 24px;\n`\n\nconst SearchWrapper = styled.div`\n  position: relative;\n`\nconst InputWrapper = styled.div`\n  input::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n\n  /* Firefox */\n  input[type='number'] {\n    -moz-appearance: textfield;\n  }\n`\n\nconst ButtonWrapper = styled.div`\n  position: absolute;\n  right: 8px;\n  top: 50%;\n  transform: translate(0%, -50%);\n  width: auto;\n`\n\nconst PastLotterySearcher: React.FC<PastLotterySearcherProps> = ({ initialLotteryNumber, onSubmit }) => {\n  const [lotteryNumber, setLotteryNumber] = useState(initialLotteryNumber)\n  const [isError, setIsError] = useState(false)\n  const TranslateString = useI18n()\n\n  const handleSubmit = (evt: React.FormEvent<HTMLFormElement>) => {\n    evt.preventDefault()\n    onSubmit(lotteryNumber)\n  }\n\n  const handleChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\n    const value = parseInt(evt.currentTarget.value, 10)\n\n    // The max value will always be the initialLotteryNumber which equals\n    // the latest lottery round\n    setIsError(value > initialLotteryNumber)\n    setLotteryNumber(value)\n  }\n\n  return (\n    <Wrapper>\n      <Text>{TranslateString(742, 'Select lottery number:')}</Text>\n      <form onSubmit={handleSubmit}>\n        <SearchWrapper>\n          <InputWrapper>\n            <Input\n              value={lotteryNumber}\n              type=\"number\"\n              isWarning={isError}\n              max={initialLotteryNumber}\n              onChange={handleChange}\n            />\n          </InputWrapper>\n          <ButtonWrapper>\n            <Button type=\"submit\" scale=\"sm\" disabled={isError}>\n              {TranslateString(744, 'Search')}\n            </Button>\n          </ButtonWrapper>\n        </SearchWrapper>\n      </form>\n    </Wrapper>\n  )\n}\n\nexport default PastLotterySearcher\n","import React from 'react'\nimport { Text } from '@luckyswap/uikit'\n\ninterface PastRoundCardErrorProps {\n  error: {\n    message: string\n  }\n}\n\nconst PastRoundCardError: React.FC<PastRoundCardErrorProps> = ({ error }) => {\n  return <Text p=\"24px\">{error.message}</Text>\n}\n\nexport default PastRoundCardError\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Heading, Text } from '@luckyswap/uikit'\n\ninterface HeadingProps {\n  valueToDisplay?: string\n  children?: string\n  Icon?: React.ComponentType\n}\n\nconst IconWrapper = styled.div`\n  margin-right: 16px;\n  svg {\n    width: 48px;\n    height: 48px;\n  }\n`\n\nconst LotteryCardHeading: React.FC<HeadingProps> = ({ valueToDisplay, children, Icon, ...props }) => {\n  return (\n    <Flex {...props}>\n      {Icon && (\n        <IconWrapper>\n          <Icon />\n        </IconWrapper>\n      )}\n      <Flex flexDirection=\"column\">\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {children}\n        </Text>\n        <Heading size=\"lg\">{valueToDisplay}</Heading>\n      </Flex>\n    </Flex>\n  )\n}\n\nLotteryCardHeading.defaultProps = {\n  valueToDisplay: '',\n  Icon: () => <div />,\n  children: '',\n}\n\nexport default LotteryCardHeading\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button, LinkExternal, useModal } from '@luckyswap/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { useWeb3React } from '@web3-react/core'\nimport useTickets from 'hooks/useTickets'\nimport UnlockButton from 'components/UnlockButton'\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\n\nconst Wrapper = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  padding-top: 24px;\n\n  & > div {\n    flex: 1;\n    width: 100%;\n  }\n`\n\nconst ExternalLinkWrap = styled(LinkExternal)`\n  align-items: center;\n  display: flex;\n  height: 48px;\n  justify-content: center;\n  text-decoration: none;\n  width: 100%;\n`\n\nconst TicketCard: React.FC<{ contractLink?: string; lotteryNumber?: number }> = ({ contractLink, lotteryNumber }) => {\n  const TranslateString = useI18n()\n  const tickets = useTickets(lotteryNumber)\n  const ticketsLength = tickets.length\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\n  const { account } = useWeb3React()\n\n  if (!account) {\n    return (\n      <Wrapper>\n        <UnlockButton />\n      </Wrapper>\n    )\n  }\n\n  return (\n    <Wrapper>\n      <div>\n        <Button disabled={ticketsLength === 0} onClick={onPresentMyTickets} width=\"100%\">\n          {TranslateString(432, 'View your tickets')}\n        </Button>\n      </div>\n      <div>\n        <ExternalLinkWrap href={contractLink}>{TranslateString(356, 'View on BscScan')}</ExternalLinkWrap>\n      </div>\n    </Wrapper>\n  )\n}\n\nexport default TicketCard\n","const formatLotteryDate = (lotteryDate: string) => {\n  if (!lotteryDate) {\n    return {}\n  }\n\n  const date = new Date(lotteryDate)\n\n  const dateString = date.toDateString()\n  const hours = date.getUTCHours()\n  const monthAndDay = dateString.split(' ').splice(1, 2).join(' ')\n\n  return { hours, monthAndDay }\n}\n\nexport default formatLotteryDate\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text } from '@luckyswap/uikit'\nimport formatLotteryDate from '../helpers/formatLotteryDate'\n\nconst Wrapper = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n`\n\nconst Timestamp = ({ timeValue }) => {\n  const { monthAndDay, hours } = formatLotteryDate(timeValue)\n\n  return (\n    <Wrapper>\n      <Text fontSize=\"14px\">\n        {monthAndDay}, {hours}:00 UTC\n      </Text>\n    </Wrapper>\n  )\n}\n\nexport default Timestamp\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, CardBody, CardFooter, PancakeRoundIcon, TicketRound } from '@luckyswap/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { DataResponse } from 'utils/getLotteryRoundData'\nimport LotteryCardHeading from '../LotteryCardHeading'\nimport PastLotteryActions from './PastLotteryActions'\nimport PrizeGrid from '../PrizeGrid'\nimport Timestamp from '../Timestamp'\n\ninterface PastRoundCardDetailsProps {\n  data: DataResponse\n}\n\nconst CardHeading = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`\n\nconst TopLotteryCardHeading = styled(LotteryCardHeading)`\n  margin-bottom: ${(props) => props.theme.spacing[4]}px;\n`\n\nconst PastRoundCardDetails: React.FC<PastRoundCardDetailsProps> = ({ data }) => {\n  const TranslateString = useI18n()\n\n  const {\n    contractLink,\n    jackpotTicket,\n    lotteryDate,\n    lotteryNumber,\n    lotteryNumbers,\n    match1Ticket,\n    match2Ticket,\n    match3Ticket,\n    poolSize,\n  } = data\n\n  return (\n    !data.error &&\n    data && (\n      <>\n        <CardBody>\n          <CardHeading>\n            <Timestamp timeValue={lotteryDate} />\n            <Heading size=\"md\" mb=\"24px\">\n              Round #{lotteryNumber}\n            </Heading>\n            <TopLotteryCardHeading\n              valueToDisplay={`${lotteryNumbers[0]}, ${lotteryNumbers[1]}, ${lotteryNumbers[2]}, ${lotteryNumbers[3]}`}\n              Icon={TicketRound}\n            >\n              {TranslateString(999, 'Winning numbers')}\n            </TopLotteryCardHeading>\n            <LotteryCardHeading\n              valueToDisplay={TranslateString(999, `${poolSize.toLocaleString()} CAKE`)}\n              Icon={PancakeRoundIcon}\n            >\n              {TranslateString(999, 'Total prizes')}\n            </LotteryCardHeading>\n          </CardHeading>\n        </CardBody>\n        <CardFooter>\n          <PrizeGrid\n            lotteryPrizeAmount={poolSize}\n            jackpotMatches={jackpotTicket}\n            oneTicketMatches={match1Ticket}\n            twoTicketMatches={match2Ticket}\n            threeTicketMatches={match3Ticket}\n            pastDraw\n          />\n          <PastLotteryActions contractLink={contractLink} lotteryNumber={lotteryNumber} />\n        </CardFooter>\n      </>\n    )\n  )\n}\n\nexport default PastRoundCardDetails\n","import React from 'react'\nimport { Card } from '@luckyswap/uikit'\nimport { DataResponse } from 'utils/getLotteryRoundData'\nimport PastRoundCardError from './PastRoundCardError'\nimport PastRoundCardDetails from './PastRoundCardDetails'\n\ninterface PastRoundCardProps {\n  error: {\n    message: string\n  }\n  data: DataResponse\n}\n\nconst PastRoundCard: React.FC<PastRoundCardProps> = ({ error, data }) => {\n  return <Card>{error.message ? <PastRoundCardError error={error} /> : <PastRoundCardDetails data={data} />}</Card>\n}\n\nexport default PastRoundCard\n","import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { Card, CardBody } from '@luckyswap/uikit'\nimport getLotteryRoundData from 'utils/getLotteryRoundData'\nimport useI18n from 'hooks/useI18n'\nimport useGetRecentLotteryRoundData from 'hooks/useGetRecentLotteryRoundData'\nimport PastLotterySearcher from './PastLotterySearcher'\nimport PastRoundCard from './PastRoundCard'\nimport Loading from '../Loading'\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst StyledCardBody = styled(CardBody)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 552px; // height of final card\n`\n\nconst PastLotteryRoundViewer = () => {\n  const [state, setState] = useState({\n    roundData: null,\n    error: { message: null, type: null },\n    isInitialized: false,\n    isLoading: true,\n  })\n  const { data: initialLotteryData, mostRecentLotteryNumber } = useGetRecentLotteryRoundData()\n  const TranslateString = useI18n()\n  const { roundData, error, isInitialized, isLoading } = state\n\n  useEffect(() => {\n    if (initialLotteryData) {\n      setState((prevState) => ({ ...prevState, isLoading: false, isInitialized: true, roundData: initialLotteryData }))\n    }\n  }, [initialLotteryData, setState])\n\n  const handleSubmit = async (lotteryNumber: number) => {\n    setState((prevState) => ({\n      ...prevState,\n      isLoading: true,\n    }))\n\n    getLotteryRoundData(lotteryNumber)\n      .then((data) => {\n        if (data.error) {\n          setState((prevState) => ({\n            ...prevState,\n            error: {\n              message: TranslateString(1076, 'The lottery number you provided does not exist'),\n              type: 'out of range',\n            },\n            isLoading: false,\n            isInitialized: true,\n          }))\n        } else {\n          setState((prevState) => ({\n            ...prevState,\n            error: { message: null, type: null },\n            roundData: data,\n            isLoading: false,\n            isInitialized: true,\n          }))\n        }\n      })\n      .catch(() => {\n        setState((prevState) => ({\n          ...prevState,\n          error: { message: TranslateString(1078, 'Error fetching data'), type: 'api' },\n          isLoading: false,\n          isInitialized: true,\n        }))\n      })\n  }\n\n  return (\n    <Wrapper>\n      <PastLotterySearcher initialLotteryNumber={mostRecentLotteryNumber} onSubmit={handleSubmit} />\n      {!isInitialized || isLoading ? (\n        <Card>\n          <StyledCardBody>\n            <Loading />\n          </StyledCardBody>\n        </Card>\n      ) : (\n        <PastRoundCard error={error} data={roundData} />\n      )}\n    </Wrapper>\n  )\n}\n\nexport default PastLotteryRoundViewer\n","import React, { lazy, Suspense, useContext } from 'react'\nimport styled from 'styled-components'\nimport { Text } from '@luckyswap/uikit'\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\nimport Loading from '../Loading'\n\nconst Line = lazy(() => import('./LineChartWrapper'))\n\nconst InnerWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n\nconst HistoryChart: React.FC = () => {\n  const { historyData, historyError } = useContext(PastLotteryDataContext)\n  const getDataArray = (kind) => {\n    return historyData\n      .map((dataPoint) => {\n        return dataPoint[kind]\n      })\n      .reverse()\n  }\n\n  const lineStyles = ({ color }) => {\n    return {\n      borderColor: color,\n      fill: false,\n      borderWidth: 2,\n      pointRadius: 0,\n      pointHitRadius: 10,\n    }\n  }\n\n  const chartData = {\n    labels: getDataArray('lotteryNumber'),\n    datasets: [\n      {\n        label: 'Pool Size',\n        data: getDataArray('poolSize'),\n        yAxisID: 'y-axis-pool',\n        ...lineStyles({ color: '#8F80BA' }),\n      },\n      {\n        label: 'Burned',\n        data: getDataArray('burned'),\n        yAxisID: 'y-axis-burned',\n        ...lineStyles({ color: '#2b2c3a' }),\n      },\n    ],\n  }\n\n  const axesStyles = ({ color, lineHeight }) => {\n    return {\n      borderCapStyle: 'round',\n      gridLines: { display: false },\n      ticks: {\n        fontFamily: 'Kanit, sans-serif',\n        fontColor: color,\n        fontSize: 14,\n        lineHeight,\n        maxRotation: 0,\n        beginAtZero: true,\n        autoSkipPadding: 15,\n        userCallback: (value) => {\n          return value.toLocaleString()\n        },\n      },\n    }\n  }\n\n  const options = {\n    legend: { display: false },\n    scales: {\n      yAxes: [\n        {\n          type: 'linear',\n          display: true,\n          position: 'left',\n          id: 'y-axis-pool',\n          ...axesStyles({ color: '#8f80ba', lineHeight: 1.6 }),\n        },\n        {\n          type: 'linear',\n          display: true,\n          position: 'right',\n          id: 'y-axis-burned',\n          ...axesStyles({ color: '#2b2c3a', lineHeight: 1.5 }),\n        },\n      ],\n      xAxes: [\n        {\n          ...axesStyles({ color: '#2b2c3a', lineHeight: 1 }),\n        },\n      ],\n    },\n  }\n\n  return (\n    <>\n      {historyError && (\n        <InnerWrapper>\n          <Text>Error fetching data</Text>\n        </InnerWrapper>\n      )}\n      {!historyError && historyData.length > 1 ? (\n        <Suspense fallback={<div>Loading...</div>}>\n          <Line data={chartData} options={options} type=\"line\" />\n        </Suspense>\n      ) : (\n        <InnerWrapper>\n          <Loading />\n        </InnerWrapper>\n      )}\n    </>\n  )\n}\n\nexport default HistoryChart\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text } from '@luckyswap/uikit'\nimport useI18n from 'hooks/useI18n'\n\nconst Wrapper = styled.div`\n  display: flex;\n  margin: 36px 0 28px;\n`\n\nconst LegendItem = styled.div`\n  display: flex;\n  margin-right: 18px;\n  align-items: center;\n`\n\nconst Circle = styled.div<{ isPoolSize?: boolean }>`\n  width: 20px;\n  height: 20px;\n  border-radius: 10px;\n  background-color: ${({ isPoolSize, theme }) => theme.colors[isPoolSize ? 'textSubtle' : 'primary']};\n  margin-right: 6px;\n`\n\nconst Legend = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <Wrapper>\n      <LegendItem>\n        <Circle isPoolSize />\n        <Text>{TranslateString(748, 'Pool Size')}</Text>\n      </LegendItem>\n      <LegendItem>\n        <Circle />\n        <Text>{TranslateString(750, 'Burned')}</Text>\n      </LegendItem>\n    </Wrapper>\n  )\n}\n\nexport default Legend\n","import React from 'react'\nimport { Heading, Card, CardBody } from '@luckyswap/uikit'\nimport useI18n from 'hooks/useI18n'\nimport HistoryChart from './HistoryChart'\nimport Legend from './Legend'\n\nconst PastDrawsHistoryCard: React.FC = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <Card>\n      <CardBody>\n        <Heading size=\"md\">{TranslateString(746, 'History')}</Heading>\n        <Legend />\n        <HistoryChart />\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default PastDrawsHistoryCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { BaseLayout } from '@luckyswap/uikit'\nimport PastLotteryRoundViewer from './components/PastLotteryRoundViewer'\nimport PastDrawsHistoryCard from './components/PastDrawsHistory/PastDrawsHistoryCard'\n\nconst Cards = styled(BaseLayout)`\n  align-items: start;\n  margin-bottom: 32px;\n\n  & > div {\n    grid-column: span 6;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    & > div {\n      grid-column: span 12;\n    }\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    & > div {\n      grid-column: span 6;\n    }\n  }\n`\n\nconst SecondCardColumnWrapper = styled.div<{ isAWin?: boolean }>`\n  display: flex;\n  flex-direction: column;\n`\n\nconst BunnyImageWrapper = styled.div`\n  display: flex;\n  margin-top: 32px;\n  justify-content: center;\n`\n\nconst PastDrawsPage: React.FC = () => {\n  return (\n    <Cards>\n      <PastLotteryRoundViewer />\n      <SecondCardColumnWrapper>\n        <PastDrawsHistoryCard />\n        <BunnyImageWrapper>\n          <img src=\"/images/pancake-lottery-bunny.png\" alt=\"lottery bunny\" />\n        </BunnyImageWrapper>\n      </SecondCardColumnWrapper>\n    </Cards>\n  )\n}\n\nexport default PastDrawsPage\n","import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { ButtonMenu, ButtonMenuItem } from '@luckyswap/uikit'\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\nimport { getLotteryIssueIndex } from 'utils/lotteryUtils'\nimport useI18n from 'hooks/useI18n'\nimport { useLottery } from 'hooks/useContract'\nimport Page from 'components/layout/Page'\nimport Hero from './components/Hero'\nimport Divider from './components/Divider'\nimport NextDrawPage from './NextDrawPage'\nimport PastDrawsPage from './PastDrawsPage'\n\nconst Wrapper = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 32px;\n`\n\nconst Lottery: React.FC = () => {\n  const lotteryContract = useLottery()\n  const TranslateString = useI18n()\n  const [activeIndex, setActiveIndex] = useState(0)\n  const [historyData, setHistoryData] = useState([])\n  const [historyError, setHistoryError] = useState(false)\n  const [currentLotteryNumber, setCurrentLotteryNumber] = useState(0)\n  const [mostRecentLotteryNumber, setMostRecentLotteryNumber] = useState(1)\n\n  useEffect(() => {\n    fetch(`https://api.pancakeswap.com/api/lotteryHistory`)\n      .then((response) => response.json())\n      .then((data) => setHistoryData(data))\n      .catch(() => {\n        setHistoryError(true)\n      })\n  }, [])\n\n  useEffect(() => {\n    const getInitialLotteryIndex = async () => {\n      const index =1;  // TODO: await getLotteryIssueIndex(lotteryContract)\n      const previousLotteryNumber = index - 1\n\n      setCurrentLotteryNumber(index)\n      setMostRecentLotteryNumber(previousLotteryNumber)\n    }\n\n    if (lotteryContract) {\n      getInitialLotteryIndex()\n    }\n  }, [lotteryContract])\n\n  const handleClick = (index) => {\n    setActiveIndex(index)\n  }\n\n  return (\n    <>\n      <Hero />\n      <Page>\n        <Wrapper>\n          <ButtonMenu activeIndex={activeIndex} onItemClick={handleClick} scale=\"sm\" variant=\"subtle\">\n            <ButtonMenuItem>{TranslateString(716, 'Next draw')}</ButtonMenuItem>\n            <ButtonMenuItem>{TranslateString(718, 'Past draws')}</ButtonMenuItem>\n          </ButtonMenu>\n        </Wrapper>\n        <Divider />\n        <PastLotteryDataContext.Provider\n          value={{ historyError, historyData, mostRecentLotteryNumber, currentLotteryNumber }}\n        >\n          {activeIndex === 0 ? <NextDrawPage /> : <PastDrawsPage />}\n        </PastLotteryDataContext.Provider>\n      </Page>\n    </>\n  )\n}\n\nexport default Lottery\n"],"sourceRoot":""}
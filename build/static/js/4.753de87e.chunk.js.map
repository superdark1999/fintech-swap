{"version":3,"sources":["hooks/useTickets.ts","components/UnlockButton.tsx","utils/lotteryUtils.ts","views/Home/components/CardBusdValue.tsx","components/Spacer/Spacer.tsx","components/ModalActions/ModalActions.tsx","contexts/PastLotteryDataContext.tsx","hooks/useGetLotteryHasDrawn.ts","components/ExpandableSectionButton/ExpandableSectionButton.tsx","components/TicketInput/TicketInput.tsx"],"names":["useTotalRewards","useState","BigNumber","rewards","setRewards","fastRefresh","useRefresh","lotteryContract","useContract","getLotteryAddress","lotteryAbi","useEffect","a","getTotalRewards","res","toString","fetchBalance","useTotalClaim","claimAmount","setClaimAmount","claimLoading","setClaimLoading","account","useWeb3React","ticketsContract","getLotteryTicketAddress","lotteryTicketAbi","useCallback","getTotalClaim","claim","useWinningNumbers","winningNumbers","setWinningNumbers","getWinningNumbers","useMatchingRewardLength","numbers","matchingNumbers","setMatchingNumbers","getMatchingRewardLength","matchedNumbaers","useTickets","lotteryNumber","tickets","setTickets","getTickets","CustomBtn","styled","Button","UnlockButton","props","TranslateString","useI18n","useAuth","login","logout","onPresentConnectModal","useWalletModal","className","variant","onClick","multiCall","abi","calls","getChainId","chainId","web3","getWeb3NoAccount","multi","eth","Contract","MultiCallAbi","getMulticallAddress","itf","Interface","length","i","newCalls","slice","calldata","map","call","toLowerCase","encodeFunctionData","methods","aggregate","returnData","concat","index","decodeFunctionResult","multiBuy","price","numbersList","times","pow","then","tx","transactionHash","console","error","customLotteryNum","issueIndex","balanceOf","catch","log","calls1","Array","apply","address","ticketAbi","tokenIds","id","calls2","ticketIssues","finalTokenids","forEach","ticketIssue","push","calls3","getTicketsAmount","multiClaim","claimedStatus","unClaimedIds","filter","finalTokenIds","r","getLotteryStatus","drawed","calls4","reduce","p","c","sum","getMax","maxNumber","getLotteryIssueIndex","matchNumber","historyAmount","amount","div","LOTTERY_TICKET_PRICE","toNumber","parseInt","historyNumbers","CardBusdValue","fontSize","lineHeight","color","prefix","bold","decimals","StyledSpacer","size","Spacer","s","spacing","useContext","ThemeContext","StyledModalActions","theme","colors","primaryDark","StyledModalAction","ModalActions","children","l","React","Children","toArray","child","createContext","mostRecentLotteryNumber","historyError","historyData","useGetLotteryHasDrawn","lotteryHasDrawn","setLotteryHasDrawn","state","fetchLotteryStatus","Wrapper","primary","ExpandableSectionButton","expanded","aria-label","role","defaultProps","StyledTokenInput","StyledTokenAdornmentWrapper","StyledMaxText","StyledTokenSymbol","span","TicketInput","max","symbol","availableSymbol","onChange","onSelectMax","value","alignItems","placeholder","toLocaleString"],"mappings":"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","file":"static/js/4.753de87e.chunk.js","sourcesContent":["import { useCallback, useState, useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { useContract, useLottery, useLotteryTicket } from 'hooks/useContract'\nimport { getLotteryAddress, getLotteryTicketAddress } from 'utils/addressHelpers'\nimport lotteryTicketAbi from 'config/abi/lotteryNft.json'\nimport lotteryAbi from 'config/abi/lottery.json'\nimport useRefresh from './useRefresh'\nimport {\n  getTotalRewards,\n  getTotalClaim,\n  getMatchingRewardLength,\n  getWinningNumbers,\n  getTickets,\n} from '../utils/lotteryUtils'\n\nconst useTickets = (lotteryNumber = null) => {\n  const [tickets, setTickets] = useState([])\n  const { account } = useWeb3React()\n  const ticketsContract = useContract(getLotteryTicketAddress(), lotteryTicketAbi)\n  const lotteryContract = useContract(getLotteryAddress(), lotteryAbi)\n  const { fastRefresh } = useRefresh()\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await getTickets(lotteryContract, ticketsContract, account, lotteryNumber)\n      setTickets(res)\n    }\n\n    if (account && lotteryContract && ticketsContract) {\n      fetchBalance()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [account, lotteryContract, ticketsContract, fastRefresh, lotteryNumber])\n\n  return tickets\n}\n\nexport const useTotalRewards = () => {\n  const [rewards, setRewards] = useState(new BigNumber(0))\n  const { fastRefresh } = useRefresh()\n  const lotteryContract = useContract(getLotteryAddress(), lotteryAbi)\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await getTotalRewards(lotteryContract)\n\n      setRewards(new BigNumber(res.toString()))\n    }\n\n    if (lotteryContract) {\n      fetchBalance()\n    }\n  }, [lotteryContract, fastRefresh])\n  return rewards\n}\n\nexport const useTotalClaim = () => {\n  const [claimAmount, setClaimAmount] = useState(new BigNumber(0))\n  const [claimLoading, setClaimLoading] = useState(false)\n  const { account } = useWeb3React()\n  const lotteryContract = useContract(getLotteryAddress(), lotteryAbi)\n  const ticketsContract = useContract(getLotteryTicketAddress(), lotteryTicketAbi)\n\n  const fetchBalance = useCallback(async () => {\n    setClaimLoading(true)\n    const claim = await getTotalClaim(lotteryContract, ticketsContract, account)\n    setClaimAmount(claim)\n    setClaimLoading(false)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [account, lotteryContract, ticketsContract])\n\n  useEffect(() => {\n    if (account && lotteryContract && ticketsContract) {\n      fetchBalance()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [account, fetchBalance, lotteryContract, ticketsContract])\n  return { claimLoading, claimAmount }\n}\n\nexport const useWinningNumbers = () => {\n  const [winningNumbers, setWinningNumbers] = useState([0, 0, 0, 0])\n  const lotteryContract = useContract(getLotteryAddress(), lotteryAbi)\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const rewards = await getWinningNumbers(lotteryContract)\n      setWinningNumbers(rewards)\n    }\n\n    if (lotteryContract) {\n      fetchBalance()\n    }\n  }, [fastRefresh, lotteryContract, setWinningNumbers])\n\n  return winningNumbers\n}\n\nexport const useMatchingRewardLength = (numbers) => {\n  const [matchingNumbers, setMatchingNumbers] = useState(0)\n  const lotteryContract = useContract(getLotteryAddress(), lotteryAbi)\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const matchedNumbaers = await getMatchingRewardLength(lotteryContract, numbers)\n\n      setMatchingNumbers(matchedNumbaers)\n    }\n\n    if (lotteryContract) {\n      fetchBalance()\n    }\n  }, [lotteryContract, numbers, fastRefresh])\n  return matchingNumbers\n}\n\nexport default useTickets\n","import React from 'react'\nimport { Button, useWalletModal } from '@luckyswap/uikit'\nimport useAuth from 'hooks/useAuth'\nimport useI18n from 'hooks/useI18n'\nimport styled from 'styled-components'\n\nconst CustomBtn = styled(Button)`\n  border-radius: 100px;\n`\n\nconst UnlockButton = (props) => {\n  const TranslateString = useI18n()\n  const { login, logout } = useAuth()\n  const { onPresentConnectModal } = useWalletModal(login, logout)\n\n  return (\n    <div className=\"custom-btn\">\n      <CustomBtn variant=\"secondary\" onClick={onPresentConnectModal} {...props}>\n        {TranslateString(292, 'Unlock Wallet')}\n      </CustomBtn>\n    </div>\n  )\n}\n\nexport default UnlockButton\n","/* eslint-disable no-await-in-loop */\nimport BigNumber from 'bignumber.js'\nimport { Interface } from '@ethersproject/abi'\nimport { getWeb3NoAccount } from 'utils/web3'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport ticketAbi from 'config/abi/lotteryNft.json'\nimport lotteryAbi from 'config/abi/lottery.json'\nimport { LOTTERY_TICKET_PRICE } from 'config'\nimport { AbiItem } from 'web3-utils'\nimport { useTransactionAdder } from 'state/transactions/hooks'\nimport { getMulticallAddress } from './addressHelpers'\nimport { getChainId } from './web3React'\n\nexport const multiCall = async (abi, calls) => {\n  const chainId = await getChainId()\n  const web3 = getWeb3NoAccount(chainId)\n  const multi = new web3.eth.Contract(MultiCallAbi as unknown as AbiItem, getMulticallAddress(chainId))\n  const itf = new Interface(abi)\n  let res = []\n  if (calls.length > 100) {\n    let i = 0\n    while (i < calls.length / 100) {\n      const newCalls = calls.slice(i * 100, 100 * (i + 1))\n      const calldata = newCalls.map((call) => [call[0].toLowerCase(), itf.encodeFunctionData(call[1], call[2])])\n      const { returnData } = await multi.methods.aggregate(calldata).call()\n      i++\n      res = res.concat(returnData.map((call, index) => itf.decodeFunctionResult(newCalls[index][1], call)))\n    }\n  } else {\n    const calldata = calls.map((call) => [call[0].toLowerCase(), itf.encodeFunctionData(call[1], call[2])])\n    const { returnData } = await multi.methods.aggregate(calldata).call()\n    res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i][1], call))\n  }\n  return res\n}\n\nexport const multiBuy = async (lotteryContract, price, numbersList, account) => {\n  try {\n    return lotteryContract\n      .multiBuy(new BigNumber(price).times(new BigNumber(10).pow(18)).toString(), numbersList)\n      .then((tx) => {\n        return tx.transactionHash\n      })\n  } catch (err) {\n    return console.error(err)\n  }\n}\n\nexport const getTickets = async (lotteryContract, ticketsContract, account, customLotteryNum) => {\n  const issueIndex = customLotteryNum || (await lotteryContract.issueIndex())\n\n  const length = await ticketsContract.balanceOf(account).catch((error) => console.log('length error : ', error))\n\n  // eslint-disable-next-line prefer-spread\n  const calls1 = Array.apply(null, { length } as unknown[]).map((a, i) => [\n    ticketsContract.address,\n    'tokenOfOwnerByIndex',\n    [account, i],\n  ])\n  const res = await multiCall(ticketAbi, calls1)\n\n  const tokenIds = res.map((id) => id.toString())\n\n  const calls2 = tokenIds.map((id) => [ticketsContract.address, 'getLotteryIssueIndex', [id]])\n  const ticketIssues = await multiCall(ticketAbi, calls2)\n\n  const finalTokenids = []\n  ticketIssues.forEach(async (ticketIssue, i) => {\n    if (ticketIssue.toString() === issueIndex.toString()) {\n      finalTokenids.push(tokenIds[i])\n    }\n  })\n  const calls3 = finalTokenids.map((id) => [ticketsContract.address, 'getLotteryNumbers', [id]])\n  const tickets = await multiCall(ticketAbi, calls3)\n  return tickets\n}\n\nexport const getTicketsAmount = async (ticketsContract, account) => {\n  return ticketsContract.balanceOf(account).catch((error) => console.log('ticket amount : ', error))\n}\n\nexport const multiClaim = async (lotteryContract, ticketsContract, account) => {\n  await lotteryContract.issueIndex()\n  const length = await getTicketsAmount(ticketsContract, account)\n  // eslint-disable-next-line prefer-spread\n  const calls1 = Array.apply(null, { length } as unknown[]).map((a, i) => [\n    ticketsContract.address,\n    'tokenOfOwnerByIndex',\n    [account, i],\n  ])\n  const res = await multiCall(ticketAbi, calls1)\n  const tokenIds = res.map((id) => id.toString())\n\n  const calls2 = tokenIds.map((id) => [ticketsContract.address, 'getClaimStatus', [id]])\n  const claimedStatus = await multiCall(ticketAbi, calls2)\n\n  const unClaimedIds = tokenIds.filter((id, index) => !claimedStatus[index][0])\n\n  const calls3 = unClaimedIds.map((id) => [lotteryContract.address, 'getRewardView', [id]])\n  const rewards = await multiCall(lotteryAbi, calls3)\n\n  let finalTokenIds = []\n  rewards.forEach((r, i) => {\n    if (r > 0) {\n      finalTokenIds.push(unClaimedIds[i])\n    }\n  })\n\n  if (finalTokenIds.length > 200) {\n    finalTokenIds = finalTokenIds.slice(0, 200)\n  }\n\n  try {\n    return lotteryContract.multiClaim(finalTokenIds)\n  } catch (err) {\n    return console.error(err)\n  }\n}\n\nexport const getTotalClaim = async (lotteryContract, ticketsContract, account) => {\n  try {\n    const issueIndex = await lotteryContract.issueIndex()\n    const length = await getTicketsAmount(ticketsContract, account)\n    // eslint-disable-next-line prefer-spread\n    const calls1 = Array.apply(null, { length } as unknown[]).map((a, i) => [\n      ticketsContract.address,\n      'tokenOfOwnerByIndex',\n      [account, i],\n    ])\n    const res = await multiCall(ticketAbi, calls1)\n    const tokenIds = res.map((id) => id.toString())\n    const calls2 = tokenIds.map((id) => [ticketsContract.address, 'getLotteryIssueIndex', [id]])\n    const ticketIssues = await multiCall(ticketAbi, calls2)\n    const calls3 = tokenIds.map((id) => [ticketsContract.address, 'getClaimStatus', [id]])\n    const claimedStatus = await multiCall(ticketAbi, calls3)\n\n    const drawed = await getLotteryStatus(lotteryContract)\n\n    const finalTokenIds = []\n    ticketIssues.forEach(async (ticketIssue, i) => {\n      // eslint-disable-next-line no-empty\n      if (!drawed && ticketIssue.toString() === issueIndex) {\n      } else if (!claimedStatus[i][0]) {\n        finalTokenIds.push(tokenIds[i])\n      }\n    })\n\n    const calls4 = finalTokenIds.map((id) => [lotteryContract.address, 'getRewardView', [id]])\n\n    const rewards = await multiCall(lotteryAbi, calls4)\n    const claim = rewards.reduce((p, c) => BigNumber.sum(p, c), new BigNumber(0))\n\n    return claim\n  } catch (err) {\n    console.error(err)\n  }\n  return new BigNumber(0)\n}\n\nexport const getTotalRewards = async (lotteryContract) => {\n  const issueIndex = await lotteryContract.issueIndex()\n  return lotteryContract.getTotalRewards(issueIndex)\n}\n\nexport const getMax = async (lotteryContract) => {\n  return lotteryContract.maxNumber()\n}\n\nexport const getLotteryIssueIndex = async (lotteryContract) => {\n  try {\n    const issueIndex = await lotteryContract.issueIndex()\n    return issueIndex\n  } catch {\n    return 0;\n  }\n}\n\nexport const getLotteryStatus = async (lotteryContract) => {\n  try {\n    return lotteryContract.drawed()\n  } catch {\n    return true;\n  }\n}\n\nexport const getMatchingRewardLength = async (lotteryContract, matchNumber) => {\n  let issueIndex = await lotteryContract.issueIndex()\n  const drawed = await lotteryContract.drawed()\n  if (!drawed) {\n    issueIndex -= 1\n  }\n  try {\n    const amount = await lotteryContract.historyAmount(issueIndex, 5 - matchNumber)\n    return new BigNumber(amount.toString()).div(new BigNumber(10).pow(18)).div(LOTTERY_TICKET_PRICE).toNumber()\n  } catch (err) {\n    console.error(err)\n  }\n  return 0\n}\n\nexport const getWinningNumbers = async (lotteryContract) => {\n  const issueIndex = await lotteryContract.issueIndex()\n  const numbers = []\n  const drawed = await lotteryContract.drawed()\n\n  if (!drawed && parseInt(issueIndex, 10) === 0) {\n    return [0, 0, 0, 0]\n  }\n  if (!drawed) {\n    for (let i = 0; i < 4; i++) {\n      numbers.push(+(await lotteryContract.historyNumbers(issueIndex - 1, i)).toString())\n    }\n  } else {\n    for (let i = 0; i < 4; i++) {\n      numbers.push(+(await lotteryContract.winningNumbers(i)).toString())\n    }\n  }\n  return numbers\n}\n","import React from 'react'\nimport CardValue, { CardValueProps } from './CardValue'\n\nconst CardBusdValue: React.FC<CardValueProps> = (props) => {\n  return <CardValue fontSize=\"14px\" lineHeight=\"1.1\" color=\"#2b2c3a\" prefix=\"~$\" bold={false} decimals={3} {...props} />\n}\n\nexport default CardBusdValue\n","import React, { useContext } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\ninterface SpacerProps {\n  size?: 'sm' | 'md' | 'lg'\n}\n\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\n  const { spacing } = useContext(ThemeContext)\n\n  let s: number\n  switch (size) {\n    case 'lg':\n      s = spacing[6]\n      break\n    case 'sm':\n      s = spacing[2]\n      break\n    case 'md':\n    default:\n      s = spacing[4]\n  }\n\n  return <StyledSpacer size={s} />\n}\n\ninterface StyledSpacerProps {\n  size: number\n}\n\nconst StyledSpacer = styled.div<StyledSpacerProps>`\n  height: ${(props) => props.size}px;\n  width: ${(props) => props.size}px;\n`\n\nexport default Spacer\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport Spacer from '../Spacer'\n\nconst ModalActions: React.FC = ({ children }) => {\n  const l = React.Children.toArray(children).length\n  return (\n    <StyledModalActions>\n      {React.Children.map(children, (child, i) => (\n        <>\n          <StyledModalAction>{child}</StyledModalAction>\n          {i < l - 1 && <Spacer />}\n        </>\n      ))}\n    </StyledModalActions>\n  )\n}\n\nconst StyledModalActions = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.primaryDark}00;\n  display: flex;\n  margin: 0;\n  padding: ${(props) => props.theme.spacing[4]}px 0;\n`\n\nconst StyledModalAction = styled.div`\n  flex: 1;\n`\n\nexport default ModalActions\n","import React from 'react'\n\nexport interface PastLotteryDataState {\n  mostRecentLotteryNumber: number\n  currentLotteryNumber: number\n  historyError: boolean\n  historyData: Array<any>\n}\n\nexport default React.createContext({\n  mostRecentLotteryNumber: 0,\n  historyError: false,\n  historyData: [],\n} as PastLotteryDataState)\n","import { useEffect, useState } from 'react'\nimport { getLotteryStatus } from 'utils/lotteryUtils'\nimport { useContract } from 'hooks/useContract'\nimport { getLotteryAddress } from 'utils/addressHelpers'\nimport lotteryAbi from 'config/abi/lottery.json'\nimport useRefresh from 'hooks/useRefresh'\n\n\n/**\n * Returns whether or not the current lottery has drawn numbers\n *\n * @return {Boolean}\n */\nconst useGetLotteryHasDrawn = () => {\n  const { fastRefresh } = useRefresh()\n\n  const [lotteryHasDrawn, setLotteryHasDrawn] = useState(true)\n  const lotteryContract = useContract(getLotteryAddress(), lotteryAbi)\n\n  useEffect(() => {\n    if (lotteryContract) {\n      const fetchLotteryStatus = async () => {\n        const state = await getLotteryStatus(lotteryContract)\n        setLotteryHasDrawn(state)\n      }\n\n      fetchLotteryStatus()\n    }\n  }, [lotteryContract, fastRefresh])\n\n  return lotteryHasDrawn\n}\n\nexport default useGetLotteryHasDrawn\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ChevronDownIcon, ChevronUpIcon, Text } from '@luckyswap/uikit'\nimport useI18n from 'hooks/useI18n'\n\nexport interface ExpandableSectionButtonProps {\n  onClick?: () => void\n  expanded?: boolean\n}\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n\n  svg {\n    fill: ${({ theme }) => theme.colors.primary};\n  }\n`\n\nconst ExpandableSectionButton: React.FC<ExpandableSectionButtonProps> = ({ onClick, expanded }) => {\n  const TranslateString = useI18n()\n\n  return (\n    <Wrapper aria-label=\"Hide or show expandable content\" role=\"button\" onClick={() => onClick()}>\n      <Text color=\"primary\" bold>\n        {expanded ? TranslateString(1066, 'Hide') : TranslateString(658, 'Details')}\n      </Text>\n      {expanded ? <ChevronUpIcon /> : <ChevronDownIcon />}\n    </Wrapper>\n  )\n}\n\nExpandableSectionButton.defaultProps = {\n  expanded: false,\n}\n\nexport default ExpandableSectionButton\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button, Flex, Input, InputProps } from '@luckyswap/uikit'\nimport useI18n from 'hooks/useI18n'\n\ninterface TokenInputProps extends InputProps {\n  max: number | string\n  symbol: string\n  availableSymbol: string\n  value: string\n  onSelectMax?: () => void\n  onChange: (evt: React.FormEvent<HTMLInputElement>) => void\n}\n\nconst TicketInput: React.FC<TokenInputProps> = ({ max, symbol, availableSymbol, onChange, onSelectMax, value }) => {\n  const TranslateString = useI18n()\n\n  return (\n    <StyledTokenInput>\n      <Flex alignItems=\"center\">\n        <Input onChange={onChange} placeholder=\"0\" value={value} />\n        <StyledTokenAdornmentWrapper>\n          <StyledTokenSymbol>{symbol}</StyledTokenSymbol>\n          <StyledSpacer />\n          <div>\n            <Button size=\"sm\" variant=\"secondary\" onClick={onSelectMax}>\n              {TranslateString(452, 'Max')}\n            </Button>\n          </div>\n        </StyledTokenAdornmentWrapper>\n      </Flex>\n      <StyledMaxText>{TranslateString(454, `${max.toLocaleString()} ${availableSymbol} Available`)}</StyledMaxText>\n    </StyledTokenInput>\n  )\n}\n\nconst StyledTokenInput = styled.div``\n\nconst StyledSpacer = styled.div`\n  width: ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledTokenAdornmentWrapper = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst StyledMaxText = styled.div`\n  align-items: center;\n  color: ${(props) => props.theme.colors.primary};\n  display: flex;\n  font-size: 14px;\n  font-weight: 700;\n  height: 44px;\n  justify-content: flex-end;\n`\n\nconst StyledTokenSymbol = styled.span`\n  color: ${(props) => props.theme.colors.primary};\n  font-weight: 700;\n`\n\nexport default TicketInput\n"],"sourceRoot":""}